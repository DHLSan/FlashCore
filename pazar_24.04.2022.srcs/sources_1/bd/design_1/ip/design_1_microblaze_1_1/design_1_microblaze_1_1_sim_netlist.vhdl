-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2018.3 (win64) Build 2405991 Thu Dec  6 23:38:27 MST 2018
-- Date        : Sun Apr 24 19:27:12 2022
-- Host        : DESKTOP-VKLMC22 running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               c:/Users/zeyne/hw/pazar_24.04.2022/pazar_24.04.2022.srcs/sources_1/bd/design_1/ip/design_1_microblaze_1_1/design_1_microblaze_1_1_sim_netlist.vhdl
-- Design      : design_1_microblaze_1_1
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg484-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Cache_Interface is
  port (
    \Using_AXI.M_AXI_ARADDR_I_reg[31]_0\ : out STD_LOGIC_VECTOR ( 33 downto 0 );
    \Use_XX_Accesses.xx_wait_for_data_reg\ : out STD_LOGIC;
    \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt_reg[1]_0\ : out STD_LOGIC;
    ENB1_out : out STD_LOGIC;
    \Using_AXI.r_read_fifo_addr_reg[0]_0\ : out STD_LOGIC;
    read_stream_valid : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    DIBDI : out STD_LOGIC_VECTOR ( 4 downto 0 );
    new_data_addr : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ADDRBWRADDR : out STD_LOGIC_VECTOR ( 7 downto 0 );
    read_victim_valid : out STD_LOGIC;
    icache_miss_hold_reg : out STD_LOGIC;
    update_idle : out STD_LOGIC;
    \Using_AXI.r_read_fifo_addr_reg[1]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    iFetch_In_Progress_reg : out STD_LOGIC;
    \FSM_sequential_cache_state_reg[1]\ : out STD_LOGIC;
    \FSM_sequential_cache_state_reg[2]\ : out STD_LOGIC;
    \FSM_sequential_cache_state_reg[2]_0\ : out STD_LOGIC;
    \cacheline_cnt_reg[1]\ : out STD_LOGIC;
    \cacheline_cnt_reg[1]_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Use_XX_Accesses.xx_wait_for_data_reg_0\ : in STD_LOGIC;
    xx_wait_for_data_postponed : in STD_LOGIC;
    cache_req_raw : in STD_LOGIC;
    valid_Req : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Write_ICache_I : in STD_LOGIC;
    \cache_state__0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    cacheline_cnt : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    icache_miss_hold : in STD_LOGIC;
    valid_addr_strobe_q : in STD_LOGIC;
    \Using_AXI.M_AXI_ARCACHE_reg[3]_0\ : in STD_LOGIC;
    Carry_OUT : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    read_data_stall : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    iFetch_In_Progress : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Cache_Interface : entity is "Cache_Interface";
end design_1_microblaze_1_1_Cache_Interface;

architecture STRUCTURE of design_1_microblaze_1_1_Cache_Interface is
  signal \FSM_sequential_cache_state[2]_i_2_n_0\ : STD_LOGIC;
  signal Read_Req : STD_LOGIC;
  signal Read_Req_ID0 : STD_LOGIC;
  signal \Use_XX_Accesses.xx_valid_data_i_2_n_0\ : STD_LOGIC;
  signal \Use_XX_Accesses.xx_valid_data_i_3_n_0\ : STD_LOGIC;
  signal \Use_XX_Accesses.xx_wait_for_data_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\ : STD_LOGIC;
  signal \^using_axi.m_axi_araddr_i_reg[31]_0\ : STD_LOGIC_VECTOR ( 33 downto 0 );
  signal \Using_AXI.M_AXI_ARBURST[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.M_AXI_ARVALID_I_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \^using_axi.use_read_data_active.axi_cacheline_cnt_reg[1]_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.first_word_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_3_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[1]_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[2]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[3]_i_1_n_0\ : STD_LOGIC;
  signal \^using_axi.r_read_fifo_addr_reg[0]_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr_reg__0\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \Using_FPGA.Native_i_23_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_37_n_0\ : STD_LOGIC;
  signal axi_cacheline_cnt : STD_LOGIC_VECTOR ( 0 to 1 );
  signal convert_Burst : STD_LOGIC;
  signal convert_Kind : STD_LOGIC;
  signal convert_Low_Addr : STD_LOGIC_VECTOR ( 28 to 29 );
  signal first_word : STD_LOGIC;
  signal \^new_data_addr\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_2_out : STD_LOGIC;
  signal plusOp : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal read_data_counter : STD_LOGIC_VECTOR ( 0 to 1 );
  signal read_data_id : STD_LOGIC;
  signal read_req_granted : STD_LOGIC;
  signal \^update_idle\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Pause_Ack_i_2 : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \Use_XX_Accesses.xx_valid_data_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \Use_XX_Accesses.xx_valid_data_i_3\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \Use_XX_Accesses.xx_wait_for_data_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \Use_XX_Accesses.xx_wait_for_data_postponed_i_2\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \Using_AXI.M_AXI_ARADDR_I[31]_i_2\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_2\ : label is "soft_lutpair78";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name : string;
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][0]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][1]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][2]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][4]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_ICache.ICache_I1/Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][9]_srl16 ";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[0]_i_2\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[0]_i_3\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[1]_i_2\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[3]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_23\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_37\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \cacheline_cnt[0]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of mbar_first_i_6 : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \new_tag_addr[0]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \valid_Bits_1[0]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \valid_Bits_1[1]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \valid_Bits_1[2]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \valid_Bits_1[3]_i_1\ : label is "soft_lutpair81";
begin
  \Using_AXI.M_AXI_ARADDR_I_reg[31]_0\(33 downto 0) <= \^using_axi.m_axi_araddr_i_reg[31]_0\(33 downto 0);
  \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt_reg[1]_0\ <= \^using_axi.use_read_data_active.axi_cacheline_cnt_reg[1]_0\;
  \Using_AXI.r_read_fifo_addr_reg[0]_0\ <= \^using_axi.r_read_fifo_addr_reg[0]_0\;
  new_data_addr(1 downto 0) <= \^new_data_addr\(1 downto 0);
  update_idle <= \^update_idle\;
\FSM_sequential_cache_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFF00010000"
    )
        port map (
      I0 => \cache_state__0\(2),
      I1 => \cache_state__0\(1),
      I2 => \^update_idle\,
      I3 => read_data_id,
      I4 => \FSM_sequential_cache_state[2]_i_2_n_0\,
      I5 => \cache_state__0\(0),
      O => \FSM_sequential_cache_state_reg[2]_0\
    );
\FSM_sequential_cache_state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFF44450000"
    )
        port map (
      I0 => \cache_state__0\(2),
      I1 => \cache_state__0\(0),
      I2 => read_data_id,
      I3 => \^update_idle\,
      I4 => \FSM_sequential_cache_state[2]_i_2_n_0\,
      I5 => \cache_state__0\(1),
      O => \FSM_sequential_cache_state_reg[2]\
    );
\FSM_sequential_cache_state[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFFF00E0000"
    )
        port map (
      I0 => read_data_id,
      I1 => \^update_idle\,
      I2 => \cache_state__0\(1),
      I3 => \cache_state__0\(0),
      I4 => \FSM_sequential_cache_state[2]_i_2_n_0\,
      I5 => \cache_state__0\(2),
      O => \FSM_sequential_cache_state_reg[1]\
    );
\FSM_sequential_cache_state[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0036000000003000"
    )
        port map (
      I0 => \cache_state__0\(1),
      I1 => \cache_state__0\(2),
      I2 => \cache_state__0\(0),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      I4 => cacheline_cnt(0),
      I5 => cacheline_cnt(1),
      O => \FSM_sequential_cache_state[2]_i_2_n_0\
    );
Pause_Ack_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I4 => \Using_FPGA.Native_0\,
      O => \^using_axi.r_read_fifo_addr_reg[0]_0\
    );
\Use_XX_Accesses.xx_valid_data_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Use_XX_Accesses.xx_valid_data_i_2_n_0\,
      O => E(0)
    );
\Use_XX_Accesses.xx_valid_data_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFD7FFFFFF"
    )
        port map (
      I0 => \Use_XX_Accesses.xx_wait_for_data_reg_0\,
      I1 => plusOp(0),
      I2 => Q(0),
      I3 => \Use_XX_Accesses.xx_valid_data_i_3_n_0\,
      I4 => read_data_id,
      I5 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      O => \Use_XX_Accesses.xx_valid_data_i_2_n_0\
    );
\Use_XX_Accesses.xx_valid_data_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9A5A9555"
    )
        port map (
      I0 => Q(1),
      I1 => convert_Low_Addr(28),
      I2 => first_word,
      I3 => convert_Kind,
      I4 => read_data_counter(0),
      O => \Use_XX_Accesses.xx_valid_data_i_3_n_0\
    );
\Use_XX_Accesses.xx_wait_for_data_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \Use_XX_Accesses.xx_valid_data_i_2_n_0\,
      I1 => \Use_XX_Accesses.xx_wait_for_data_i_2_n_0\,
      O => \Use_XX_Accesses.xx_wait_for_data_reg\
    );
\Use_XX_Accesses.xx_wait_for_data_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBFBABBBABABABB"
    )
        port map (
      I0 => sync_reset,
      I1 => \Use_XX_Accesses.xx_wait_for_data_reg_0\,
      I2 => \^using_axi.use_read_data_active.axi_cacheline_cnt_reg[1]_0\,
      I3 => xx_wait_for_data_postponed,
      I4 => cache_req_raw,
      I5 => valid_Req,
      O => \Use_XX_Accesses.xx_wait_for_data_i_2_n_0\
    );
\Use_XX_Accesses.xx_wait_for_data_postponed_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E700"
    )
        port map (
      I0 => axi_cacheline_cnt(1),
      I1 => axi_cacheline_cnt(0),
      I2 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      I3 => convert_Burst,
      O => \^using_axi.use_read_data_active.axi_cacheline_cnt_reg[1]_0\
    );
\Using_AXI.M_AXI_ARADDR_I[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEE0000E000"
    )
        port map (
      I0 => \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\,
      I1 => \^update_idle\,
      I2 => valid_addr_strobe_q,
      I3 => \Using_AXI.M_AXI_ARCACHE_reg[3]_0\,
      I4 => Carry_OUT,
      I5 => icache_miss_hold,
      O => Read_Req
    );
\Using_AXI.M_AXI_ARADDR_I[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \Using_FPGA.Native_5\,
      O => \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\
    );
\Using_AXI.M_AXI_ARADDR_I_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(8),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(12),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(9),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(13),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(10),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(14),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(11),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(15),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(12),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(16),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(13),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(17),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(14),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(18),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(15),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(19),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(16),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(20),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(17),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(21),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(18),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(22),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(19),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(23),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(20),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(24),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(21),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(25),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(22),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(26),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(23),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(27),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(24),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(28),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(25),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(29),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(26),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(30),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(27),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(31),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(0),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(4),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(28),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(32),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(29),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(33),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(1),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(5),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(2),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(6),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(3),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(7),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(4),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(8),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(5),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(9),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(6),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(10),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Q(7),
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(11),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARBURST[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555554545400"
    )
        port map (
      I0 => sync_reset,
      I1 => icache_miss_hold,
      I2 => cache_req_raw,
      I3 => \^update_idle\,
      I4 => \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\,
      I5 => \^using_axi.m_axi_araddr_i_reg[31]_0\(2),
      O => \Using_AXI.M_AXI_ARBURST[1]_i_1_n_0\
    );
\Using_AXI.M_AXI_ARBURST_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.M_AXI_ARBURST[1]_i_1_n_0\,
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(2),
      R => '0'
    );
\Using_AXI.M_AXI_ARCACHE_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Read_Req,
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(1),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARLEN_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => '1',
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(3),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARVALID_I_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555FCFCFC00"
    )
        port map (
      I0 => M_AXI_IC_ARREADY,
      I1 => icache_miss_hold,
      I2 => cache_req_raw,
      I3 => \^update_idle\,
      I4 => \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\,
      I5 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      O => \Using_AXI.M_AXI_ARVALID_I_i_1_n_0\
    );
\Using_AXI.M_AXI_ARVALID_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.M_AXI_ARVALID_I_i_1_n_0\,
      Q => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      R => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => convert_Burst,
      I1 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      O => p_2_out
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => axi_cacheline_cnt(0),
      I1 => axi_cacheline_cnt(1),
      O => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_2_n_0\
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FDDDDDDDDDDDDDDD"
    )
        port map (
      I0 => M_AXI_IC_RVALID,
      I1 => read_data_stall,
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      O => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[1]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => axi_cacheline_cnt(1),
      O => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[1]_i_1_n_0\
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_2_out,
      D => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_2_n_0\,
      Q => axi_cacheline_cnt(0),
      R => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_2_out,
      D => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[1]_i_1_n_0\,
      Q => axi_cacheline_cnt(1),
      R => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.first_word_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE2"
    )
        port map (
      I0 => M_AXI_IC_RLAST,
      I1 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      I2 => first_word,
      I3 => sync_reset,
      O => \Using_AXI.Use_Read_Data_Active.first_word_i_1_n_0\
    );
\Using_AXI.Use_Read_Data_Active.first_word_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_Read_Data_Active.first_word_i_1_n_0\,
      Q => first_word,
      R => '0'
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5A3300335ACC00CC"
    )
        port map (
      I0 => convert_Low_Addr(29),
      I1 => read_data_counter(1),
      I2 => convert_Low_Addr(28),
      I3 => first_word,
      I4 => convert_Kind,
      I5 => read_data_counter(0),
      O => plusOp(1)
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"35F5"
    )
        port map (
      I0 => read_data_counter(1),
      I1 => convert_Kind,
      I2 => first_word,
      I3 => convert_Low_Addr(29),
      O => plusOp(0)
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_2_out,
      D => plusOp(1),
      Q => read_data_counter(0),
      R => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_2_out,
      D => plusOp(0),
      Q => read_data_counter(1),
      R => sync_reset
    );
\Using_AXI.r_fifo_mem_reg[15][0]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => read_req_granted,
      CLK => Clk,
      D => '1',
      Q => convert_Kind
    );
\Using_AXI.r_fifo_mem_reg[15][1]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => read_req_granted,
      CLK => Clk,
      D => \^using_axi.m_axi_araddr_i_reg[31]_0\(5),
      Q => convert_Low_Addr(28)
    );
\Using_AXI.r_fifo_mem_reg[15][2]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => read_req_granted,
      CLK => Clk,
      D => \^using_axi.m_axi_araddr_i_reg[31]_0\(4),
      Q => convert_Low_Addr(29)
    );
\Using_AXI.r_fifo_mem_reg[15][4]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => read_req_granted,
      CLK => Clk,
      D => '1',
      Q => convert_Burst
    );
\Using_AXI.r_fifo_mem_reg[15][9]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => read_req_granted,
      CLK => Clk,
      D => Read_Req_ID0,
      Q => read_data_id
    );
\Using_AXI.r_fifo_mem_reg[15][9]_srl16_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      I1 => M_AXI_IC_ARREADY,
      O => read_req_granted
    );
\Using_AXI.r_fifo_mem_reg[15][9]_srl16_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \Using_AXI.M_AXI_ARCACHE_reg[3]_0\,
      I1 => valid_Req,
      O => Read_Req_ID0
    );
\Using_AXI.r_read_fifo_addr[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8878"
    )
        port map (
      I0 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      I1 => M_AXI_IC_ARREADY,
      I2 => M_AXI_IC_RLAST,
      I3 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      O => \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\
    );
\Using_AXI.r_read_fifo_addr[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AA6AA9AA"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I3 => \Using_AXI.r_read_fifo_addr[0]_i_3_n_0\,
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.r_read_fifo_addr[0]_i_2_n_0\
    );
\Using_AXI.r_read_fifo_addr[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0070"
    )
        port map (
      I0 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      I1 => M_AXI_IC_ARREADY,
      I2 => M_AXI_IC_RLAST,
      I3 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      O => \Using_AXI.r_read_fifo_addr[0]_i_3_n_0\
    );
\Using_AXI.r_read_fifo_addr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55D5AA2AFFBF0040"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I1 => \Using_AXI.r_read_fifo_addr[1]_i_2_n_0\,
      I2 => M_AXI_IC_RLAST,
      I3 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.r_read_fifo_addr[1]_i_1_n_0\
    );
\Using_AXI.r_read_fifo_addr[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => M_AXI_IC_ARREADY,
      I1 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      O => \Using_AXI.r_read_fifo_addr[1]_i_2_n_0\
    );
\Using_AXI.r_read_fifo_addr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55556A55AAAA95AA"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I1 => \^using_axi.m_axi_araddr_i_reg[31]_0\(0),
      I2 => M_AXI_IC_ARREADY,
      I3 => M_AXI_IC_RLAST,
      I4 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.r_read_fifo_addr[2]_i_1_n_0\
    );
\Using_AXI.r_read_fifo_addr[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.r_read_fifo_addr[3]_i_1_n_0\
    );
\Using_AXI.r_read_fifo_addr_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.r_read_fifo_addr[0]_i_2_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.r_read_fifo_addr[1]_i_1_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.r_read_fifo_addr[2]_i_1_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.r_read_fifo_addr[3]_i_1_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      S => sync_reset
    );
\Using_FPGA.Native_i_10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(7),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(7),
      O => ADDRBWRADDR(7)
    );
\Using_FPGA.Native_i_11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(6),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(6),
      O => ADDRBWRADDR(6)
    );
\Using_FPGA.Native_i_12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(5),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(5),
      O => ADDRBWRADDR(5)
    );
\Using_FPGA.Native_i_13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(4),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(4),
      O => ADDRBWRADDR(4)
    );
\Using_FPGA.Native_i_14__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(3),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(3),
      O => ADDRBWRADDR(3)
    );
\Using_FPGA.Native_i_15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(2),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(2),
      O => ADDRBWRADDR(2)
    );
\Using_FPGA.Native_i_16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(1),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(1),
      O => ADDRBWRADDR(1)
    );
\Using_FPGA.Native_i_17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(0),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => \Using_FPGA.Native_3\(0),
      O => ADDRBWRADDR(0)
    );
\Using_FPGA.Native_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F1"
    )
        port map (
      I0 => \^new_data_addr\(0),
      I1 => \^new_data_addr\(1),
      I2 => \Using_FPGA.Native_1\(3),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      O => DIBDI(4)
    );
\Using_FPGA.Native_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F2"
    )
        port map (
      I0 => \^new_data_addr\(0),
      I1 => \^new_data_addr\(1),
      I2 => \Using_FPGA.Native_1\(2),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      O => DIBDI(3)
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55555D55"
    )
        port map (
      I0 => \Using_FPGA.Native_i_23_n_0\,
      I1 => ex_Valid,
      I2 => \Using_FPGA.Native\,
      I3 => Write_ICache_I,
      I4 => \^using_axi.r_read_fifo_addr_reg[0]_0\,
      O => ENB1_out
    );
\Using_FPGA.Native_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F2"
    )
        port map (
      I0 => \^new_data_addr\(1),
      I1 => \^new_data_addr\(0),
      I2 => \Using_FPGA.Native_1\(1),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      O => DIBDI(2)
    );
\Using_FPGA.Native_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F8"
    )
        port map (
      I0 => \^new_data_addr\(0),
      I1 => \^new_data_addr\(1),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      O => DIBDI(1)
    );
\Using_FPGA.Native_i_22\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_FPGA.Native_i_23_n_0\,
      O => DIBDI(0)
    );
\Using_FPGA.Native_i_23\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt[0]_i_3_n_0\,
      I2 => read_data_id,
      O => \Using_FPGA.Native_i_23_n_0\
    );
\Using_FPGA.Native_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"35F5"
    )
        port map (
      I0 => read_data_counter(0),
      I1 => convert_Kind,
      I2 => first_word,
      I3 => convert_Low_Addr(28),
      O => \Using_FPGA.Native_i_37_n_0\
    );
\Using_FPGA.Native_i_3__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0C05"
    )
        port map (
      I0 => \Using_FPGA.Native_i_37_n_0\,
      I1 => cacheline_cnt(0),
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_5\,
      O => \^new_data_addr\(1)
    );
\Using_FPGA.Native_i_4__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0C05"
    )
        port map (
      I0 => plusOp(0),
      I1 => cacheline_cnt(1),
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_5\,
      O => \^new_data_addr\(0)
    );
\cacheline_cnt[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D2"
    )
        port map (
      I0 => cacheline_cnt(1),
      I1 => \Using_FPGA.Native_i_23_n_0\,
      I2 => cacheline_cnt(0),
      O => \cacheline_cnt_reg[1]\
    );
\cacheline_cnt[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \Using_FPGA.Native_i_23_n_0\,
      I1 => cacheline_cnt(1),
      O => \cacheline_cnt_reg[1]_0\
    );
hibernate_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000000000000000"
    )
        port map (
      I0 => iFetch_In_Progress,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      O => iFetch_In_Progress_reg
    );
icache_miss_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCCC888A"
    )
        port map (
      I0 => cache_req_raw,
      I1 => \Using_AXI.r_read_fifo_addr[1]_i_2_n_0\,
      I2 => \Using_AXI.M_AXI_ARADDR_I[31]_i_2_n_0\,
      I3 => \^update_idle\,
      I4 => icache_miss_hold,
      I5 => sync_reset,
      O => icache_miss_hold_reg
    );
mbar_first_i_6: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      O => \Using_AXI.r_read_fifo_addr_reg[1]_0\
    );
\new_tag_addr[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"42"
    )
        port map (
      I0 => \Using_FPGA.Native_i_23_n_0\,
      I1 => cacheline_cnt(0),
      I2 => cacheline_cnt(1),
      O => \^update_idle\
    );
read_stream_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1000101010101010"
    )
        port map (
      I0 => \cache_state__0\(0),
      I1 => \cache_state__0\(2),
      I2 => \cache_state__0\(1),
      I3 => \Using_FPGA.Native_i_23_n_0\,
      I4 => cacheline_cnt(0),
      I5 => cacheline_cnt(1),
      O => read_stream_valid
    );
read_victim_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000BF0000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_23_n_0\,
      I1 => cacheline_cnt(0),
      I2 => cacheline_cnt(1),
      I3 => \cache_state__0\(1),
      I4 => \cache_state__0\(2),
      I5 => \cache_state__0\(0),
      O => read_victim_valid
    );
\valid_Bits_1[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => \Using_FPGA.Native_1\(3),
      I1 => \^new_data_addr\(1),
      I2 => \^new_data_addr\(0),
      O => D(3)
    );
\valid_Bits_1[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\(2),
      I1 => \^new_data_addr\(1),
      I2 => \^new_data_addr\(0),
      O => D(2)
    );
\valid_Bits_1[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\(1),
      I1 => \^new_data_addr\(0),
      I2 => \^new_data_addr\(1),
      O => D(1)
    );
\valid_Bits_1[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \^new_data_addr\(1),
      I2 => \^new_data_addr\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_DAXI_interface is
  port (
    D : out STD_LOGIC_VECTOR ( 70 downto 0 );
    S : out STD_LOGIC;
    extend_Data_Read : out STD_LOGIC_VECTOR ( 0 to 31 );
    DReady_0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_AWVALID_i_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    DReady : in STD_LOGIC;
    mem_access : in STD_LOGIC;
    DWait : in STD_LOGIC;
    Valid_Dcache_Access : in STD_LOGIC;
    O : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    DOADO : in STD_LOGIC_VECTOR ( 31 downto 0 );
    complete_dready : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_DAXI_interface : entity is "DAXI_interface";
end design_1_microblaze_1_1_DAXI_interface;

architecture STRUCTURE of design_1_microblaze_1_1_DAXI_interface is
  signal \^d\ : STD_LOGIC_VECTOR ( 70 downto 0 );
  signal M_AXI_DP_ARVALID_i_i_1_n_0 : STD_LOGIC;
  signal M_AXI_DP_AWVALID_i1 : STD_LOGIC;
  signal M_AXI_DP_AWVALID_i_i_1_n_0 : STD_LOGIC;
  signal M_AXI_DP_WVALID_i_i_1_n_0 : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__36_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__37_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__38_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__13_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__14_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__15_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__16_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__17_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__18_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__19_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__20_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__10_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__11_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__7_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__8_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__9_n_0\ : STD_LOGIC;
  signal active_access : STD_LOGIC;
  signal active_access_d1 : STD_LOGIC;
  signal active_access_i_1_n_0 : STD_LOGIC;
  signal dext_DReady : STD_LOGIC;
  signal dext_Data_Read : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^extend_data_read\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_access_completed0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__107\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__109\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__111\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__113\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__115\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__117\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__120\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__34\ : label is "soft_lutpair73";
begin
  D(70 downto 0) <= \^d\(70 downto 0);
  extend_Data_Read(0 to 31) <= \^extend_data_read\(0 to 31);
\Add_Output_DFFs.M_AXI_DP_AWADDR[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => DReady,
      I1 => mem_access,
      I2 => active_access_d1,
      I3 => DWait,
      I4 => Valid_Dcache_Access,
      O => M_AXI_DP_AWVALID_i1
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(0),
      Q => \^d\(39),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(10),
      Q => \^d\(49),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(11),
      Q => \^d\(50),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(12),
      Q => \^d\(51),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(13),
      Q => \^d\(52),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(14),
      Q => \^d\(53),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(15),
      Q => \^d\(54),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(16),
      Q => \^d\(55),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(17),
      Q => \^d\(56),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(18),
      Q => \^d\(57),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(19),
      Q => \^d\(58),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(1),
      Q => \^d\(40),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(20),
      Q => \^d\(59),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(21),
      Q => \^d\(60),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(22),
      Q => \^d\(61),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(23),
      Q => \^d\(62),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(24),
      Q => \^d\(63),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(25),
      Q => \^d\(64),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(26),
      Q => \^d\(65),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(27),
      Q => \^d\(66),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(28),
      Q => \^d\(67),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(29),
      Q => \^d\(68),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(2),
      Q => \^d\(41),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(30),
      Q => \^d\(69),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(31),
      Q => \^d\(70),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(3),
      Q => \^d\(42),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(4),
      Q => \^d\(43),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(5),
      Q => \^d\(44),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(6),
      Q => \^d\(45),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(7),
      Q => \^d\(46),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(8),
      Q => \^d\(47),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(9),
      Q => \^d\(48),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(0),
      Q => \^d\(6),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(10),
      Q => \^d\(16),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(11),
      Q => \^d\(17),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(12),
      Q => \^d\(18),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(13),
      Q => \^d\(19),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(14),
      Q => \^d\(20),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(15),
      Q => \^d\(21),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(16),
      Q => \^d\(22),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(17),
      Q => \^d\(23),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(18),
      Q => \^d\(24),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(19),
      Q => \^d\(25),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(1),
      Q => \^d\(7),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(20),
      Q => \^d\(26),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(21),
      Q => \^d\(27),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(22),
      Q => \^d\(28),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(23),
      Q => \^d\(29),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(24),
      Q => \^d\(30),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(25),
      Q => \^d\(31),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(26),
      Q => \^d\(32),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(27),
      Q => \^d\(33),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(28),
      Q => \^d\(34),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(29),
      Q => \^d\(35),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(2),
      Q => \^d\(8),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(30),
      Q => \^d\(36),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(31),
      Q => \^d\(37),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(3),
      Q => \^d\(9),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(4),
      Q => \^d\(10),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(5),
      Q => \^d\(11),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(6),
      Q => \^d\(12),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(7),
      Q => \^d\(13),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(8),
      Q => \^d\(14),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(9),
      Q => \^d\(15),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\(0),
      Q => \^d\(2),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\(1),
      Q => \^d\(3),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\(2),
      Q => \^d\(4),
      R => sync_reset
    );
\Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_AWVALID_i1,
      D => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\(3),
      Q => \^d\(5),
      R => sync_reset
    );
M_AXI_DP_ARVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00005530"
    )
        port map (
      I0 => M_AXI_DP_ARREADY,
      I1 => M_AXI_DP_AWVALID_i_reg_0(0),
      I2 => M_AXI_DP_AWVALID_i1,
      I3 => \^d\(0),
      I4 => sync_reset,
      O => M_AXI_DP_ARVALID_i_i_1_n_0
    );
M_AXI_DP_ARVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_ARVALID_i_i_1_n_0,
      Q => \^d\(0),
      R => '0'
    );
M_AXI_DP_AWVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000055C0"
    )
        port map (
      I0 => M_AXI_DP_AWREADY,
      I1 => M_AXI_DP_AWVALID_i1,
      I2 => M_AXI_DP_AWVALID_i_reg_0(0),
      I3 => \^d\(38),
      I4 => sync_reset,
      O => M_AXI_DP_AWVALID_i_i_1_n_0
    );
M_AXI_DP_AWVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_AWVALID_i_i_1_n_0,
      Q => \^d\(38),
      R => '0'
    );
M_AXI_DP_WVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000055C0"
    )
        port map (
      I0 => M_AXI_DP_WREADY,
      I1 => M_AXI_DP_AWVALID_i1,
      I2 => M_AXI_DP_AWVALID_i_reg_0(0),
      I3 => \^d\(1),
      I4 => sync_reset,
      O => M_AXI_DP_WVALID_i_i_1_n_0
    );
M_AXI_DP_WVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_WVALID_i_i_1_n_0,
      Q => \^d\(1),
      R => '0'
    );
Trace_Cache_Rdy_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => DReady,
      I1 => dext_DReady,
      I2 => complete_dready,
      O => DReady_0
    );
\Using_FPGA.Native_i_1__107\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__7_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(0),
      O => \^extend_data_read\(16)
    );
\Using_FPGA.Native_i_1__108\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(0),
      I1 => DReady,
      I2 => dext_Data_Read(0),
      I3 => dext_DReady,
      I4 => DOADO(31),
      O => \^extend_data_read\(0)
    );
\Using_FPGA.Native_i_1__109\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__8_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(1),
      O => \^extend_data_read\(17)
    );
\Using_FPGA.Native_i_1__110\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(1),
      I1 => DReady,
      I2 => dext_Data_Read(1),
      I3 => dext_DReady,
      I4 => DOADO(30),
      O => \^extend_data_read\(1)
    );
\Using_FPGA.Native_i_1__111\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__9_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(2),
      O => \^extend_data_read\(18)
    );
\Using_FPGA.Native_i_1__112\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(2),
      I1 => DReady,
      I2 => dext_Data_Read(2),
      I3 => dext_DReady,
      I4 => DOADO(29),
      O => \^extend_data_read\(2)
    );
\Using_FPGA.Native_i_1__113\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__10_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(3),
      O => \^extend_data_read\(19)
    );
\Using_FPGA.Native_i_1__114\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(3),
      I1 => DReady,
      I2 => dext_Data_Read(3),
      I3 => dext_DReady,
      I4 => DOADO(28),
      O => \^extend_data_read\(3)
    );
\Using_FPGA.Native_i_1__115\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__11_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(4),
      O => \^extend_data_read\(20)
    );
\Using_FPGA.Native_i_1__116\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(4),
      I1 => DReady,
      I2 => dext_Data_Read(4),
      I3 => dext_DReady,
      I4 => DOADO(27),
      O => \^extend_data_read\(4)
    );
\Using_FPGA.Native_i_1__117\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__13_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(5),
      O => \^extend_data_read\(21)
    );
\Using_FPGA.Native_i_1__118\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \^extend_data_read\(13),
      I1 => \Using_FPGA.Native_i_2__37_n_0\,
      I2 => \^extend_data_read\(5),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_3__13_n_0\,
      O => \^extend_data_read\(29)
    );
\Using_FPGA.Native_i_1__119\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(5),
      I1 => DReady,
      I2 => dext_Data_Read(5),
      I3 => dext_DReady,
      I4 => DOADO(26),
      O => \^extend_data_read\(5)
    );
\Using_FPGA.Native_i_1__120\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__36_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(6),
      O => \^extend_data_read\(22)
    );
\Using_FPGA.Native_i_1__121\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCAAF0FFCCAAF000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__36_n_0\,
      I1 => \Using_FPGA.Native_i_3__20_n_0\,
      I2 => \^extend_data_read\(14),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \^extend_data_read\(6),
      O => \^extend_data_read\(30)
    );
\Using_FPGA.Native_i_1__122\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(6),
      I1 => DReady,
      I2 => dext_Data_Read(6),
      I3 => dext_DReady,
      I4 => DOADO(25),
      O => \^extend_data_read\(6)
    );
\Using_FPGA.Native_i_1__123\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCF0FFAACCF000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__38_n_0\,
      I1 => \Using_FPGA.Native_i_3__14_n_0\,
      I2 => \^extend_data_read\(15),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \^extend_data_read\(7),
      O => \^extend_data_read\(31)
    );
\Using_FPGA.Native_i_1__124\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(7),
      I1 => DReady,
      I2 => dext_Data_Read(7),
      I3 => dext_DReady,
      I4 => DOADO(24),
      O => \^extend_data_read\(7)
    );
\Using_FPGA.Native_i_1__125\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(8),
      I1 => DReady,
      I2 => dext_Data_Read(8),
      I3 => dext_DReady,
      I4 => DOADO(23),
      O => \^extend_data_read\(8)
    );
\Using_FPGA.Native_i_1__126\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(9),
      I1 => DReady,
      I2 => dext_Data_Read(9),
      I3 => dext_DReady,
      I4 => DOADO(22),
      O => \^extend_data_read\(9)
    );
\Using_FPGA.Native_i_1__127\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(10),
      I1 => DReady,
      I2 => dext_Data_Read(10),
      I3 => dext_DReady,
      I4 => DOADO(21),
      O => \^extend_data_read\(10)
    );
\Using_FPGA.Native_i_1__128\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(11),
      I1 => DReady,
      I2 => dext_Data_Read(11),
      I3 => dext_DReady,
      I4 => DOADO(20),
      O => \^extend_data_read\(11)
    );
\Using_FPGA.Native_i_1__129\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(12),
      I1 => DReady,
      I2 => dext_Data_Read(12),
      I3 => dext_DReady,
      I4 => DOADO(19),
      O => \^extend_data_read\(12)
    );
\Using_FPGA.Native_i_1__130\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(13),
      I1 => DReady,
      I2 => dext_Data_Read(13),
      I3 => dext_DReady,
      I4 => DOADO(18),
      O => \^extend_data_read\(13)
    );
\Using_FPGA.Native_i_1__131\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(14),
      I1 => DReady,
      I2 => dext_Data_Read(14),
      I3 => dext_DReady,
      I4 => DOADO(17),
      O => \^extend_data_read\(14)
    );
\Using_FPGA.Native_i_1__88\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => dext_DReady,
      I1 => DReady,
      O => S
    );
\Using_FPGA.Native_i_2__29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFCCF0AA00CCF0"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__15_n_0\,
      I1 => \^extend_data_read\(8),
      I2 => \^extend_data_read\(0),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_4__7_n_0\,
      O => \^extend_data_read\(24)
    );
\Using_FPGA.Native_i_2__30\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFCCF0AA00CCF0"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__16_n_0\,
      I1 => \^extend_data_read\(9),
      I2 => \^extend_data_read\(1),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_4__8_n_0\,
      O => \^extend_data_read\(25)
    );
\Using_FPGA.Native_i_2__31\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFCCF0AA00CCF0"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__17_n_0\,
      I1 => \^extend_data_read\(10),
      I2 => \^extend_data_read\(2),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_4__9_n_0\,
      O => \^extend_data_read\(26)
    );
\Using_FPGA.Native_i_2__32\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFCCF0AA00CCF0"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__18_n_0\,
      I1 => \^extend_data_read\(11),
      I2 => \^extend_data_read\(3),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_4__10_n_0\,
      O => \^extend_data_read\(27)
    );
\Using_FPGA.Native_i_2__33\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFCCF0AA00CCF0"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__19_n_0\,
      I1 => \^extend_data_read\(12),
      I2 => \^extend_data_read\(4),
      I3 => \Using_FPGA.Native\,
      I4 => O,
      I5 => \Using_FPGA.Native_i_4__11_n_0\,
      O => \^extend_data_read\(28)
    );
\Using_FPGA.Native_i_2__34\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__14_n_0\,
      I1 => O,
      I2 => \^extend_data_read\(7),
      O => \^extend_data_read\(23)
    );
\Using_FPGA.Native_i_2__35\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(15),
      I1 => DReady,
      I2 => dext_Data_Read(15),
      I3 => dext_DReady,
      I4 => DOADO(16),
      O => \^extend_data_read\(15)
    );
\Using_FPGA.Native_i_2__36\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(22),
      I1 => DReady,
      I2 => dext_Data_Read(22),
      I3 => dext_DReady,
      I4 => DOADO(9),
      O => \Using_FPGA.Native_i_2__36_n_0\
    );
\Using_FPGA.Native_i_2__37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(29),
      I1 => DReady,
      I2 => dext_Data_Read(29),
      I3 => dext_DReady,
      I4 => DOADO(2),
      O => \Using_FPGA.Native_i_2__37_n_0\
    );
\Using_FPGA.Native_i_2__38\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(31),
      I1 => DReady,
      I2 => dext_Data_Read(31),
      I3 => dext_DReady,
      I4 => DOADO(0),
      O => \Using_FPGA.Native_i_2__38_n_0\
    );
\Using_FPGA.Native_i_3__13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(21),
      I1 => DReady,
      I2 => dext_Data_Read(21),
      I3 => dext_DReady,
      I4 => DOADO(10),
      O => \Using_FPGA.Native_i_3__13_n_0\
    );
\Using_FPGA.Native_i_3__14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(23),
      I1 => DReady,
      I2 => dext_Data_Read(23),
      I3 => dext_DReady,
      I4 => DOADO(8),
      O => \Using_FPGA.Native_i_3__14_n_0\
    );
\Using_FPGA.Native_i_3__15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(24),
      I1 => DReady,
      I2 => dext_Data_Read(24),
      I3 => dext_DReady,
      I4 => DOADO(7),
      O => \Using_FPGA.Native_i_3__15_n_0\
    );
\Using_FPGA.Native_i_3__16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(25),
      I1 => DReady,
      I2 => dext_Data_Read(25),
      I3 => dext_DReady,
      I4 => DOADO(6),
      O => \Using_FPGA.Native_i_3__16_n_0\
    );
\Using_FPGA.Native_i_3__17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(26),
      I1 => DReady,
      I2 => dext_Data_Read(26),
      I3 => dext_DReady,
      I4 => DOADO(5),
      O => \Using_FPGA.Native_i_3__17_n_0\
    );
\Using_FPGA.Native_i_3__18\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(27),
      I1 => DReady,
      I2 => dext_Data_Read(27),
      I3 => dext_DReady,
      I4 => DOADO(4),
      O => \Using_FPGA.Native_i_3__18_n_0\
    );
\Using_FPGA.Native_i_3__19\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(28),
      I1 => DReady,
      I2 => dext_Data_Read(28),
      I3 => dext_DReady,
      I4 => DOADO(3),
      O => \Using_FPGA.Native_i_3__19_n_0\
    );
\Using_FPGA.Native_i_3__20\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(30),
      I1 => DReady,
      I2 => dext_Data_Read(30),
      I3 => dext_DReady,
      I4 => DOADO(1),
      O => \Using_FPGA.Native_i_3__20_n_0\
    );
\Using_FPGA.Native_i_4__10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(19),
      I1 => DReady,
      I2 => dext_Data_Read(19),
      I3 => dext_DReady,
      I4 => DOADO(12),
      O => \Using_FPGA.Native_i_4__10_n_0\
    );
\Using_FPGA.Native_i_4__11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(20),
      I1 => DReady,
      I2 => dext_Data_Read(20),
      I3 => dext_DReady,
      I4 => DOADO(11),
      O => \Using_FPGA.Native_i_4__11_n_0\
    );
\Using_FPGA.Native_i_4__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(16),
      I1 => DReady,
      I2 => dext_Data_Read(16),
      I3 => dext_DReady,
      I4 => DOADO(15),
      O => \Using_FPGA.Native_i_4__7_n_0\
    );
\Using_FPGA.Native_i_4__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(17),
      I1 => DReady,
      I2 => dext_Data_Read(17),
      I3 => dext_DReady,
      I4 => DOADO(14),
      O => \Using_FPGA.Native_i_4__8_n_0\
    );
\Using_FPGA.Native_i_4__9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => Data_Read(18),
      I1 => DReady,
      I2 => dext_Data_Read(18),
      I3 => dext_DReady,
      I4 => DOADO(13),
      O => \Using_FPGA.Native_i_4__9_n_0\
    );
\WB_DAXI_Read_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(31),
      Q => dext_Data_Read(0),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(21),
      Q => dext_Data_Read(10),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(20),
      Q => dext_Data_Read(11),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(19),
      Q => dext_Data_Read(12),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(18),
      Q => dext_Data_Read(13),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(17),
      Q => dext_Data_Read(14),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(16),
      Q => dext_Data_Read(15),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(15),
      Q => dext_Data_Read(16),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(14),
      Q => dext_Data_Read(17),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(13),
      Q => dext_Data_Read(18),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(12),
      Q => dext_Data_Read(19),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(30),
      Q => dext_Data_Read(1),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(11),
      Q => dext_Data_Read(20),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(10),
      Q => dext_Data_Read(21),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(9),
      Q => dext_Data_Read(22),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(8),
      Q => dext_Data_Read(23),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(7),
      Q => dext_Data_Read(24),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(6),
      Q => dext_Data_Read(25),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(5),
      Q => dext_Data_Read(26),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(4),
      Q => dext_Data_Read(27),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(3),
      Q => dext_Data_Read(28),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(2),
      Q => dext_Data_Read(29),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(29),
      Q => dext_Data_Read(2),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(1),
      Q => dext_Data_Read(30),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(0),
      Q => dext_Data_Read(31),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(28),
      Q => dext_Data_Read(3),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(27),
      Q => dext_Data_Read(4),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(26),
      Q => dext_Data_Read(5),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(25),
      Q => dext_Data_Read(6),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(24),
      Q => dext_Data_Read(7),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(23),
      Q => dext_Data_Read(8),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(22),
      Q => dext_Data_Read(9),
      R => sync_reset
    );
active_access_d1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_access,
      Q => active_access_d1,
      R => sync_reset
    );
active_access_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000010101054"
    )
        port map (
      I0 => sync_reset,
      I1 => active_access,
      I2 => M_AXI_DP_AWVALID_i1,
      I3 => M_AXI_DP_BVALID,
      I4 => M_AXI_DP_RVALID,
      I5 => LOCKSTEP_Master_Out(0),
      O => active_access_i_1_n_0
    );
active_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_access_i_1_n_0,
      Q => active_access,
      R => '0'
    );
mem_access_completed_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => active_access,
      I1 => M_AXI_DP_BVALID,
      I2 => M_AXI_DP_RVALID,
      O => mem_access_completed0
    );
mem_access_completed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_access_completed0,
      Q => dext_DReady,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_DSP48E1 is
  port (
    P : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_DSP48E1 : entity is "MB_DSP48E1";
end design_1_microblaze_1_1_MB_DSP48E1;

architecture STRUCTURE of design_1_microblaze_1_1_MB_DSP48E1 is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal mem_bd_p : STD_LOGIC_VECTOR ( 0 to 30 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 0,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => EX_Op1(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => EX_Op2(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => '0',
      CEP => '1',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0000101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => mem_bd_p(0),
      P(46) => mem_bd_p(1),
      P(45) => mem_bd_p(2),
      P(44) => mem_bd_p(3),
      P(43) => mem_bd_p(4),
      P(42) => mem_bd_p(5),
      P(41) => mem_bd_p(6),
      P(40) => mem_bd_p(7),
      P(39) => mem_bd_p(8),
      P(38) => mem_bd_p(9),
      P(37) => mem_bd_p(10),
      P(36) => mem_bd_p(11),
      P(35) => mem_bd_p(12),
      P(34) => mem_bd_p(13),
      P(33) => mem_bd_p(14),
      P(32) => mem_bd_p(15),
      P(31) => mem_bd_p(16),
      P(30) => mem_bd_p(17),
      P(29) => mem_bd_p(18),
      P(28) => mem_bd_p(19),
      P(27) => mem_bd_p(20),
      P(26) => mem_bd_p(21),
      P(25) => mem_bd_p(22),
      P(24) => mem_bd_p(23),
      P(23) => mem_bd_p(24),
      P(22) => mem_bd_p(25),
      P(21) => mem_bd_p(26),
      P(20) => mem_bd_p(27),
      P(19) => mem_bd_p(28),
      P(18) => mem_bd_p(29),
      P(17) => mem_bd_p(30),
      P(16 downto 0) => P(16 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      PCOUT(47 downto 0) => \Using_FPGA.DSP48E1_I1_0\(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_DSP48E1__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    Clk : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_DSP48E1__parameterized1\ : entity is "MB_DSP48E1";
end \design_1_microblaze_1_1_MB_DSP48E1__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_DSP48E1__parameterized1\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal wb_ad_p : STD_LOGIC_VECTOR ( 0 to 47 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29) => EX_Op1(14),
      A(28) => EX_Op1(14),
      A(27) => EX_Op1(14),
      A(26) => EX_Op1(14),
      A(25) => EX_Op1(14),
      A(24) => EX_Op1(14),
      A(23) => EX_Op1(14),
      A(22) => EX_Op1(14),
      A(21) => EX_Op1(14),
      A(20) => EX_Op1(14),
      A(19) => EX_Op1(14),
      A(18) => EX_Op1(14),
      A(17) => EX_Op1(14),
      A(16) => EX_Op1(14),
      A(15) => EX_Op1(14),
      A(14 downto 0) => EX_Op1(14 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => EX_Op2(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => '1',
      CEP => '1',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"1010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => wb_ad_p(0),
      P(46) => wb_ad_p(1),
      P(45) => wb_ad_p(2),
      P(44) => wb_ad_p(3),
      P(43) => wb_ad_p(4),
      P(42) => wb_ad_p(5),
      P(41) => wb_ad_p(6),
      P(40) => wb_ad_p(7),
      P(39) => wb_ad_p(8),
      P(38) => wb_ad_p(9),
      P(37) => wb_ad_p(10),
      P(36) => wb_ad_p(11),
      P(35) => wb_ad_p(12),
      P(34) => wb_ad_p(13),
      P(33) => wb_ad_p(14),
      P(32) => wb_ad_p(15),
      P(31) => wb_ad_p(16),
      P(30) => wb_ad_p(17),
      P(29) => wb_ad_p(18),
      P(28) => wb_ad_p(19),
      P(27) => wb_ad_p(20),
      P(26) => wb_ad_p(21),
      P(25) => wb_ad_p(22),
      P(24) => wb_ad_p(23),
      P(23) => wb_ad_p(24),
      P(22) => wb_ad_p(25),
      P(21) => wb_ad_p(26),
      P(20) => wb_ad_p(27),
      P(19) => wb_ad_p(28),
      P(18) => wb_ad_p(29),
      P(17) => wb_ad_p(30),
      P(16) => wb_ad_p(31),
      P(15) => wb_ad_p(32),
      P(14) => wb_ad_p(33),
      P(13) => wb_ad_p(34),
      P(12) => wb_ad_p(35),
      P(11) => wb_ad_p(36),
      P(10) => wb_ad_p(37),
      P(9) => wb_ad_p(38),
      P(8) => wb_ad_p(39),
      P(7) => wb_ad_p(40),
      P(6) => wb_ad_p(41),
      P(5) => wb_ad_p(42),
      P(4) => wb_ad_p(43),
      P(3) => wb_ad_p(44),
      P(2) => wb_ad_p(45),
      P(1) => wb_ad_p(46),
      P(0) => wb_ad_p(47),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => \Using_FPGA.DSP48E1_I1_0\(47 downto 0),
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => ex_not_mul_op,
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_DSP48E1__parameterized3\ is
  port (
    mul_Result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    Clk : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_DSP48E1__parameterized3\ : entity is "MB_DSP48E1";
end \design_1_microblaze_1_1_MB_DSP48E1__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_DSP48E1__parameterized3\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_106\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_107\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_108\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_109\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_110\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_111\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_112\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_113\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_114\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_115\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_116\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_117\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_118\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_119\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_120\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_121\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_122\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_123\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_124\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_125\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_126\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_127\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_128\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_129\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_130\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_131\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_132\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_133\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_134\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_135\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_136\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_137\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_138\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_139\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_140\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_141\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_142\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_143\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_144\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_145\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_146\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_147\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_148\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_149\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_150\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_151\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_152\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_153\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_58\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_59\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_60\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_61\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_62\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_63\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_64\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_65\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_66\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_67\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_68\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_69\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_70\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_71\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_72\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_73\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_74\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_75\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_76\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_77\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_78\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_79\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_80\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_81\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_82\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_83\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_84\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_85\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_86\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_87\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_88\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_89\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_90\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 1,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 1,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 1,
      BREG => 1,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 0,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => EX_Op1(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => EX_Op2(14),
      B(16) => EX_Op2(14),
      B(15) => EX_Op2(14),
      B(14 downto 0) => EX_Op2(14 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '1',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '1',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => '1',
      CEP => '0',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => \Using_FPGA.DSP48E1_I1_n_58\,
      P(46) => \Using_FPGA.DSP48E1_I1_n_59\,
      P(45) => \Using_FPGA.DSP48E1_I1_n_60\,
      P(44) => \Using_FPGA.DSP48E1_I1_n_61\,
      P(43) => \Using_FPGA.DSP48E1_I1_n_62\,
      P(42) => \Using_FPGA.DSP48E1_I1_n_63\,
      P(41) => \Using_FPGA.DSP48E1_I1_n_64\,
      P(40) => \Using_FPGA.DSP48E1_I1_n_65\,
      P(39) => \Using_FPGA.DSP48E1_I1_n_66\,
      P(38) => \Using_FPGA.DSP48E1_I1_n_67\,
      P(37) => \Using_FPGA.DSP48E1_I1_n_68\,
      P(36) => \Using_FPGA.DSP48E1_I1_n_69\,
      P(35) => \Using_FPGA.DSP48E1_I1_n_70\,
      P(34) => \Using_FPGA.DSP48E1_I1_n_71\,
      P(33) => \Using_FPGA.DSP48E1_I1_n_72\,
      P(32) => \Using_FPGA.DSP48E1_I1_n_73\,
      P(31) => \Using_FPGA.DSP48E1_I1_n_74\,
      P(30) => \Using_FPGA.DSP48E1_I1_n_75\,
      P(29) => \Using_FPGA.DSP48E1_I1_n_76\,
      P(28) => \Using_FPGA.DSP48E1_I1_n_77\,
      P(27) => \Using_FPGA.DSP48E1_I1_n_78\,
      P(26) => \Using_FPGA.DSP48E1_I1_n_79\,
      P(25) => \Using_FPGA.DSP48E1_I1_n_80\,
      P(24) => \Using_FPGA.DSP48E1_I1_n_81\,
      P(23) => \Using_FPGA.DSP48E1_I1_n_82\,
      P(22) => \Using_FPGA.DSP48E1_I1_n_83\,
      P(21) => \Using_FPGA.DSP48E1_I1_n_84\,
      P(20) => \Using_FPGA.DSP48E1_I1_n_85\,
      P(19) => \Using_FPGA.DSP48E1_I1_n_86\,
      P(18) => \Using_FPGA.DSP48E1_I1_n_87\,
      P(17) => \Using_FPGA.DSP48E1_I1_n_88\,
      P(16) => \Using_FPGA.DSP48E1_I1_n_89\,
      P(15) => \Using_FPGA.DSP48E1_I1_n_90\,
      P(14 downto 0) => mul_Result(14 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => PCOUT(47 downto 0),
      PCOUT(47) => \Using_FPGA.DSP48E1_I1_n_106\,
      PCOUT(46) => \Using_FPGA.DSP48E1_I1_n_107\,
      PCOUT(45) => \Using_FPGA.DSP48E1_I1_n_108\,
      PCOUT(44) => \Using_FPGA.DSP48E1_I1_n_109\,
      PCOUT(43) => \Using_FPGA.DSP48E1_I1_n_110\,
      PCOUT(42) => \Using_FPGA.DSP48E1_I1_n_111\,
      PCOUT(41) => \Using_FPGA.DSP48E1_I1_n_112\,
      PCOUT(40) => \Using_FPGA.DSP48E1_I1_n_113\,
      PCOUT(39) => \Using_FPGA.DSP48E1_I1_n_114\,
      PCOUT(38) => \Using_FPGA.DSP48E1_I1_n_115\,
      PCOUT(37) => \Using_FPGA.DSP48E1_I1_n_116\,
      PCOUT(36) => \Using_FPGA.DSP48E1_I1_n_117\,
      PCOUT(35) => \Using_FPGA.DSP48E1_I1_n_118\,
      PCOUT(34) => \Using_FPGA.DSP48E1_I1_n_119\,
      PCOUT(33) => \Using_FPGA.DSP48E1_I1_n_120\,
      PCOUT(32) => \Using_FPGA.DSP48E1_I1_n_121\,
      PCOUT(31) => \Using_FPGA.DSP48E1_I1_n_122\,
      PCOUT(30) => \Using_FPGA.DSP48E1_I1_n_123\,
      PCOUT(29) => \Using_FPGA.DSP48E1_I1_n_124\,
      PCOUT(28) => \Using_FPGA.DSP48E1_I1_n_125\,
      PCOUT(27) => \Using_FPGA.DSP48E1_I1_n_126\,
      PCOUT(26) => \Using_FPGA.DSP48E1_I1_n_127\,
      PCOUT(25) => \Using_FPGA.DSP48E1_I1_n_128\,
      PCOUT(24) => \Using_FPGA.DSP48E1_I1_n_129\,
      PCOUT(23) => \Using_FPGA.DSP48E1_I1_n_130\,
      PCOUT(22) => \Using_FPGA.DSP48E1_I1_n_131\,
      PCOUT(21) => \Using_FPGA.DSP48E1_I1_n_132\,
      PCOUT(20) => \Using_FPGA.DSP48E1_I1_n_133\,
      PCOUT(19) => \Using_FPGA.DSP48E1_I1_n_134\,
      PCOUT(18) => \Using_FPGA.DSP48E1_I1_n_135\,
      PCOUT(17) => \Using_FPGA.DSP48E1_I1_n_136\,
      PCOUT(16) => \Using_FPGA.DSP48E1_I1_n_137\,
      PCOUT(15) => \Using_FPGA.DSP48E1_I1_n_138\,
      PCOUT(14) => \Using_FPGA.DSP48E1_I1_n_139\,
      PCOUT(13) => \Using_FPGA.DSP48E1_I1_n_140\,
      PCOUT(12) => \Using_FPGA.DSP48E1_I1_n_141\,
      PCOUT(11) => \Using_FPGA.DSP48E1_I1_n_142\,
      PCOUT(10) => \Using_FPGA.DSP48E1_I1_n_143\,
      PCOUT(9) => \Using_FPGA.DSP48E1_I1_n_144\,
      PCOUT(8) => \Using_FPGA.DSP48E1_I1_n_145\,
      PCOUT(7) => \Using_FPGA.DSP48E1_I1_n_146\,
      PCOUT(6) => \Using_FPGA.DSP48E1_I1_n_147\,
      PCOUT(5) => \Using_FPGA.DSP48E1_I1_n_148\,
      PCOUT(4) => \Using_FPGA.DSP48E1_I1_n_149\,
      PCOUT(3) => \Using_FPGA.DSP48E1_I1_n_150\,
      PCOUT(2) => \Using_FPGA.DSP48E1_I1_n_151\,
      PCOUT(1) => \Using_FPGA.DSP48E1_I1_n_152\,
      PCOUT(0) => \Using_FPGA.DSP48E1_I1_n_153\,
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => ex_not_mul_op,
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_588 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_588 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_588;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_588 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_594 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_594 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_594;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_594 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_600 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_600 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_600;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_600 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_606 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_606 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_606;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_606 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_612 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_612 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_612;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_612 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_618 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_618 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_618;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_618 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_624 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_624 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_624;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_624 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_630 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_630 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_630;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_630 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_636 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_636 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_636;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_636 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_642 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_642 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_642;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_642 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_648 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_648 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_648;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_648 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_654 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_654 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_654;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_654 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_660 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_660 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_660;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_660 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_666 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_666 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_666;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_666 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_672 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_672 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_672;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_672 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_678 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_678 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_678;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_678 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_684 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_684 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_684;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_684 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_690 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_690 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_690;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_690 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_696 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_696 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_696;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_696 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_702 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_702 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_702;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_702 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_708 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_708 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_708;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_708 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_714 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_714 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_714;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_714 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_720 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_720 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_720;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_720 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_726 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_726 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_726;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_726 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_732 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_732 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_732;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_732 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_738 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_738 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_738;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_738 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_744 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_744 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_744;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_744 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_750 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_750 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_750;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_750 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_756 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_756 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_756;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_756 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_762 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_762 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_762;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_762 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_768 is
  port (
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_768 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_768;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_768 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => Address(0),
      Q => PC_EX_i(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_799 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_799 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_799;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_799 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_22,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_803 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_803 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_803;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_803 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_23,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_807 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_807 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_807;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_807 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_24,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_811 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_811 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_811;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_811 is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_25,
      Q => \^ex_op2\(0),
      R => '0'
    );
\Using_FPGA.Native_i_1__95\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^ex_op2\(0),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\(0),
      I3 => \Using_FPGA.Native_1\(0),
      O => \Using_FPGA.The_Compare[2].sel_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_815 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_815 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_815;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_815 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_26,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_819 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_819 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_819;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_819 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_27,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_823 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_823 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_823;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_823 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_28,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_827 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[27]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[27]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_827 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_827;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_827 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \C[27]_i_2\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[3]_i_3\ : label is "soft_lutpair4";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
\C[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FE04F000FE04FF0F"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => A(0),
      I2 => \C_reg[27]\(2),
      I3 => void_bit,
      I4 => \C_reg[27]\(1),
      I5 => \C_reg[27]_0\,
      O => \Using_FPGA.Native_1\(0)
    );
\C[27]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \C_reg[27]\(0),
      O => \^using_fpga.native_2\
    );
\Using_BitField.mem_mask0[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"23DD23CCFF00FF00"
    )
        port map (
      I0 => \^using_fpga.native_4\,
      I1 => \Using_BitField.mem_mask0_reg[11]\,
      I2 => \C_reg[27]\(1),
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[11]_0\,
      I5 => \Using_BitField.mem_mask0_reg[11]_1\,
      O => \Using_FPGA.Native_3\(0)
    );
\Using_BitField.mem_mask0[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00035503"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask0_reg[11]_2\,
      I2 => \Using_BitField.mem_mask0_reg[11]_3\,
      I3 => BitField_Insert,
      I4 => \C_reg[27]\(0),
      O => \^using_fpga.native_4\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_0,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_831 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_7\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \C_reg[30]\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 1 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[30]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_831 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_831;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_831 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\C[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0CCF0AAF0F0F0F0"
    )
        port map (
      I0 => A(1),
      I1 => A(0),
      I2 => void_bit,
      I3 => \^using_fpga.native_0\,
      I4 => \C_reg[30]\,
      I5 => \C_reg[30]_0\,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_1,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
\Using_FPGA.Native_i_1__103\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \C_reg[30]\,
      I3 => Op1_Logic,
      O => \Using_FPGA.The_Compare[2].sel_reg_7\
    );
\Using_FPGA.Native_i_2__45\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8FFF8F8F888F8F8"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \^using_fpga.native_0\,
      I2 => msr_I(0),
      I3 => \Using_FPGA.Native_5\,
      I4 => \Using_FPGA.Native_6\,
      I5 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_835 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_835 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_835;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_835 is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_29,
      Q => \^ex_op2\(0),
      R => '0'
    );
\Using_FPGA.Native_i_1__70\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^ex_op2\(0),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => \Using_FPGA.Native_2\,
      I5 => \Using_FPGA.Native_1\(1),
      O => \Using_FPGA.The_Compare[0].sel_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_839 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \C_reg[28]\ : in STD_LOGIC;
    \C_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[28]_1\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[28]_2\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_839 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_839;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_839 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \C[30]_i_2\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[5]_i_3\ : label is "soft_lutpair3";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\C[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"01FD010101010101"
    )
        port map (
      I0 => \C_reg[28]\,
      I1 => \^using_fpga.native_0\,
      I2 => \C_reg[28]_0\(0),
      I3 => \C_reg[28]_1\,
      I4 => instr_ex(0),
      I5 => \C_reg[28]_2\,
      O => \Using_FPGA.Native_1\(0)
    );
\C[30]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \C_reg[28]_0\(0),
      O => \Using_FPGA.Native_3\
    );
\Using_BitField.mem_mask0[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33333333CCCC74CC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[19]\,
      I3 => \Using_BitField.mem_mask0_reg[19]_0\,
      I4 => \Using_BitField.mem_mask0_reg[19]_1\,
      I5 => \Using_BitField.mem_mask0_reg[19]_2\,
      O => \Using_FPGA.Native_4\(0)
    );
\Using_BitField.mem_mask0[5]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[19]\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_2,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_843 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \C_reg[23]\ : in STD_LOGIC;
    void_bit : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C_reg[23]_0\ : in STD_LOGIC;
    \C_reg[23]_1\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[24]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[24]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[23]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[23]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_843 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_843;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_843 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[24]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[8]_i_1\ : label is "soft_lutpair2";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
\C[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C500C50FC5F0C5FF"
    )
        port map (
      I0 => \C_reg[23]\,
      I1 => void_bit,
      I2 => \^using_fpga.native_0\,
      I3 => EX_Op2(0),
      I4 => \C_reg[23]_0\,
      I5 => \C_reg[23]_1\,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_BitField.mem_mask0[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF55A2DDA2"
    )
        port map (
      I0 => \^using_fpga.native_3\,
      I1 => \Using_BitField.mem_mask0_reg[23]\,
      I2 => \Using_BitField.mem_mask0_reg[23]_0\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[25]\,
      I5 => \Using_BitField.mem_mask0_reg[25]_0\,
      O => \Using_FPGA.Native_2\(2)
    );
\Using_BitField.mem_mask0[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"33773074"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[24]\,
      I3 => EX_Op2(1),
      I4 => \Using_BitField.mem_mask0_reg[24]_0\,
      O => \Using_FPGA.Native_2\(1)
    );
\Using_BitField.mem_mask0[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F0F0F0E5E5A5A"
    )
        port map (
      I0 => \^using_fpga.native_3\,
      I1 => \Using_BitField.mem_mask0_reg[23]_0\,
      I2 => BitField_Insert,
      I3 => \Using_BitField.mem_mask0_reg[25]\,
      I4 => \Using_BitField.mem_mask0_reg[25]_1\,
      I5 => \Using_BitField.mem_mask0_reg[25]_0\,
      O => \Using_FPGA.Native_2\(0)
    );
\Using_BitField.mem_mask0[3]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[24]\,
      O => \^using_fpga.native_3\
    );
\Using_BitField.mem_mask0[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74FC44CC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[24]\,
      I3 => EX_Op2(1),
      I4 => \Using_BitField.mem_mask0_reg[24]_0\,
      O => \Using_FPGA.Native_2\(3)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_3,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_847 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[14]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[3]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[15]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[15]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[4]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[5]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[13]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[14]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[7]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[9]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_847 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_847;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_847 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[16]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \Using_BitField.mem_mask0[1]_i_2\ : label is "soft_lutpair1";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\Using_BitField.mem_mask0[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7474744474FC74CC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      I3 => \Using_BitField.mem_mask0_reg[10]\,
      I4 => \Using_BitField.mem_mask0_reg[4]\,
      I5 => \Using_BitField.mem_mask0_reg[14]\(2),
      O => \Using_FPGA.Native_1\(5)
    );
\Using_BitField.mem_mask0[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555AA885F5FAA88"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[4]\,
      I2 => \Using_BitField.mem_mask0_reg[14]\(2),
      I3 => \Using_BitField.mem_mask0_reg[3]\,
      I4 => BitField_Insert,
      I5 => \Using_BitField.mem_mask0_reg[14]\(1),
      O => \Using_FPGA.Native_1\(4)
    );
\Using_BitField.mem_mask0[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"747474747444FCCC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      I3 => \Using_BitField.mem_mask0_reg[4]\,
      I4 => \Using_BitField.mem_mask0_reg[14]\(2),
      I5 => \Using_BitField.mem_mask0_reg[13]\,
      O => \Using_FPGA.Native_1\(3)
    );
\Using_BitField.mem_mask0[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7444FCCC74747474"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      I3 => \Using_BitField.mem_mask0_reg[4]\,
      I4 => \Using_BitField.mem_mask0_reg[14]\(2),
      I5 => \Using_BitField.mem_mask0_reg[14]_0\,
      O => \Using_FPGA.Native_1\(2)
    );
\Using_BitField.mem_mask0[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5A5A58F85A5A5A5A"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[3]\,
      I2 => BitField_Insert,
      I3 => \Using_BitField.mem_mask0_reg[14]\(1),
      I4 => \Using_BitField.mem_mask0_reg[15]\,
      I5 => \Using_BitField.mem_mask0_reg[15]_0\,
      O => \Using_FPGA.Native_1\(1)
    );
\Using_BitField.mem_mask0[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"74"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_BitField.mem_mask0[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DF22DF00FF00FF00"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[1]\,
      I2 => \Using_BitField.mem_mask0_reg[14]\(0),
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[1]_0\,
      I5 => \Using_BitField.mem_mask0_reg[1]_1\,
      O => \Using_FPGA.Native_1\(11)
    );
\Using_BitField.mem_mask0[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      O => \^using_fpga.native_2\
    );
\Using_BitField.mem_mask0[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F0F07A70F0F0"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[14]\(1),
      I2 => BitField_Insert,
      I3 => \Using_BitField.mem_mask0_reg[3]\,
      I4 => \Using_BitField.mem_mask0_reg[15]\,
      I5 => \Using_BitField.mem_mask0_reg[15]_0\,
      O => \Using_FPGA.Native_1\(10)
    );
\Using_BitField.mem_mask0[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F5F8800FFFF8800"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[4]\,
      I2 => \Using_BitField.mem_mask0_reg[14]\(2),
      I3 => \Using_BitField.mem_mask0_reg[3]\,
      I4 => BitField_Insert,
      I5 => \Using_BitField.mem_mask0_reg[14]\(1),
      O => \Using_FPGA.Native_1\(9)
    );
\Using_BitField.mem_mask0[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7444FCCCCCCCCCCC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[5]\,
      I3 => \Using_BitField.mem_mask0_reg[4]\,
      I4 => \Using_BitField.mem_mask0_reg[14]\(2),
      I5 => \Using_BitField.mem_mask0_reg[13]\,
      O => \Using_FPGA.Native_1\(8)
    );
\Using_BitField.mem_mask0[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77778808F7F78808"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[15]\,
      I2 => \Using_BitField.mem_mask0_reg[14]_0\,
      I3 => \Using_BitField.mem_mask0_reg[7]\,
      I4 => BitField_Insert,
      I5 => \Using_BitField.mem_mask0_reg[9]\,
      O => \Using_FPGA.Native_1\(7)
    );
\Using_BitField.mem_mask0[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55A877A877887788"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask0_reg[15]\,
      I2 => \Using_BitField.mem_mask0_reg[7]\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[9]\,
      I5 => \Using_BitField.mem_mask0_reg[10]\,
      O => \Using_FPGA.Native_1\(6)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_4,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_851 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ICache_Enabled : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_851 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_851;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_851 is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_5,
      Q => \^ex_op2\(0),
      R => '0'
    );
\Using_FPGA.Native_i_2__42\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8FFF8F8F888F8F8"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \^ex_op2\(0),
      I2 => ICache_Enabled,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_855 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_BitField.mem_mask0_reg[17]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_855 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_855;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_855 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
\Using_BitField.mem_mask0[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F0F0FB5B0F0F0"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => EX_Op2(0),
      I2 => BitField_Insert,
      I3 => \Using_BitField.mem_mask0_reg[17]_0\,
      I4 => \Using_BitField.mem_mask0_reg[17]_1\,
      I5 => \Using_BitField.mem_mask0_reg[17]_2\,
      O => \Using_FPGA.Native_2\(1)
    );
\Using_BitField.mem_mask0[1]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1D"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[17]\,
      O => \^using_fpga.native_1\
    );
\Using_BitField.mem_mask0[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFEE0505FFEE"
    )
        port map (
      I0 => \^using_fpga.native_3\,
      I1 => \Using_BitField.mem_mask0_reg[29]\,
      I2 => EX_Op2(2),
      I3 => \Using_BitField.mem_mask0_reg[29]_0\,
      I4 => BitField_Insert,
      I5 => EX_Op2(1),
      O => \Using_FPGA.Native_2\(0)
    );
\Using_BitField.mem_mask0[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E222C000FFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[17]\,
      I3 => EX_Op2(0),
      I4 => \Using_BitField.mem_mask0_reg[17]_0\,
      I5 => \Using_BitField.mem_mask0_reg[29]_1\,
      O => \^using_fpga.native_3\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_6,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_859 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_PipeRun : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_859 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_859;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_859 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\Using_BitField.mem_mask0[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F5FFF080858F8"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \Using_BitField.mem_mask1_reg[23]_1\,
      I2 => BitField_Insert,
      I3 => EX_Op2(2),
      I4 => EX_Op2(3),
      I5 => \Using_BitField.mem_mask1_reg[23]_2\,
      O => \Using_FPGA.Native_3\(1)
    );
\Using_BitField.mem_mask0[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFEE0505FFEE"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \Using_BitField.mem_mask1_reg[23]_2\,
      I2 => EX_Op2(3),
      I3 => \Using_BitField.mem_mask1_reg[23]_1\,
      I4 => BitField_Insert,
      I5 => EX_Op2(2),
      O => \Using_FPGA.Native_3\(0)
    );
\Using_BitField.mem_mask0[2]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCA000A0"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_BitField.mem_mask1_reg[23]_0\,
      I3 => BitField_Insert,
      I4 => EX_Op2(1),
      O => \^using_fpga.native_1\
    );
\Using_BitField.mem_mask1[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000004FFFB"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Extract,
      I2 => \Using_BitField.mem_mask1_reg[23]\,
      I3 => \Using_BitField.mem_mask1_reg[23]_0\,
      I4 => \Using_BitField.mem_mask1_reg[23]_1\,
      I5 => \Using_BitField.mem_mask1_reg[23]_2\,
      O => D(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_7,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
\Using_FPGA.Native_i_2__41\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8FFF8F8F888F8F8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\,
      I5 => \Using_FPGA.Native_8\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_863 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_0\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[6]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_863 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_863;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_863 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\Using_BitField.mem_mask0[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"333333333333CC2E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[27]\,
      I3 => \Using_BitField.mem_mask0_reg[27]_1\,
      I4 => \Using_BitField.mem_mask0_reg[27]_2\,
      I5 => \Using_BitField.mem_mask0_reg[27]_0\,
      O => \Using_FPGA.Native_1\(1)
    );
\Using_BitField.mem_mask0[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33333333332E3333"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => \Using_BitField.mem_mask0_reg[27]\,
      I3 => \Using_BitField.mem_mask0_reg[27]_0\,
      I4 => \Using_BitField.mem_mask0_reg[27]_1\,
      I5 => \Using_BitField.mem_mask0_reg[27]_2\,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_BitField.mem_mask0[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAF4400FFFF4400"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_BitField.mem_mask1_reg[26]_2\,
      I2 => EX_Op2(1),
      I3 => \Using_BitField.mem_mask1_reg[26]_1\,
      I4 => BitField_Insert,
      I5 => EX_Op2(0),
      O => \Using_FPGA.Native_1\(2)
    );
\Using_BitField.mem_mask0[6]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00053305"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask0_reg[27]\,
      I2 => \Using_BitField.mem_mask1_reg[26]\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[6]\,
      O => \^using_fpga.native_2\
    );
\Using_BitField.mem_mask1[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000007657"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[26]\,
      I2 => \Using_BitField.mem_mask1_reg[26]_0\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[26]_1\,
      I5 => \Using_BitField.mem_mask1_reg[26]_2\,
      O => D(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_8,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_867 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg_4\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    of_PipeRun : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_0\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[28]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[28]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[21]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[30]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_867 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_867;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_867 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_BitField.mem_mask0[1]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCA000A0"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_BitField.mem_mask1_reg[27]\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[28]\,
      O => \Using_FPGA.Native_1\
    );
\Using_BitField.mem_mask0[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF33A0FFA0"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_BitField.mem_mask1_reg[27]\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[28]\,
      I5 => \Using_BitField.mem_mask0_reg[28]_0\,
      O => \Using_FPGA.Native_2\(4)
    );
\Using_BitField.mem_mask0[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33333FFF22002ECC"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => EX_Op2(0),
      I3 => \Using_BitField.mem_mask0_reg[21]\,
      I4 => EX_Op2(1),
      I5 => \Using_BitField.mem_mask1_reg[27]_2\,
      O => \Using_FPGA.Native_2\(3)
    );
\Using_BitField.mem_mask0[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333FF3F0022CC2E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => EX_Op2(0),
      I3 => \Using_BitField.mem_mask0_reg[30]\,
      I4 => EX_Op2(1),
      I5 => \Using_BitField.mem_mask1_reg[27]_2\,
      O => \Using_FPGA.Native_2\(2)
    );
\Using_BitField.mem_mask0[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF00FA33FA"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_BitField.mem_mask1_reg[27]\,
      I3 => BitField_Insert,
      I4 => \Using_BitField.mem_mask0_reg[28]\,
      I5 => \Using_BitField.mem_mask0_reg[28]_0\,
      O => \Using_FPGA.Native_2\(1)
    );
\Using_BitField.mem_mask0[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33333F3322332E33"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Insert,
      I2 => EX_Op2(0),
      I3 => \Using_BitField.mem_mask0_reg[30]\,
      I4 => EX_Op2(1),
      I5 => \Using_BitField.mem_mask1_reg[27]_2\,
      O => \Using_FPGA.Native_2\(0)
    );
\Using_BitField.mem_mask1[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000011111411"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[27]\,
      I2 => \Using_BitField.mem_mask1_reg[27]_0\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[27]_1\,
      I5 => \Using_BitField.mem_mask1_reg[27]_2\,
      O => D(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_9,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
\Using_FPGA.Native_i_1__100\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_BitField.mem_mask1_reg[27]\,
      I3 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.The_Compare[2].sel_reg_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_871 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 27 downto 0 );
    S_5 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]_1\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[15]\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_871 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_871;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_871 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_BitField.mem_mask0[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33A0FFA0FF00FF00"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(1),
      I2 => \Using_BitField.mem_mask1_reg[28]\,
      I3 => BitField_Insert,
      I4 => EX_Op2(0),
      I5 => \Using_BitField.mem_mask0_reg[2]\,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_BitField.mem_mask1[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF7FFFFFFEFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(27)
    );
\Using_BitField.mem_mask1[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"555555557F7E777F"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => \Using_BitField.mem_mask1_reg[15]\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(17)
    );
\Using_BitField.mem_mask1[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5757575757765757"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[15]\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[28]_1\,
      O => D(16)
    );
\Using_BitField.mem_mask1[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555577765777"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => \Using_BitField.mem_mask1_reg[15]\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(15)
    );
\Using_BitField.mem_mask1[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555757767"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => \Using_BitField.mem_mask1_reg[15]\,
      I5 => \Using_BitField.mem_mask1_reg[28]_0\,
      O => D(14)
    );
\Using_BitField.mem_mask1[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555557657"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[15]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_1\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(13)
    );
\Using_BitField.mem_mask1[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555655"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[15]\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[28]_1\,
      I5 => \Using_BitField.mem_mask1_reg[28]_0\,
      O => D(12)
    );
\Using_BitField.mem_mask1[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555155555545555"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(11)
    );
\Using_BitField.mem_mask1[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1555151555545555"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(10)
    );
\Using_BitField.mem_mask1[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1515151555541555"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(9)
    );
\Using_BitField.mem_mask1[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1515151515541515"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(8)
    );
\Using_BitField.mem_mask1[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFF7F7FFFFEFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(26)
    );
\Using_BitField.mem_mask1[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111011155545555"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => \Using_BitField.mem_mask1_reg[15]\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(7)
    );
\Using_BitField.mem_mask1[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000045555555551"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Extract,
      I2 => \Using_BitField.mem_mask1_reg[28]_1\,
      I3 => \Using_BitField.mem_mask1_reg[15]\,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(6)
    );
\Using_BitField.mem_mask1[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000110155555455"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[15]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_1\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(5)
    );
\Using_BitField.mem_mask1[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000051555545"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_1\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[15]\,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(4)
    );
\Using_BitField.mem_mask1[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000011515545"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => \Using_BitField.mem_mask1_reg[15]\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(3)
    );
\Using_BitField.mem_mask1[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101000101000101"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(2)
    );
\Using_BitField.mem_mask1[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000101101"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => \Using_BitField.mem_mask1_reg[15]\,
      I5 => \Using_BitField.mem_mask1_reg[28]_0\,
      O => D(1)
    );
\Using_BitField.mem_mask1[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F7F7F7FFFFE7FFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(25)
    );
\Using_BitField.mem_mask1[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000001000001"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(0)
    );
\Using_BitField.mem_mask1[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F7F7F7F7FFE7F7F"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_0\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[15]\,
      O => D(24)
    );
\Using_BitField.mem_mask1[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77775777FFFEFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => \Using_BitField.mem_mask1_reg[15]\,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => BitField_Extract,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(23)
    );
\Using_BitField.mem_mask1[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555DFFFFFFFFFB"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => BitField_Extract,
      I2 => \Using_BitField.mem_mask1_reg[28]_1\,
      I3 => \Using_BitField.mem_mask1_reg[15]\,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(22)
    );
\Using_BitField.mem_mask1[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55557757FFFFFEFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[15]\,
      I2 => \Using_BitField.mem_mask1_reg[28]_1\,
      I3 => BitField_Extract,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(21)
    );
\Using_BitField.mem_mask1[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555575FFFFFFEF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[15]\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(20)
    );
\Using_BitField.mem_mask1[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555F7FFFFEF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_1\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[15]\,
      I4 => \Using_BitField.mem_mask1_reg[28]_0\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(19)
    );
\Using_BitField.mem_mask1[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555577F7FFEF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_mask1_reg[28]_0\,
      I2 => BitField_Extract,
      I3 => \Using_BitField.mem_mask1_reg[28]_1\,
      I4 => \Using_BitField.mem_mask1_reg[15]\,
      I5 => \Using_BitField.mem_mask1_reg[28]\,
      O => D(18)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_10,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
\Using_FPGA.Native_i_1__101\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => EX_Op2(3),
      I4 => \Using_FPGA.Native_4\,
      I5 => EX_Op2(2),
      O => S_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_875 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_875 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_875;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_875 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_11,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_879 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_879 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_879;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_879 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_30,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_883 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_883 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_883;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_883 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_12,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_887 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_887 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_887;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_887 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_13,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_891 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_891 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_891;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_891 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_14,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_895 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_895 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_895;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_895 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_15,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_899 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_899 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_899;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_899 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_16,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_903 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg_1\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_903 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_903;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_903 is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_17,
      Q => \^ex_op2\(0),
      R => '0'
    );
\Using_FPGA.Native_i_1__97\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^ex_op2\(0),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\(0),
      I3 => \Using_FPGA.Native_1\(0),
      O => \Using_FPGA.The_Compare[2].sel_reg_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_907 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_907 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_907;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_907 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_18,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_911 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_911 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_911;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_911 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_19,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_915 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_915 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_915;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_915 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_20,
      Q => EX_Op2(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_919 is
  port (
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg_3\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_919 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_919;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_919 is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_21,
      Q => \^ex_op2\(0),
      R => '0'
    );
\Using_FPGA.Native_i_1__99\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^ex_op2\(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\(1),
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_2\(0),
      O => \Using_FPGA.The_Compare[0].sel_reg_3\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDE_923 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    compare_Instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDE_923 : entity is "MB_FDE";
end design_1_microblaze_1_1_MB_FDE_923;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDE_923 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => D_31,
      Q => \^using_fpga.native_0\,
      R => '0'
    );
\Using_FPGA.Native_i_1__137\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F9FF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => compare_Instr,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__69\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F9FF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => compare_Instr,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDR is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    DI : out STD_LOGIC;
    buffer_Full : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    of_Pause_reg : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    R : in STD_LOGIC;
    D_32 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_I1\ : in STD_LOGIC;
    ex_Valid_reg : in STD_LOGIC;
    \Using_FPGA.Native_I1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    jump_Carry2 : in STD_LOGIC;
    ex_Valid_reg_0 : in STD_LOGIC;
    complete_dready : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    nonvalid_IFetch_n_reg : in STD_LOGIC;
    trace_jump_taken_i_reg : in STD_LOGIC;
    nonvalid_IFetch_n_reg_0 : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    nonvalid_IFetch_n_reg_1 : in STD_LOGIC;
    nonvalid_IFetch_n_reg_2 : in STD_LOGIC;
    nonvalid_IFetch_n_reg_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDR : entity is "MB_FDR";
end design_1_microblaze_1_1_MB_FDR;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDR is
  signal S : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal nonvalid_IFetch_n_i_2_n_0 : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_Valid_i_3 : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of nonvalid_IFetch_n_i_2 : label is "soft_lutpair23";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_32,
      Q => \^using_fpga.native_0\,
      R => R
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000DFDFDF"
    )
        port map (
      I0 => \Using_FPGA.Native_I1\,
      I1 => ex_Valid_reg,
      I2 => \Using_FPGA.Native_I1_0\,
      I3 => \^using_fpga.native_0\,
      I4 => \Using_FPGA.Native_2\,
      I5 => missed_IFetch,
      O => DI
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      O => buffer_Full
    );
\Using_FPGA.Native_i_1__136\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => nonvalid_IFetch_n_reg,
      I1 => \^using_fpga.native_0\,
      I2 => trace_jump_taken_i_reg,
      O => of_Pause_reg
    );
ex_Valid_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF44444F44"
    )
        port map (
      I0 => S,
      I1 => jump_Carry2,
      I2 => ex_Valid_reg,
      I3 => ex_Valid_reg_0,
      I4 => complete_dready,
      I5 => mul_Executing,
      O => \Using_FPGA.Native_1\
    );
ex_Valid_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => nonvalid_IFetch_n_reg,
      I1 => \^using_fpga.native_0\,
      I2 => trace_jump_taken_i_reg,
      O => S
    );
nonvalid_IFetch_n_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF11FFFFF0F0F0F0"
    )
        port map (
      I0 => nonvalid_IFetch_n_reg_0,
      I1 => nonvalid_IFetch_n_i_2_n_0,
      I2 => complete_iready,
      I3 => nonvalid_IFetch_n_reg_1,
      I4 => nonvalid_IFetch_n_reg_2,
      I5 => nonvalid_IFetch_n_reg_3,
      O => inHibit_EX_reg
    );
nonvalid_IFetch_n_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => nonvalid_IFetch_n_reg,
      O => nonvalid_IFetch_n_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE is
  port (
    w_fifo_exist : out STD_LOGIC;
    p_29_in : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\ : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.pending_write_reg[1]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    w_fifo_exist_i : in STD_LOGIC;
    Clk : in STD_LOGIC;
    pop_write_aw : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    write_req_granted : in STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WREADY : in STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\ : in STD_LOGIC;
    aw_read_fifo_not_empty : in STD_LOGIC;
    write_req : in STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]_0\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    write_cacheline_offset : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\ : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE is
  signal \^using_axi.use_axi_write.aw_w_fifo_exist_reg\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_3_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_5_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_6_n_0\ : STD_LOGIC;
  signal \^p_29_in\ : STD_LOGIC;
  signal \^w_fifo_exist\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of M_AXI_DC_WLAST_INST_0 : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \M_AXI_DC_WSTRB[0]_INST_0\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \M_AXI_DC_WSTRB[1]_INST_0\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \M_AXI_DC_WSTRB[2]_INST_0\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \M_AXI_DC_WSTRB[3]_INST_0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of M_AXI_DC_WVALID_INST_0 : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_3\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[0]_i_1\ : label is "soft_lutpair56";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\ <= \^using_axi.use_axi_write.aw_w_fifo_exist_reg\;
  p_29_in <= \^p_29_in\;
  w_fifo_exist <= \^w_fifo_exist\;
M_AXI_DC_WLAST_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \^w_fifo_exist\,
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      I2 => write_cacheline_offset(1),
      I3 => write_cacheline_offset(0),
      O => \Using_FPGA.Native_0\(0)
    );
\M_AXI_DC_WSTRB[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \out\(0),
      I1 => \^w_fifo_exist\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      O => \Using_FPGA.Native_0\(1)
    );
\M_AXI_DC_WSTRB[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \out\(1),
      I1 => \^w_fifo_exist\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      O => \Using_FPGA.Native_0\(2)
    );
\M_AXI_DC_WSTRB[2]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \out\(2),
      I1 => \^w_fifo_exist\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      O => \Using_FPGA.Native_0\(3)
    );
\M_AXI_DC_WSTRB[3]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \out\(3),
      I1 => \^w_fifo_exist\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      O => \Using_FPGA.Native_0\(4)
    );
M_AXI_DC_WVALID_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      I1 => \^w_fifo_exist\,
      O => \^using_axi.use_axi_write.aw_w_fifo_exist_reg\
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => M_AXI_DC_WREADY,
      I1 => \^w_fifo_exist\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      O => \^p_29_in\
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"78888888"
    )
        port map (
      I0 => write_req,
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]_0\,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      I3 => \^w_fifo_exist\,
      I4 => M_AXI_DC_WREADY,
      O => E(0)
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"66A6AAAAAAAAAA9A"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(3),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(2),
      I2 => \^p_29_in\,
      I3 => write_req_granted,
      I4 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1),
      I5 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0),
      O => D(2)
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AA96A6A6A6A6A6A"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(2),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0),
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1),
      I3 => write_req_granted,
      I4 => M_AXI_DC_WREADY,
      I5 => \^using_axi.use_axi_write.aw_w_fifo_exist_reg\,
      O => D(1)
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000BFFFBFFF4000"
    )
        port map (
      I0 => write_req_granted,
      I1 => M_AXI_DC_WREADY,
      I2 => \^w_fifo_exist\,
      I3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\,
      I4 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0),
      I5 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1),
      O => D(0)
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0444444444444444"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_2_n_0\,
      I1 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_3_n_0\,
      I2 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\(0),
      I3 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\(3),
      I4 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\(1),
      I5 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\(2),
      O => \Using_AXI.Use_AXI_Write.pending_write_reg[1]\
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF40000000"
    )
        port map (
      I0 => Q(1),
      I1 => aw_read_fifo_not_empty,
      I2 => Q(0),
      I3 => Q(2),
      I4 => Q(3),
      I5 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_5_n_0\,
      O => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_2_n_0\
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA8AAAAAAA"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_6_n_0\,
      I1 => pop_write_aw,
      I2 => Q(3),
      I3 => Q(2),
      I4 => Q(1),
      I5 => Q(0),
      O => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_3_n_0\
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000000040004000"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(3),
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(2),
      I3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1),
      I4 => write_req_granted,
      I5 => \^p_29_in\,
      O => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_5_n_0\
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^p_29_in\,
      I1 => write_req_granted,
      I2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1),
      I3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0),
      I4 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(3),
      I5 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(2),
      O => \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_6_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => w_fifo_exist_i,
      Q => \^w_fifo_exist\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_626 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_626 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_626;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_626 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_632 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_632 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_632;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_632 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_67 is
  port (
    carry_In : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    correct_Carry_II : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_67 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_67;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_67 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => correct_Carry_II,
      Q => carry_In,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_69 is
  port (
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_69 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_69;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_69 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => alu_Op(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_70 is
  port (
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_70 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_70;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_70 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => alu_Op(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_72 is
  port (
    force1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    force1_i25_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_72 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_72;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_72 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => force1_i25_out,
      Q => force1,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_73 is
  port (
    force2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_73 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_73;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_73 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => force2,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_74 is
  port (
    force_Val1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    force_Val1_i23_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_74 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_74;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_74 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => force_Val1_i23_out,
      Q => force_Val1,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_797 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_i_4__3\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_797 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_797;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_797 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_4__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555500005504"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => op1(2),
      I4 => op1(3),
      I5 => op1(4),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_7__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Is_Equal3_out,
      I2 => \Using_FPGA.Native_i_4__3\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_798 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_798 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_798;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_798 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_801 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__76\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_1\ : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_801 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_801;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_801 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6__3_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_5__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFABAAABAAABAA"
    )
        port map (
      I0 => \Using_FPGA.Native_i_6__3_n_0\,
      I1 => op1(1),
      I2 => op1(0),
      I3 => \Using_FPGA.Native_i_1__76\,
      I4 => \Using_FPGA.Native_i_1__76_0\,
      I5 => \Using_FPGA.Native_i_1__76_1\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_6__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Is_Equal3_out,
      I2 => \Using_FPGA.Native_i_5__1_0\,
      I3 => \Using_FPGA.Native_i_5__1_1\,
      I4 => \Using_FPGA.Native_i_5__1_2\,
      I5 => \Using_FPGA.Native_i_5__1_3\,
      O => \Using_FPGA.Native_i_6__3_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_802 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_802 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_802;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_802 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_805 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_805 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_805;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_805 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_806 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_806 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_806;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_806 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_809 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_809 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_809;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_809 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_81 is
  port (
    reg_Test_Equal_N : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Reg_Test_Equal_N_i4_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_81 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_81;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_81 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => Reg_Test_Equal_N_i4_out,
      Q => reg_Test_Equal_N,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_810 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_810 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_810;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_810 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_813 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_813 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_813;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_813 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_814 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_814 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_814;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_814 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_817 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S_0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_817 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_817;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_817 is
  signal \^op1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  op1(0) <= \^op1\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^op1\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__96\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^op1\(0),
      I1 => EX_Op2(0),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_1\(1),
      I4 => \Using_FPGA.Native_1\(0),
      I5 => \Using_FPGA.Native_0\(0),
      O => S_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_818 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_818 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_818;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_818 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_821 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_821 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_821;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_821 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_822 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_822 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_822;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_822 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_825 is
  port (
    Op1_Logic : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_825 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_825;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_825 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => Op1_Logic,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_826 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_826 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_826;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_826 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_829 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_829 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_829;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_829 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_8__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF00F2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_3__8\,
      I2 => \Using_FPGA.Native_i_3__8_0\,
      I3 => \Using_FPGA.Native_i_3__8_1\,
      I4 => \Using_FPGA.Native_i_3__8_2\,
      I5 => \Using_FPGA.Native_i_3__8_3\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_830 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_830 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_830;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_830 is
  signal \^ex_op1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  EX_Op1(0) <= \^ex_op1\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => \^ex_op1\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ex_op1\(0),
      I1 => \Using_FPGA.Native_1\(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_833 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_833 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_833;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_833 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_834 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_834 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_834;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_834 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_837 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_837 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_837;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_837 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_838 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_838 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_838;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_838 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_841 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_841 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_841;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_841 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_6__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAA02"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__7\,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_i_2__7_0\,
      I3 => \Using_FPGA.Native_i_2__7_1\,
      I4 => \Using_FPGA.Native_i_2__7_2\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_842 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_842 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_842;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_842 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_845 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S_8 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_845 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_845;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_845 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__104\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\(1),
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_3\(0),
      O => S_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_846 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_846 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_846;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_846 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_849 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_1\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_849 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_849;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_849 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_3__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000010000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_1__76\,
      I2 => \Using_FPGA.Native_i_1__76_0\,
      I3 => \Using_FPGA.Native_i_1__76_1\,
      I4 => Is_Equal1_out,
      I5 => \Using_FPGA.Native_i_1__76_2\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_850 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_850 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_850;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_850 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_853 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_853 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_853;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_853 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_854 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_854 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_854;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_854 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_857 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_9\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_857 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_857;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_857 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__105\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => EX_Op2(0),
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.The_Compare[0].sel_reg_9\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_858 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_858 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_858;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_858 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_861 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_861 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_861;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_861 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_862 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_862 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_862;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_862 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_865 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_2\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_3\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_3\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_865 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_865;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_865 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__8_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_7__4_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__74\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF44470000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__8_n_0\,
      I1 => Is_Equal3_out,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_3__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEEEEFFF0EEEE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_1__74_0\,
      I2 => \Using_FPGA.Native_i_1__74_1\,
      I3 => \Using_FPGA.Native_i_1__74_2\,
      I4 => Is_Equal1_out,
      I5 => \Using_FPGA.Native_i_1__74_3\,
      O => \Using_FPGA.Native_i_3__8_n_0\
    );
\Using_FPGA.Native_i_7__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF00F2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_3__8_0\,
      I2 => \Using_FPGA.Native_i_3__8_1\,
      I3 => \Using_FPGA.Native_i_3__8_2\,
      I4 => \Using_FPGA.Native_i_3__8_3\,
      I5 => op1(0),
      O => \Using_FPGA.Native_i_7__4_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_866 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_866 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_866;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_866 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_869 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_869 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_869;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_869 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_87 is
  port (
    use_Reg_Neg_DI : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    use_Reg_Neg_DI_i22_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_87 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_87;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_87 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => use_Reg_Neg_DI_i22_out,
      Q => use_Reg_Neg_DI,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_870 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_870 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_870;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_870 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_873 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_873 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_873;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_873 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_874 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_874 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_874;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_874 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_877 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_877 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_877;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_877 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_10__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFFAAFB"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => op1(2),
      I4 => op1(3),
      I5 => op1(4),
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_878 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_878 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_878;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_878 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_88 is
  port (
    use_Reg_Neg_S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    use_Reg_Neg_S_i24_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_88 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_88;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_88 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => use_Reg_Neg_S_i24_out,
      Q => use_Reg_Neg_S,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_881 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_881 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_881;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_881 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__76\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFF010000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => I0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_882 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_882 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_882;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_882 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_885 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_3\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_885 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_885;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_885 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__7_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__75\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__7_n_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => Shift_Logic_Res,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF1110"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_1__75_0\,
      I2 => \Using_FPGA.Native_i_1__75_1\,
      I3 => \Using_FPGA.Native_i_1__75_2\,
      I4 => \Using_FPGA.Native_i_1__75_3\,
      I5 => \Using_FPGA.Native_i_1__75_4\,
      O => \Using_FPGA.Native_i_2__7_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_886 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_886 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_886;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_886 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_889 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_6\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_889 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_889;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_889 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__102\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\(1),
      I4 => \Using_FPGA.Native_3\(0),
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.The_Compare[0].sel_reg_6\
    );
\Using_FPGA.Native_i_2__28\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Is_Equal1_out,
      I2 => \Using_FPGA.Native_2\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_890 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_890 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_890;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_890 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_893 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Sext : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_893 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_893;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_893 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__72\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0B080808"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => sext16,
      I2 => \Using_FPGA.Native_1\,
      I3 => sext8,
      I4 => \Using_FPGA.Native_2\,
      O => Sext
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_894 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_894 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_894;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_894 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_897 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_897 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_897;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_897 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_898 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_898 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_898;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_898 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_901 is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_901 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_901;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_901 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_902 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_902 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_902;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_902 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_905 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_905 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_905;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_905 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_4__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAA0200000000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_1__75\,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_i_1__75_0\,
      I3 => \Using_FPGA.Native_i_1__75_1\,
      I4 => \Using_FPGA.Native_i_1__75_2\,
      I5 => \Using_FPGA.Native_i_1__75_3\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_906 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_906 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_906;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_906 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_909 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_909 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_909;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_909 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_910 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_910 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_910;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_910 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_913 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S_2 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_913 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_913;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_913 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__98\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Op2(0),
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\(1),
      I4 => \Using_FPGA.Native_2\(0),
      I5 => \Using_FPGA.Native_3\,
      O => S_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_914 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_914 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_914;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_914 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_917 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_917 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_917;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_917 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_918 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_918 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_918;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_918 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_921 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \instr_EX_i_reg[22]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_I : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    Is_Equal : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_0\ : in STD_LOGIC;
    \C_reg[31]\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[29]\ : in STD_LOGIC;
    \C_reg[29]_0\ : in STD_LOGIC;
    \C_reg[29]_1\ : in STD_LOGIC;
    \C_reg[31]_0\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[31]_1\ : in STD_LOGIC;
    \C_reg[23]\ : in STD_LOGIC;
    \C_reg[23]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_921 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_921;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_921 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F7F7F700F7F7F7FF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => instr_ex(0),
      I2 => \C_reg[31]\,
      I3 => \C_reg[23]\,
      I4 => \C_reg[23]_0\,
      I5 => A(0),
      O => \Using_FPGA.Native_3\
    );
\C[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"40404040404000FF"
    )
        port map (
      I0 => \C_reg[31]\,
      I1 => instr_ex(0),
      I2 => \^using_fpga.native_0\,
      I3 => \C_reg[29]\,
      I4 => \C_reg[29]_0\,
      I5 => \C_reg[29]_1\,
      O => \instr_EX_i_reg[22]\(1)
    );
\C[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08FF080008080808"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => instr_ex(0),
      I2 => \C_reg[31]\,
      I3 => \C_reg[31]_0\,
      I4 => A(0),
      I5 => \C_reg[31]_1\,
      O => \instr_EX_i_reg[22]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_I,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_5__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAA02"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \Using_FPGA.Native_i_1__75\,
      I2 => \Using_FPGA.Native_i_1__75_0\,
      I3 => \Using_FPGA.Native_i_1__75_1\,
      I4 => \Using_FPGA.Native_i_1__75_2\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_7__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => Is_Equal,
      I1 => \^using_fpga.native_0\,
      I2 => clz_instr,
      I3 => \Using_FPGA.Native_i_5__1\,
      I4 => \Using_FPGA.Native_i_5__1_0\,
      O => \^using_fpga.native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRE_922 is
  port (
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    op1_Reg : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRE_922 : entity is "MB_FDRE";
end design_1_microblaze_1_1_MB_FDRE_922;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRE_922 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun,
      D => op1_Reg,
      Q => EX_Op1(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Reg_Write : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    Sext : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_BitField.mem_Rd_reg[9]\ : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    Not_Barrel_Op : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    saved_reset_mode_sleep : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_1 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_8\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE is
  signal \^use_async_reset.sync_reset_reg\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__149_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__47_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[1]_INST_0_i_1\ : label is "soft_lutpair42";
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__145\ : label is "soft_lutpair42";
begin
  \Use_Async_Reset.sync_reset_reg\ <= \^use_async_reset.sync_reset_reg\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\C[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Not_Barrel_Op,
      O => SR(0)
    );
\LOCKSTEP_Master_Out[1]_INST_0_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_Valid,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_2__47_n_0\,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_i_1__149_n_0\
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_BitField.mem_Rd_reg[9]\,
      O => Reg_Write
    );
\Using_FPGA.Native_i_1__145\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => sext8,
      I2 => \Using_FPGA.Native_7\(0),
      O => Sext
    );
\Using_FPGA.Native_i_1__149\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF82AA"
    )
        port map (
      I0 => \^use_async_reset.sync_reset_reg\,
      I1 => Reset_Mode(1),
      I2 => Reset_Mode(0),
      I3 => sync_reset,
      I4 => \Using_FPGA.Native_8\,
      O => \Using_FPGA.Native_i_1__149_n_0\
    );
\Using_FPGA.Native_i_2__47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEAE"
    )
        port map (
      I0 => S_1,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_6\,
      O => \Using_FPGA.Native_i_2__47_n_0\
    );
\Using_FPGA.Native_i_3__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABABABAAABABABAB"
    )
        port map (
      I0 => sync_reset,
      I1 => saved_reset_mode_sleep,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      I5 => Q(0),
      O => \^use_async_reset.sync_reset_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_25 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    dbg_stop_1 : in STD_LOGIC;
    trig_out_0_synced : in STD_LOGIC;
    trig_out_0_synced_1 : in STD_LOGIC;
    \Area_Debug_Control.dbg_stop_Detected_reg\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_25 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_25;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_25 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__148_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__46_n_0\ : STD_LOGIC;
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Area_Debug_Control.dbg_stop_Detected_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555504045504"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Dbg_Stop,
      I2 => dbg_stop_1,
      I3 => trig_out_0_synced,
      I4 => trig_out_0_synced_1,
      I5 => \Area_Debug_Control.dbg_stop_Detected_reg\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_2__46_n_0\,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_i_1__148_n_0\
    );
\Using_FPGA.Native_i_1__148\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF82AA"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => Reset_Mode(1),
      I2 => Reset_Mode(0),
      I3 => sync_reset,
      I4 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_i_1__148_n_0\
    );
\Using_FPGA.Native_i_2__46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEAE"
    )
        port map (
      I0 => S_1,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_i_2__46_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_26 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S_1 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Area_Debug_Control.force_stop_cmd_hold_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC;
    \Area_Debug_Control.normal_stop_cmd_hold_reg\ : out STD_LOGIC;
    read_register_PC_1_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    Dbg_Clean_Stop_reg : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    saved_reset_mode_dbg_halt : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    saved_reset_mode_sleep : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Area_Debug_Control.force_stop_cmd_1_reg\ : in STD_LOGIC;
    \Area_Debug_Control.force_stop_cmd_1_reg_0\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    saved_reset_mode_sleep_1 : in STD_LOGIC;
    normal_stop_cmd_hold : in STD_LOGIC;
    normal_stop_cmd_i : in STD_LOGIC;
    \data_rd_reg_reg[31]\ : in STD_LOGIC;
    \data_rd_reg_reg[0]\ : in STD_LOGIC;
    \data_rd_reg_reg[0]_0\ : in STD_LOGIC;
    \data_rd_reg_reg[32]\ : in STD_LOGIC;
    \data_rd_reg_reg[32]_0\ : in STD_LOGIC;
    Valid_Instr_i : in STD_LOGIC;
    \data_rd_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 26 downto 0 );
    PC_EX_i : in STD_LOGIC_VECTOR ( 26 downto 0 );
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_26 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_26;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_26 is
  signal \^dbg_clean_stop_reg\ : STD_LOGIC;
  signal \^s_1\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__86_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__48_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \^read_register_pc_1_reg\ : STD_LOGIC;
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Dbg_Clean_Stop_reg <= \^dbg_clean_stop_reg\;
  S_1 <= \^s_1\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  read_register_PC_1_reg <= \^read_register_pc_1_reg\;
\Area_Debug_Control.force_stop_cmd_1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Area_Debug_Control.force_stop_cmd_1_reg\,
      I1 => \Area_Debug_Control.force_stop_cmd_1_reg_0\,
      O => \Area_Debug_Control.force_stop_cmd_hold_reg\
    );
\Area_Debug_Control.mb_halted_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20202F20"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => sync_reset,
      I3 => \^using_fpga.native_0\,
      I4 => saved_reset_mode_sleep_1,
      O => \Use_Async_Reset.sync_reset_reg_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_2__48_n_0\,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_i_1__86_n_0\
    );
\Using_FPGA.Native_i_1__68\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_1__86\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"82AA"
    )
        port map (
      I0 => \Using_FPGA.Native_32\,
      I1 => Reset_Mode(1),
      I2 => Reset_Mode(0),
      I3 => sync_reset,
      O => \Using_FPGA.Native_i_1__86_n_0\
    );
\Using_FPGA.Native_i_2__48\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFEFEAE"
    )
        port map (
      I0 => \^s_1\,
      I1 => \^using_fpga.native_0\,
      I2 => \^dbg_clean_stop_reg\,
      I3 => \Using_FPGA.Native_33\,
      I4 => \Using_FPGA.Native_34\,
      O => \Using_FPGA.Native_i_2__48_n_0\
    );
\Using_FPGA.Native_i_4__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF444F444F444"
    )
        port map (
      I0 => \Using_FPGA.Native_28\,
      I1 => \Using_FPGA.Native_29\,
      I2 => \Using_FPGA.Native_30\,
      I3 => saved_reset_mode_dbg_halt,
      I4 => \Using_FPGA.Native_31\,
      I5 => saved_reset_mode_sleep,
      O => \^s_1\
    );
\Using_FPGA.Native_i_5__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5554555455545555"
    )
        port map (
      I0 => \Using_FPGA.Native_28\,
      I1 => dbg_clean_stop,
      I2 => \Area_Debug_Control.force_stop_cmd_1_reg_0\,
      I3 => \Area_Debug_Control.force_stop_cmd_1_reg\,
      I4 => normal_stop_cmd_hold,
      I5 => normal_stop_cmd_i,
      O => \^dbg_clean_stop_reg\
    );
\Using_FPGA.Native_i_7__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => normal_stop_cmd_hold,
      I1 => normal_stop_cmd_i,
      O => \Area_Debug_Control.normal_stop_cmd_hold_reg\
    );
\data_rd_reg[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => \data_rd_reg_reg[31]\,
      I1 => \data_rd_reg_reg[0]\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => \^using_fpga.native_0\,
      O => \^read_register_pc_1_reg\
    );
\data_rd_reg[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(26),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(26),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_27\
    );
\data_rd_reg[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(16),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(16),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_17\
    );
\data_rd_reg[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(15),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(15),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_16\
    );
\data_rd_reg[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(14),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(14),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_15\
    );
\data_rd_reg[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(13),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(13),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_14\
    );
\data_rd_reg[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(12),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(12),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_13\
    );
\data_rd_reg[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(11),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(11),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_12\
    );
\data_rd_reg[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(10),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(10),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_11\
    );
\data_rd_reg[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(9),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(9),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_10\
    );
\data_rd_reg[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(8),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(8),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_9\
    );
\data_rd_reg[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(7),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(7),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_8\
    );
\data_rd_reg[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(25),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(25),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_26\
    );
\data_rd_reg[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(6),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(6),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_7\
    );
\data_rd_reg[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(5),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(5),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_6\
    );
\data_rd_reg[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(4),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(4),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_5\
    );
\data_rd_reg[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(3),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(3),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_4\
    );
\data_rd_reg[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(2),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(2),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_3\
    );
\data_rd_reg[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(1),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_2\
    );
\data_rd_reg[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(24),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(24),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_25\
    );
\data_rd_reg[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(0),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_1\
    );
\data_rd_reg[32]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABBBA888"
    )
        port map (
      I0 => \data_rd_reg[32]_i_2_n_0\,
      I1 => \^read_register_pc_1_reg\,
      I2 => \data_rd_reg_reg[32]\,
      I3 => \^using_fpga.native_0\,
      I4 => D(0),
      O => \Serial_Dbg_Intf.if_debug_ready_i_reg\
    );
\data_rd_reg[32]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBFBFBFBFBFBF88"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_0\,
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[32]\,
      I3 => \data_rd_reg_reg[32]_0\,
      I4 => \data_rd_reg_reg[0]\,
      I5 => Valid_Instr_i,
      O => \data_rd_reg[32]_i_2_n_0\
    );
\data_rd_reg[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(23),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(23),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_24\
    );
\data_rd_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(22),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(22),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_23\
    );
\data_rd_reg[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(21),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(21),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_22\
    );
\data_rd_reg[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(20),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(20),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_21\
    );
\data_rd_reg[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(19),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(19),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_20\
    );
\data_rd_reg[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(18),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(18),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_19\
    );
\data_rd_reg[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \data_rd_reg_reg[0]_1\(17),
      I1 => \^using_fpga.native_0\,
      I2 => \data_rd_reg_reg[0]_0\,
      I3 => PC_EX_i(17),
      I4 => \data_rd_reg_reg[0]\,
      O => \Using_FPGA.Native_18\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_75 is
  port (
    force_Val2_N : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_75 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_75;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_75 is
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_R_INVERTED : string;
  attribute IS_R_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => force_Val2_N,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_928 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_928 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_928;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_928 is
  signal \^msr_i\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  msr_I(0) <= \^msr_i\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^msr_i\(0),
      R => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__31\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr_i\(0),
      I1 => \Using_FPGA.Native_2\,
      I2 => Address(0),
      O => I3_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_929 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    I3_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_929 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_929;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_929 is
  signal \^msr_i\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__24\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__30\ : label is "soft_lutpair0";
begin
  msr_I(0) <= \^msr_i\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^msr_i\(0),
      R => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr_i\(0),
      I1 => \Using_FPGA.Native_2\,
      I2 => Address(1),
      O => I3
    );
\Using_FPGA.Native_i_1__30\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr_i\(0),
      I1 => \Using_FPGA.Native_2\,
      I2 => Address(0),
      O => I3_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_930 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_930 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_930;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_930 is
  signal \^msr_i\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  msr_I(0) <= \^msr_i\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^msr_i\(0),
      R => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^msr_i\(0),
      I1 => \Using_FPGA.Native_2\,
      I2 => Address(0),
      O => I3_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_931 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_931 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_931;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_931 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_2\,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => Address(0),
      O => I3_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDRSE_932 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDRSE_932 : entity is "MB_FDRSE";
end design_1_microblaze_1_1_MB_FDRSE_932;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDRSE_932 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute IS_CE_INVERTED : string;
  attribute IS_CE_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute IS_S_INVERTED : string;
  attribute IS_S_INVERTED of \Using_FPGA.Native\ : label is "1'b0";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^using_fpga.native_0\,
      R => MSR_Rst
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => Address(0),
      O => I3_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDS is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S_33 : out STD_LOGIC;
    R : in STD_LOGIC;
    buffer_Addr_S_I_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDS : entity is "MB_FDS";
end design_1_microblaze_1_1_MB_FDS;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDS is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => buffer_Addr_S_I_2,
      Q => \^using_fpga.native_0\,
      S => R
    );
\Using_FPGA.Native_I2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => S_33
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE is
  port (
    Reg_Test_Equal : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Reg_Test_Equal_i : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => Reg_Test_Equal_i,
      Q => Reg_Test_Equal,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_585 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_585 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_585;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_585 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_591 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_591 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_591;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_591 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_597 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_597 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_597;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_597 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_603 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_603 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_603;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_603 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_609 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_609 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_609;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_609 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_615 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_615 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_615;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_615 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_621 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_621 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_621;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_621 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_639 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_639 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_639;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_639 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_645 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_645 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_645;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_645 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_651 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_651 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_651;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_651 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_657 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_657 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_657;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_657 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_663 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_663 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_663;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_663 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_669 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_669 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_669;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_669 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_675 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_675 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_675;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_675 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_681 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_681 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_681;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_681 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_687 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_687 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_687;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_687 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_693 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_693 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_693;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_693 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_699 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_699 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_699;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_699 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_705 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_705 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_705;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_705 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_711 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_711 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_711;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_711 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_717 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_717 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_717;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_717 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_723 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_723 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_723;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_723 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_729 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_729 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_729;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_729 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => \Using_FPGA.Native_0\(0),
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_735 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_735 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_735;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_735 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_741 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_741 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_741;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_741 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_747 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_747 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_747;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_747 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_753 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_753 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_753;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_753 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_759 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_759 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_759;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_759 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_765 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_765 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_765;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_765 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDSE_771 is
  port (
    pc_I : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Instr_Addr : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDSE_771 : entity is "MB_FDSE";
end design_1_microblaze_1_1_MB_FDSE_771;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDSE_771 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => PC_Write,
      D => Instr_Addr,
      Q => pc_I,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_FDSE__parameterized1\ is
  port (
    w_read_fifo_addr_3 : out STD_LOGIC;
    I1 : out STD_LOGIC;
    I2 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    w_read_fifo_addr_i_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    w_read_fifo_addr_1 : in STD_LOGIC;
    w_read_fifo_addr_0 : in STD_LOGIC;
    w_read_fifo_addr_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_FDSE__parameterized1\ : entity is "MB_FDSE";
end \design_1_microblaze_1_1_MB_FDSE__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_FDSE__parameterized1\ is
  signal \^w_read_fifo_addr_3\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__92\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__40\ : label is "soft_lutpair52";
begin
  w_read_fifo_addr_3 <= \^w_read_fifo_addr_3\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => w_read_fifo_addr_i_3,
      Q => \^w_read_fifo_addr_3\,
      S => sync_reset
    );
\Using_FPGA.Native_i_1__92\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \^w_read_fifo_addr_3\,
      I1 => w_read_fifo_addr_1,
      I2 => w_read_fifo_addr_0,
      I3 => w_read_fifo_addr_2,
      O => I1
    );
\Using_FPGA.Native_i_2__40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA9"
    )
        port map (
      I0 => \^w_read_fifo_addr_3\,
      I1 => w_read_fifo_addr_2,
      I2 => w_read_fifo_addr_1,
      I3 => w_read_fifo_addr_0,
      O => I2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_FDSE__parameterized1_15\ is
  port (
    w_read_fifo_addr_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    w_read_fifo_addr_i_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    w_read_fifo_addr_0 : in STD_LOGIC;
    w_read_fifo_addr_1 : in STD_LOGIC;
    w_read_fifo_addr_3 : in STD_LOGIC;
    p_29_in : in STD_LOGIC;
    Write_Data_Valid : in STD_LOGIC;
    write_data_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_FDSE__parameterized1_15\ : entity is "MB_FDSE";
end \design_1_microblaze_1_1_MB_FDSE__parameterized1_15\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_FDSE__parameterized1_15\ is
  signal \Using_AXI.Use_AXI_Write.write_data_stall_i_i_2_n_0\ : STD_LOGIC;
  signal \^w_read_fifo_addr_2\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.write_data_stall_i_i_2\ : label is "soft_lutpair54";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__135\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__91\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__39\ : label is "soft_lutpair54";
begin
  w_read_fifo_addr_2 <= \^w_read_fifo_addr_2\;
\Using_AXI.Use_AXI_Write.write_data_stall_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF0510FF00051000"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.write_data_stall_i_i_2_n_0\,
      I1 => w_read_fifo_addr_0,
      I2 => w_read_fifo_addr_1,
      I3 => p_29_in,
      I4 => Write_Data_Valid,
      I5 => write_data_stall,
      O => \Using_FPGA.Native_3\
    );
\Using_AXI.Use_AXI_Write.write_data_stall_i_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^w_read_fifo_addr_2\,
      I1 => w_read_fifo_addr_3,
      O => \Using_AXI.Use_AXI_Write.write_data_stall_i_i_2_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => w_read_fifo_addr_i_2,
      Q => \^w_read_fifo_addr_2\,
      S => sync_reset
    );
\Using_FPGA.Native_i_1__135\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^w_read_fifo_addr_2\,
      I1 => w_read_fifo_addr_1,
      I2 => w_read_fifo_addr_0,
      I3 => w_read_fifo_addr_3,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__91\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^w_read_fifo_addr_2\,
      I1 => w_read_fifo_addr_0,
      I2 => w_read_fifo_addr_1,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__39\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A9"
    )
        port map (
      I0 => \^w_read_fifo_addr_2\,
      I1 => w_read_fifo_addr_0,
      I2 => w_read_fifo_addr_1,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_FDSE__parameterized1_17\ is
  port (
    w_read_fifo_addr_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    w_read_fifo_addr_i_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    w_read_fifo_addr_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_FDSE__parameterized1_17\ : entity is "MB_FDSE";
end \design_1_microblaze_1_1_MB_FDSE__parameterized1_17\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_FDSE__parameterized1_17\ is
  signal \^w_read_fifo_addr_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  w_read_fifo_addr_1 <= \^w_read_fifo_addr_1\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => w_read_fifo_addr_i_1,
      Q => \^w_read_fifo_addr_1\,
      S => sync_reset
    );
\Using_FPGA.Native_i_2__50\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^w_read_fifo_addr_1\,
      I1 => w_read_fifo_addr_0,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_FDSE__parameterized1_19\ is
  port (
    w_read_fifo_addr_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    w_read_fifo_addr_i_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    w_read_fifo_addr_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_FDSE__parameterized1_19\ : entity is "MB_FDSE";
end \design_1_microblaze_1_1_MB_FDSE__parameterized1_19\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_FDSE__parameterized1_19\ is
  signal \^w_read_fifo_addr_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__93\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__94\ : label is "soft_lutpair55";
begin
  w_read_fifo_addr_0 <= \^w_read_fifo_addr_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_S_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => w_read_fifo_addr_i_0,
      Q => \^w_read_fifo_addr_0\,
      S => sync_reset
    );
\Using_FPGA.Native_i_1__93\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^w_read_fifo_addr_0\,
      I1 => w_read_fifo_addr_1,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__94\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^w_read_fifo_addr_0\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDS_96 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    R : in STD_LOGIC;
    O : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDS_96 : entity is "MB_FDS";
end design_1_microblaze_1_1_MB_FDS_96;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDS_96 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => O,
      Q => \^using_fpga.native_0\,
      S => R
    );
\Using_FPGA.Native_I1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FDS_98 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    R : in STD_LOGIC;
    O : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FDS_98 : entity is "MB_FDS";
end design_1_microblaze_1_1_MB_FDS_98;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FDS_98 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => O,
      Q => \Using_FPGA.Native_0\,
      S => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_367 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_367 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_367;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_367 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_370 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_370 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_370;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_370 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_373 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_373 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_373;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_373 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_376 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_376 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_376;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_376 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_379 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_379 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_379;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_379 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_382 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_382 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_382;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_382 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_385 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_385 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_385;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_385 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_388 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_388 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_388;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_388 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \^using_fpga.native_0\(0),
      R => '0'
    );
\data_rd_reg[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \data_rd_reg_reg[30]\,
      I2 => register_write,
      I3 => msr_I(0),
      I4 => \data_rd_reg_reg[30]_0\,
      I5 => PC_EX_i(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_391 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_391 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_391;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_391 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_394 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \data_rd_reg_reg[29]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[29]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_394 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_394;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_394 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \^using_fpga.native_0\(0),
      R => '0'
    );
\data_rd_reg[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \data_rd_reg_reg[29]\,
      I2 => register_write,
      I3 => msr_I(0),
      I4 => \data_rd_reg_reg[29]_0\,
      I5 => PC_EX_i(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_397 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \data_rd_reg_reg[28]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[28]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_397 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_397;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_397 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \^using_fpga.native_0\(0),
      R => '0'
    );
\data_rd_reg[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \data_rd_reg_reg[28]\,
      I2 => register_write,
      I3 => msr_I(0),
      I4 => \data_rd_reg_reg[28]_0\,
      I5 => PC_EX_i(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_400 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_400 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_400;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_400 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_403 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \data_rd_reg_reg[26]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    ICache_Enabled : in STD_LOGIC;
    \data_rd_reg_reg[26]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_403 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_403;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_403 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \^using_fpga.native_0\(0),
      R => '0'
    );
\data_rd_reg[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \data_rd_reg_reg[26]\,
      I2 => register_write,
      I3 => ICache_Enabled,
      I4 => \data_rd_reg_reg[26]_0\,
      I5 => PC_EX_i(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_406 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_406 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_406;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_406 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_409 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \data_rd_reg_reg[24]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    \data_rd_reg_reg[24]_0\ : in STD_LOGIC;
    \data_rd_reg_reg[24]_1\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_409 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_409;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_409 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \^using_fpga.native_0\(0),
      R => '0'
    );
\data_rd_reg[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \data_rd_reg_reg[24]\,
      I2 => register_write,
      I3 => \data_rd_reg_reg[24]_0\,
      I4 => \data_rd_reg_reg[24]_1\,
      I5 => PC_EX_i(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_412 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_412 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_412;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_412 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_415 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_415 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_415;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_415 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_418 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_418 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_418;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_418 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_421 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_421 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_421;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_421 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_424 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_424 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_424;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_424 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_427 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_427 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_427;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_427 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_430 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_430 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_430;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_430 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_433 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_433 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_433;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_433 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_436 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_436 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_436;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_436 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_439 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_439 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_439;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_439 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_442 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_442 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_442;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_442 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_445 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_445 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_445;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_445 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_448 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_448 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_448;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_448 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_451 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_451 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_451;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_451 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_454 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_454 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_454;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_454 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_FD_457 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_FD_457 : entity is "MB_FD";
end design_1_microblaze_1_1_MB_FD_457;

architecture STRUCTURE of design_1_microblaze_1_1_MB_FD_457 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FD";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => EX_Result(0),
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT2 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : in STD_LOGIC;
    res_00_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT2 : entity is "MB_LUT2";
end design_1_microblaze_1_1_MB_LUT2;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT2 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => I0,
      I1 => res_00_2,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT2_220 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    res_00_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT2_220 : entity is "MB_LUT2";
end design_1_microblaze_1_1_MB_LUT2_220;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT2_220 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => res_00_1,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT2__parameterized2\ is
  port (
    byte_i_reg : out STD_LOGIC;
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT2__parameterized2\ : entity is "MB_LUT2";
end \design_1_microblaze_1_1_MB_LUT2__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT2__parameterized2\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => byte_selects_0,
      I1 => isbyte,
      O => byte_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT3 is
  port (
    opsel1_SPR_Select_2_2 : out STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT3 : entity is "MB_LUT3";
end design_1_microblaze_1_1_MB_LUT3;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT3 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => instr_OF(1),
      I1 => instr_OF(0),
      I2 => D(0),
      O => opsel1_SPR_Select_2_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized1\ is
  port (
    opsel1_SPR : out STD_LOGIC;
    opsel1_SPR_Select_1 : in STD_LOGIC;
    opsel1_SPR_Select_2_1 : in STD_LOGIC;
    opsel1_SPR_Select_2_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized1\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => opsel1_SPR_Select_1,
      I1 => opsel1_SPR_Select_2_1,
      I2 => opsel1_SPR_Select_2_2,
      O => opsel1_SPR
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized3\ is
  port (
    res_forward1_3 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized3\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"90"
    )
        port map (
      I0 => reg1_Addr(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => res_forward1_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized3_85\ is
  port (
    res_forward2_3 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized3_85\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized3_85\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized3_85\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"90"
    )
        port map (
      I0 => imm_Value(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => res_forward2_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized5\ is
  port (
    force_DI1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    use_Reg_Neg_DI : in STD_LOGIC;
    force_Val1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized5\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized5\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => use_Reg_Neg_DI,
      I2 => force_Val1,
      O => force_DI1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized5_90\ is
  port (
    force_jump1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    use_Reg_Neg_S : in STD_LOGIC;
    force1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized5_90\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized5_90\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized5_90\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => use_Reg_Neg_S,
      I2 => force1,
      O => force_jump1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized7\ is
  port (
    control_carry : out STD_LOGIC;
    carry_In : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized7\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized7\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized7\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"00"
    )
        port map (
      I0 => carry_In,
      I1 => carry_In,
      I2 => '1',
      O => control_carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT3__parameterized9\ is
  port (
    O : out STD_LOGIC;
    byte_selects_1 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT3__parameterized9\ : entity is "MB_LUT3";
end \design_1_microblaze_1_1_MB_LUT3__parameterized9\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT3__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => byte_selects_1,
      I1 => isbyte,
      I2 => isdoublet,
      O => O
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT4 is
  port (
    write_Reg_I_S : out STD_LOGIC;
    complete_dready : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    writing : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT4 : entity is "MB_LUT4";
end design_1_microblaze_1_1_MB_LUT4;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT4 is
  signal I172_in : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F800"
    )
        port map (
      I0 => complete_dready,
      I1 => I172_in,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => write_Reg_I_S
    );
\Using_FPGA.Native_i_1__67\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => writing,
      O => I172_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized1\ is
  port (
    opsel1_SPR_Select_1 : out STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized1\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => instr_OF(3),
      I1 => instr_OF(2),
      I2 => instr_OF(1),
      I3 => instr_OF(0),
      O => opsel1_SPR_Select_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized11\ is
  port (
    force_DI2 : out STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized11\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized11\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized11\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AABA"
    )
        port map (
      I0 => '0',
      I1 => force_Val2_N,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => force_DI2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized13\ is
  port (
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ : in STD_LOGIC;
    alu_AddSub_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized13\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized13\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized13\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FA0A"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\,
      I3 => alu_AddSub_1,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_242\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_242\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_242\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_242\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_245\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_245\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_245\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_245\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_248\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_248\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_248\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_248\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_251\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_251\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_251\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_251\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_254\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_254\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_254\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_254\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_257\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_257\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_257\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_257\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_260\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_260\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_260\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_260\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_263\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_263\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_263\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_263\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_266\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_266\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_266\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_266\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_269\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_269\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_269\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_269\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_272\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_272\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_272\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_272\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_275\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_275\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_275\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_275\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_278\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_278\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_278\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_278\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_281\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Op1_Logic : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_281\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_281\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_281\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => Op1_Logic,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_284\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_284\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_284\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_284\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_287\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_287\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_287\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_287\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_290\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_290\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_290\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_290\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_293\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_293\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_293\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_293\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_296\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_296\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_296\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_296\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_299\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_299\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_299\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_299\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_302\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_302\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_302\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_302\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_305\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_305\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_305\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_305\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_308\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_308\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_308\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_308\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_311\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_311\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_311\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_311\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_314\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_314\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_314\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_314\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_317\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_317\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_317\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_317\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_320\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_320\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_320\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_320\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_323\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_323\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_323\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_323\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_326\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_326\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_326\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_326\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_329\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_329\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_329\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_329\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => op1(0),
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized15_332\ is
  port (
    logic_Res_i : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Shifted : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized15_332\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized15_332\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized15_332\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"468E"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => Shifted,
      I2 => instr_ex(0),
      I3 => instr_ex(1),
      O => logic_Res_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_243\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_243\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_243\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_243\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_246\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_246\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_246\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_246\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_249\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_249\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_249\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_249\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_252\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_252\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_252\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_252\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_255\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_255\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_255\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_255\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_258\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_258\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_258\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_258\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_261\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_261\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_261\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_261\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_264\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_264\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_264\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_264\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_267\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_267\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_267\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_267\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_270\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_270\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_270\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_270\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Op1_Shift,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_273\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_273\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_273\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_273\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_276\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_276\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_276\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_276\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_279\ is
  port (
    shift_Res : out STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_279\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_279\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_279\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => Op1_Logic,
      I1 => \Using_FPGA.Native_0\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_282\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_282\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_282\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_282\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Op1_Logic,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_285\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_285\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_285\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_285\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_288\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_288\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_288\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_288\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_291\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_291\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_291\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_291\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_294\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_294\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_294\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_294\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_297\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_297\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_297\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_297\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_300\ is
  port (
    shift_Res : out STD_LOGIC;
    Shifted : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_300\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_300\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_300\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => Shifted,
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_303\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_303\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_303\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_303\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_306\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_306\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_306\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_306\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_309\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_309\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_309\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_309\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => op1(0),
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_312\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_312\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_312\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_312\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => Sext,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_315\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_315\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_315\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_315\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_318\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_318\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_318\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_318\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_321\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_321\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_321\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_321\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_324\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_324\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_324\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_324\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_327\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_327\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_327\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_327\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_330\ is
  port (
    shift_Res : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_330\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_330\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_330\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => op1(1),
      I1 => op1(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized17_333\ is
  port (
    shift_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized17_333\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized17_333\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized17_333\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => Shift_Oper,
      O => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized19\ is
  port (
    res_00_2 : out STD_LOGIC;
    byte_0x_0 : in STD_LOGIC;
    byte_0x_1 : in STD_LOGIC;
    byte_0x_2 : in STD_LOGIC;
    byte_0x_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized19\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized19\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized19\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => byte_0x_0,
      I1 => byte_0x_1,
      I2 => byte_0x_2,
      I3 => byte_0x_3,
      O => res_00_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized21\ is
  port (
    res_00_1 : out STD_LOGIC;
    byte_0x_0 : in STD_LOGIC;
    byte_0x_1 : in STD_LOGIC;
    byte_0x_2 : in STD_LOGIC;
    byte_0x_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized21\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized21\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized21\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FC"
    )
        port map (
      I0 => byte_0x_0,
      I1 => byte_0x_1,
      I2 => byte_0x_2,
      I3 => byte_0x_3,
      O => res_00_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized23\ is
  port (
    res_00_0 : out STD_LOGIC;
    byte_0x_0 : in STD_LOGIC;
    byte_0x_1 : in STD_LOGIC;
    byte_0x_2 : in STD_LOGIC;
    byte_0x_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized23\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized23\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized23\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF0C"
    )
        port map (
      I0 => byte_0x_0,
      I1 => byte_0x_1,
      I2 => byte_0x_2,
      I3 => byte_0x_3,
      O => res_00_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized25\ is
  port (
    res_11 : out STD_LOGIC;
    byte_0 : in STD_LOGIC;
    byte_1 : in STD_LOGIC;
    byte_2 : in STD_LOGIC;
    byte_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized25\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized25\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized25\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => byte_0,
      I1 => byte_1,
      I2 => byte_2,
      I3 => byte_3,
      O => res_11
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized27\ is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    res_00_0 : in STD_LOGIC;
    res_1x : in STD_LOGIC;
    I3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized27\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized27\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized27\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0EE"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => res_00_0,
      I2 => res_1x,
      I3 => I3,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_368\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_368\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_368\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_368\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_371\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_371\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_371\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_371\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_374\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_374\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_374\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_374\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_377\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_377\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_377\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_377\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_380\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_380\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_380\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_380\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_383\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_383\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_383\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_383\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_386\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Other_Result : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_386\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_386\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_386\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Other_Result,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_389\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_389\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_389\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_389\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_392\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_392\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_392\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_392\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_395\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_395\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_395\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_395\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_398\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_398\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_398\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_398\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_401\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_401\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_401\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_401\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_404\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_404\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_404\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_404\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_407\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_407\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_407\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_407\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_410\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_410\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_410\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_410\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_413\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_413\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_413\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_413\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_416\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_416\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_416\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_416\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_419\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_419\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_419\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_419\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_422\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_422\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_422\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_422\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_425\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_425\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_425\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_425\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_428\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_428\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_428\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_428\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_431\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_431\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_431\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_431\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_434\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_434\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_434\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_434\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_437\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_437\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_437\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_437\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_440\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_440\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_440\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_440\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_443\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_443\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_443\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_443\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_446\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_446\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_446\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_446\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_449\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_449\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_449\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_449\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_452\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_452\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_452\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_452\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_455\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_455\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_455\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_455\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized29_458\ is
  port (
    mul_ALU_Res : out STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized29_458\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized29_458\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized29_458\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => Barrel_Result(0),
      I1 => mul_Result(0),
      I2 => instr_ex(0),
      I3 => \in\(0),
      O => mul_ALU_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized3\ is
  port (
    opsel1_SPR_Select_2_1 : out STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized3\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => instr_OF(3),
      I1 => instr_OF(2),
      I2 => instr_OF(1),
      I3 => instr_OF(0),
      O => opsel1_SPR_Select_2_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_590\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_590\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_590\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_590\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_596\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_596\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_596\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_596\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_602\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_602\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_602\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_602\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_608\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_608\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_608\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_608\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_614\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_614\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_614\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_614\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_620\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_620\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_620\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_620\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_627\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_627\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_627\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_627\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_633\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_633\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_633\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_633\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_638\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_638\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_638\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_638\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_644\ is
  port (
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_644\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_644\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_644\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => DI,
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_650\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_650\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_650\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_650\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_656\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_656\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_656\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_656\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_662\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_662\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_662\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_662\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_668\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_668\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_668\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_668\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_674\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_674\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_674\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_674\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_680\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_680\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_680\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_680\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_686\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_686\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_686\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_686\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_692\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_692\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_692\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_692\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_698\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_698\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_698\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_698\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_704\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_704\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_704\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_704\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_710\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_710\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_710\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_710\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_716\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_716\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_716\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_716\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_722\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_722\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_722\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_722\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_728\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_728\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_728\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_728\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_734\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_734\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_734\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_734\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_740\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_740\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_740\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_740\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_746\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_746\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_746\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_746\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_752\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_752\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_752\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_752\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_758\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_758\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_758\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_758\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_764\ is
  port (
    S : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_764\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_764\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_764\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized31_770\ is
  port (
    xor_Sum : out STD_LOGIC;
    pc_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized31_770\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized31_770\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized31_770\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F066"
    )
        port map (
      I0 => '0',
      I1 => pc_I,
      I2 => '0',
      I3 => '0',
      O => xor_Sum
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_587\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_587\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_587\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_587\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_593\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_593\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_593\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_593\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_599\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_599\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_599\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_599\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_605\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_4 : out STD_LOGIC;
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_reg : in STD_LOGIC;
    valid_Req_XX_reg_0 : in STD_LOGIC;
    valid_Req_XX_reg_1 : in STD_LOGIC;
    valid_Req_XX_reg_2 : in STD_LOGIC;
    valid_Req_XX_reg_3 : in STD_LOGIC;
    valid_Req_XX_i_2_0 : in STD_LOGIC;
    valid_Req_XX_i_2_1 : in STD_LOGIC;
    valid_Req_XX_i_2_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_605\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_605\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_605\ is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal valid_Req_XX_i_3_n_0 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Not_Using_TLBS.instr_Addr_1[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\
    );
valid_Req_XX_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000010"
    )
        port map (
      I0 => valid_Req_XX_i_3_n_0,
      I1 => valid_Req_XX_reg,
      I2 => valid_Req_XX_reg_0,
      I3 => valid_Req_XX_reg_1,
      I4 => valid_Req_XX_reg_2,
      I5 => valid_Req_XX_reg_3,
      O => valid_Req_XX_i_4
    );
valid_Req_XX_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => valid_Req_XX_i_2_0,
      I2 => valid_Req_XX_i_2_1,
      I3 => valid_Req_XX_i_2_2,
      O => valid_Req_XX_i_3_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_611\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_611\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_611\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_611\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_617\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_617\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_617\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_617\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_623\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_623\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_623\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_623\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_629\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_629\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_629\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_629\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_635\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_635\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_635\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_635\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_641\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_641\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_641\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_641\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_647\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_647\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_647\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_647\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_653\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_653\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_653\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_653\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_659\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_659\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_659\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_659\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_665\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_665\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_665\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_665\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_671\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_671\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_671\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_671\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_677\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_677\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_677\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_677\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_683\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_683\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_683\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_683\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_689\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_689\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_689\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_689\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_695\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_695\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_695\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_695\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_701\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_701\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_701\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_701\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_707\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_707\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_707\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_707\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Not_Using_TLBS.instr_Addr_1[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_713\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_713\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_713\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_713\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Not_Using_TLBS.instr_Addr_1[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_719\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_719\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_719\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_719\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Not_Using_TLBS.instr_Addr_1[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_725\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_725\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_725\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_725\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
\Not_Using_TLBS.instr_Addr_1[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_731\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_731\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_731\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_731\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_737\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_737\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_737\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_737\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_743\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_4 : in STD_LOGIC;
    valid_Req_XX_i_4_0 : in STD_LOGIC;
    valid_Req_XX_i_4_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_743\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_743\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_743\ is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Not_Using_TLBS.instr_Addr_1[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\
    );
valid_Req_XX_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => valid_Req_XX_i_4,
      I2 => valid_Req_XX_i_4_0,
      I3 => valid_Req_XX_i_4_1,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_749\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_749\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_749\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_749\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_755\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_755\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_755\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_755\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_761\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_5 : out STD_LOGIC;
    O : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_2 : in STD_LOGIC;
    valid_Req_XX_i_2_0 : in STD_LOGIC;
    valid_Req_XX_i_2_1 : in STD_LOGIC;
    valid_Req_XX_i_2_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_761\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_761\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_761\ is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Not_Using_TLBS.instr_Addr_1[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => O,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^using_fpga.native_0\
    );
valid_Req_XX_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFBFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => valid_Req_XX_i_2,
      I2 => valid_Req_XX_i_2_0,
      I3 => valid_Req_XX_i_2_1,
      I4 => valid_Req_XX_i_2_2,
      O => valid_Req_XX_i_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized33_767\ is
  port (
    Instr_Addr : out STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    pc_Sum : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized33_767\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized33_767\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized33_767\ is
  signal \^instr_addr\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Instr_Addr <= \^instr_addr\;
\Not_Using_TLBS.instr_Addr_1[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^instr_addr\,
      I1 => D(0),
      I2 => Q(0),
      O => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AACA"
    )
        port map (
      I0 => pc_Sum,
      I1 => \in\(0),
      I2 => jump,
      I3 => '0',
      O => \^instr_addr\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized3_91\ is
  port (
    force_jump2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    force2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized3_91\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized3_91\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized3_91\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => '0',
      I3 => force2,
      O => force_jump2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized5\ is
  port (
    res_forward1_1 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized5\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized5\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => reg1_Addr(1),
      I1 => reg1_Addr(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => res_forward1_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized5_82\ is
  port (
    res_forward1_2 : out STD_LOGIC;
    reg1_Addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized5_82\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized5_82\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized5_82\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => reg1_Addr(1),
      I1 => reg1_Addr(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => res_forward1_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized5_83\ is
  port (
    res_forward2_1 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized5_83\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized5_83\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized5_83\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => imm_Value(1),
      I1 => imm_Value(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => res_forward2_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized5_84\ is
  port (
    res_forward2_2 : out STD_LOGIC;
    imm_Value : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized5_84\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized5_84\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized5_84\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8421"
    )
        port map (
      I0 => imm_Value(1),
      I1 => imm_Value(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => res_forward2_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized7\ is
  port (
    res_Forward1 : out STD_LOGIC;
    res_forward1_1 : in STD_LOGIC;
    res_forward1_2 : in STD_LOGIC;
    res_forward1_3 : in STD_LOGIC;
    write_Reg_I_S : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized7\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized7\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized7\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => res_forward1_1,
      I1 => res_forward1_2,
      I2 => res_forward1_3,
      I3 => write_Reg_I_S,
      O => res_Forward1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized7_216\ is
  port (
    res_10 : out STD_LOGIC;
    byte_0 : in STD_LOGIC;
    byte_1 : in STD_LOGIC;
    byte_2 : in STD_LOGIC;
    byte_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized7_216\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized7_216\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized7_216\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => byte_0,
      I1 => byte_1,
      I2 => byte_2,
      I3 => byte_3,
      O => res_10
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized7_86\ is
  port (
    res_Forward2 : out STD_LOGIC;
    res_forward2_1 : in STD_LOGIC;
    res_forward2_2 : in STD_LOGIC;
    res_forward2_3 : in STD_LOGIC;
    write_Reg_I_S : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized7_86\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized7_86\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized7_86\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => res_forward2_1,
      I1 => res_forward2_2,
      I2 => res_forward2_3,
      I3 => write_Reg_I_S,
      O => res_Forward2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT4__parameterized9\ is
  port (
    correct_Carry_Select : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT4__parameterized9\ : entity is "MB_LUT4";
end \design_1_microblaze_1_1_MB_LUT4__parameterized9\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT4__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => '0',
      O => correct_Carry_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT5 is
  port (
    of_PipeRun_Select : out STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    of_Valid_Raw : in STD_LOGIC;
    I281_out : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT5 : entity is "MB_LUT5";
end design_1_microblaze_1_1_MB_LUT5;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT5 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000040"
    )
        port map (
      I0 => mul_Executing,
      I1 => of_Valid_Raw,
      I2 => I281_out,
      I3 => \Using_FPGA.Native_0\,
      I4 => \Using_FPGA.Native_1\,
      O => of_PipeRun_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT5__parameterized1\ is
  port (
    of_PipeRun_without_dready : out STD_LOGIC;
    I281_out : out STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    of_Valid_Raw : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT5__parameterized1\ : entity is "MB_LUT5";
end \design_1_microblaze_1_1_MB_LUT5__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT5__parameterized1\ is
  signal \^i281_out\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  I281_out <= \^i281_out\;
\Using_FPGA.Native\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => mul_Executing,
      I1 => of_Valid_Raw,
      I2 => \^i281_out\,
      I3 => \Using_FPGA.Native_0\,
      I4 => \Using_FPGA.Native_1\,
      O => of_PipeRun_without_dready
    );
\Using_FPGA.Native_i_1__65\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \Using_FPGA.Native_3\,
      O => \^i281_out\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6 is
  port (
    alu_AddSub_1 : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Shifted : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6 : entity is "MB_LUT6";
end design_1_microblaze_1_1_MB_LUT6;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => Shifted,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O => alu_AddSub_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_800 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_800 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_800;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_800 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_804 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_804 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_804;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_804 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_808 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_808 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_808;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_808 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_812 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_812 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_812;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_812 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_816 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_816 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_816;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_816 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_820 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_820 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_820;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_820 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_824 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_824 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_824;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_824 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_828 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_10 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_828 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_828;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_828 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_10,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_832 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_832 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_832;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_832 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_836 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_11 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_836 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_836;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_836 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_11,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_840 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_12 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_840 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_840;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_840 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_12,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_844 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_13 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_844 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_844;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_844 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_13,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_848 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_14 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_848 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_848;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_848 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_14,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_852 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_15 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_852 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_852;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_852 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_15,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_856 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_16 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_856 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_856;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_856 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_16,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_860 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_860 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_860;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_860 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_864 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_864 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_864;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_864 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_868 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_868 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_868;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_868 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_872 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_872 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_872;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_872 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_876 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_876 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_876;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_876 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_880 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_880 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_880;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_880 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_884 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_884 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_884;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_884 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_888 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_888 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_888;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_888 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_892 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_892 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_892;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_892 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_896 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_896 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_896;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_896 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_900 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_900 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_900;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_900 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_904 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_904 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_904;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_904 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_908 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_908 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_908;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_908 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_912 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_912 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_912;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_912 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_916 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_916 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_916;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_916 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => Address(0),
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_LUT6_2_920 is
  port (
    op1_Reg : out STD_LOGIC;
    op1_I : out STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_17 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_LUT6_2_920 : entity is "MB_LUT6_2";
end design_1_microblaze_1_1_MB_LUT6_2_920;

architecture STRUCTURE of design_1_microblaze_1_1_MB_LUT6_2_920 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00FF00CACACACA"
    )
        port map (
      I0 => Reg1_Data(0),
      I1 => EX_Result(0),
      I2 => res_Forward1,
      I3 => I3_17,
      I4 => '0',
      I5 => opsel1_SPR,
      O5 => op1_Reg,
      O6 => op1_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized10\ is
  port (
    \in\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    byte_selects_1 : in STD_LOGIC;
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized10\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized10\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized10\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"2A2F2A2F8A8F8A8F"
    )
        port map (
      I0 => byte_selects_1,
      I1 => byte_selects_0,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => \in\(0),
      O6 => \in\(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized12\ is
  port (
    \in\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    byte_selects_1 : in STD_LOGIC;
    byte_selects_0 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized12\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized12\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized12\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"151F151F454F454F"
    )
        port map (
      I0 => byte_selects_1,
      I1 => byte_selects_0,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => \in\(0),
      O6 => \in\(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized14\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    low_addr_i_0 : in STD_LOGIC;
    low_addr_i_1 : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized14\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized14\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized14\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"0CC00CC000A000A0"
    )
        port map (
      I0 => low_addr_i_0,
      I1 => low_addr_i_1,
      I2 => isbyte,
      I3 => isdoublet,
      I4 => '0',
      I5 => '1',
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized16\ is
  port (
    sel_Write_Mux_MSB : out STD_LOGIC_VECTOR ( 1 downto 0 );
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized16\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized16\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized16\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"1111111155555555"
    )
        port map (
      I0 => isbyte,
      I1 => isdoublet,
      I2 => '0',
      I3 => '0',
      I4 => '0',
      I5 => '1',
      O5 => sel_Write_Mux_MSB(0),
      O6 => sel_Write_Mux_MSB(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1001\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1001\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1001\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1001\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1003\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1003\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1003\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1003\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1005\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1005\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1005\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1005\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1007\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1007\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1007\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1007\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1009\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1009\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1009\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1009\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1011\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1011\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1011\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1011\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1013\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1013\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1013\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1013\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1015\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1015\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1015\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1015\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1017\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1017\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1017\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1017\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1019\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1019\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1019\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1019\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1021\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1021\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1021\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1021\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1023\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1023\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1023\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1023\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_965\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_965\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_965\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_965\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_967\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_967\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_967\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_967\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_969\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_969\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_969\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_969\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_971\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_971\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_971\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_971\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_973\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_973\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_973\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_973\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_975\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_975\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_975\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_975\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_977\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    EX_Op1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_977\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_977\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_977\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => EX_Op1,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_979\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_I2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_979\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_979\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_979\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => \Using_FPGA.Native_I2\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_981\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_981\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_981\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_981\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => op1(0),
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_983\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_983\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_983\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_983\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_985\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_985\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_985\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_985\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_987\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_987\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_987\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_987\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_989\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_989\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_989\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_989\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_991\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_991\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_991\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_991\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_993\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_993\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_993\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_993\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => EX_Op2(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_995\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_995\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_995\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_995\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_997\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_997\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_997\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_997\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_999\ is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_999\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_999\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized2_999\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\,
      I3 => alu_Op(1),
      I4 => '0',
      I5 => '1',
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    \C[2]_i_5\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C[2]_i_5_0\ : in STD_LOGIC;
    \C[2]_i_5_1\ : in STD_LOGIC;
    \C_reg[16]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
\C[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[16]\(2),
      I2 => \C_reg[16]\(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[16]\(0),
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Op1_Logic,
      I1 => \C[2]_i_5\,
      I2 => op1(0),
      I3 => \C[2]_i_5_0\,
      I4 => \C[2]_i_5_1\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1028\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1028\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1028\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1028\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(3),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(1),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(2),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1029\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1029\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1029\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1029\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(3),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(1),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(2),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1030\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1030\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1030\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1030\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(3),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(1),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(2),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1031\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    isbyte : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1031\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1031\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1031\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(3),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(1),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(2),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(0),
      I4 => isbyte,
      I5 => '1',
      O5 => D(1),
      O6 => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1032\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1032\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1032\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1032\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1033\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1033\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1033\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1033\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1034\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1034\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1034\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1034\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1035\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1035\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1035\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1035\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1036\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1036\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1036\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1036\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1037\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1037\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1037\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1037\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1038\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1038\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1038\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1038\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1039\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1039\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1039\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1039\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(0),
      I1 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(2),
      I2 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(1),
      I3 => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(3),
      I4 => sel_Write_Mux_MSB(1),
      I5 => sel_Write_Mux_MSB(0),
      O5 => D(0),
      O6 => D(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_138\ is
  port (
    O560_out : out STD_LOGIC;
    O659_out : out STD_LOGIC;
    Last_Mux_1_0 : in STD_LOGIC;
    Last_Mux_1_31 : in STD_LOGIC;
    Last_Mux_1_16 : in STD_LOGIC;
    Last_Mux_1_15 : in STD_LOGIC;
    \Barrel_Result0_inferred__14/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_138\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_138\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_138\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_0,
      I1 => Last_Mux_1_31,
      I2 => Last_Mux_1_16,
      I3 => Last_Mux_1_15,
      I4 => \Barrel_Result0_inferred__14/i_\,
      I5 => '1',
      O5 => O560_out,
      O6 => O659_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_139\ is
  port (
    Last_Mux_1_31 : out STD_LOGIC;
    Last_Mux_1_15 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_139\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_139\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_139\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_31,
      O6 => Last_Mux_1_15
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_140\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[13]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[13]_i_2_0\ : in STD_LOGIC;
    \C[13]_i_2_1\ : in STD_LOGIC;
    \C_reg[4]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[6]\ : in STD_LOGIC;
    \C_reg[6]_0\ : in STD_LOGIC;
    \C_reg[6]_1\ : in STD_LOGIC;
    \C_reg[4]_0\ : in STD_LOGIC;
    \C_reg[4]_1\ : in STD_LOGIC;
    \C_reg[4]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_140\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_140\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_140\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33550F0033550FFF"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[4]\(5),
      I2 => \C_reg[4]\(6),
      I3 => EX_Op2(0),
      I4 => EX_Op2(1),
      I5 => \C_reg[4]\(7),
      O => \^using_fpga.native_2\
    );
\C[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[4]\(0),
      I2 => \C_reg[4]\(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[4]\(1),
      O => \Using_FPGA.Native_0\
    );
\C[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[4]\(5),
      I2 => \C_reg[4]\(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[4]\(3),
      O => \^using_fpga.native_1\
    );
\C[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3500350F35F035FF"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[4]_0\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[4]_1\,
      I5 => \C_reg[4]_2\,
      O => D(1)
    );
\C[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[6]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[6]_0\,
      I5 => \C_reg[6]_1\,
      O => D(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[13]_i_2\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => \C[13]_i_2_0\,
      I4 => \C[13]_i_2_1\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_141\ is
  port (
    O520_out : out STD_LOGIC;
    O619_out : out STD_LOGIC;
    Last_Mux_1_10 : in STD_LOGIC;
    Last_Mux_1_21 : in STD_LOGIC;
    Last_Mux_1_26 : in STD_LOGIC;
    Last_Mux_1_5 : in STD_LOGIC;
    \Barrel_Result0_inferred__4/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_141\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_141\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_141\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_10,
      I1 => Last_Mux_1_21,
      I2 => Last_Mux_1_26,
      I3 => Last_Mux_1_5,
      I4 => \Barrel_Result0_inferred__4/i_\,
      I5 => '1',
      O5 => O520_out,
      O6 => O619_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_142\ is
  port (
    Last_Mux_1_21 : out STD_LOGIC;
    Last_Mux_1_5 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_142\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_142\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_142\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_21,
      O6 => Last_Mux_1_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_143\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[12]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[12]_i_2_0\ : in STD_LOGIC;
    \C[12]_i_2_1\ : in STD_LOGIC;
    void_bit : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[21]\ : in STD_LOGIC;
    \C_reg[21]_0\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 5 downto 0 );
    \C_reg[11]\ : in STD_LOGIC;
    \C_reg[11]_0\ : in STD_LOGIC;
    \C_reg[11]_1\ : in STD_LOGIC;
    \C_reg[7]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_143\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_143\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_143\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00350F35F035FF35"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[11]\,
      I2 => EX_Op2(2),
      I3 => EX_Op2(3),
      I4 => \C_reg[11]_0\,
      I5 => \C_reg[11]_1\,
      O => D(1)
    );
\C[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(0),
      I2 => A(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(1),
      O => \^using_fpga.native_1\
    );
\C[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C500C50FC5F0C5FF"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => void_bit,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[21]\,
      I5 => \C_reg[21]_0\,
      O => D(0)
    );
\C[3]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(1),
      I1 => A(5),
      I2 => A(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(3),
      O => \^using_fpga.native_2\
    );
\C[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3500350F35F035FF"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[11]_0\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[7]\,
      I5 => \C_reg[11]\,
      O => D(2)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[12]_i_2\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => \C[12]_i_2_0\,
      I4 => \C[12]_i_2_1\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_144\ is
  port (
    O516_out : out STD_LOGIC;
    O615_out : out STD_LOGIC;
    Last_Mux_1_11 : in STD_LOGIC;
    Last_Mux_1_20 : in STD_LOGIC;
    Last_Mux_1_27 : in STD_LOGIC;
    Last_Mux_1_4 : in STD_LOGIC;
    \Barrel_Result0_inferred__3/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_144\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_144\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_144\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_11,
      I1 => Last_Mux_1_20,
      I2 => Last_Mux_1_27,
      I3 => Last_Mux_1_4,
      I4 => \Barrel_Result0_inferred__3/i_\,
      I5 => '1',
      O5 => O516_out,
      O6 => O615_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_145\ is
  port (
    Last_Mux_1_20 : out STD_LOGIC;
    Last_Mux_1_4 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_145\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_145\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_145\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_20,
      O6 => Last_Mux_1_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_146\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C[13]_i_2\ : in STD_LOGIC;
    \C[13]_i_2_0\ : in STD_LOGIC;
    \C_reg[12]\ : in STD_LOGIC_VECTOR ( 5 downto 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[12]_0\ : in STD_LOGIC;
    \C_reg[12]_1\ : in STD_LOGIC;
    \C_reg[12]_2\ : in STD_LOGIC;
    \C_reg[8]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_146\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_146\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_146\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[12]\(5),
      I2 => \C_reg[12]\(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[12]\(3),
      O => \^using_fpga.native_1\
    );
\C[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0305F30503F5F3F5"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[12]_0\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[12]_1\,
      I5 => \C_reg[12]_2\,
      O => D(0)
    );
\C[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[12]\(0),
      I2 => \C_reg[12]\(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[12]\(1),
      O => \Using_FPGA.Native_0\
    );
\C[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[12]_0\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[8]\,
      I5 => \C_reg[12]_2\,
      O => D(1)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => op1(0),
      I1 => op1(1),
      I2 => op1(2),
      I3 => \C[13]_i_2\,
      I4 => \C[13]_i_2_0\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_147\ is
  port (
    O512_out : out STD_LOGIC;
    O611_out : out STD_LOGIC;
    Last_Mux_1_12 : in STD_LOGIC;
    Last_Mux_1_19 : in STD_LOGIC;
    Last_Mux_1_28 : in STD_LOGIC;
    Last_Mux_1_3 : in STD_LOGIC;
    \Barrel_Result0_inferred__2/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_147\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_147\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_147\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_12,
      I1 => Last_Mux_1_19,
      I2 => Last_Mux_1_28,
      I3 => Last_Mux_1_3,
      I4 => \Barrel_Result0_inferred__2/i_\,
      I5 => '1',
      O5 => O512_out,
      O6 => O611_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_148\ is
  port (
    Last_Mux_1_19 : out STD_LOGIC;
    Last_Mux_1_3 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_148\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_148\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_148\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_19,
      O6 => Last_Mux_1_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_149\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C[14]_i_2\ : in STD_LOGIC;
    \C[14]_i_2_0\ : in STD_LOGIC;
    \C_reg[19]\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_149\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_149\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_149\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
\C[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \C_reg[19]\,
      I2 => A(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => op1(0),
      I1 => op1(1),
      I2 => op1(2),
      I3 => \C[14]_i_2\,
      I4 => \C[14]_i_2_0\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_150\ is
  port (
    O58_out : out STD_LOGIC;
    O67_out : out STD_LOGIC;
    Last_Mux_1_13 : in STD_LOGIC;
    Last_Mux_1_18 : in STD_LOGIC;
    Last_Mux_1_29 : in STD_LOGIC;
    Last_Mux_1_2 : in STD_LOGIC;
    \Barrel_Result0_inferred__1/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_150\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_150\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_150\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_13,
      I1 => Last_Mux_1_18,
      I2 => Last_Mux_1_29,
      I3 => Last_Mux_1_2,
      I4 => \Barrel_Result0_inferred__1/i_\,
      I5 => '1',
      O5 => O58_out,
      O6 => O67_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_151\ is
  port (
    Last_Mux_1_18 : out STD_LOGIC;
    Last_Mux_1_2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_151\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_151\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_151\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_18,
      O6 => Last_Mux_1_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_152\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 5 downto 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C_reg[30]\ : in STD_LOGIC;
    \C_reg[30]_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[26]\ : in STD_LOGIC;
    \C_reg[22]\ : in STD_LOGIC;
    \C_reg[18]\ : in STD_LOGIC;
    \C_reg[24]\ : in STD_LOGIC;
    \C_reg[25]\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \C_reg[24]_0\ : in STD_LOGIC;
    \C_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_152\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_152\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_152\ is
  signal \C[18]_i_2_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
\C[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3500350F35F035FF"
    )
        port map (
      I0 => \^using_fpga.native_4\,
      I1 => \C_reg[22]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[10]\,
      I5 => \C_reg[18]\,
      O => D(5)
    );
\C[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[24]\,
      I2 => A(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(0),
      O => \^using_fpga.native_3\
    );
\C[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5030503F5F305F3F"
    )
        port map (
      I0 => void_bit,
      I1 => \^using_fpga.native_1\,
      I2 => EX_Op2(0),
      I3 => EX_Op2(1),
      I4 => A(0),
      I5 => \C_reg[24]\,
      O => \^using_fpga.native_2\
    );
\C[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55000F3355FF0F33"
    )
        port map (
      I0 => \C[18]_i_2_n_0\,
      I1 => \C_reg[18]\,
      I2 => \C_reg[26]\,
      I3 => EX_Op2(3),
      I4 => EX_Op2(2),
      I5 => \C_reg[22]\,
      O => D(4)
    );
\C[18]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F330F55"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[24]\,
      I2 => void_bit,
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      O => \C[18]_i_2_n_0\
    );
\C[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC55000FCC55FF0F"
    )
        port map (
      I0 => \C[18]_i_2_n_0\,
      I1 => void_bit,
      I2 => \C_reg[22]\,
      I3 => EX_Op2(2),
      I4 => EX_Op2(3),
      I5 => \C_reg[26]\,
      O => D(3)
    );
\C[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D1C0D1F3"
    )
        port map (
      I0 => \^using_fpga.native_3\,
      I1 => EX_Op2(3),
      I2 => void_bit,
      I3 => EX_Op2(2),
      I4 => \C_reg[24]_0\,
      O => D(2)
    );
\C[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D1C0D1F3"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => EX_Op2(3),
      I2 => void_bit,
      I3 => EX_Op2(2),
      I4 => \C_reg[25]\,
      O => D(1)
    );
\C[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D1C0D1F3"
    )
        port map (
      I0 => \C[18]_i_2_n_0\,
      I1 => EX_Op2(3),
      I2 => void_bit,
      I3 => EX_Op2(2),
      I4 => \C_reg[26]\,
      O => D(0)
    );
\C[2]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(4),
      I2 => A(3),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(2),
      O => \^using_fpga.native_4\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => op1(0),
      I1 => op1(1),
      I2 => op1(2),
      I3 => \C_reg[30]\,
      I4 => \C_reg[30]_0\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(0),
      O6 => \^using_fpga.native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_153\ is
  port (
    O54_out : out STD_LOGIC;
    O63_out : out STD_LOGIC;
    Last_Mux_1_14 : in STD_LOGIC;
    Last_Mux_1_17 : in STD_LOGIC;
    Last_Mux_1_30 : in STD_LOGIC;
    Last_Mux_1_1 : in STD_LOGIC;
    \Barrel_Result0_inferred__0/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_153\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_153\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_153\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_14,
      I1 => Last_Mux_1_17,
      I2 => Last_Mux_1_30,
      I3 => Last_Mux_1_1,
      I4 => \Barrel_Result0_inferred__0/i_\,
      I5 => '1',
      O5 => O54_out,
      O6 => O63_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_154\ is
  port (
    Last_Mux_1_17 : out STD_LOGIC;
    Last_Mux_1_1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_154\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_154\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_154\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_17,
      O6 => Last_Mux_1_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_155\ is
  port (
    A : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \C_reg[27]\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[27]_0\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    \C_reg[27]_1\ : in STD_LOGIC;
    \C_reg[9]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[9]_0\ : in STD_LOGIC;
    \C_reg[9]_1\ : in STD_LOGIC;
    \C_reg[9]_2\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_155\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_155\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_155\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(0) <= \^a\(0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[1]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[9]_2\(0),
      I2 => \C_reg[9]_2\(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[9]_2\(1),
      O => \^using_fpga.native_1\
    );
\C[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3500350F35F035FF"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[9]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[9]_0\,
      I5 => \C_reg[9]_1\,
      O => D(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C_reg[27]\,
      I1 => op1(0),
      I2 => \C_reg[27]_0\,
      I3 => Op1_Logic,
      I4 => \C_reg[27]_1\,
      I5 => '1',
      O5 => \^a\(0),
      O6 => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_156\ is
  port (
    O546_in : out STD_LOGIC;
    O661_in : out STD_LOGIC;
    Last_Mux_1_15 : in STD_LOGIC;
    Last_Mux_1_16 : in STD_LOGIC;
    Last_Mux_1_31 : in STD_LOGIC;
    Last_Mux_1_0 : in STD_LOGIC;
    Barrel_Result0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_156\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_156\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_156\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_15,
      I1 => Last_Mux_1_16,
      I2 => Last_Mux_1_31,
      I3 => Last_Mux_1_0,
      I4 => Barrel_Result0,
      I5 => '1',
      O5 => O546_in,
      O6 => O661_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_157\ is
  port (
    Last_Mux_1_16 : out STD_LOGIC;
    Last_Mux_1_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_157\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_157\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_157\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_16,
      O6 => Last_Mux_1_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_158\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \C_reg[0]\ : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \C[4]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C[4]_i_2_0\ : in STD_LOGIC;
    \C_reg[13]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[13]_0\ : in STD_LOGIC;
    \C_reg[13]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_158\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_158\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_158\ is
  signal A : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00550F33FF550F33"
    )
        port map (
      I0 => A(1),
      I1 => \C_reg[0]\(8),
      I2 => \C_reg[0]\(7),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[0]\(6),
      O => \Using_FPGA.Native_4\
    );
\C[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[13]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[13]_0\,
      I5 => \C_reg[13]_1\,
      O => D(0)
    );
\C[1]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => A(1),
      I1 => \C_reg[0]\(7),
      I2 => \C_reg[0]\(6),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[0]\(5),
      O => \Using_FPGA.Native_3\
    );
\C[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33550F0033550FFF"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \C_reg[0]\(2),
      I2 => \C_reg[0]\(3),
      I3 => EX_Op2(0),
      I4 => EX_Op2(1),
      I5 => \C_reg[0]\(4),
      O => \Using_FPGA.Native_2\
    );
\C[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \C_reg[0]\(2),
      I2 => \C_reg[0]\(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[0]\(0),
      O => \^using_fpga.native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[4]_i_2\,
      I1 => op1(2),
      I2 => op1(1),
      I3 => op1(0),
      I4 => \C[4]_i_2_0\,
      I5 => '1',
      O5 => A(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_159\ is
  port (
    O556_out : out STD_LOGIC;
    O655_out : out STD_LOGIC;
    Last_Mux_1_1 : in STD_LOGIC;
    Last_Mux_1_30 : in STD_LOGIC;
    Last_Mux_1_17 : in STD_LOGIC;
    Last_Mux_1_14 : in STD_LOGIC;
    \Barrel_Result0_inferred__13/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_159\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_159\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_159\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_1,
      I1 => Last_Mux_1_30,
      I2 => Last_Mux_1_17,
      I3 => Last_Mux_1_14,
      I4 => \Barrel_Result0_inferred__13/i_\,
      I5 => '1',
      O5 => O556_out,
      O6 => O655_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_160\ is
  port (
    Last_Mux_1_30 : out STD_LOGIC;
    Last_Mux_1_14 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_160\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_160\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_160\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_30,
      O6 => Last_Mux_1_14
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_161\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \C[4]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C[4]_i_2_0\ : in STD_LOGIC;
    \C_reg[14]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[14]_0\ : in STD_LOGIC;
    \C_reg[14]_1\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_161\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_161\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_161\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[14]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[14]_0\,
      I5 => \C_reg[14]_1\,
      O => D(0)
    );
\C[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(2),
      I2 => A(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(0),
      O => \^using_fpga.native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[4]_i_2\,
      I1 => op1(2),
      I2 => op1(1),
      I3 => op1(0),
      I4 => \C[4]_i_2_0\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_162\ is
  port (
    O552_out : out STD_LOGIC;
    O651_out : out STD_LOGIC;
    Last_Mux_1_2 : in STD_LOGIC;
    Last_Mux_1_29 : in STD_LOGIC;
    Last_Mux_1_18 : in STD_LOGIC;
    Last_Mux_1_13 : in STD_LOGIC;
    \Barrel_Result0_inferred__12/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_162\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_162\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_162\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_2,
      I1 => Last_Mux_1_29,
      I2 => Last_Mux_1_18,
      I3 => Last_Mux_1_13,
      I4 => \Barrel_Result0_inferred__12/i_\,
      I5 => '1',
      O5 => O552_out,
      O6 => O651_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_163\ is
  port (
    Last_Mux_1_29 : out STD_LOGIC;
    Last_Mux_1_13 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_163\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_163\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_163\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_29,
      O6 => Last_Mux_1_13
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_164\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[4]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \C[4]_i_2_0\ : in STD_LOGIC;
    \C_reg[15]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[15]_0\ : in STD_LOGIC;
    \C_reg[15]_1\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 5 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_164\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_164\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_164\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[15]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[15]_0\,
      I5 => \C_reg[15]_1\,
      O => D(0)
    );
\C[2]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00550F33FF550F33"
    )
        port map (
      I0 => \^using_fpga.native_0\(1),
      I1 => A(5),
      I2 => A(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(3),
      O => \Using_FPGA.Native_2\
    );
\C[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(2),
      I2 => A(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(0),
      O => \^using_fpga.native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[4]_i_2\,
      I1 => op1(2),
      I2 => op1(1),
      I3 => op1(0),
      I4 => \C[4]_i_2_0\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_165\ is
  port (
    O548_out : out STD_LOGIC;
    O647_out : out STD_LOGIC;
    Last_Mux_1_3 : in STD_LOGIC;
    Last_Mux_1_28 : in STD_LOGIC;
    Last_Mux_1_19 : in STD_LOGIC;
    Last_Mux_1_12 : in STD_LOGIC;
    \Barrel_Result0_inferred__11/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_165\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_165\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_165\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_3,
      I1 => Last_Mux_1_28,
      I2 => Last_Mux_1_19,
      I3 => Last_Mux_1_12,
      I4 => \Barrel_Result0_inferred__11/i_\,
      I5 => '1',
      O5 => O548_out,
      O6 => O647_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_166\ is
  port (
    Last_Mux_1_28 : out STD_LOGIC;
    Last_Mux_1_12 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_166\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_166\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_166\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_28,
      O6 => Last_Mux_1_12
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_167\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \C[5]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[5]_i_2_0\ : in STD_LOGIC;
    \C[5]_i_2_1\ : in STD_LOGIC;
    void_bit : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[16]\ : in STD_LOGIC;
    \C_reg[20]\ : in STD_LOGIC;
    \C_reg[16]_0\ : in STD_LOGIC;
    \C_reg[20]_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_167\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_167\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_167\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\C[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \C_reg[20]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[16]_0\,
      I5 => \C_reg[16]\,
      O => D(1)
    );
\C[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A003AF03A0F3AFF3"
    )
        port map (
      I0 => void_bit,
      I1 => \^using_fpga.native_0\,
      I2 => EX_Op2(2),
      I3 => EX_Op2(3),
      I4 => \C_reg[16]\,
      I5 => \C_reg[20]\,
      O => D(0)
    );
\C[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[20]_0\(2),
      I2 => \C_reg[20]_0\(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[20]_0\(0),
      O => \^using_fpga.native_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[5]_i_2\,
      I1 => op1(1),
      I2 => op1(0),
      I3 => \C[5]_i_2_0\,
      I4 => \C[5]_i_2_1\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_168\ is
  port (
    O544_out : out STD_LOGIC;
    O643_out : out STD_LOGIC;
    Last_Mux_1_4 : in STD_LOGIC;
    Last_Mux_1_27 : in STD_LOGIC;
    Last_Mux_1_20 : in STD_LOGIC;
    Last_Mux_1_11 : in STD_LOGIC;
    \Barrel_Result0_inferred__10/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_168\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_168\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_168\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_4,
      I1 => Last_Mux_1_27,
      I2 => Last_Mux_1_20,
      I3 => Last_Mux_1_11,
      I4 => \Barrel_Result0_inferred__10/i_\,
      I5 => '1',
      O5 => O544_out,
      O6 => O643_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_169\ is
  port (
    Last_Mux_1_27 : out STD_LOGIC;
    Last_Mux_1_11 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_169\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_169\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_169\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_27,
      O6 => Last_Mux_1_11
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_170\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[6]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[6]_i_2_0\ : in STD_LOGIC;
    \C[6]_i_2_1\ : in STD_LOGIC;
    \C_reg[17]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[17]_0\ : in STD_LOGIC;
    \C_reg[17]_1\ : in STD_LOGIC;
    \C_reg[3]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \C_reg[1]\ : in STD_LOGIC;
    \C_reg[1]_0\ : in STD_LOGIC;
    \C_reg[1]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_170\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_170\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_170\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \C_reg[17]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[17]_0\,
      I5 => \C_reg[17]_1\,
      O => D(0)
    );
\C[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[1]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[1]_0\,
      I5 => \C_reg[1]_1\,
      O => D(1)
    );
\C[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[3]\(5),
      I2 => \C_reg[3]\(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[3]\(3),
      O => \^using_fpga.native_2\
    );
\C[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"33550F0033550FFF"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[3]\(5),
      I2 => \C_reg[3]\(6),
      I3 => EX_Op2(0),
      I4 => EX_Op2(1),
      I5 => \C_reg[3]\(7),
      O => \Using_FPGA.Native_1\
    );
\C[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(0),
      I1 => \C_reg[3]\(2),
      I2 => \C_reg[3]\(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[3]\(0),
      O => \^using_fpga.native_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[6]_i_2\,
      I1 => op1(1),
      I2 => op1(0),
      I3 => \C[6]_i_2_0\,
      I4 => \C[6]_i_2_1\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_171\ is
  port (
    O540_out : out STD_LOGIC;
    O639_out : out STD_LOGIC;
    Last_Mux_1_5 : in STD_LOGIC;
    Last_Mux_1_26 : in STD_LOGIC;
    Last_Mux_1_21 : in STD_LOGIC;
    Last_Mux_1_10 : in STD_LOGIC;
    \Barrel_Result0_inferred__9/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_171\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_171\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_171\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_5,
      I1 => Last_Mux_1_26,
      I2 => Last_Mux_1_21,
      I3 => Last_Mux_1_10,
      I4 => \Barrel_Result0_inferred__9/i_\,
      I5 => '1',
      O5 => O540_out,
      O6 => O639_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_172\ is
  port (
    Last_Mux_1_26 : out STD_LOGIC;
    Last_Mux_1_10 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_172\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_172\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_172\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_26,
      O6 => Last_Mux_1_10
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_173\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[7]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[7]_i_2_0\ : in STD_LOGIC;
    \C[7]_i_2_1\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 5 downto 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[0]\ : in STD_LOGIC;
    \C_reg[0]_0\ : in STD_LOGIC;
    \C_reg[0]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_173\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_173\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_173\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0503F50305F3F5F3"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[0]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[0]_0\,
      I5 => \C_reg[0]_1\,
      O => D(0)
    );
\C[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^using_fpga.native_0\(1),
      I1 => A(3),
      I2 => A(5),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(4),
      O => \^using_fpga.native_2\
    );
\C[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(2),
      I2 => A(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[7]_i_2\,
      I1 => op1(1),
      I2 => op1(0),
      I3 => \C[7]_i_2_0\,
      I4 => \C[7]_i_2_1\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_174\ is
  port (
    O536_out : out STD_LOGIC;
    O635_out : out STD_LOGIC;
    Last_Mux_1_6 : in STD_LOGIC;
    Last_Mux_1_25 : in STD_LOGIC;
    Last_Mux_1_22 : in STD_LOGIC;
    Last_Mux_1_9 : in STD_LOGIC;
    \Barrel_Result0_inferred__8/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_174\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_174\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_174\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_6,
      I1 => Last_Mux_1_25,
      I2 => Last_Mux_1_22,
      I3 => Last_Mux_1_9,
      I4 => \Barrel_Result0_inferred__8/i_\,
      I5 => '1',
      O5 => O536_out,
      O6 => O635_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_175\ is
  port (
    Last_Mux_1_25 : out STD_LOGIC;
    Last_Mux_1_9 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_175\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_175\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_175\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_25,
      O6 => Last_Mux_1_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_176\ is
  port (
    A : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Shifted : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[8]_i_2\ : in STD_LOGIC;
    \C[8]_i_2_0\ : in STD_LOGIC;
    \C_reg[3]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[3]_0\ : in STD_LOGIC;
    \C_reg[3]_1\ : in STD_LOGIC;
    \C_reg[2]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[2]_0\ : in STD_LOGIC;
    \C_reg[2]_1\ : in STD_LOGIC;
    \C_reg[2]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_176\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_176\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_176\ is
  signal \^a\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  A(1 downto 0) <= \^a\(1 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\C[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[2]_0\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[2]_1\,
      I5 => \C_reg[2]_2\,
      O => D(1)
    );
\C[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00550F33FF550F33"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[2]\(3),
      I2 => \C_reg[2]\(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[2]\(1),
      O => \^using_fpga.native_1\
    );
\C[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00530F53F053FF53"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \C_reg[3]\,
      I2 => EX_Op2(2),
      I3 => EX_Op2(3),
      I4 => \C_reg[3]_0\,
      I5 => \C_reg[3]_1\,
      O => D(0)
    );
\C[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^a\(1),
      I1 => \C_reg[2]\(2),
      I2 => \C_reg[2]\(1),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => \C_reg[2]\(0),
      O => \^using_fpga.native_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Shifted,
      I1 => op1(1),
      I2 => op1(0),
      I3 => \C[8]_i_2\,
      I4 => \C[8]_i_2_0\,
      I5 => '1',
      O5 => \^a\(1),
      O6 => \^a\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_177\ is
  port (
    O532_out : out STD_LOGIC;
    O631_out : out STD_LOGIC;
    Last_Mux_1_7 : in STD_LOGIC;
    Last_Mux_1_24 : in STD_LOGIC;
    Last_Mux_1_23 : in STD_LOGIC;
    Last_Mux_1_8 : in STD_LOGIC;
    \Barrel_Result0_inferred__7/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_177\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_177\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_177\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_7,
      I1 => Last_Mux_1_24,
      I2 => Last_Mux_1_23,
      I3 => Last_Mux_1_8,
      I4 => \Barrel_Result0_inferred__7/i_\,
      I5 => '1',
      O5 => O532_out,
      O6 => O631_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_178\ is
  port (
    Last_Mux_1_24 : out STD_LOGIC;
    Last_Mux_1_8 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_178\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_178\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_178\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_24,
      O6 => Last_Mux_1_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_179\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[12]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Shifted : in STD_LOGIC;
    \C[12]_i_2_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_179\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_179\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_179\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[12]_i_2\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => Shifted,
      I4 => \C[12]_i_2_0\,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\(1),
      O6 => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_180\ is
  port (
    O528_out : out STD_LOGIC;
    O627_out : out STD_LOGIC;
    Last_Mux_1_8 : in STD_LOGIC;
    Last_Mux_1_23 : in STD_LOGIC;
    Last_Mux_1_24 : in STD_LOGIC;
    Last_Mux_1_7 : in STD_LOGIC;
    \Barrel_Result0_inferred__6/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_180\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_180\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_180\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_8,
      I1 => Last_Mux_1_23,
      I2 => Last_Mux_1_24,
      I3 => Last_Mux_1_7,
      I4 => \Barrel_Result0_inferred__6/i_\,
      I5 => '1',
      O5 => O528_out,
      O6 => O627_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_181\ is
  port (
    Last_Mux_1_23 : out STD_LOGIC;
    Last_Mux_1_7 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_181\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_181\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_181\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_23,
      O6 => Last_Mux_1_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_182\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \C[12]_i_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C[12]_i_2_0\ : in STD_LOGIC;
    \C[12]_i_2_1\ : in STD_LOGIC;
    \C_reg[19]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \C_reg[19]_0\ : in STD_LOGIC;
    \C_reg[19]_1\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 5 downto 0 );
    \C_reg[5]\ : in STD_LOGIC;
    \C_reg[5]_0\ : in STD_LOGIC;
    \C_reg[5]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_182\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_182\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_182\ is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(1 downto 0) <= \^using_fpga.native_0\(1 downto 0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
\C[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3300550F33FF550F"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => A(0),
      I2 => A(2),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(1),
      O => \^using_fpga.native_1\
    );
\C[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0530053FF530F53F"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \C_reg[19]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[19]_0\,
      I5 => \C_reg[19]_1\,
      O => D(0)
    );
\C[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00330F55FF330F55"
    )
        port map (
      I0 => \^using_fpga.native_0\(1),
      I1 => A(5),
      I2 => A(4),
      I3 => EX_Op2(1),
      I4 => EX_Op2(0),
      I5 => A(3),
      O => \^using_fpga.native_2\
    );
\C[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3500350F35F035FF"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \C_reg[5]\,
      I2 => EX_Op2(3),
      I3 => EX_Op2(2),
      I4 => \C_reg[5]_0\,
      I5 => \C_reg[5]_1\,
      O => D(1)
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => \C[12]_i_2\,
      I1 => op1(0),
      I2 => op1(1),
      I3 => \C[12]_i_2_0\,
      I4 => \C[12]_i_2_1\,
      I5 => '1',
      O5 => \^using_fpga.native_0\(1),
      O6 => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_183\ is
  port (
    O524_out : out STD_LOGIC;
    O623_out : out STD_LOGIC;
    Last_Mux_1_9 : in STD_LOGIC;
    Last_Mux_1_22 : in STD_LOGIC;
    Last_Mux_1_25 : in STD_LOGIC;
    Last_Mux_1_6 : in STD_LOGIC;
    \Barrel_Result0_inferred__5/i_\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_183\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_183\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_183\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Last_Mux_1_9,
      I1 => Last_Mux_1_22,
      I2 => Last_Mux_1_25,
      I3 => Last_Mux_1_6,
      I4 => \Barrel_Result0_inferred__5/i_\,
      I5 => '1',
      O5 => O524_out,
      O6 => O623_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_184\ is
  port (
    Last_Mux_1_22 : out STD_LOGIC;
    Last_Mux_1_6 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_184\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_184\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized4_184\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => Q(0),
      I2 => Q(0),
      I3 => \Using_FPGA.Native_0\,
      I4 => EX_Op2(0),
      I5 => '1',
      O5 => Last_Mux_1_22,
      O6 => Last_Mux_1_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized6\ is
  port (
    low_addr_i_0 : out STD_LOGIC;
    low_addr_i_1 : out STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized6\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized6\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized6\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"8778877866666666"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\,
      I1 => op1(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\,
      I3 => op1(1),
      I4 => '0',
      I5 => '1',
      O5 => low_addr_i_0,
      O6 => low_addr_i_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6_2__parameterized8\ is
  port (
    byte_selects_0 : out STD_LOGIC;
    byte_selects_1 : out STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6_2__parameterized8\ : entity is "MB_LUT6_2";
end \design_1_microblaze_1_1_MB_LUT6_2__parameterized8\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6_2__parameterized8\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"7887877899996666"
    )
        port map (
      I0 => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]\,
      I1 => op1(0),
      I2 => \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]_0\,
      I3 => op1(1),
      I4 => '1',
      I5 => '1',
      O5 => byte_selects_0,
      O6 => byte_selects_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_366\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_366\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_366\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_366\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_369\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_369\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_369\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_369\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_372\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_372\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_372\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_372\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_375\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_375\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_375\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_375\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_378\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_378\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_378\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_378\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_381\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_381\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_381\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_381\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_384\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_384\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_384\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_384\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_387\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_387\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_387\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_387\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_390\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_390\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_390\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_390\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_393\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_393\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_393\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_393\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_396\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_396\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_396\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_396\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_399\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_399\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_399\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_399\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_402\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_402\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_402\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_402\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => shift_Logic_Result(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_405\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_405\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_405\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_405\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_408\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_408\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_408\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_408\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\(0),
      I2 => '1',
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_411\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Shift_Logic_Res : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_411\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_411\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_411\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => Shift_Logic_Res,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_414\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_414\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_414\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_414\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_417\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_417\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_417\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_417\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_420\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_420\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_420\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_420\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_423\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_423\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_423\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_423\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_426\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_426\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_426\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_426\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_429\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_429\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_429\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_429\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_432\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_432\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_432\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_432\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_435\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_435\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_435\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_435\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_438\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_438\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_438\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_438\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_441\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_441\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_441\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_441\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_444\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_444\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_444\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_444\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_447\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_447\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_447\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_447\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_450\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_450\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_450\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_450\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_453\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_453\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_453\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_453\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized1_456\ is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_ALU_Res : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized1_456\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized1_456\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized1_456\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E040E040FFFF0000"
    )
        port map (
      I0 => instr_ex(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => data_Read_Mask(0),
      I3 => extend_Data_Read(0),
      I4 => mul_ALU_Res,
      I5 => instr_ex(1),
      O => EX_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized3\ is
  port (
    w_read_fifo_addr_i_3 : out STD_LOGIC;
    w_read_fifo_addr_3 : in STD_LOGIC;
    I1 : in STD_LOGIC;
    I2 : in STD_LOGIC;
    Write_Data_Valid : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized3\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAF0CCAACCAACCAA"
    )
        port map (
      I0 => w_read_fifo_addr_3,
      I1 => I1,
      I2 => I2,
      I3 => Write_Data_Valid,
      I4 => \Using_FPGA.Native_0\,
      I5 => M_AXI_DC_WREADY,
      O => w_read_fifo_addr_i_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized3_16\ is
  port (
    w_read_fifo_addr_i_2 : out STD_LOGIC;
    w_read_fifo_addr_2 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Write_Data_Valid : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized3_16\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized3_16\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized3_16\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAF0CCAACCAACCAA"
    )
        port map (
      I0 => w_read_fifo_addr_2,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => Write_Data_Valid,
      I4 => \Using_FPGA.Native_2\,
      I5 => M_AXI_DC_WREADY,
      O => w_read_fifo_addr_i_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized3_18\ is
  port (
    w_read_fifo_addr_i_1 : out STD_LOGIC;
    w_read_fifo_addr_1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Write_Data_Valid : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized3_18\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized3_18\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized3_18\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAF0CCAACCAACCAA"
    )
        port map (
      I0 => w_read_fifo_addr_1,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => Write_Data_Valid,
      I4 => \Using_FPGA.Native_2\,
      I5 => M_AXI_DC_WREADY,
      O => w_read_fifo_addr_i_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized3_20\ is
  port (
    w_read_fifo_addr_i_0 : out STD_LOGIC;
    Write_Data_Valid : out STD_LOGIC;
    w_read_fifo_addr_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    write_data_stall : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Write_Strobe_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized3_20\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized3_20\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized3_20\ is
  signal \^write_data_valid\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Write_Data_Valid <= \^write_data_valid\;
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][0]_srl16_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => write_data_stall,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => Write_Strobe_i,
      O => \^write_data_valid\
    );
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAF0CCAACCAACCAA"
    )
        port map (
      I0 => w_read_fifo_addr_0,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \^write_data_valid\,
      I4 => \Using_FPGA.Native_1\,
      I5 => M_AXI_DC_WREADY,
      O => w_read_fifo_addr_i_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_LUT6__parameterized5\ is
  port (
    w_fifo_exist_i : out STD_LOGIC;
    w_fifo_exist : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Write_Data_Valid : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_LUT6__parameterized5\ : entity is "MB_LUT6";
end \design_1_microblaze_1_1_MB_LUT6__parameterized5\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_LUT6__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA0FCCAACCAACCAA"
    )
        port map (
      I0 => w_fifo_exist,
      I1 => '1',
      I2 => \Using_FPGA.Native_0\,
      I3 => Write_Data_Valid,
      I4 => \Using_FPGA.Native_1\,
      I5 => M_AXI_DC_WREADY,
      O => w_fifo_exist_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MULT_AND is
  port (
    sub_Carry : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MULT_AND : entity is "MB_MULT_AND";
end design_1_microblaze_1_1_MB_MULT_AND;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MULT_AND is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => sub_Carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MULT_AND_1025 is
  port (
    DI : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MULT_AND_1025 : entity is "MB_MULT_AND";
end design_1_microblaze_1_1_MB_MULT_AND_1025;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MULT_AND_1025 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => op2_C(0),
      I1 => alu_Op(0),
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY is
  port (
    complete_iready : out STD_LOGIC;
    S : in STD_LOGIC;
    icache_ready : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY is
  signal \<const1>\ : STD_LOGIC;
  signal \^complete_iready\ : STD_LOGIC;
begin
  \^complete_iready\ <= lopt;
  complete_iready <= \^complete_iready\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_10 is
  port (
    complete_dready : out STD_LOGIC;
    valid_req_XX_reg : out STD_LOGIC;
    S : in STD_LOGIC;
    cache_hit : in STD_LOGIC;
    Valid_Req0 : in STD_LOGIC;
    valid_req_XX_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_req_XX_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_10 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_10;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_10 is
  signal \<const1>\ : STD_LOGIC;
  signal \^complete_dready\ : STD_LOGIC;
begin
  \^complete_dready\ <= lopt;
  complete_dready <= \^complete_dready\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
valid_req_XX_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => \^complete_dready\,
      I1 => Valid_Req0,
      I2 => valid_req_XX_reg_0(0),
      I3 => valid_req_XX_reg_1,
      I4 => sync_reset,
      O => valid_req_XX_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_1027 is
  port (
    CI : out STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_1027 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_1027;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_1027 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => Unsigned_Op,
      O(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 2),
      O(1) => lopt_10,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_12 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S : in STD_LOGIC;
    carry_chain_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_12 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_12;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_12 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_13 is
  port (
    \Data_Addr_1_reg[16]\ : out STD_LOGIC;
    WEA : out STD_LOGIC_VECTOR ( 3 downto 0 );
    Read_Req : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.read_req_done_reg\ : out STD_LOGIC;
    \Comp_Carry_Chain[1].carry_sel_reg\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Write_Cacheline_conflict : in STD_LOGIC;
    new_write_cmd_allowed : in STD_LOGIC;
    write_req : in STD_LOGIC;
    write_req_done_hold : in STD_LOGIC;
    Write_Strobe_i : in STD_LOGIC;
    \Using_AXI.M_AXI_ARBURST_reg[1]\ : in STD_LOGIC;
    read_req_done : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_AXI.M_AXI_ARBURST_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Read_Req_Granted : in STD_LOGIC;
    write_data_done : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_13 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_13;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_13 is
  signal \<const0>\ : STD_LOGIC;
  signal \^data_addr_1_reg[16]\ : STD_LOGIC;
begin
  \Data_Addr_1_reg[16]\ <= \^data_addr_1_reg[16]\;
  \^data_addr_1_reg[16]\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_AXI.M_AXI_ARADDR_I[31]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => Write_Strobe_i,
      I1 => \Using_AXI.M_AXI_ARBURST_reg[1]\,
      I2 => \^data_addr_1_reg[16]\,
      I3 => read_req_done,
      O => Read_Req
    );
\Using_AXI.M_AXI_ARBURST[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555500000100"
    )
        port map (
      I0 => sync_reset,
      I1 => read_req_done,
      I2 => \^data_addr_1_reg[16]\,
      I3 => \Using_AXI.M_AXI_ARBURST_reg[1]\,
      I4 => Write_Strobe_i,
      I5 => \Using_AXI.M_AXI_ARBURST_reg[1]_0\(0),
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_3__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0808080808000000"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(3),
      I1 => \^data_addr_1_reg[16]\,
      I2 => Write_Cacheline_conflict,
      I3 => new_write_cmd_allowed,
      I4 => write_req,
      I5 => write_req_done_hold,
      O => WEA(3)
    );
\Using_FPGA.Native_i_4__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0808080808000000"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(2),
      I1 => \^data_addr_1_reg[16]\,
      I2 => Write_Cacheline_conflict,
      I3 => new_write_cmd_allowed,
      I4 => write_req,
      I5 => write_req_done_hold,
      O => WEA(2)
    );
\Using_FPGA.Native_i_5__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0808080808000000"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(1),
      I1 => \^data_addr_1_reg[16]\,
      I2 => Write_Cacheline_conflict,
      I3 => new_write_cmd_allowed,
      I4 => write_req,
      I5 => write_req_done_hold,
      O => WEA(1)
    );
\Using_FPGA.Native_i_6__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0808080808000000"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(0),
      I1 => \^data_addr_1_reg[16]\,
      I2 => Write_Cacheline_conflict,
      I3 => new_write_cmd_allowed,
      I4 => write_req,
      I5 => write_req_done_hold,
      O => WEA(0)
    );
\Using_New_CacheInterface_for_AXI.read_req_done_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AABAAAAA"
    )
        port map (
      I0 => read_req_done,
      I1 => Write_Strobe_i,
      I2 => \Using_AXI.M_AXI_ARBURST_reg[1]\,
      I3 => \^data_addr_1_reg[16]\,
      I4 => Read_Req_Granted,
      I5 => write_data_done,
      O => \Using_New_CacheInterface_for_AXI.read_req_done_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_131 is
  port (
    zero_CI_6 : out STD_LOGIC;
    Reg_Test_Equal : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_131 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_131;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_131 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= \^lopt_6\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_6\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_6,
      CYINIT => '1',
      DI(3) => \^lopt_2\,
      DI(2) => \^lopt_2\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => Reg_Test_Equal
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_132 is
  port (
    Reg_zero : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_1 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_132 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_132;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_132 is
  signal \^reg_zero\ : STD_LOGIC;
begin
  Reg_zero <= \^reg_zero\;
  \^reg_zero\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_133 is
  port (
    zero_CI_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_2 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_133 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_133;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_133 is
  signal \^zero_ci_1\ : STD_LOGIC;
begin
  \^zero_ci_1\ <= lopt;
  zero_CI_1 <= \^zero_ci_1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_134 is
  port (
    zero_CI_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_134 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_134;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_134 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_2 <= \^lopt_3\;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => zero_CI_3,
      CO(3) => \^lopt_5\,
      CO(2) => \^lopt_3\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_2,
      CYINIT => '0',
      DI(3) => \^lopt_6\,
      DI(2) => reg_Test_Equal_N,
      DI(1) => reg_Test_Equal_N,
      DI(0) => reg_Test_Equal_N,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_135 is
  port (
    zero_CI_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_4 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_135 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_135;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_135 is
  signal \^zero_ci_3\ : STD_LOGIC;
begin
  \^zero_ci_3\ <= lopt;
  zero_CI_3 <= \^zero_ci_3\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_136 is
  port (
    zero_CI_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_5 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_136 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_136;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_136 is
  signal \^zero_ci_4\ : STD_LOGIC;
begin
  \^zero_ci_4\ <= lopt;
  zero_CI_4 <= \^zero_ci_4\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_137 is
  port (
    zero_CI_5 : out STD_LOGIC;
    S : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    zero_CI_6 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_137 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_137;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_137 is
  signal \^zero_ci_5\ : STD_LOGIC;
begin
  \^zero_ci_5\ <= lopt;
  zero_CI_5 <= \^zero_ci_5\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_14 is
  port (
    carry_chain_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_14 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_14;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_14 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_chain_2,
      CYINIT => \Using_FPGA.Native_0\,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_22 is
  port (
    Carry_Out : out STD_LOGIC;
    Trace_Cache_Hit0 : out STD_LOGIC;
    Trace_Cache_Hit_reg : in STD_LOGIC;
    tag_ok_without_parity : in STD_LOGIC;
    Valid_Req_1st_Cycle : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_22 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_22;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_22 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  \^carry_out\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
Trace_Cache_Hit_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^carry_out\,
      I1 => Valid_Req_1st_Cycle,
      O => Trace_Cache_Hit0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_221 is
  port (
    byte_0 : out STD_LOGIC;
    PCMP_Instr2_out : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_221 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_221;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_221 is
  signal \<const0>\ : STD_LOGIC;
  signal \^byte_0\ : STD_LOGIC;
begin
  \^byte_0\ <= lopt;
  byte_0 <= \^byte_0\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_222 is
  port (
    byte_0x_0 : out STD_LOGIC;
    Enable_2 : in STD_LOGIC;
    byte_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_222 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_222;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_222 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => byte_0,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => byte_0x_0,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => Enable_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_223 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_8\ : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    \Using_FPGA.Native_i_6__4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__4_0\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_223 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_223;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_223 is
  signal \<const0>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_8__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_6__4\,
      I2 => \Using_FPGA.Native_i_6__4_0\,
      I3 => Op1_Logic,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_224 is
  port (
    carry_2 : out STD_LOGIC;
    S_7 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_224 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_224;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_224 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_225 is
  port (
    carry_1 : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_6\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_225 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_225;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_225 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_1,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.The_Compare[2].sel_reg_6\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_226 is
  port (
    byte_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_226 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_226;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_226 is
  signal \<const0>\ : STD_LOGIC;
  signal \^byte_1\ : STD_LOGIC;
begin
  \^byte_1\ <= lopt;
  byte_1 <= \^byte_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_227 is
  port (
    byte_0x_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    byte_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_227 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_227;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_227 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => byte_1,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => byte_0x_1,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_228 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_5\ : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_228 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_228;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_228 is
  signal \<const0>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_229 is
  port (
    carry_2 : out STD_LOGIC;
    S_4 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_229 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_229;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_229 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_230 is
  port (
    carry_1 : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_3\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_230 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_230;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_230 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_1,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.The_Compare[2].sel_reg_3\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_231 is
  port (
    byte_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_231 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_231;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_231 is
  signal \<const0>\ : STD_LOGIC;
  signal \^byte_2\ : STD_LOGIC;
begin
  \^byte_2\ <= lopt;
  byte_2 <= \^byte_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_232 is
  port (
    byte_0x_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    byte_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_232 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_232;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_232 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => byte_2,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => byte_0x_2,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_233 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_2\ : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_233 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_233;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_233 is
  signal \<const0>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_234 is
  port (
    carry_2 : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_234 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_234;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_234 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_235 is
  port (
    carry_1 : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_235 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_235;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_235 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_1,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.The_Compare[2].sel_reg_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_236 is
  port (
    byte_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_236 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_236;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_236 is
  signal \<const0>\ : STD_LOGIC;
  signal \^byte_3\ : STD_LOGIC;
begin
  \^byte_3\ <= lopt;
  byte_3 <= \^byte_3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_237 is
  port (
    byte_0x_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    byte_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_237 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_237;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_237 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => byte_3,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => byte_0x_3,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_238 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Use_The_PCMP_instr.CLZ_Instr_reg\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg\ : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_238 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_238;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_238 is
  signal \<const0>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4__13\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5__3\ : label is "soft_lutpair5";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_4__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2000"
    )
        port map (
      I0 => clz_instr,
      I1 => \Using_FPGA.Native_i_1__75\,
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_i_1__75_0\,
      O => \Use_The_PCMP_instr.CLZ_Instr_reg\
    );
\Using_FPGA.Native_i_5__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_1__75\,
      I2 => clz_instr,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_239 is
  port (
    carry_2 : out STD_LOGIC;
    S : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_239 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_239;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_239 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_240 is
  port (
    carry_1 : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_240 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_240;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_240 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_1,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.The_Compare[2].sel_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_3 is
  port (
    word_is_valid : out STD_LOGIC;
    Trace_ICache_Rdy_reg : in STD_LOGIC;
    Carry_OUT : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_3 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_3;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_3 is
  signal \<const0>\ : STD_LOGIC;
  signal \^word_is_valid\ : STD_LOGIC;
begin
  \^word_is_valid\ <= lopt;
  lopt_1 <= \<const0>\;
  word_is_valid <= \^word_is_valid\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_4 is
  port (
    \Use_XX_Accesses.xx_valid_data_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    valid_Req_XX_reg : out STD_LOGIC;
    word_is_valid : in STD_LOGIC;
    valid_Req_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_reg_0 : in STD_LOGIC;
    valid_Req_XX_reg_1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \A__0\ : in STD_LOGIC;
    valid_Req_XX_reg_2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_4 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_4;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_4 is
  signal S : STD_LOGIC;
  signal \^use_xx_accesses.xx_valid_data_reg\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \Use_XX_Accesses.xx_valid_data_reg\ <= \^use_xx_accesses.xx_valid_data_reg\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => word_is_valid,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^use_xx_accesses.xx_valid_data_reg\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3) => lopt_10,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__84\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \A__0\,
      O => S
    );
valid_Req_XX_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00008B88"
    )
        port map (
      I0 => valid_Req_XX_reg_0,
      I1 => valid_Req_XX_reg_1(0),
      I2 => \^use_xx_accesses.xx_valid_data_reg\,
      I3 => valid_Req_XX_reg_2,
      I4 => sync_reset,
      O => valid_Req_XX_reg
    );
valid_Req_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000C055C000"
    )
        port map (
      I0 => \^use_xx_accesses.xx_valid_data_reg\,
      I1 => valid_Req_reg(0),
      I2 => valid_Req_XX_reg_0,
      I3 => valid_Req_XX_reg_1(0),
      I4 => valid_Req,
      I5 => sync_reset,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_40 is
  port (
    carry_7 : out STD_LOGIC;
    SRL16_Sel_7 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_40 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_40;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_40 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_7,
      CYINIT => Q(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_41 is
  port (
    carry_6 : out STD_LOGIC;
    SRL16_Sel_6 : in STD_LOGIC;
    carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_41 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_41;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_41 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_6\ : STD_LOGIC;
begin
  \^carry_6\ <= lopt;
  carry_6 <= \^carry_6\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_43 is
  port (
    carry_5 : out STD_LOGIC;
    SRL16_Sel_5 : in STD_LOGIC;
    carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_43 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_43;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_43 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_5\ : STD_LOGIC;
begin
  \^carry_5\ <= lopt;
  carry_5 <= \^carry_5\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_45 is
  port (
    carry_4 : out STD_LOGIC;
    SRL16_Sel_4 : in STD_LOGIC;
    carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_45 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_45;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_45 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_4\ : STD_LOGIC;
begin
  \^carry_4\ <= lopt;
  carry_4 <= \^carry_4\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_47 is
  port (
    carry_3 : out STD_LOGIC;
    SRL16_Sel_3 : in STD_LOGIC;
    carry_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_47 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_47;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_47 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_49 is
  port (
    carry_2 : out STD_LOGIC;
    SRL16_Sel_2 : in STD_LOGIC;
    carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_49 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_49;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_49 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_5 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S : in STD_LOGIC;
    carry_chain_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_5 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_5;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_5 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_51 is
  port (
    carry_1 : out STD_LOGIC;
    SRL16_Sel_1 : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_51 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_51;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_51 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_1\ : STD_LOGIC;
begin
  \^carry_1\ <= lopt;
  carry_1 <= \^carry_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_53 is
  port (
    carry_0 : out STD_LOGIC;
    SRL16_Sel_0 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_53 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_53;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_53 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_0\ : STD_LOGIC;
begin
  \^carry_0\ <= lopt;
  carry_0 <= \^carry_0\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_55 is
  port (
    Hit : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    Single_Step_N : in STD_LOGIC;
    carry_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_55 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_55;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_55 is
  signal \^hit\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  Hit <= \^hit\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_0,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^hit\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => Single_Step_N
    );
\Using_FPGA.Native_i_6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFBFBFFFBFBFBFB"
    )
        port map (
      I0 => \^hit\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => single_Step_N_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_6 is
  port (
    \Not_Using_TLBS.instr_Addr_1_reg[16]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Trace_ICache_Hit0 : out STD_LOGIC;
    valid_Req_reg : out STD_LOGIC;
    \Comp_Carry_Chain[1].carry_sel_reg\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    valid_addr_strobe_q : in STD_LOGIC;
    \req_Addr_reg[27]\ : in STD_LOGIC;
    valid_Req : in STD_LOGIC;
    xx_wait_for_data_postponed : in STD_LOGIC;
    \Use_XX_Accesses.xx_wait_for_data_postponed_reg\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_6 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_6;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_6 is
  signal \<const0>\ : STD_LOGIC;
  signal \^not_using_tlbs.instr_addr_1_reg[16]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Trace_ICache_Hit_i_1 : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \req_Addr[16]_i_1\ : label is "soft_lutpair84";
begin
  \Not_Using_TLBS.instr_Addr_1_reg[16]\ <= \^not_using_tlbs.instr_addr_1_reg[16]\;
  \^not_using_tlbs.instr_addr_1_reg[16]\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
Trace_ICache_Hit_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^not_using_tlbs.instr_addr_1_reg[16]\,
      I1 => valid_Req,
      I2 => valid_addr_strobe_q,
      O => Trace_ICache_Hit0
    );
\Use_XX_Accesses.xx_wait_for_data_postponed_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF7F004000C00000"
    )
        port map (
      I0 => valid_Req,
      I1 => valid_addr_strobe_q,
      I2 => \req_Addr_reg[27]\,
      I3 => \^not_using_tlbs.instr_addr_1_reg[16]\,
      I4 => xx_wait_for_data_postponed,
      I5 => \Use_XX_Accesses.xx_wait_for_data_postponed_reg\,
      O => valid_Req_reg
    );
\req_Addr[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => valid_addr_strobe_q,
      I1 => \req_Addr_reg[27]\,
      I2 => \^not_using_tlbs.instr_addr_1_reg[16]\,
      O => E(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_68 is
  port (
    correct_Carry_I : out STD_LOGIC;
    correct_Carry_Select : in STD_LOGIC;
    sub_Carry : in STD_LOGIC;
    correct_Carry : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_68 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_68;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_68 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  lopt <= \^lopt_1\;
  lopt_3 <= lopt_2;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => correct_Carry,
      CO(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \^lopt_1\,
      CO(0) => correct_Carry_I,
      CYINIT => '0',
      DI(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 2),
      DI(1) => \^lopt_2\,
      DI(0) => sub_Carry,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 2),
      S(1) => lopt_3,
      S(0) => correct_Carry_Select
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_7 is
  port (
    carry_chain_2 : out STD_LOGIC;
    valid_Req : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_7 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_7;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_7 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_chain_2,
      CYINIT => valid_Req,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_71 is
  port (
    correct_Carry : out STD_LOGIC;
    new_Carry : in STD_LOGIC;
    write_Carry_I : in STD_LOGIC;
    Shift_Carry_In_reg : in STD_LOGIC;
    Shift_Carry_In_reg_0 : in STD_LOGIC;
    msrxxx_carry : in STD_LOGIC;
    Shift_Carry_In_reg_1 : in STD_LOGIC;
    Shift_Carry_In_reg_2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Shift_Carry_In_reg_3 : in STD_LOGIC;
    Shift_Carry_In_reg_4 : in STD_LOGIC;
    Shift_Carry_In_reg_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_71 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_71;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_71 is
  signal DI_0 : STD_LOGIC;
  signal \^correct_carry\ : STD_LOGIC;
  signal write_Carry : STD_LOGIC;
begin
  \^correct_carry\ <= lopt;
  correct_Carry <= \^correct_carry\;
  lopt_1 <= DI_0;
  lopt_2 <= write_Carry;
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => write_Carry_I,
      I1 => Shift_Carry_In_reg,
      I2 => Shift_Carry_In_reg_0,
      O => write_Carry
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B888B888B8BBB888"
    )
        port map (
      I0 => msrxxx_carry,
      I1 => Shift_Carry_In_reg_1,
      I2 => Shift_Carry_In_reg_2(0),
      I3 => Shift_Carry_In_reg_3,
      I4 => Shift_Carry_In_reg_4,
      I5 => Shift_Carry_In_reg_5,
      O => DI_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_76 is
  port (
    correct_Carry_II : out STD_LOGIC;
    correct_Carry_I : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_76 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_76;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_76 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^correct_carry_ii\ : STD_LOGIC;
begin
  \^correct_carry_ii\ <= lopt;
  correct_Carry_II <= \^correct_carry_ii\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_77 is
  port (
    jump_Carry1 : out STD_LOGIC;
    force_jump1 : in STD_LOGIC;
    force_DI1 : in STD_LOGIC;
    Reg_zero : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_77 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_77;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_77 is
  signal \^jump_carry1\ : STD_LOGIC;
begin
  \^jump_carry1\ <= lopt;
  jump_Carry1 <= \^jump_carry1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_78 is
  port (
    jump_Carry2 : out STD_LOGIC;
    force_jump2 : in STD_LOGIC;
    force_DI2 : in STD_LOGIC;
    jump_Carry1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_78 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_78;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_78 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_Carry1,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => jump_Carry2,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => force_DI2,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => force_jump2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_79 is
  port (
    of_Pause_reg : out STD_LOGIC;
    R : out STD_LOGIC;
    PC_Write : out STD_LOGIC;
    mul_Executing0 : out STD_LOGIC;
    mbar_first : out STD_LOGIC;
    wdc_first : out STD_LOGIC;
    wic_first : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    inHibit_EX_reg_0 : out STD_LOGIC;
    branch_with_delay : out STD_LOGIC;
    inHibit_EX_reg_1 : out STD_LOGIC;
    inHibit_EX_reg_2 : out STD_LOGIC;
    trace_jump_taken_i_reg : in STD_LOGIC;
    jump_Carry2 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_first : in STD_LOGIC;
    wdc_first_reg : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    wic_first_reg : in STD_LOGIC;
    wic_first_reg_0 : in STD_LOGIC;
    ex_Valid_1st_cycle_reg : in STD_LOGIC;
    wic_first0 : in STD_LOGIC;
    wdc_first_reg_0 : in STD_LOGIC;
    dcache_read_idle : in STD_LOGIC;
    wdc_first0 : in STD_LOGIC;
    mbar_sleep : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    mbar_first_reg : in STD_LOGIC;
    mbar_first_reg_0 : in STD_LOGIC;
    of_mbar_decode : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    delay_slot_instr_reg : in STD_LOGIC;
    ex_Valid_reg : in STD_LOGIC;
    ex_Valid_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_79 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_79;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_79 is
  signal \<const0>\ : STD_LOGIC;
  signal \^inhibit_ex_reg\ : STD_LOGIC;
  signal \^inhibit_ex_reg_0\ : STD_LOGIC;
  signal \^mbar_first\ : STD_LOGIC;
  signal \^of_pause_reg\ : STD_LOGIC;
  signal \^wdc_first\ : STD_LOGIC;
  signal \^wic_first\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__14\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__3\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of ex_Valid_1st_cycle_i_1 : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of mbar_first_i_4 : label is "soft_lutpair24";
begin
  \^of_pause_reg\ <= lopt;
  inHibit_EX_reg <= \^inhibit_ex_reg\;
  inHibit_EX_reg_0 <= \^inhibit_ex_reg_0\;
  lopt_1 <= \<const0>\;
  mbar_first <= \^mbar_first\;
  of_Pause_reg <= \^of_pause_reg\;
  wdc_first <= \^wdc_first\;
  wic_first <= \^wic_first\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => \Using_FPGA.Native_2\,
      O => \^inhibit_ex_reg\
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => \Using_FPGA.Native_0\,
      I2 => sync_reset,
      O => R
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => \Using_FPGA.Native_1\,
      O => PC_Write
    );
delay_slot_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => delay_slot_instr_reg,
      O => branch_with_delay
    );
ex_Valid_1st_cycle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0070"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => \Using_FPGA.Native_2\,
      I2 => ex_Valid_1st_cycle_reg,
      I3 => sync_reset,
      O => inHibit_EX_reg_2
    );
ex_Valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77FF77F0770077F0"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \^of_pause_reg\,
      I2 => ex_Valid_reg,
      I3 => ex_Valid_1st_cycle_reg,
      I4 => wdc_first_reg,
      I5 => ex_Valid_reg_0,
      O => inHibit_EX_reg_1
    );
mbar_first_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FE00FFFFFE000000"
    )
        port map (
      I0 => mbar_sleep,
      I1 => ex_first_cycle,
      I2 => mbar_first_reg,
      I3 => mbar_first_reg_0,
      I4 => \^inhibit_ex_reg_0\,
      I5 => of_mbar_decode,
      O => \^mbar_first\
    );
mbar_first_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8F"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \^of_pause_reg\,
      I2 => ex_Valid_1st_cycle_reg,
      O => \^inhibit_ex_reg_0\
    );
mul_Executing_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFEEFE"
    )
        port map (
      I0 => \^mbar_first\,
      I1 => \^wdc_first\,
      I2 => mul_first,
      I3 => wdc_first_reg,
      I4 => mul_Executing_reg,
      I5 => \^wic_first\,
      O => mul_Executing0
    );
wdc_first_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"04FF040404000404"
    )
        port map (
      I0 => wdc_first_reg,
      I1 => wdc_first_reg_0,
      I2 => dcache_read_idle,
      I3 => \^inhibit_ex_reg\,
      I4 => ex_Valid_1st_cycle_reg,
      I5 => wdc_first0,
      O => \^wdc_first\
    );
wic_first_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08FF080808000808"
    )
        port map (
      I0 => wic_first_reg,
      I1 => wic_first_reg_0,
      I2 => wdc_first_reg,
      I3 => \^inhibit_ex_reg\,
      I4 => ex_Valid_1st_cycle_reg,
      I5 => wic_first0,
      O => \^wic_first\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_80 is
  port (
    new_Carry : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    select_ALU_Carry : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    write_Carry_I : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_80 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_80;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_80 is
  signal \^new_carry\ : STD_LOGIC;
begin
  \^new_carry\ <= lopt;
  new_Carry <= \^new_carry\;
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAABAAA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^new_carry\,
      I2 => write_Carry_I,
      I3 => \Using_FPGA.Native_1\,
      I4 => \Using_FPGA.Native_2\,
      O => \Use_Async_Reset.sync_reset_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_89 is
  port (
    IReady : out STD_LOGIC;
    \write_Addr_I_reg[3]\ : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_89 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_89;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_89 is
  signal \<const0>\ : STD_LOGIC;
  signal \^iready\ : STD_LOGIC;
begin
  IReady <= \^iready\;
  \^iready\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_9 is
  port (
    cache_hit : out STD_LOGIC;
    write_data_done : out STD_LOGIC;
    Write_Done : in STD_LOGIC;
    Carry_Out : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    valid_cache_hit : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_9 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_9;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_9 is
  signal S27_out : STD_LOGIC;
  signal \^cache_hit\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  cache_hit <= \^cache_hit\;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => Carry_Out,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^cache_hit\,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => Write_Done,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => S27_out
    );
\Using_FPGA.Native_i_1__144\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => valid_cache_hit,
      O => S27_out
    );
\Using_New_CacheInterface_for_AXI.read_req_done_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => \^cache_hit\,
      O => write_data_done
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_92 is
  port (
    ifetch_carry1 : out STD_LOGIC;
    buffer_Full : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_92 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_92;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_92 is
  signal \<const1>\ : STD_LOGIC;
  signal \^ifetch_carry1\ : STD_LOGIC;
begin
  \^ifetch_carry1\ <= lopt;
  ifetch_carry1 <= \^ifetch_carry1\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_93 is
  port (
    ifetch_carry2 : out STD_LOGIC;
    mbar_hold_I_reg : out STD_LOGIC;
    mul_Executing_reg : out STD_LOGIC;
    iFetch_In_Progress_reg : out STD_LOGIC;
    missed_IFetch_reg : out STD_LOGIC;
    iFetch_In_Progress_reg_0 : in STD_LOGIC;
    ifetch_carry1 : in STD_LOGIC;
    of_mbar_decode : in STD_LOGIC;
    mbar_hold_I_reg_0 : in STD_LOGIC;
    mbar_hold_I_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    mbar_decode_I : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\ : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    missed_IFetch_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_93 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_93;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_93 is
  signal \<const0>\ : STD_LOGIC;
  signal \^ifetch_carry2\ : STD_LOGIC;
  signal \^mul_executing_reg\ : STD_LOGIC;
begin
  \^ifetch_carry2\ <= lopt;
  ifetch_carry2 <= \^ifetch_carry2\;
  lopt_1 <= \<const0>\;
  mul_Executing_reg <= \^mul_executing_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
I_AS_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF000000BF00BF00"
    )
        port map (
      I0 => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\,
      I1 => mul_Executing,
      I2 => mbar_decode_I,
      I3 => \^ifetch_carry2\,
      I4 => complete_iready,
      I5 => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\,
      O => \^mul_executing_reg\
    );
iFetch_In_Progress_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F4F4F4F444F4F4F4"
    )
        port map (
      I0 => complete_iready,
      I1 => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\,
      I2 => \^ifetch_carry2\,
      I3 => mbar_decode_I,
      I4 => mul_Executing,
      I5 => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\,
      O => iFetch_In_Progress_reg
    );
mbar_hold_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => of_mbar_decode,
      I2 => mbar_hold_I_reg_0,
      I3 => mbar_hold_I_reg_1,
      I4 => sync_reset,
      O => mbar_hold_I_reg
    );
missed_IFetch_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4744"
    )
        port map (
      I0 => complete_iready,
      I1 => missed_IFetch,
      I2 => \^mul_executing_reg\,
      I3 => missed_IFetch_reg_0,
      O => missed_IFetch_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_933 is
  port (
    CI : out STD_LOGIC;
    control_carry : in STD_LOGIC;
    carry_In : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_933 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_933;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_933 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => carry_In,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => control_carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_94 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ifetch_carry2 : in STD_LOGIC;
    \Serial_Dbg_Intf.status_reg_reg[25]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_94 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_94;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_94 is
  signal \Using_FPGA.Native_i_1__66_n_0\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => ifetch_carry2,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => D(0),
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__66_n_0\
    );
\Using_FPGA.Native_i_1__66\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg[25]\,
      O => \Using_FPGA.Native_i_1__66_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_95 is
  port (
    mul_Executing_reg : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    using_Imm_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    ok_To_Stop : out STD_LOGIC;
    p_2_out : out STD_LOGIC;
    is_swx_I : out STD_LOGIC;
    Blocked_Valid_Instr0 : out STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    load_Store_i_reg : out STD_LOGIC;
    of_PipeRun_Select : in STD_LOGIC;
    of_PipeRun_without_dready : in STD_LOGIC;
    complete_dready : in STD_LOGIC;
    \Area_Debug_Control.force_stop_cmd_hold_reg\ : in STD_LOGIC;
    inHibit_EX_reg_0 : in STD_LOGIC;
    inHibit_EX_reg_1 : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    using_Imm_reg_0 : in STD_LOGIC;
    load_Store_i_reg_0 : in STD_LOGIC;
    using_Imm_reg_1 : in STD_LOGIC;
    using_Imm_reg_2 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_LWX_SWX_instr.reservation_reg_0\ : in STD_LOGIC;
    load_Store_i_reg_1 : in STD_LOGIC;
    set_BIP_I : in STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg_1\ : in STD_LOGIC;
    swx_ready_reg : in STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg_2\ : in STD_LOGIC;
    is_lwx_I : in STD_LOGIC;
    \Area_Debug_Control.force_stop_cmd_hold_reg_0\ : in STD_LOGIC;
    force_stop_cmd_i : in STD_LOGIC;
    force_stop_cmd_hold : in STD_LOGIC;
    load_Store_i_reg_2 : in STD_LOGIC;
    swx_ready : in STD_LOGIC;
    Blocked_Valid_Instr_reg : in STD_LOGIC;
    delay_slot_instr_reg : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 1 downto 0 );
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_95 : entity is "MB_MUXCY";
end design_1_microblaze_1_1_MB_MUXCY_95;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_95 is
  signal \Using_LWX_SWX_instr.reservation_i_2_n_0\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.reservation_i_3_n_0\ : STD_LOGIC;
  signal \^is_swx_i\ : STD_LOGIC;
  signal \^mul_executing_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Area_Debug_Control.force_stop_cmd_hold_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of Blocked_Valid_Instr_i_1 : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__85\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \Using_FPGA.Valid_Instr_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \Using_LWX_SWX_instr.reservation_i_2\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of swx_ready_i_1 : label is "soft_lutpair27";
begin
  \^mul_executing_reg\ <= lopt;
  is_swx_I <= \^is_swx_i\;
  mul_Executing_reg <= \^mul_executing_reg\;
\Area_Debug_Control.force_stop_cmd_hold_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EE0E0E0E"
    )
        port map (
      I0 => force_stop_cmd_i,
      I1 => force_stop_cmd_hold,
      I2 => \^mul_executing_reg\,
      I3 => \Area_Debug_Control.force_stop_cmd_hold_reg_0\,
      I4 => \Area_Debug_Control.force_stop_cmd_hold_reg\,
      O => p_2_out
    );
Blocked_Valid_Instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => Blocked_Valid_Instr_reg,
      O => Blocked_Valid_Instr0
    );
\Using_FPGA.Native_I1_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => Buffer_Addr(0),
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__85\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => delay_slot_instr_reg,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Valid_Instr_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => \Area_Debug_Control.force_stop_cmd_hold_reg_0\,
      I2 => \Area_Debug_Control.force_stop_cmd_hold_reg\,
      O => ok_To_Stop
    );
\Using_LWX_SWX_instr.reservation_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF000000DF"
    )
        port map (
      I0 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I1 => \Using_LWX_SWX_instr.reservation_i_2_n_0\,
      I2 => load_Store_i_reg_1,
      I3 => \Using_LWX_SWX_instr.reservation_i_3_n_0\,
      I4 => set_BIP_I,
      I5 => \Using_LWX_SWX_instr.reservation_reg_1\,
      O => is_swx_I_reg
    );
\Using_LWX_SWX_instr.reservation_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^mul_executing_reg\,
      I1 => complete_dready,
      O => \Using_LWX_SWX_instr.reservation_i_2_n_0\
    );
\Using_LWX_SWX_instr.reservation_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBBABBBABBBBBBB"
    )
        port map (
      I0 => sync_reset,
      I1 => swx_ready_reg,
      I2 => \Using_LWX_SWX_instr.reservation_reg_2\,
      I3 => is_lwx_I,
      I4 => complete_dready,
      I5 => \^mul_executing_reg\,
      O => \Using_LWX_SWX_instr.reservation_i_3_n_0\
    );
inHibit_EX_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E200E2E2"
    )
        port map (
      I0 => \Area_Debug_Control.force_stop_cmd_hold_reg\,
      I1 => \^mul_executing_reg\,
      I2 => inHibit_EX_reg_0,
      I3 => inHibit_EX_reg_1,
      I4 => complete_iready,
      O => inHibit_EX_reg
    );
is_lwx_I_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABAAABAAABAAAAAA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^mul_executing_reg\,
      I2 => load_Store_i_reg_2,
      I3 => load_Store_i_reg_1,
      I4 => swx_ready,
      I5 => complete_dready,
      O => \^is_swx_i\
    );
load_Store_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E222222"
    )
        port map (
      I0 => load_Store_i_reg_1,
      I1 => \^mul_executing_reg\,
      I2 => load_Store_i_reg_0,
      I3 => instr_OF(0),
      I4 => instr_OF(1),
      I5 => \^is_swx_i\,
      O => load_Store_i_reg
    );
swx_ready_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => swx_ready_reg,
      I1 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I2 => sync_reset,
      I3 => \^mul_executing_reg\,
      O => \Using_LWX_SWX_instr.reservation_reg\
    );
using_Imm_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000002E22"
    )
        port map (
      I0 => using_Imm_reg_0,
      I1 => \^mul_executing_reg\,
      I2 => load_Store_i_reg_0,
      I3 => using_Imm_reg_1,
      I4 => using_Imm_reg_2,
      I5 => sync_reset,
      O => using_Imm_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY is
  port (
    buffer_Addr_S_I_2 : out STD_LOGIC;
    S_33 : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY is
  signal \^buffer_addr_s_i_2\ : STD_LOGIC;
begin
  \^buffer_addr_s_i_2\ <= lopt;
  buffer_Addr_S_I_2 <= \^buffer_addr_s_i_2\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1000 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1000 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1000;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1000 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1002 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1002 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1002;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1002 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \in\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1004 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1004 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1004;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1004 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1006 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1006 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1006;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1006 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1008 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1008 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1008;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1008 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1010 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1010 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1010;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1010 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1012 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1012 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1012;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1012 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \in\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1014 is
  port (
    \Using_FPGA.Native_I2_0\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1014 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1014;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1014 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
Valid_Req_1st_Cycle_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Valid_Req_1st_Cycle_i_2,
      I2 => Valid_Req_1st_Cycle_i_2_0,
      I3 => Valid_Req_1st_Cycle_i_2_1,
      O => \Using_FPGA.Native_I2_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1016 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1016 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1016;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1016 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1018 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1018 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1018;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1018 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1020 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1020 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1020;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1020 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1022 is
  port (
    \Using_FPGA.Native_I2_0\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1022 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1022;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1022 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
Valid_Req_1st_Cycle_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Valid_Req_1st_Cycle_i_2,
      I2 => Valid_Req_1st_Cycle_i_2_0,
      I3 => Valid_Req_1st_Cycle_i_2_1,
      O => \Using_FPGA.Native_I2_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1024 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1024 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1024;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1024 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_1026 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_1026 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_1026;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_1026 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native\ <= lopt;
  \^using_fpga.native_0\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_583 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    Carry_In : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_583 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_583;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_583 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_586 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_586 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_586;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_586 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_592 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_592 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_592;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_592 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_598 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_598 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_598;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_598 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_604 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_604 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_604;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_604 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_610 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_610 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_610;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_610 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_616 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_616 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_616;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_616 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_9;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_8 <= \^lopt_9\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_9\,
      O(2) => \^lopt_8\,
      O(1) => \^lopt_7\,
      O(0) => O,
      S(3) => lopt_10,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_622 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_622 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_622;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_622 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_628 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    Carry_Out : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_628 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_628;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_628 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_634 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_634 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_634;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_634 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_640 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_640 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_640;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_640 is
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_646 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_646 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_646;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_646 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_652 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_652 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_652;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_652 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_658 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_658 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_658;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_658 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_664 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_664 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_664;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_664 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_670 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_670 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_670;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_670 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_676 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_676 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_676;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_676 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_682 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_682 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_682;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_682 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_688 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_688 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_688;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_688 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_694 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_694 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_694;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_694 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_700 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_700 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_700;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_700 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_706 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_706 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_706;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_706 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_712 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_712 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_712;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_712 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_718 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_718 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_718;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_718 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_724 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_724 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_724;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_724 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_730 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_730 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_730;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_730 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_736 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_736 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_736;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_736 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_742 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_742 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_742;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_742 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_748 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_748 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_748;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_748 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_754 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_754 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_754;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_754 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => Carry_Out,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_760 is
  port (
    Carry_Out : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_760 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_760;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_760 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_out\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  Carry_Out <= \^carry_out\;
  O <= \^o\;
  \^carry_out\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_766 is
  port (
    pc_Sum : out STD_LOGIC;
    xor_Sum : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_766 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_766;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_766 is
  signal \^pc_sum\ : STD_LOGIC;
begin
  \^pc_sum\ <= lopt;
  pc_Sum <= \^pc_sum\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_964 is
  port (
    Valid_Req0 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    valid_req_XX_reg : in STD_LOGIC;
    valid_req_XX_reg_0 : in STD_LOGIC;
    O : in STD_LOGIC;
    valid_req_XX_reg_1 : in STD_LOGIC;
    valid_req_XX_reg_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_3 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_4 : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_964 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_964;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_964 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal Valid_Req_1st_Cycle_i_3_n_0 : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
Valid_Req_1st_Cycle_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000200"
    )
        port map (
      I0 => Valid_Req_1st_Cycle_i_3_n_0,
      I1 => valid_req_XX_reg,
      I2 => valid_req_XX_reg_0,
      I3 => O,
      I4 => valid_req_XX_reg_1,
      I5 => valid_req_XX_reg_2,
      O => Valid_Req0
    );
Valid_Req_1st_Cycle_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000008"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Valid_Req_1st_Cycle_i_2_0,
      I2 => Valid_Req_1st_Cycle_i_2_1,
      I3 => Valid_Req_1st_Cycle_i_2_2,
      I4 => Valid_Req_1st_Cycle_i_2_3,
      I5 => Valid_Req_1st_Cycle_i_2_4,
      O => Valid_Req_1st_Cycle_i_3_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_966 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_966 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_966;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_966 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_968 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_968 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_968;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_968 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_97 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_97 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_97;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_97 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  lopt <= \^lopt_1\;
  lopt_2 <= lopt_1;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.Native_0\,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => LO,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => \Using_FPGA.Native\,
      O(3 downto 2) => \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\(3 downto 2),
      O(1) => \^lopt_1\,
      O(0) => O,
      S(3 downto 2) => \NLW_Using_FPGA.Native_I1_CARRY4_S_UNCONNECTED\(3 downto 2),
      S(1) => lopt_2,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_970 is
  port (
    EX_CarryOut : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_970 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_970;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_970 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  O <= \^o\;
  \^ex_carryout\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_972 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_972 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_972;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_972 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_974 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_974 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_974;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_974 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_976 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_976 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_976;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_976 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_978 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_978 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_978;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_978 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_980 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_980 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_980;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_980 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_982 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_982 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_982;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_982 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
begin
  EX_CarryOut <= \^ex_carryout\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \^ex_carryout\ <= lopt;
  \^using_fpga.native\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_984 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_984 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_984;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_984 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_986 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_986 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_986;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_986 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \in\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_988 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_988 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_988;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_988 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_99 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_99 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_99;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_99 is
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_990 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_990 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_990;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_990 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_992 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_992 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_992;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_992 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_994 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_994 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_994;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_994 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \in\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_996 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_996 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_996;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_996 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXCY_XORCY_998 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXCY_XORCY_998 : entity is "MB_MUXCY_XORCY";
end design_1_microblaze_1_1_MB_MUXCY_XORCY_998;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXCY_XORCY_998 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^in\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^in\(0) <= lopt_1;
  \in\(0) <= \^in\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7 is
  port (
    res_1x : out STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_10 : in STD_LOGIC;
    res_11 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => res_10,
      I1 => res_11,
      O => res_1x,
      S => instr_ex(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_241 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_241 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_241;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_241 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_244 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_244 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_244;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_244 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_247 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_247 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_247;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_247 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_250 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_250 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_250;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_250 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_253 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_253 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_253;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_253 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_256 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_256 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_256;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_256 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_259 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_259 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_259;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_259 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_262 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_0\ : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_262 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_262;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_262 is
  signal Shift_Logic_Res_0 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res_0,
      S => Select_Logic
    );
\Using_FPGA.Native_i_6__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888F888888888888"
    )
        port map (
      I0 => \Using_FPGA.Native_i_1__74\,
      I1 => Shift_Logic_Res_0,
      I2 => \Using_FPGA.Native_i_1__74_0\,
      I3 => Shifted,
      I4 => \Using_FPGA.Native_i_1__74_1\,
      I5 => \Using_FPGA.Native_i_1__74_2\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_265 is
  port (
    Shift_Logic_Res : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_265 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_265;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_265 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_268 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_268 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_268;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_268 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_271 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_271 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_271;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_271 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_274 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_274 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_274;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_274 is
  signal Shift_Logic_Res29_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res29_out,
      S => Select_Logic
    );
\Using_FPGA.Native_i_1__77\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88F8FFFF88888888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Shift_Logic_Res29_out,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_277 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_277 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_277;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_277 is
  signal Shift_Logic_Res28_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res28_out,
      S => Select_Logic
    );
\Using_FPGA.Native_i_1__78\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8FFF888888888888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Shift_Logic_Res28_out,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_280 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_280 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_280;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_280 is
  signal Shift_Logic_Res27_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Shift_Logic_Res27_out,
      S => Select_Logic
    );
\Using_FPGA.Native_i_1__79\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888888888888888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Shift_Logic_Res27_out,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_283 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_283 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_283;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_283 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_286 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_286 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_286;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_286 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_289 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_289 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_289;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_289 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_292 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_292 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_292;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_292 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_295 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_295 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_295;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_295 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_298 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_298 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_298;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_298 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_301 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_301 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_301;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_301 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_304 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_304 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_304;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_304 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_307 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_307 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_307;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_307 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_310 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_310 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_310;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_310 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_313 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_313 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_313;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_313 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_316 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_316 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_316;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_316 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_319 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_319 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_319;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_319 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_322 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_322 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_322;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_322 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_325 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_325 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_325;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_325 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_328 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_328 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_328;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_328 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_331 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_331 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_331;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_331 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_MUXF7_334 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    shift_Res : in STD_LOGIC;
    logic_Res_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_MUXF7_334 : entity is "MB_MUXF7";
end design_1_microblaze_1_1_MB_MUXF7_334;

architecture STRUCTURE of design_1_microblaze_1_1_MB_MUXF7_334 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => shift_Res,
      I1 => logic_Res_i,
      O => Select_Logic_reg,
      S => Select_Logic
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_490 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_490 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_490;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_490 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_491 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_491 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_491;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_491 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_492 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_492 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_492;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_492 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_493 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_493 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_493;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_493 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_494 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_494 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_494;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_494 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_495 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_495 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_495;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_495 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_496 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_496 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_496;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_496 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_497 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_497 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_497;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_497 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_498 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_498 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_498;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_498 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_499 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_499 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_499;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_499 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_500 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_500 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_500;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_500 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_501 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_501 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_501;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_501 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_502 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_502 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_502;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_502 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_503 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_503 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_503;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_503 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_504 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_504 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_504;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_504 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_505 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_505 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_505;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_505 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_506 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_506 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_506;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_506 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_507 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_507 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_507;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_507 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_508 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_508 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_508;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_508 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_509 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_509 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_509;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_509 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_510 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_510 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_510;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_510 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_511 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_511 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_511;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_511 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_512 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_512 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_512;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_512 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_513 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_513 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_513;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_513 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_514 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_514 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_514;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_514 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_515 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_515 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_515;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_515 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_516 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_516 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_516;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_516 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_517 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_517 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_517;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_517 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_518 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_518 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_518;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_518 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_519 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_519 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_519;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_519 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Clk_0(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_520 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_520 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_520;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_520 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_521 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_521 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_521;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_521 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_522 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_522 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_522;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_522 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_523 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_523 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_523;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_523 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_524 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_524 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_524;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_524 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_525 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_525 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_525;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_525 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_526 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_526 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_526;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_526 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_527 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_527 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_527;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_527 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_528 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_528 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_528;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_528 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_529 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_529 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_529;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_529 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_530 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_530 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_530;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_530 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_531 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_531 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_531;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_531 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_532 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_532 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_532;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_532 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_533 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_533 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_533;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_533 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_534 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_534 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_534;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_534 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_535 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_535 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_535;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_535 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_536 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_536 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_536;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_536 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_537 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_537 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_537;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_537 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_538 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_538 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_538;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_538 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_539 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_539 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_539;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_539 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_540 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_540 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_540;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_540 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_541 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_541 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_541;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_541 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_542 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_542 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_542;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_542 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_543 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_543 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_543;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_543 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_544 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_544 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_544;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_544 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_545 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_545 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_545;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_545 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_546 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_546 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_546;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_546 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_547 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_547 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_547;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_547 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_548 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_548 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_548;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_548 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_549 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_549 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_549;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_549 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_550 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_550 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_550;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_550 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_551 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_551 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_551;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_551 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg1_Data(0),
      DPRA0 => reg1_Addr(0),
      DPRA1 => reg1_Addr(1),
      DPRA2 => reg1_Addr(2),
      DPRA3 => reg1_Addr(3),
      DPRA4 => reg1_Addr(4),
      SPO => Data_Write(0),
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAM32X1D_552 is
  port (
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAM32X1D_552 : entity is "MB_RAM32X1D";
end design_1_microblaze_1_1_MB_RAM32X1D_552;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAM32X1D_552 is
  signal \Using_FPGA.Native_n_1\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32X1D
    generic map(
      INIT => X"00000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      A0 => Write_Addr(0),
      A1 => Write_Addr(1),
      A2 => Write_Addr(2),
      A3 => Write_Addr(3),
      A4 => Write_Addr(4),
      D => EX_Result(0),
      DPO => Reg2_Data(0),
      DPRA0 => imm_Value(4),
      DPRA1 => imm_Value(3),
      DPRA2 => imm_Value(2),
      DPRA3 => imm_Value(1),
      DPRA4 => imm_Value(0),
      SPO => \Using_FPGA.Native_n_1\,
      WCLK => Clk,
      WE => Reg_Write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAMB36 is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Clk : in STD_LOGIC;
    ENB1_out : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 7 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 7 downto 0 );
    DIBDI : in STD_LOGIC_VECTOR ( 8 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAMB36 : entity is "MB_RAMB36";
end design_1_microblaze_1_1_MB_RAMB36;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAMB36 is
  signal \Using_FPGA.Native_n_36\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_37\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_38\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_39\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_40\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_41\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_42\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_43\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_44\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_68\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_69\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_70\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_71\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_72\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_73\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_74\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_75\ : STD_LOGIC;
  signal Valid_Data_Bits : STD_LOGIC_VECTOR ( 0 to 3 );
  signal data_outa_i : STD_LOGIC_VECTOR ( 9 to 31 );
  signal data_outb_i : STD_LOGIC_VECTOR ( 9 to 31 );
  signal \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 36,
      READ_WIDTH_B => 36,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "NONE",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "READ_FIRST",
      WRITE_MODE_B => "READ_FIRST",
      WRITE_WIDTH_A => 36,
      WRITE_WIDTH_B => 36
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 7) => D(7 downto 0),
      ADDRARDADDR(6 downto 0) => B"1111111",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 7) => ADDRBWRADDR(7 downto 0),
      ADDRBWRADDR(6 downto 0) => B"1111111",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => Clk,
      CLKBWRCLK => Clk,
      DBITERR => \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\,
      DIADI(31 downto 0) => B"00000000000000000000000000000000",
      DIBDI(31 downto 23) => DIBDI(8 downto 0),
      DIBDI(22 downto 0) => B"00000000000000000000000",
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31) => Valid_Data_Bits(0),
      DOADO(30) => Valid_Data_Bits(1),
      DOADO(29) => Valid_Data_Bits(2),
      DOADO(28) => Valid_Data_Bits(3),
      DOADO(27 downto 23) => DOADO(4 downto 0),
      DOADO(22) => data_outa_i(9),
      DOADO(21) => data_outa_i(10),
      DOADO(20) => data_outa_i(11),
      DOADO(19) => data_outa_i(12),
      DOADO(18) => data_outa_i(13),
      DOADO(17) => data_outa_i(14),
      DOADO(16) => data_outa_i(15),
      DOADO(15) => data_outa_i(16),
      DOADO(14) => data_outa_i(17),
      DOADO(13) => data_outa_i(18),
      DOADO(12) => data_outa_i(19),
      DOADO(11) => data_outa_i(20),
      DOADO(10) => data_outa_i(21),
      DOADO(9) => data_outa_i(22),
      DOADO(8) => data_outa_i(23),
      DOADO(7) => data_outa_i(24),
      DOADO(6) => data_outa_i(25),
      DOADO(5) => data_outa_i(26),
      DOADO(4) => data_outa_i(27),
      DOADO(3) => data_outa_i(28),
      DOADO(2) => data_outa_i(29),
      DOADO(1) => data_outa_i(30),
      DOADO(0) => data_outa_i(31),
      DOBDO(31) => \Using_FPGA.Native_n_36\,
      DOBDO(30) => \Using_FPGA.Native_n_37\,
      DOBDO(29) => \Using_FPGA.Native_n_38\,
      DOBDO(28) => \Using_FPGA.Native_n_39\,
      DOBDO(27) => \Using_FPGA.Native_n_40\,
      DOBDO(26) => \Using_FPGA.Native_n_41\,
      DOBDO(25) => \Using_FPGA.Native_n_42\,
      DOBDO(24) => \Using_FPGA.Native_n_43\,
      DOBDO(23) => \Using_FPGA.Native_n_44\,
      DOBDO(22) => data_outb_i(9),
      DOBDO(21) => data_outb_i(10),
      DOBDO(20) => data_outb_i(11),
      DOBDO(19) => data_outb_i(12),
      DOBDO(18) => data_outb_i(13),
      DOBDO(17) => data_outb_i(14),
      DOBDO(16) => data_outb_i(15),
      DOBDO(15) => data_outb_i(16),
      DOBDO(14) => data_outb_i(17),
      DOBDO(13) => data_outb_i(18),
      DOBDO(12) => data_outb_i(19),
      DOBDO(11) => data_outb_i(20),
      DOBDO(10) => data_outb_i(21),
      DOBDO(9) => data_outb_i(22),
      DOBDO(8) => data_outb_i(23),
      DOBDO(7) => data_outb_i(24),
      DOBDO(6) => data_outb_i(25),
      DOBDO(5) => data_outb_i(26),
      DOBDO(4) => data_outb_i(27),
      DOBDO(3) => data_outb_i(28),
      DOBDO(2) => data_outb_i(29),
      DOBDO(1) => data_outb_i(30),
      DOBDO(0) => data_outb_i(31),
      DOPADOP(3) => \Using_FPGA.Native_n_68\,
      DOPADOP(2) => \Using_FPGA.Native_n_69\,
      DOPADOP(1) => \Using_FPGA.Native_n_70\,
      DOPADOP(0) => \Using_FPGA.Native_n_71\,
      DOPBDOP(3) => \Using_FPGA.Native_n_72\,
      DOPBDOP(2) => \Using_FPGA.Native_n_73\,
      DOPBDOP(1) => \Using_FPGA.Native_n_74\,
      DOPBDOP(0) => \Using_FPGA.Native_n_75\,
      ECCPARITY(7 downto 0) => \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => '1',
      ENBWREN => ENB1_out,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '1',
      REGCEB => '1',
      RSTRAMARSTRAM => '0',
      RSTRAMB => '0',
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\,
      WEA(3 downto 0) => B"0000",
      WEBWE(7 downto 0) => B"00001111"
    );
\Using_FPGA.Native_i_1__132\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Valid_Data_Bits(3),
      I1 => Valid_Data_Bits(1),
      I2 => Q(0),
      I3 => Valid_Data_Bits(2),
      I4 => Q(1),
      I5 => Valid_Data_Bits(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAMB36_23 is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Comp_Carry_Chain[1].carry_sel_reg\ : out STD_LOGIC;
    S : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 7 downto 0 );
    DIBDI : in STD_LOGIC_VECTOR ( 8 downto 0 );
    WEBWE : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAMB36_23 : entity is "MB_RAMB36";
end design_1_microblaze_1_1_MB_RAMB36_23;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAMB36_23 is
  signal A : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \Using_FPGA.Native_n_36\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_37\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_38\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_39\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_40\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_41\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_42\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_43\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_44\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_68\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_69\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_70\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_71\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_72\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_73\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_74\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_75\ : STD_LOGIC;
  signal data_outa_i : STD_LOGIC_VECTOR ( 9 to 31 );
  signal data_outb_i : STD_LOGIC_VECTOR ( 9 to 31 );
  signal \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 36,
      READ_WIDTH_B => 36,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "NONE",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "READ_FIRST",
      WRITE_MODE_B => "READ_FIRST",
      WRITE_WIDTH_A => 36,
      WRITE_WIDTH_B => 36
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 7) => \in\(7 downto 0),
      ADDRARDADDR(6 downto 0) => B"1111111",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 7) => ADDRBWRADDR(7 downto 0),
      ADDRBWRADDR(6 downto 0) => B"1111111",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => Clk,
      CLKBWRCLK => Clk,
      DBITERR => \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\,
      DIADI(31 downto 0) => B"00000000000000000000000000000000",
      DIBDI(31 downto 23) => DIBDI(8 downto 0),
      DIBDI(22 downto 0) => B"00000000000000000000000",
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 28) => DOADO(3 downto 0),
      DOADO(27) => A(0),
      DOADO(26) => A(1),
      DOADO(25) => A(2),
      DOADO(24) => A(3),
      DOADO(23) => A(4),
      DOADO(22) => data_outa_i(9),
      DOADO(21) => data_outa_i(10),
      DOADO(20) => data_outa_i(11),
      DOADO(19) => data_outa_i(12),
      DOADO(18) => data_outa_i(13),
      DOADO(17) => data_outa_i(14),
      DOADO(16) => data_outa_i(15),
      DOADO(15) => data_outa_i(16),
      DOADO(14) => data_outa_i(17),
      DOADO(13) => data_outa_i(18),
      DOADO(12) => data_outa_i(19),
      DOADO(11) => data_outa_i(20),
      DOADO(10) => data_outa_i(21),
      DOADO(9) => data_outa_i(22),
      DOADO(8) => data_outa_i(23),
      DOADO(7) => data_outa_i(24),
      DOADO(6) => data_outa_i(25),
      DOADO(5) => data_outa_i(26),
      DOADO(4) => data_outa_i(27),
      DOADO(3) => data_outa_i(28),
      DOADO(2) => data_outa_i(29),
      DOADO(1) => data_outa_i(30),
      DOADO(0) => data_outa_i(31),
      DOBDO(31) => \Using_FPGA.Native_n_36\,
      DOBDO(30) => \Using_FPGA.Native_n_37\,
      DOBDO(29) => \Using_FPGA.Native_n_38\,
      DOBDO(28) => \Using_FPGA.Native_n_39\,
      DOBDO(27) => \Using_FPGA.Native_n_40\,
      DOBDO(26) => \Using_FPGA.Native_n_41\,
      DOBDO(25) => \Using_FPGA.Native_n_42\,
      DOBDO(24) => \Using_FPGA.Native_n_43\,
      DOBDO(23) => \Using_FPGA.Native_n_44\,
      DOBDO(22) => data_outb_i(9),
      DOBDO(21) => data_outb_i(10),
      DOBDO(20) => data_outb_i(11),
      DOBDO(19) => data_outb_i(12),
      DOBDO(18) => data_outb_i(13),
      DOBDO(17) => data_outb_i(14),
      DOBDO(16) => data_outb_i(15),
      DOBDO(15) => data_outb_i(16),
      DOBDO(14) => data_outb_i(17),
      DOBDO(13) => data_outb_i(18),
      DOBDO(12) => data_outb_i(19),
      DOBDO(11) => data_outb_i(20),
      DOBDO(10) => data_outb_i(21),
      DOBDO(9) => data_outb_i(22),
      DOBDO(8) => data_outb_i(23),
      DOBDO(7) => data_outb_i(24),
      DOBDO(6) => data_outb_i(25),
      DOBDO(5) => data_outb_i(26),
      DOBDO(4) => data_outb_i(27),
      DOBDO(3) => data_outb_i(28),
      DOBDO(2) => data_outb_i(29),
      DOBDO(1) => data_outb_i(30),
      DOBDO(0) => data_outb_i(31),
      DOPADOP(3) => \Using_FPGA.Native_n_68\,
      DOPADOP(2) => \Using_FPGA.Native_n_69\,
      DOPADOP(1) => \Using_FPGA.Native_n_70\,
      DOPADOP(0) => \Using_FPGA.Native_n_71\,
      DOPBDOP(3) => \Using_FPGA.Native_n_72\,
      DOPBDOP(2) => \Using_FPGA.Native_n_73\,
      DOPBDOP(1) => \Using_FPGA.Native_n_74\,
      DOPBDOP(0) => \Using_FPGA.Native_n_75\,
      ECCPARITY(7 downto 0) => \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => '1',
      ENBWREN => '1',
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '1',
      REGCEB => '1',
      RSTRAMARSTRAM => '0',
      RSTRAMB => '0',
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\,
      WEA(3 downto 0) => B"0000",
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => WEBWE(0),
      WEBWE(2) => WEBWE(0),
      WEBWE(1) => WEBWE(0),
      WEBWE(0) => WEBWE(0)
    );
\Using_FPGA.Native_i_1__133\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"90000090"
    )
        port map (
      I0 => Q(3),
      I1 => A(1),
      I2 => A(0),
      I3 => A(2),
      I4 => Q(2),
      O => \Comp_Carry_Chain[1].carry_sel_reg\
    );
\Using_FPGA.Native_i_1__134\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => A(3),
      I1 => Q(1),
      I2 => A(4),
      I3 => Q(0),
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAMB36_24 is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 9 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 9 downto 0 );
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    WEA : in STD_LOGIC_VECTOR ( 3 downto 0 );
    WEBWE : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAMB36_24 : entity is "MB_RAMB36";
end design_1_microblaze_1_1_MB_RAMB36_24;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAMB36_24 is
  signal \Using_FPGA.Native_n_36\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_37\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_38\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_39\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_40\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_41\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_42\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_43\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_44\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_45\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_46\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_47\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_48\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_49\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_50\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_51\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_52\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_53\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_54\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_55\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_56\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_57\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_58\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_59\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_60\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_61\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_62\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_63\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_64\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_65\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_66\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_67\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_68\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_69\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_70\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_71\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_72\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_73\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_74\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_75\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 36,
      READ_WIDTH_B => 36,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "NONE",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "READ_FIRST",
      WRITE_MODE_B => "READ_FIRST",
      WRITE_WIDTH_A => 36,
      WRITE_WIDTH_B => 36
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 5) => \in\(9 downto 0),
      ADDRARDADDR(4 downto 0) => B"11111",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 5) => ADDRBWRADDR(9 downto 0),
      ADDRBWRADDR(4 downto 0) => B"11111",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => Clk,
      CLKBWRCLK => Clk,
      DBITERR => \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\,
      DIADI(31 downto 0) => D(31 downto 0),
      DIBDI(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31 downto 0) => DOADO(31 downto 0),
      DOBDO(31) => \Using_FPGA.Native_n_36\,
      DOBDO(30) => \Using_FPGA.Native_n_37\,
      DOBDO(29) => \Using_FPGA.Native_n_38\,
      DOBDO(28) => \Using_FPGA.Native_n_39\,
      DOBDO(27) => \Using_FPGA.Native_n_40\,
      DOBDO(26) => \Using_FPGA.Native_n_41\,
      DOBDO(25) => \Using_FPGA.Native_n_42\,
      DOBDO(24) => \Using_FPGA.Native_n_43\,
      DOBDO(23) => \Using_FPGA.Native_n_44\,
      DOBDO(22) => \Using_FPGA.Native_n_45\,
      DOBDO(21) => \Using_FPGA.Native_n_46\,
      DOBDO(20) => \Using_FPGA.Native_n_47\,
      DOBDO(19) => \Using_FPGA.Native_n_48\,
      DOBDO(18) => \Using_FPGA.Native_n_49\,
      DOBDO(17) => \Using_FPGA.Native_n_50\,
      DOBDO(16) => \Using_FPGA.Native_n_51\,
      DOBDO(15) => \Using_FPGA.Native_n_52\,
      DOBDO(14) => \Using_FPGA.Native_n_53\,
      DOBDO(13) => \Using_FPGA.Native_n_54\,
      DOBDO(12) => \Using_FPGA.Native_n_55\,
      DOBDO(11) => \Using_FPGA.Native_n_56\,
      DOBDO(10) => \Using_FPGA.Native_n_57\,
      DOBDO(9) => \Using_FPGA.Native_n_58\,
      DOBDO(8) => \Using_FPGA.Native_n_59\,
      DOBDO(7) => \Using_FPGA.Native_n_60\,
      DOBDO(6) => \Using_FPGA.Native_n_61\,
      DOBDO(5) => \Using_FPGA.Native_n_62\,
      DOBDO(4) => \Using_FPGA.Native_n_63\,
      DOBDO(3) => \Using_FPGA.Native_n_64\,
      DOBDO(2) => \Using_FPGA.Native_n_65\,
      DOBDO(1) => \Using_FPGA.Native_n_66\,
      DOBDO(0) => \Using_FPGA.Native_n_67\,
      DOPADOP(3) => \Using_FPGA.Native_n_68\,
      DOPADOP(2) => \Using_FPGA.Native_n_69\,
      DOPADOP(1) => \Using_FPGA.Native_n_70\,
      DOPADOP(0) => \Using_FPGA.Native_n_71\,
      DOPBDOP(3) => \Using_FPGA.Native_n_72\,
      DOPBDOP(2) => \Using_FPGA.Native_n_73\,
      DOPBDOP(1) => \Using_FPGA.Native_n_74\,
      DOPBDOP(0) => \Using_FPGA.Native_n_75\,
      ECCPARITY(7 downto 0) => \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => '1',
      ENBWREN => '1',
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '1',
      REGCEB => '1',
      RSTRAMARSTRAM => '0',
      RSTRAMB => '0',
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\,
      WEA(3 downto 0) => WEA(3 downto 0),
      WEBWE(7 downto 4) => B"0000",
      WEBWE(3) => WEBWE(0),
      WEBWE(2) => WEBWE(0),
      WEBWE(1) => WEBWE(0),
      WEBWE(0) => WEBWE(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_RAMB36_8 is
  port (
    \M_AXI_IC_RDATA[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    mux_Instr_Read : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 9 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 9 downto 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \A__0\ : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    \instr_EX_i_reg[0]\ : in STD_LOGIC;
    \instr_EX_i_reg[1]\ : in STD_LOGIC;
    \instr_EX_i_reg[2]\ : in STD_LOGIC;
    \instr_EX_i_reg[3]\ : in STD_LOGIC;
    \instr_EX_i_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[5]\ : in STD_LOGIC;
    \instr_EX_i_reg[6]\ : in STD_LOGIC;
    \instr_EX_i_reg[7]\ : in STD_LOGIC;
    \write_Addr_I_reg[2]\ : in STD_LOGIC;
    \write_Addr_I_reg[3]\ : in STD_LOGIC;
    \write_Addr_I_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[11]\ : in STD_LOGIC;
    \instr_EX_i_reg[12]\ : in STD_LOGIC;
    \instr_EX_i_reg[13]\ : in STD_LOGIC;
    \instr_EX_i_reg[14]\ : in STD_LOGIC;
    \instr_EX_i_reg[15]\ : in STD_LOGIC;
    \instr_EX_i_reg[16]\ : in STD_LOGIC;
    \instr_EX_i_reg[17]\ : in STD_LOGIC;
    \instr_EX_i_reg[18]\ : in STD_LOGIC;
    \instr_EX_i_reg[19]\ : in STD_LOGIC;
    \instr_EX_i_reg[20]\ : in STD_LOGIC;
    \instr_EX_i_reg[21]\ : in STD_LOGIC;
    \instr_EX_i_reg[22]\ : in STD_LOGIC;
    \instr_EX_i_reg[23]\ : in STD_LOGIC;
    \instr_EX_i_reg[24]\ : in STD_LOGIC;
    \instr_EX_i_reg[25]\ : in STD_LOGIC;
    \instr_EX_i_reg[26]\ : in STD_LOGIC;
    \instr_EX_i_reg[27]\ : in STD_LOGIC;
    \instr_EX_i_reg[28]\ : in STD_LOGIC;
    \instr_EX_i_reg[29]\ : in STD_LOGIC;
    Unsigned_Op_reg : in STD_LOGIC;
    \instr_EX_i_reg[31]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_RAMB36_8 : entity is "MB_RAMB36";
end design_1_microblaze_1_1_MB_RAMB36_8;

architecture STRUCTURE of design_1_microblaze_1_1_MB_RAMB36_8 is
  signal \^m_axi_ic_rdata[31]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Using_FPGA.Native_n_36\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_37\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_38\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_39\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_40\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_41\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_42\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_43\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_44\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_45\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_46\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_47\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_48\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_49\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_50\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_51\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_52\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_53\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_54\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_55\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_56\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_57\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_58\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_59\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_60\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_61\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_62\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_63\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_64\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_65\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_66\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_67\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_68\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_69\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_70\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_71\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_72\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_73\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_74\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_75\ : STD_LOGIC;
  signal iCACHE_Data_words : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \M_AXI_IC_RDATA[31]\(31 downto 0) <= \^m_axi_ic_rdata[31]\(31 downto 0);
\Use_unisim.MB_SRL16E_I1_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(31),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[0]\,
      O => mux_Instr_Read(0)
    );
\Use_unisim.MB_SRL16E_I1_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(30),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(1),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[1]\,
      O => mux_Instr_Read(1)
    );
\Use_unisim.MB_SRL16E_I1_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(29),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(2),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[2]\,
      O => mux_Instr_Read(2)
    );
\Use_unisim.MB_SRL16E_I1_i_1__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(20),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(11),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[11]\,
      O => mux_Instr_Read(11)
    );
\Use_unisim.MB_SRL16E_I1_i_1__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(19),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(12),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[12]\,
      O => mux_Instr_Read(12)
    );
\Use_unisim.MB_SRL16E_I1_i_1__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(18),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(13),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[13]\,
      O => mux_Instr_Read(13)
    );
\Use_unisim.MB_SRL16E_I1_i_1__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(17),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(14),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[14]\,
      O => mux_Instr_Read(14)
    );
\Use_unisim.MB_SRL16E_I1_i_1__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(16),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(15),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[15]\,
      O => mux_Instr_Read(15)
    );
\Use_unisim.MB_SRL16E_I1_i_1__15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(15),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(16),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[16]\,
      O => mux_Instr_Read(16)
    );
\Use_unisim.MB_SRL16E_I1_i_1__16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(14),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(17),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[17]\,
      O => mux_Instr_Read(17)
    );
\Use_unisim.MB_SRL16E_I1_i_1__17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(13),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(18),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[18]\,
      O => mux_Instr_Read(18)
    );
\Use_unisim.MB_SRL16E_I1_i_1__18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(12),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(19),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[19]\,
      O => mux_Instr_Read(19)
    );
\Use_unisim.MB_SRL16E_I1_i_1__19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(11),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(20),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[20]\,
      O => mux_Instr_Read(20)
    );
\Use_unisim.MB_SRL16E_I1_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(28),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(3),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[3]\,
      O => mux_Instr_Read(3)
    );
\Use_unisim.MB_SRL16E_I1_i_1__20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(10),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(21),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[21]\,
      O => mux_Instr_Read(21)
    );
\Use_unisim.MB_SRL16E_I1_i_1__21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(9),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(22),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[22]\,
      O => mux_Instr_Read(22)
    );
\Use_unisim.MB_SRL16E_I1_i_1__22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(8),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(23),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[23]\,
      O => mux_Instr_Read(23)
    );
\Use_unisim.MB_SRL16E_I1_i_1__23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(7),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(24),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[24]\,
      O => mux_Instr_Read(24)
    );
\Use_unisim.MB_SRL16E_I1_i_1__24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(6),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(25),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[25]\,
      O => mux_Instr_Read(25)
    );
\Use_unisim.MB_SRL16E_I1_i_1__25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(5),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(26),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[26]\,
      O => mux_Instr_Read(26)
    );
\Use_unisim.MB_SRL16E_I1_i_1__26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(4),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(27),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[27]\,
      O => mux_Instr_Read(27)
    );
\Use_unisim.MB_SRL16E_I1_i_1__27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(3),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(28),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[28]\,
      O => mux_Instr_Read(28)
    );
\Use_unisim.MB_SRL16E_I1_i_1__28\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(2),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(29),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[29]\,
      O => mux_Instr_Read(29)
    );
\Use_unisim.MB_SRL16E_I1_i_1__29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(1),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(30),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => Unsigned_Op_reg,
      O => mux_Instr_Read(30)
    );
\Use_unisim.MB_SRL16E_I1_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(27),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(4),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[4]\,
      O => mux_Instr_Read(4)
    );
\Use_unisim.MB_SRL16E_I1_i_1__30\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(0),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(31),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[31]\,
      O => mux_Instr_Read(31)
    );
\Use_unisim.MB_SRL16E_I1_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(26),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(5),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[5]\,
      O => mux_Instr_Read(5)
    );
\Use_unisim.MB_SRL16E_I1_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(25),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(6),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[6]\,
      O => mux_Instr_Read(6)
    );
\Use_unisim.MB_SRL16E_I1_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(24),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(7),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \instr_EX_i_reg[7]\,
      O => mux_Instr_Read(7)
    );
\Use_unisim.MB_SRL16E_I1_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(23),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(8),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \write_Addr_I_reg[2]\,
      O => mux_Instr_Read(8)
    );
\Use_unisim.MB_SRL16E_I1_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(22),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(9),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \write_Addr_I_reg[3]\,
      O => mux_Instr_Read(9)
    );
\Use_unisim.MB_SRL16E_I1_i_1__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF000000B8"
    )
        port map (
      I0 => Q(21),
      I1 => \A__0\,
      I2 => iCACHE_Data_words(10),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => IReady,
      I5 => \write_Addr_I_reg[4]\,
      O => mux_Instr_Read(10)
    );
\Using_FPGA.Native\: unisim.vcomponents.RAMB36E1
    generic map(
      DOA_REG => 0,
      DOB_REG => 0,
      EN_ECC_READ => false,
      EN_ECC_WRITE => false,
      INITP_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INITP_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_00 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_01 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_02 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_03 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_04 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_05 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_06 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_07 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_08 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_09 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_0F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_10 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_11 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_12 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_13 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_14 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_15 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_16 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_17 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_18 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_19 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_1F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_20 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_21 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_22 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_23 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_24 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_25 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_26 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_27 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_28 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_29 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_2F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_30 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_31 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_32 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_33 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_34 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_35 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_36 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_37 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_38 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_39 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_3F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_40 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_41 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_42 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_43 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_44 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_45 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_46 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_47 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_48 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_49 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_4F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_50 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_51 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_52 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_53 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_54 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_55 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_56 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_57 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_58 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_59 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_5F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_60 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_61 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_62 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_63 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_64 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_65 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_66 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_67 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_68 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_69 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_6F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_70 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_71 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_72 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_73 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_74 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_75 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_76 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_77 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_78 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_79 => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7A => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7B => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7C => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7D => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7E => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_7F => X"0000000000000000000000000000000000000000000000000000000000000000",
      INIT_A => X"000000000",
      INIT_B => X"000000000",
      INIT_FILE => "NONE",
      IS_CLKARDCLK_INVERTED => '0',
      IS_CLKBWRCLK_INVERTED => '0',
      IS_ENARDEN_INVERTED => '0',
      IS_ENBWREN_INVERTED => '0',
      IS_RSTRAMARSTRAM_INVERTED => '0',
      IS_RSTRAMB_INVERTED => '0',
      IS_RSTREGARSTREG_INVERTED => '0',
      IS_RSTREGB_INVERTED => '0',
      RAM_EXTENSION_A => "NONE",
      RAM_EXTENSION_B => "NONE",
      RAM_MODE => "TDP",
      RDADDR_COLLISION_HWCONFIG => "DELAYED_WRITE",
      READ_WIDTH_A => 36,
      READ_WIDTH_B => 36,
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      SIM_COLLISION_CHECK => "NONE",
      SIM_DEVICE => "7SERIES",
      SRVAL_A => X"000000000",
      SRVAL_B => X"000000000",
      WRITE_MODE_A => "READ_FIRST",
      WRITE_MODE_B => "READ_FIRST",
      WRITE_WIDTH_A => 36,
      WRITE_WIDTH_B => 36
    )
        port map (
      ADDRARDADDR(15) => '1',
      ADDRARDADDR(14 downto 5) => D(9 downto 0),
      ADDRARDADDR(4 downto 0) => B"11111",
      ADDRBWRADDR(15) => '1',
      ADDRBWRADDR(14 downto 5) => ADDRBWRADDR(9 downto 0),
      ADDRBWRADDR(4 downto 0) => B"11111",
      CASCADEINA => '0',
      CASCADEINB => '0',
      CASCADEOUTA => \NLW_Using_FPGA.Native_CASCADEOUTA_UNCONNECTED\,
      CASCADEOUTB => \NLW_Using_FPGA.Native_CASCADEOUTB_UNCONNECTED\,
      CLKARDCLK => Clk,
      CLKBWRCLK => Clk,
      DBITERR => \NLW_Using_FPGA.Native_DBITERR_UNCONNECTED\,
      DIADI(31 downto 0) => B"00000000000000000000000000000000",
      DIBDI(31 downto 0) => \^m_axi_ic_rdata[31]\(31 downto 0),
      DIPADIP(3 downto 0) => B"0000",
      DIPBDIP(3 downto 0) => B"0000",
      DOADO(31) => iCACHE_Data_words(0),
      DOADO(30) => iCACHE_Data_words(1),
      DOADO(29) => iCACHE_Data_words(2),
      DOADO(28) => iCACHE_Data_words(3),
      DOADO(27) => iCACHE_Data_words(4),
      DOADO(26) => iCACHE_Data_words(5),
      DOADO(25) => iCACHE_Data_words(6),
      DOADO(24) => iCACHE_Data_words(7),
      DOADO(23) => iCACHE_Data_words(8),
      DOADO(22) => iCACHE_Data_words(9),
      DOADO(21) => iCACHE_Data_words(10),
      DOADO(20) => iCACHE_Data_words(11),
      DOADO(19) => iCACHE_Data_words(12),
      DOADO(18) => iCACHE_Data_words(13),
      DOADO(17) => iCACHE_Data_words(14),
      DOADO(16) => iCACHE_Data_words(15),
      DOADO(15) => iCACHE_Data_words(16),
      DOADO(14) => iCACHE_Data_words(17),
      DOADO(13) => iCACHE_Data_words(18),
      DOADO(12) => iCACHE_Data_words(19),
      DOADO(11) => iCACHE_Data_words(20),
      DOADO(10) => iCACHE_Data_words(21),
      DOADO(9) => iCACHE_Data_words(22),
      DOADO(8) => iCACHE_Data_words(23),
      DOADO(7) => iCACHE_Data_words(24),
      DOADO(6) => iCACHE_Data_words(25),
      DOADO(5) => iCACHE_Data_words(26),
      DOADO(4) => iCACHE_Data_words(27),
      DOADO(3) => iCACHE_Data_words(28),
      DOADO(2) => iCACHE_Data_words(29),
      DOADO(1) => iCACHE_Data_words(30),
      DOADO(0) => iCACHE_Data_words(31),
      DOBDO(31) => \Using_FPGA.Native_n_36\,
      DOBDO(30) => \Using_FPGA.Native_n_37\,
      DOBDO(29) => \Using_FPGA.Native_n_38\,
      DOBDO(28) => \Using_FPGA.Native_n_39\,
      DOBDO(27) => \Using_FPGA.Native_n_40\,
      DOBDO(26) => \Using_FPGA.Native_n_41\,
      DOBDO(25) => \Using_FPGA.Native_n_42\,
      DOBDO(24) => \Using_FPGA.Native_n_43\,
      DOBDO(23) => \Using_FPGA.Native_n_44\,
      DOBDO(22) => \Using_FPGA.Native_n_45\,
      DOBDO(21) => \Using_FPGA.Native_n_46\,
      DOBDO(20) => \Using_FPGA.Native_n_47\,
      DOBDO(19) => \Using_FPGA.Native_n_48\,
      DOBDO(18) => \Using_FPGA.Native_n_49\,
      DOBDO(17) => \Using_FPGA.Native_n_50\,
      DOBDO(16) => \Using_FPGA.Native_n_51\,
      DOBDO(15) => \Using_FPGA.Native_n_52\,
      DOBDO(14) => \Using_FPGA.Native_n_53\,
      DOBDO(13) => \Using_FPGA.Native_n_54\,
      DOBDO(12) => \Using_FPGA.Native_n_55\,
      DOBDO(11) => \Using_FPGA.Native_n_56\,
      DOBDO(10) => \Using_FPGA.Native_n_57\,
      DOBDO(9) => \Using_FPGA.Native_n_58\,
      DOBDO(8) => \Using_FPGA.Native_n_59\,
      DOBDO(7) => \Using_FPGA.Native_n_60\,
      DOBDO(6) => \Using_FPGA.Native_n_61\,
      DOBDO(5) => \Using_FPGA.Native_n_62\,
      DOBDO(4) => \Using_FPGA.Native_n_63\,
      DOBDO(3) => \Using_FPGA.Native_n_64\,
      DOBDO(2) => \Using_FPGA.Native_n_65\,
      DOBDO(1) => \Using_FPGA.Native_n_66\,
      DOBDO(0) => \Using_FPGA.Native_n_67\,
      DOPADOP(3) => \Using_FPGA.Native_n_68\,
      DOPADOP(2) => \Using_FPGA.Native_n_69\,
      DOPADOP(1) => \Using_FPGA.Native_n_70\,
      DOPADOP(0) => \Using_FPGA.Native_n_71\,
      DOPBDOP(3) => \Using_FPGA.Native_n_72\,
      DOPBDOP(2) => \Using_FPGA.Native_n_73\,
      DOPBDOP(1) => \Using_FPGA.Native_n_74\,
      DOPBDOP(0) => \Using_FPGA.Native_n_75\,
      ECCPARITY(7 downto 0) => \NLW_Using_FPGA.Native_ECCPARITY_UNCONNECTED\(7 downto 0),
      ENARDEN => '1',
      ENBWREN => E(0),
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      RDADDRECC(8 downto 0) => \NLW_Using_FPGA.Native_RDADDRECC_UNCONNECTED\(8 downto 0),
      REGCEAREGCE => '1',
      REGCEB => '1',
      RSTRAMARSTRAM => '0',
      RSTRAMB => '0',
      RSTREGARSTREG => '0',
      RSTREGB => '0',
      SBITERR => \NLW_Using_FPGA.Native_SBITERR_UNCONNECTED\,
      WEA(3 downto 0) => B"0000",
      WEBWE(7 downto 0) => B"00001111"
    );
\Using_FPGA.Native_i_10__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(26),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(26)
    );
\Using_FPGA.Native_i_11__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(25),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(25)
    );
\Using_FPGA.Native_i_12__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(24),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(24)
    );
\Using_FPGA.Native_i_13__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(23),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(23)
    );
\Using_FPGA.Native_i_14__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(22),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(22)
    );
\Using_FPGA.Native_i_15__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(21),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(21)
    );
\Using_FPGA.Native_i_16__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(20),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(20)
    );
\Using_FPGA.Native_i_17__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(19),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(19)
    );
\Using_FPGA.Native_i_18__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(18),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(18)
    );
\Using_FPGA.Native_i_19__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(17),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(17)
    );
\Using_FPGA.Native_i_20__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(16),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(16)
    );
\Using_FPGA.Native_i_21__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(15),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(15)
    );
\Using_FPGA.Native_i_22__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(14),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(14)
    );
\Using_FPGA.Native_i_23__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(13),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(13)
    );
\Using_FPGA.Native_i_24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(12),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(12)
    );
\Using_FPGA.Native_i_25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(11),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(11)
    );
\Using_FPGA.Native_i_26\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(10),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(10)
    );
\Using_FPGA.Native_i_27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(9),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(9)
    );
\Using_FPGA.Native_i_28\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(8),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(8)
    );
\Using_FPGA.Native_i_29\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(7),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(7)
    );
\Using_FPGA.Native_i_30\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(6),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(6)
    );
\Using_FPGA.Native_i_31\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(5),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(5)
    );
\Using_FPGA.Native_i_32\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(4),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(4)
    );
\Using_FPGA.Native_i_33\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(3),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(3)
    );
\Using_FPGA.Native_i_34\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(2),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(2)
    );
\Using_FPGA.Native_i_35\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(1),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(1)
    );
\Using_FPGA.Native_i_36\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(0)
    );
\Using_FPGA.Native_i_5__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(31),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(31)
    );
\Using_FPGA.Native_i_6__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(30),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(30)
    );
\Using_FPGA.Native_i_7__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(29),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(29)
    );
\Using_FPGA.Native_i_8__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(28),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(28)
    );
\Using_FPGA.Native_i_9__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => M_AXI_IC_RDATA(27),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => \^m_axi_ic_rdata[31]\(27)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    d_AS_I12_out : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    inHibit_EX_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[0]\ : in STD_LOGIC;
    \instr_EX_i_reg[0]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[0]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Compare_Instr_reg : in STD_LOGIC;
    d_AS_I_reg : in STD_LOGIC;
    d_AS_I_reg_0 : in STD_LOGIC;
    d_AS_I_reg_1 : in STD_LOGIC;
    inHibit_EX_reg_1 : in STD_LOGIC;
    inHibit_EX_reg_2 : in STD_LOGIC;
    inHibit_EX_reg_3 : in STD_LOGIC;
    inHibit_EX_reg_4 : in STD_LOGIC;
    inHibit_EX_reg_5 : in STD_LOGIC;
    Compare_Instr_reg_0 : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC;
    jump2_I_reg_0 : in STD_LOGIC;
    Compare_Instr_reg_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Compare_Instr_i_1 : label is "soft_lutpair7";
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[0].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__146\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__3\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of d_AS_I_i_1 : label is "soft_lutpair6";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
Compare_Instr_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Compare_Instr_reg,
      I2 => Compare_Instr_reg_1,
      I3 => Compare_Instr_reg_0,
      O => \Using_FPGA.Native_2\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[0]\,
      A1 => \instr_EX_i_reg[0]_0\,
      A2 => \instr_EX_i_reg[0]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_1__146\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Compare_Instr_reg,
      I2 => jump2_I_reg,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_3__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Compare_Instr_reg,
      O => \^using_fpga.native_0\
    );
d_AS_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00808080"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Compare_Instr_reg,
      I2 => d_AS_I_reg,
      I3 => d_AS_I_reg_0,
      I4 => d_AS_I_reg_1,
      O => d_AS_I12_out
    );
inHibit_EX_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004000444"
    )
        port map (
      I0 => inHibit_EX_reg_1,
      I1 => \^using_fpga.native_0\,
      I2 => inHibit_EX_reg_2,
      I3 => inHibit_EX_reg_3,
      I4 => inHibit_EX_reg_4,
      I5 => inHibit_EX_reg_5,
      O => inHibit_EX_reg
    );
jump2_I_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFBFBFFFFFFFFFF"
    )
        port map (
      I0 => inHibit_EX_reg_1,
      I1 => \^using_fpga.native\,
      I2 => Compare_Instr_reg,
      I3 => Compare_Instr_reg_0,
      I4 => jump2_I_reg,
      I5 => jump2_I_reg_0,
      O => inHibit_EX_reg_0
    );
select_ALU_Carry_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_100 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \write_Addr_I_reg[4]\ : in STD_LOGIC;
    \write_Addr_I_reg[4]_0\ : in STD_LOGIC;
    \write_Addr_I_reg[4]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_100 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_100;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_100 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[10].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[4]\,
      A1 => \write_Addr_I_reg[4]_0\,
      A2 => \write_Addr_I_reg[4]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_101 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[11]\ : in STD_LOGIC;
    \instr_EX_i_reg[11]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[11]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_101 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_101;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_101 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[11].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[11]\,
      A1 => \instr_EX_i_reg[11]_0\,
      A2 => \instr_EX_i_reg[11]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.set_BIP_I_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.set_BIP_I_reg\,
      I2 => \Using_FPGA.set_BIP_I_reg_0\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_102 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[12]\ : in STD_LOGIC;
    \instr_EX_i_reg[12]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[12]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_102 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_102;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_102 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[12].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[12]\,
      A1 => \instr_EX_i_reg[12]_0\,
      A2 => \instr_EX_i_reg[12]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_103 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[13]\ : in STD_LOGIC;
    \instr_EX_i_reg[13]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[13]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_103 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_103;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_103 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[13].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[13]\,
      A1 => \instr_EX_i_reg[13]_0\,
      A2 => \instr_EX_i_reg[13]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_12__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_i_10__1\,
      I2 => \Using_FPGA.Native_i_10__1_0\,
      I3 => \Using_FPGA.Native_i_10__1_1\,
      I4 => \Using_FPGA.Native_i_10__1_2\,
      I5 => \Using_FPGA.Native_i_10__1_3\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_104 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_mbar_decode : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[14]\ : in STD_LOGIC;
    \instr_EX_i_reg[14]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[14]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mbar_decode_I_reg : in STD_LOGIC;
    mbar_decode_I_reg_0 : in STD_LOGIC;
    mbar_decode_I_reg_1 : in STD_LOGIC;
    mbar_decode_I_reg_2 : in STD_LOGIC;
    mbar_decode_I_reg_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_104 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_104;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_104 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[14].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[14]\,
      A1 => \instr_EX_i_reg[14]_0\,
      A2 => \instr_EX_i_reg[14]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^d\(0)
    );
mbar_decode_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0800000000000000"
    )
        port map (
      I0 => \^d\(0),
      I1 => mbar_decode_I_reg,
      I2 => mbar_decode_I_reg_0,
      I3 => mbar_decode_I_reg_1,
      I4 => mbar_decode_I_reg_2,
      I5 => mbar_decode_I_reg_3,
      O => of_mbar_decode
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_105 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    MSRclr_Instr_i : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[15]\ : in STD_LOGIC;
    \instr_EX_i_reg[15]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[15]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_MSR_Instr.MSRclr_Instr_i_reg\ : in STD_LOGIC;
    \Using_MSR_Instr.MSRclr_Instr_i_reg_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_105 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_105;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_105 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[15].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  D(0) <= \^d\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[15]\,
      A1 => \instr_EX_i_reg[15]_0\,
      A2 => \instr_EX_i_reg[15]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^d\(0)
    );
\Using_MSR_Instr.MSRclr_Instr_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \^d\(0),
      I1 => \Using_MSR_Instr.MSRclr_Instr_i_reg\,
      I2 => \Using_MSR_Instr.MSRclr_Instr_i_reg_0\,
      O => MSRclr_Instr_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_106 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    msrxxx_write_carry : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[14]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[13]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[12]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[11]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[10]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[9]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[8]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[7]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[6]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[5]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[4]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[3]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[2]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[1]\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[0]\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[16]\ : in STD_LOGIC;
    \instr_EX_i_reg[16]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[16]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_MSR_Instr.msrxxx_write_carry_reg\ : in STD_LOGIC;
    \Using_MSR_Instr.msrxxx_write_carry_reg_0\ : in STD_LOGIC;
    \Using_MSR_Instr.msrxxx_write_carry_reg_1\ : in STD_LOGIC;
    \Using_MSR_Instr.msrxxx_write_carry_reg_2\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_106 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_106;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_106 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[16].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__12\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__13\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__14\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__15\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__16\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__17\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__18\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__19\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__20\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__21\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__22\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__23\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__24\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__25\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__26\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__27\ : label is "soft_lutpair15";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[16]\,
      A1 => \instr_EX_i_reg[16]_0\,
      A2 => \instr_EX_i_reg[16]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[15]\
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(1),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[14]\
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(2),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[13]\
    );
\Using_FPGA.Native_i_2__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(3),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[12]\
    );
\Using_FPGA.Native_i_2__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(4),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[11]\
    );
\Using_FPGA.Native_i_2__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(5),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[10]\
    );
\Using_FPGA.Native_i_2__18\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(6),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[9]\
    );
\Using_FPGA.Native_i_2__19\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(7),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[8]\
    );
\Using_FPGA.Native_i_2__20\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(8),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[7]\
    );
\Using_FPGA.Native_i_2__21\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(9),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[6]\
    );
\Using_FPGA.Native_i_2__22\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(10),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[5]\
    );
\Using_FPGA.Native_i_2__23\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(11),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[4]\
    );
\Using_FPGA.Native_i_2__24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(12),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[3]\
    );
\Using_FPGA.Native_i_2__25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(13),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[2]\
    );
\Using_FPGA.Native_i_2__26\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(14),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[1]\
    );
\Using_FPGA.Native_i_2__27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(15),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^using_fpga.native\,
      O => \Size_17to32.imm_Reg_reg[0]\
    );
\Using_MSR_Instr.msrxxx_write_carry_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00404040"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_MSR_Instr.msrxxx_write_carry_reg\,
      I2 => \Using_MSR_Instr.msrxxx_write_carry_reg_0\,
      I3 => \Using_MSR_Instr.msrxxx_write_carry_reg_1\,
      I4 => \Using_MSR_Instr.msrxxx_write_carry_reg_2\,
      O => msrxxx_write_carry
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_107 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[17]\ : in STD_LOGIC;
    \instr_EX_i_reg[17]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[17]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_6__0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_i_6__0_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_107 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_107;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_107 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[17].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[17]\,
      A1 => \instr_EX_i_reg[17]_0\,
      A2 => \instr_EX_i_reg[17]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_i_6__0\,
      I2 => D(0),
      I3 => \Using_FPGA.Native_i_6__0_0\,
      I4 => D(1),
      I5 => D(2),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_108 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[18]\ : in STD_LOGIC;
    \instr_EX_i_reg[18]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[18]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_108 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_108;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_108 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[18].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[18]\,
      A1 => \instr_EX_i_reg[18]_0\,
      A2 => \instr_EX_i_reg[18]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_109 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[19]\ : in STD_LOGIC;
    \instr_EX_i_reg[19]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[19]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_109 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_109;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_109 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[19].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[19]\,
      A1 => \instr_EX_i_reg[19]_0\,
      A2 => \instr_EX_i_reg[19]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_110 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[1]\ : in STD_LOGIC;
    \instr_EX_i_reg[1]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[1]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg_0\ : in STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg_1\ : in STD_LOGIC;
    set_BIP_I : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    write_Reg_reg : in STD_LOGIC;
    write_Reg_reg_0 : in STD_LOGIC;
    writing_reg : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    writing_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_110 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_110;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_110 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \Using_FPGA.set_BIP_I_i_2_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[1].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.set_BIP_I_i_2\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of writing_i_1 : label is "soft_lutpair16";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[1]\,
      A1 => \instr_EX_i_reg[1]_0\,
      A2 => \instr_EX_i_reg[1]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_1__16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111400011110000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => writing_reg,
      I2 => \Using_FPGA.Native_5\,
      I3 => writing_reg_0,
      I4 => \Using_FPGA.Native_6\,
      I5 => D(2),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => writing_reg,
      I2 => \Using_FPGA.Native_5\,
      I3 => writing_reg_0,
      I4 => \Using_FPGA.Native_6\,
      I5 => D(2),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.set_BIP_I_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00008F80"
    )
        port map (
      I0 => \Using_FPGA.set_BIP_I_i_2_n_0\,
      I1 => \Using_FPGA.set_BIP_I_reg_0\,
      I2 => \Using_FPGA.set_BIP_I_reg_1\,
      I3 => set_BIP_I,
      I4 => sync_reset,
      O => \Using_FPGA.set_BIP_I_reg\
    );
\Using_FPGA.set_BIP_I_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => writing_reg,
      I2 => \Using_FPGA.Native_5\,
      I3 => writing_reg_0,
      I4 => \Using_FPGA.Native_6\,
      O => \Using_FPGA.set_BIP_I_i_2_n_0\
    );
is_lwx_I_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => writing_reg,
      O => \Using_FPGA.Native_3\
    );
write_Reg_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"888F8F8F"
    )
        port map (
      I0 => \Using_FPGA.set_BIP_I_i_2_n_0\,
      I1 => D(1),
      I2 => write_Reg_reg,
      I3 => D(0),
      I4 => write_Reg_reg_0,
      O => \Using_FPGA.Native_0\
    );
writing_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => writing_reg_0,
      I2 => writing_reg,
      O => \Using_FPGA.Native_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_111 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[20]\ : in STD_LOGIC;
    \instr_EX_i_reg[20]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[20]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_111 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_111;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_111 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[20].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[20]\,
      A1 => \instr_EX_i_reg[20]_0\,
      A2 => \instr_EX_i_reg[20]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_112 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[21]\ : in STD_LOGIC;
    \instr_EX_i_reg[21]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[21]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_112 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_112;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_112 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[21].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[21]\,
      A1 => \instr_EX_i_reg[21]_0\,
      A2 => \instr_EX_i_reg[21]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_113 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[22]\ : in STD_LOGIC;
    \instr_EX_i_reg[22]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[22]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_113 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_113;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_113 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[22].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[22]\,
      A1 => \instr_EX_i_reg[22]_0\,
      A2 => \instr_EX_i_reg[22]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_114 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[23]\ : in STD_LOGIC;
    \instr_EX_i_reg[23]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[23]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_114 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_114;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_114 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[23].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[23]\,
      A1 => \instr_EX_i_reg[23]_0\,
      A2 => \instr_EX_i_reg[23]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_115 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Sext16_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[24]\ : in STD_LOGIC;
    \instr_EX_i_reg[24]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[24]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Sext16_reg_0 : in STD_LOGIC;
    Sext16_reg_1 : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    Sext16_reg_2 : in STD_LOGIC;
    Sext16_reg_3 : in STD_LOGIC;
    Sext16_reg_4 : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_115 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_115;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_115 is
  signal Sext16_i_2_n_0 : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[24].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
Sext16_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000030AAAA"
    )
        port map (
      I0 => sext16,
      I1 => Sext16_i_2_n_0,
      I2 => Sext16_reg_2,
      I3 => Sext16_reg_3,
      I4 => Sext16_reg_4,
      I5 => sync_reset,
      O => Sext16_reg
    );
Sext16_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Sext16_reg_0,
      I2 => Sext16_reg_1,
      O => Sext16_i_2_n_0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[24]\,
      A1 => \instr_EX_i_reg[24]_0\,
      A2 => \instr_EX_i_reg[24]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_116 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[25]\ : in STD_LOGIC;
    \instr_EX_i_reg[25]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[25]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_116 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_116;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_116 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[25].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[25]\,
      A1 => \instr_EX_i_reg[25]_0\,
      A2 => \instr_EX_i_reg[25]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_117 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    p_39_out : out STD_LOGIC;
    Sign_Extend_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[26]\ : in STD_LOGIC;
    \instr_EX_i_reg[26]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[26]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Sign_Extend_reg_0 : in STD_LOGIC;
    Sign_Extend_reg_1 : in STD_LOGIC;
    Sign_Extend_reg_2 : in STD_LOGIC;
    Sign_Extend_reg_3 : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_117 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_117;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_117 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[26].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
Sign_Extend_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF08FFFF000800"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Sign_Extend_reg_0,
      I2 => Sign_Extend_reg_1,
      I3 => Sign_Extend_reg_3,
      I4 => Sign_Extend_reg_2,
      I5 => Shift_Oper,
      O => Sign_Extend_reg
    );
\Use_The_PCMP_instr.CLZ_Instr_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Sign_Extend_reg_0,
      I2 => Sign_Extend_reg_1,
      I3 => Sign_Extend_reg_2,
      O => p_39_out
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[26]\,
      A1 => \instr_EX_i_reg[26]_0\,
      A2 => \instr_EX_i_reg[26]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_118 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg\ : out STD_LOGIC;
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[27]\ : in STD_LOGIC;
    \instr_EX_i_reg[27]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[27]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_0\ : in STD_LOGIC;
    dbg_brki_hit : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_1\ : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_2\ : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_3\ : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_4\ : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_5\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_i_6__0_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__0_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__0_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_10__1_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_118 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_118;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_118 is
  signal \Area_Debug_Control.dbg_brki_hit_i_2_n_0\ : STD_LOGIC;
  signal \^serial_dbg_intf.control_reg_reg[8]\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_11__1_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[27].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Serial_Dbg_Intf.control_reg_reg[8]\ <= \^serial_dbg_intf.control_reg_reg[8]\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Area_Debug_Control.dbg_brki_hit_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \Area_Debug_Control.dbg_brki_hit_i_2_n_0\,
      I1 => \Area_Debug_Control.dbg_brki_hit_reg_0\,
      I2 => dbg_brki_hit,
      O => \Area_Debug_Control.dbg_brki_hit_reg\
    );
\Area_Debug_Control.dbg_brki_hit_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2000000000000000"
    )
        port map (
      I0 => \^serial_dbg_intf.control_reg_reg[8]\,
      I1 => \Area_Debug_Control.dbg_brki_hit_reg_1\,
      I2 => \Area_Debug_Control.dbg_brki_hit_reg_2\,
      I3 => \Area_Debug_Control.dbg_brki_hit_reg_3\,
      I4 => \Area_Debug_Control.dbg_brki_hit_reg_4\,
      I5 => \Area_Debug_Control.dbg_brki_hit_reg_5\,
      O => \Area_Debug_Control.dbg_brki_hit_i_2_n_0\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[27]\,
      A1 => \instr_EX_i_reg[27]_0\,
      A2 => \instr_EX_i_reg[27]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_10__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000010"
    )
        port map (
      I0 => \Using_FPGA.Native_i_11__1_n_0\,
      I1 => \Using_FPGA.Native_i_6__0\,
      I2 => Q(0),
      I3 => \Using_FPGA.Native_i_6__0_0\,
      I4 => \Using_FPGA.Native_i_6__0_1\,
      I5 => \Using_FPGA.Native_i_6__0_2\,
      O => \^serial_dbg_intf.control_reg_reg[8]\
    );
\Using_FPGA.Native_i_11__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFDF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_i_10__1_0\,
      I2 => \Using_FPGA.Native_i_10__1_1\,
      I3 => \Using_FPGA.Native_i_10__1_2\,
      O => \Using_FPGA.Native_i_11__1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_119 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    wic_first0 : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[28]\ : in STD_LOGIC;
    \instr_EX_i_reg[28]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[28]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Write_ICache_I_reg : in STD_LOGIC;
    Write_ICache_I_reg_0 : in STD_LOGIC;
    Write_ICache_I_reg_1 : in STD_LOGIC;
    Write_ICache_I_reg_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_119 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_119;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_119 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[28].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[28]\,
      A1 => \instr_EX_i_reg[28]_0\,
      A2 => \instr_EX_i_reg[28]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
Write_ICache_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Write_ICache_I_reg,
      I2 => Write_ICache_I_reg_0,
      I3 => Write_ICache_I_reg_1,
      I4 => Write_ICache_I_reg_2,
      O => wic_first0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_120 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    wdc_first0 : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[29]\ : in STD_LOGIC;
    \instr_EX_i_reg[29]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[29]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    write_Reg_reg_0 : in STD_LOGIC;
    write_Reg_reg_1 : in STD_LOGIC;
    write_Reg_reg_2 : in STD_LOGIC;
    write_Reg_reg_3 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Write_DCache_I_reg : in STD_LOGIC;
    Write_DCache_I_reg_0 : in STD_LOGIC;
    Write_DCache_I_reg_1 : in STD_LOGIC;
    write_Reg_reg_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_120 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_120;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_120 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal write_Reg_i_2_n_0 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[29].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[29]\,
      A1 => \instr_EX_i_reg[29]_0\,
      A2 => \instr_EX_i_reg[29]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
Write_DCache_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => write_Reg_reg_0,
      I2 => Write_DCache_I_reg,
      I3 => Write_DCache_I_reg_0,
      I4 => Write_DCache_I_reg_1,
      O => wdc_first0
    );
write_Reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E0FFE000"
    )
        port map (
      I0 => write_Reg_i_2_n_0,
      I1 => write_Reg_reg_0,
      I2 => write_Reg_reg_1,
      I3 => write_Reg_reg_2,
      I4 => write_Reg_reg_3,
      I5 => sync_reset,
      O => write_Reg_reg
    );
write_Reg_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => write_Reg_reg_4,
      O => write_Reg_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_121 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    p_37_out : out STD_LOGIC;
    p_38_out : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[2]\ : in STD_LOGIC;
    \instr_EX_i_reg[2]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[2]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg\ : in STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg_0\ : in STD_LOGIC;
    is_swx_I_reg_0 : in STD_LOGIC;
    using_Imm_reg : in STD_LOGIC;
    using_Imm_reg_0 : in STD_LOGIC;
    \Using_Barrel_Shifter.BitField_Insert_reg\ : in STD_LOGIC;
    \Using_Barrel_Shifter.BitField_Extract_reg\ : in STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg_1\ : in STD_LOGIC;
    is_swx_I_reg_1 : in STD_LOGIC;
    is_swx_I_reg_2 : in STD_LOGIC;
    is_swx_I_reg_3 : in STD_LOGIC;
    is_swx_I : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_121 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_121;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_121 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal is_swx_I_i_2_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Use_The_PCMP_instr.PCMP_Instr_i_1\ : label is "soft_lutpair17";
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[2].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM of \Using_Barrel_Shifter.BitField_Extract_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \Using_Barrel_Shifter.BitField_Insert_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of is_swx_I_i_2 : label is "soft_lutpair17";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_The_PCMP_instr.PCMP_Instr_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00040000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Use_The_PCMP_instr.PCMP_Instr_reg_1\,
      I2 => is_swx_I_reg_0,
      I3 => \Use_The_PCMP_instr.PCMP_Instr_reg_0\,
      I4 => \Use_The_PCMP_instr.PCMP_Instr_reg\,
      O => \Using_FPGA.Native_3\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[2]\,
      A1 => \instr_EX_i_reg[2]_0\,
      A2 => \instr_EX_i_reg[2]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_Barrel_Shifter.BitField_Extract_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Barrel_Shifter.BitField_Extract_reg\,
      O => p_38_out
    );
\Using_Barrel_Shifter.BitField_Insert_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Barrel_Shifter.BitField_Insert_reg\,
      O => p_37_out
    );
\Using_FPGA.Native_i_8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFF7FFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => is_swx_I_reg_0,
      I2 => \Use_The_PCMP_instr.PCMP_Instr_reg\,
      I3 => \Use_The_PCMP_instr.PCMP_Instr_reg_0\,
      I4 => using_Imm_reg,
      I5 => using_Imm_reg_0,
      O => \Using_FPGA.Native_2\
    );
is_swx_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E222222"
    )
        port map (
      I0 => is_swx_I_reg_1,
      I1 => is_swx_I_reg_2,
      I2 => is_swx_I_i_2_n_0,
      I3 => is_swx_I_reg_0,
      I4 => is_swx_I_reg_3,
      I5 => is_swx_I,
      O => is_swx_I_reg
    );
is_swx_I_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Use_The_PCMP_instr.PCMP_Instr_reg_1\,
      O => is_swx_I_i_2_n_0
    );
using_Imm_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000800"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Use_The_PCMP_instr.PCMP_Instr_reg\,
      I2 => \Use_The_PCMP_instr.PCMP_Instr_reg_0\,
      I3 => is_swx_I_reg_0,
      I4 => using_Imm_reg,
      I5 => using_Imm_reg_0,
      O => \Using_FPGA.Native_0\
    );
write_Reg_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0C0E0C0"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Use_The_PCMP_instr.PCMP_Instr_reg_0\,
      I2 => \Use_The_PCMP_instr.PCMP_Instr_reg\,
      I3 => is_swx_I_reg_0,
      I4 => using_Imm_reg_0,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_122 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Unsigned_Op_reg : in STD_LOGIC;
    Unsigned_Op_reg_0 : in STD_LOGIC;
    Unsigned_Op_reg_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_122 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_122;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_122 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[30].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Unsigned_Op_reg,
      A1 => Unsigned_Op_reg_0,
      A2 => Unsigned_Op_reg_1,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_123 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Sext8_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[31]\ : in STD_LOGIC;
    \instr_EX_i_reg[31]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[31]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Sext8_reg_0 : in STD_LOGIC;
    Sext8_reg_1 : in STD_LOGIC;
    Sext8_reg_2 : in STD_LOGIC;
    Sext8_reg_3 : in STD_LOGIC;
    Sext8_reg_4 : in STD_LOGIC;
    Sext8_reg_5 : in STD_LOGIC;
    Sext8_reg_6 : in STD_LOGIC;
    Sext8_reg_7 : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_123 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_123;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_123 is
  signal Sext80 : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[31].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
Sext8_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000CAA"
    )
        port map (
      I0 => Sext8_reg_5,
      I1 => Sext80,
      I2 => Sext8_reg_6,
      I3 => Sext8_reg_7,
      I4 => sync_reset,
      O => Sext8_reg
    );
Sext8_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000001000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => Sext8_reg_0,
      I2 => Sext8_reg_1,
      I3 => Sext8_reg_2,
      I4 => Sext8_reg_3,
      I5 => Sext8_reg_4,
      O => Sext80
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[31]\,
      A1 => \instr_EX_i_reg[31]_0\,
      A2 => \instr_EX_i_reg[31]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_124 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Reg_Test_Equal_N_i4_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    use_Reg_Neg_DI_i22_out : out STD_LOGIC;
    use_Reg_Neg_S_i24_out : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    D_18 : out STD_LOGIC;
    D_19 : out STD_LOGIC;
    D_20 : out STD_LOGIC;
    D_21 : out STD_LOGIC;
    D_22 : out STD_LOGIC;
    D_23 : out STD_LOGIC;
    D_24 : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    D_27 : out STD_LOGIC;
    D_28 : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    D_30 : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    write_Carry_I0 : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[3]\ : in STD_LOGIC;
    \instr_EX_i_reg[3]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[3]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    write_Carry_I_reg : in STD_LOGIC;
    write_Carry_I_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    res_Forward2 : in STD_LOGIC;
    Reg2_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    write_Carry_I_reg_1 : in STD_LOGIC;
    is_lwx_I_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_124 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_124;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_124 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__49_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Select_Logic_i_1 : label is "soft_lutpair19";
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[3].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__19\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__20\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__23\ : label is "soft_lutpair19";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
Select_Logic_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native\,
      O => write_Carry_I0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[3]\,
      A1 => \instr_EX_i_reg[3]_0\,
      A2 => \instr_EX_i_reg[3]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0028"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_5\,
      O => Reg_Test_Equal_N_i4_out
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2008"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_4\,
      O => use_Reg_Neg_DI_i22_out
    );
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2008"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_4\,
      O => use_Reg_Neg_S_i24_out
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_6\,
      I2 => write_Carry_I_reg,
      I3 => write_Carry_I_reg_0,
      I4 => \Using_FPGA.Native_7\,
      O => \^using_fpga.native_0\
    );
\Using_FPGA.Native_i_1__33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(31),
      I1 => res_Forward2,
      I2 => Reg2_Data(31),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_8\,
      O => D_0
    );
\Using_FPGA.Native_i_1__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(30),
      I1 => res_Forward2,
      I2 => Reg2_Data(30),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_9\,
      O => D_1
    );
\Using_FPGA.Native_i_1__35\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(29),
      I1 => res_Forward2,
      I2 => Reg2_Data(29),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_10\,
      O => D_2
    );
\Using_FPGA.Native_i_1__36\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(28),
      I1 => res_Forward2,
      I2 => Reg2_Data(28),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_11\,
      O => D_3
    );
\Using_FPGA.Native_i_1__37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(27),
      I1 => res_Forward2,
      I2 => Reg2_Data(27),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_12\,
      O => D_4
    );
\Using_FPGA.Native_i_1__38\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(26),
      I1 => res_Forward2,
      I2 => Reg2_Data(26),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_13\,
      O => D_5
    );
\Using_FPGA.Native_i_1__39\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(25),
      I1 => res_Forward2,
      I2 => Reg2_Data(25),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_14\,
      O => D_6
    );
\Using_FPGA.Native_i_1__40\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(24),
      I1 => res_Forward2,
      I2 => Reg2_Data(24),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_15\,
      O => D_7
    );
\Using_FPGA.Native_i_1__41\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(23),
      I1 => res_Forward2,
      I2 => Reg2_Data(23),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_16\,
      O => D_8
    );
\Using_FPGA.Native_i_1__42\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(22),
      I1 => res_Forward2,
      I2 => Reg2_Data(22),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_17\,
      O => D_9
    );
\Using_FPGA.Native_i_1__43\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(21),
      I1 => res_Forward2,
      I2 => Reg2_Data(21),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_18\,
      O => D_10
    );
\Using_FPGA.Native_i_1__44\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(20),
      I1 => res_Forward2,
      I2 => Reg2_Data(20),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => D(0),
      O => D_11
    );
\Using_FPGA.Native_i_1__45\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(19),
      I1 => res_Forward2,
      I2 => Reg2_Data(19),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => D(1),
      O => D_12
    );
\Using_FPGA.Native_i_1__46\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(18),
      I1 => res_Forward2,
      I2 => Reg2_Data(18),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => D(2),
      O => D_13
    );
\Using_FPGA.Native_i_1__47\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(17),
      I1 => res_Forward2,
      I2 => Reg2_Data(17),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => D(3),
      O => D_14
    );
\Using_FPGA.Native_i_1__48\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(16),
      I1 => res_Forward2,
      I2 => Reg2_Data(16),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => D(4),
      O => D_15
    );
\Using_FPGA.Native_i_1__49\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(15),
      I1 => res_Forward2,
      I2 => Reg2_Data(15),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_19\,
      O => D_16
    );
\Using_FPGA.Native_i_1__50\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(14),
      I1 => res_Forward2,
      I2 => Reg2_Data(14),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_20\,
      O => D_17
    );
\Using_FPGA.Native_i_1__51\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(13),
      I1 => res_Forward2,
      I2 => Reg2_Data(13),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_21\,
      O => D_18
    );
\Using_FPGA.Native_i_1__52\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(12),
      I1 => res_Forward2,
      I2 => Reg2_Data(12),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_22\,
      O => D_19
    );
\Using_FPGA.Native_i_1__53\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(11),
      I1 => res_Forward2,
      I2 => Reg2_Data(11),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_23\,
      O => D_20
    );
\Using_FPGA.Native_i_1__54\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(10),
      I1 => res_Forward2,
      I2 => Reg2_Data(10),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_24\,
      O => D_21
    );
\Using_FPGA.Native_i_1__55\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(9),
      I1 => res_Forward2,
      I2 => Reg2_Data(9),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_25\,
      O => D_22
    );
\Using_FPGA.Native_i_1__56\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(8),
      I1 => res_Forward2,
      I2 => Reg2_Data(8),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_26\,
      O => D_23
    );
\Using_FPGA.Native_i_1__57\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(7),
      I1 => res_Forward2,
      I2 => Reg2_Data(7),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_27\,
      O => D_24
    );
\Using_FPGA.Native_i_1__58\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(6),
      I1 => res_Forward2,
      I2 => Reg2_Data(6),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_28\,
      O => D_25
    );
\Using_FPGA.Native_i_1__59\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(5),
      I1 => res_Forward2,
      I2 => Reg2_Data(5),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_29\,
      O => D_26
    );
\Using_FPGA.Native_i_1__60\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(4),
      I1 => res_Forward2,
      I2 => Reg2_Data(4),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_30\,
      O => D_27
    );
\Using_FPGA.Native_i_1__61\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(3),
      I1 => res_Forward2,
      I2 => Reg2_Data(3),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_31\,
      O => D_28
    );
\Using_FPGA.Native_i_1__62\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(2),
      I1 => res_Forward2,
      I2 => Reg2_Data(2),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_32\,
      O => D_29
    );
\Using_FPGA.Native_i_1__63\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(1),
      I1 => res_Forward2,
      I2 => Reg2_Data(1),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_33\,
      O => D_30
    );
\Using_FPGA.Native_i_1__64\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => ex_Result(0),
      I1 => res_Forward2,
      I2 => Reg2_Data(0),
      I3 => \Using_FPGA.Native_i_2__49_n_0\,
      I4 => \Using_FPGA.Native_34\,
      O => D_31
    );
\Using_FPGA.Native_i_2__49\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0F0F0F0F070F0F"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => write_Carry_I_reg,
      I2 => is_lwx_I_reg,
      I3 => write_Carry_I_reg_0,
      I4 => \Using_FPGA.Native_7\,
      I5 => \Using_FPGA.Native_6\,
      O => \Using_FPGA.Native_i_2__49_n_0\
    );
is_lwx_I_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_18\,
      I2 => is_lwx_I_reg,
      O => \Using_FPGA.Native_2\
    );
write_Carry_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"010101FF01FF01FF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => write_Carry_I_reg_0,
      I2 => write_Carry_I_reg,
      I3 => write_Carry_I_reg_1,
      I4 => \Using_FPGA.Native_13\,
      I5 => \Using_FPGA.Native_14\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_125 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_MSR_Instr.msrxxx_carry_reg\ : out STD_LOGIC;
    p_36_out : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    doublet_i_reg : out STD_LOGIC;
    is_lwx_I_reg : out STD_LOGIC;
    doublet_Read_i_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[4]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[4]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mtsmsr_write_i_reg_0 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    doublet_Read_i_reg_0 : in STD_LOGIC;
    mtsmsr_write_i_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_MSR_Instr.msrxxx_carry_reg_0\ : in STD_LOGIC;
    jump2_I_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    msrxxx_carry : in STD_LOGIC;
    doublet_i_reg_0 : in STD_LOGIC;
    jump2_I_reg_0 : in STD_LOGIC;
    jump2_I_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__25\ : in STD_LOGIC;
    mul_first_reg : in STD_LOGIC;
    mul_Executing_reg : in STD_LOGIC;
    mul_Executing_reg_0 : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    doublet_i_reg_1 : in STD_LOGIC;
    is_lwx_I : in STD_LOGIC;
    is_lwx_I_reg_0 : in STD_LOGIC;
    is_swx_I : in STD_LOGIC;
    doublet_Read : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_125 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_125;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_125 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^p_36_out\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[4].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of is_lwx_I_i_2 : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of jump2_I_i_1 : label is "soft_lutpair21";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  p_36_out <= \^p_36_out\;
Sign_Extend_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_11\,
      I4 => \Using_FPGA.Native_10\,
      I5 => \Using_FPGA.Native_8\,
      O => \Using_FPGA.Native_6\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[4]\,
      A1 => \instr_EX_i_reg[4]_0\,
      A2 => \instr_EX_i_reg[4]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB7FFFFFFF7FFFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_8\,
      I2 => doublet_i_reg_0,
      I3 => \Using_FPGA.Native_9\,
      I4 => \Using_FPGA.Native_10\,
      I5 => \Using_FPGA.Native_11\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FDFF0000FDFFFDFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => D(0),
      I2 => mtsmsr_write_i_reg_0,
      I3 => D(1),
      I4 => \^using_fpga.native_4\,
      I5 => \Using_FPGA.Native_i_1__25\,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_3__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_8\,
      O => \^using_fpga.native_4\
    );
\Using_MSR_Instr.MSRxxx_Instr_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => D(1),
      O => \^p_36_out\
    );
\Using_MSR_Instr.MSRxxx_Instr_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0004000000000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_11\,
      I4 => \Using_FPGA.Native_10\,
      I5 => \Using_FPGA.Native_8\,
      O => \^using_fpga.native_0\
    );
\Using_MSR_Instr.msrxxx_carry_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000028FF2800"
    )
        port map (
      I0 => \^p_36_out\,
      I1 => \Using_MSR_Instr.msrxxx_carry_reg_0\,
      I2 => jump2_I_reg(0),
      I3 => doublet_Read_i_reg_0,
      I4 => msrxxx_carry,
      I5 => sync_reset,
      O => \Using_MSR_Instr.msrxxx_carry_reg\
    );
doublet_Read_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFFEFFF0000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_10\,
      I4 => doublet_Read_i_reg_0,
      I5 => doublet_Read,
      O => doublet_Read_i_reg
    );
doublet_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000030AA00AA"
    )
        port map (
      I0 => isdoublet,
      I1 => \^using_fpga.native\,
      I2 => doublet_i_reg_0,
      I3 => doublet_Read_i_reg_0,
      I4 => doublet_i_reg_1,
      I5 => sync_reset,
      O => doublet_i_reg
    );
is_lwx_I_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2222222"
    )
        port map (
      I0 => is_lwx_I,
      I1 => doublet_Read_i_reg_0,
      I2 => \^using_fpga.native_5\,
      I3 => doublet_i_reg_1,
      I4 => is_lwx_I_reg_0,
      I5 => is_swx_I,
      O => is_lwx_I_reg
    );
is_lwx_I_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      O => \^using_fpga.native_5\
    );
jump2_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000E6C4"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      I2 => jump2_I_reg_0,
      I3 => jump2_I_reg(1),
      I4 => jump2_I_reg_1,
      O => \Using_FPGA.Native_1\
    );
mtsmsr_write_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000080FF8000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => mtsmsr_write_i_reg_0,
      I2 => D(0),
      I3 => doublet_Read_i_reg_0,
      I4 => mtsmsr_write_i_reg_1,
      I5 => sync_reset,
      O => mtsmsr_write_i_reg
    );
mul_Executing_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0010101000000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.Native_10\,
      I2 => \Using_FPGA.Native_9\,
      I3 => mul_Executing_reg,
      I4 => mul_Executing_reg_0,
      I5 => doublet_Read_i_reg_0,
      O => inHibit_EX_reg
    );
mul_first_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000010000000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => doublet_i_reg_0,
      I2 => \Using_FPGA.Native_10\,
      I3 => \Using_FPGA.Native_9\,
      I4 => mul_first_reg,
      I5 => doublet_Read_i_reg_0,
      O => \Using_FPGA.Native_7\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_126 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    force_Val1_i23_out : out STD_LOGIC;
    force1_i25_out : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    byte_i_reg : out STD_LOGIC;
    quadlet_Read_i_reg : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[5]\ : in STD_LOGIC;
    \instr_EX_i_reg[5]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[5]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_Barrel_Shifter.Not_Barrel_Op_reg\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]_0\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]_1\ : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]_2\ : in STD_LOGIC;
    \Using_Mul_Instr.ex_not_mul_op_i_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    byte_i_reg_0 : in STD_LOGIC;
    byte_i_reg_1 : in STD_LOGIC;
    quadlet_Read_i_reg_0 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    quadlet_Read : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_126 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_126;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_126 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[5].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_Barrel_Shifter.Not_Barrel_Op_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \Using_Mul_Instr.ex_not_mul_op_i_i_1\ : label is "soft_lutpair22";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Size_17to32.imm_Reg[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000400000000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_Barrel_Shifter.Not_Barrel_Op_reg\,
      I2 => \Size_17to32.imm_Reg_reg[15]\,
      I3 => \Size_17to32.imm_Reg_reg[15]_0\,
      I4 => \Size_17to32.imm_Reg_reg[15]_1\,
      I5 => \Size_17to32.imm_Reg_reg[15]_2\,
      O => E(0)
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[5]\,
      A1 => \instr_EX_i_reg[5]_0\,
      A2 => \instr_EX_i_reg[5]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_Barrel_Shifter.Not_Barrel_Op_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFDFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      I2 => \Using_Barrel_Shifter.Not_Barrel_Op_reg\,
      I3 => quadlet_Read_i_reg_0,
      I4 => sync_reset,
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000080000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Size_17to32.imm_Reg_reg[15]\,
      I2 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      I3 => \Using_Barrel_Shifter.Not_Barrel_Op_reg\,
      I4 => \Using_FPGA.Native_2\,
      I5 => \Using_FPGA.Native_3\,
      O => force_Val1_i23_out
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000008000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Size_17to32.imm_Reg_reg[15]\,
      I2 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      I3 => \Using_Barrel_Shifter.Not_Barrel_Op_reg\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_2\,
      O => force1_i25_out
    );
\Using_Mul_Instr.ex_not_mul_op_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      O => \^using_fpga.native_0\
    );
byte_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000003A0A0A0A"
    )
        port map (
      I0 => isbyte,
      I1 => \^using_fpga.native_0\,
      I2 => quadlet_Read_i_reg_0,
      I3 => byte_i_reg_0,
      I4 => byte_i_reg_1,
      I5 => sync_reset,
      O => byte_i_reg
    );
is_swx_I_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      I2 => byte_i_reg_0,
      I3 => byte_i_reg_1,
      O => \Using_FPGA.Native_1\
    );
quadlet_Read_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4FFFFFFF4FFF0000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_Mul_Instr.ex_not_mul_op_i_reg\,
      I2 => byte_i_reg_1,
      I3 => byte_i_reg_0,
      I4 => quadlet_Read_i_reg_0,
      I5 => quadlet_Read,
      O => quadlet_Read_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_127 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    mbar_is_sleep0 : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[6]\ : in STD_LOGIC;
    \instr_EX_i_reg[6]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[6]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_127 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_127;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_127 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[6].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[6]\,
      A1 => \instr_EX_i_reg[6]_0\,
      A2 => \instr_EX_i_reg[6]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
mbar_is_sleep_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => instr_OF(0),
      O => mbar_is_sleep0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_128 is
  port (
    instr_OF : out STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \instr_EX_i_reg[7]\ : in STD_LOGIC;
    \instr_EX_i_reg[7]_0\ : in STD_LOGIC;
    \instr_EX_i_reg[7]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_128 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_128;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_128 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[7].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \instr_EX_i_reg[7]\,
      A1 => \instr_EX_i_reg[7]_0\,
      A2 => \instr_EX_i_reg[7]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => instr_OF(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_129 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \write_Addr_I_reg[2]\ : in STD_LOGIC;
    \write_Addr_I_reg[2]_0\ : in STD_LOGIC;
    \write_Addr_I_reg[2]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_129 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_129;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_129 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[8].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[2]\,
      A1 => \write_Addr_I_reg[2]_0\,
      A2 => \write_Addr_I_reg[2]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_130 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    reset_BIP_I : out STD_LOGIC;
    Reg_Test_Equal_i : out STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    \write_Addr_I_reg[3]\ : in STD_LOGIC;
    \write_Addr_I_reg[3]_0\ : in STD_LOGIC;
    \write_Addr_I_reg[3]_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.reset_BIP_I_reg\ : in STD_LOGIC;
    \Using_FPGA.reset_BIP_I_reg_0\ : in STD_LOGIC;
    \Using_FPGA.reset_BIP_I_reg_1\ : in STD_LOGIC;
    \Using_FPGA.reset_BIP_I_reg_2\ : in STD_LOGIC;
    \Using_FPGA.reset_BIP_I_reg_3\ : in STD_LOGIC;
    instr_OF : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_130 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_130;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_130 is
  signal \^using_fpga.native\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Decode_I/PreFetch_Buffer_I/PreFetch_Buffers[9].SRL16E_I/Use_unisim.MB_SRL16E_I1 ";
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => \write_Addr_I_reg[3]\,
      A1 => \write_Addr_I_reg[3]_0\,
      A2 => \write_Addr_I_reg[3]_1\,
      A3 => '0',
      CE => CI,
      CLK => Clk,
      D => mux_Instr_Read(0),
      Q => \^using_fpga.native\
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EBFF"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => instr_OF(0),
      I2 => instr_OF(1),
      I3 => \Using_FPGA.Native_0\,
      O => Reg_Test_Equal_i
    );
\Using_FPGA.reset_BIP_I_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2000000000000000"
    )
        port map (
      I0 => \^using_fpga.native\,
      I1 => \Using_FPGA.reset_BIP_I_reg\,
      I2 => \Using_FPGA.reset_BIP_I_reg_0\,
      I3 => \Using_FPGA.reset_BIP_I_reg_1\,
      I4 => \Using_FPGA.reset_BIP_I_reg_2\,
      I5 => \Using_FPGA.reset_BIP_I_reg_3\,
      O => reset_BIP_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_584 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_584 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_584;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_584 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[9].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_589 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_589 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_589;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_589 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[8].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_595 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_595 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_595;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_595 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[7].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_601 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_601 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_601;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_601 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[6].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_607 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_607 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_607;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_607 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[5].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_613 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_613 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_613;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_613 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[4].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_619 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_619 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_619;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_619 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[3].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_625 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_1 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_625 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_625;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_625 is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[31].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  Address(0) <= \^address\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^address\(0)
    );
\Using_FPGA.Native_i_1__32\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^address\(0),
      I1 => \Using_FPGA.Native\,
      O => I3_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_631 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_631 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_631;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_631 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[30].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_637 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_637 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_637;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_637 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[2].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_643 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_643 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_643;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_643 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[29].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_649 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_649 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_649;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_649 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[28].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_655 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_0 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_655 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_655;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_655 is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[27].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  Address(0) <= \^address\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^address\(0)
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^address\(0),
      I1 => \Using_FPGA.Native\,
      O => I3_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_661 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_661 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_661;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_661 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[26].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_667 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_667 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_667;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_667 is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[25].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
  Address(0) <= \^address\(0);
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => \^address\(0)
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^address\(0),
      I1 => \Using_FPGA.Native\,
      O => I3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_673 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_673 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_673;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_673 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[24].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_679 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_679 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_679;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_679 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[23].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_685 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_685 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_685;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_685 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[22].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_691 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_691 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_691;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_691 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[21].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_697 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_697 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_697;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_697 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[20].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_703 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_703 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_703;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_703 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[1].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_709 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_709 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_709;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_709 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[19].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_715 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_715 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_715;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_715 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[18].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_721 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_721 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_721;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_721 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[17].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_727 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_727 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_727;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_727 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[16].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_733 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_733 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_733;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_733 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[15].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_739 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_739 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_739;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_739 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[14].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_745 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_745 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_745;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_745 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[13].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_751 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_751 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_751;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_751 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[12].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_757 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_757 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_757;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_757 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[11].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_763 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_763 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_763;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_763 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[10].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRL16E_769 is
  port (
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    pc_I : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRL16E_769 : entity is "MB_SRL16E";
end design_1_microblaze_1_1_MB_SRL16E_769;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRL16E_769 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Data_Flow_I/PC_Module_I/All_Bits.Using_FPGA.PC_GEN[0].PC_Bit_I/PC_OF_Buffer/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Buffer_Addr(0),
      A1 => Buffer_Addr(1),
      A2 => Buffer_Addr(2),
      A3 => '0',
      CE => IReady,
      CLK => Clk,
      D => pc_I,
      Q => Address(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized10\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[0]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized10\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized10\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized10\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => \Serial_Dbg_Intf.shift_count_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized10_27\ is
  port (
    tdo_config_word1_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_27\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized10_27\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_27\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized10_28\ is
  port (
    Q4_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_28\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized10_28\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_28\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q4_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized10_32\ is
  port (
    Q0_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_32\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized10_32\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized10_32\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q0_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized12\ is
  port (
    Q2_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized12\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized12\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized12\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"1060",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized14\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[6]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 6 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDO_INST_0_i_2 : in STD_LOGIC;
    tdo_config_word1_0 : in STD_LOGIC;
    Q2_in : in STD_LOGIC;
    Q3_in : in STD_LOGIC;
    Q0_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized14\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized14\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized14\ is
  signal Dbg_TDO_INST_0_i_32_n_0 : STD_LOGIC;
  signal Q1_in : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E2E2E2222222E222"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_32_n_0,
      I1 => Q(6),
      I2 => Q(5),
      I3 => Dbg_TDO_INST_0_i_2,
      I4 => Q(4),
      I5 => tdo_config_word1_0,
      O => \Serial_Dbg_Intf.shift_count_reg[6]\
    );
Dbg_TDO_INST_0_i_32: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q1_in,
      I1 => Q2_in,
      I2 => Q(5),
      I3 => Q3_in,
      I4 => Q(4),
      I5 => Q0_out,
      O => Dbg_TDO_INST_0_i_32_n_0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"2500",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized2\ is
  port (
    Q_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized2\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized2\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"881B",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized4\ is
  port (
    Q11_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized4\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized4\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized4\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.SRL16E_2/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0238",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q11_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized6\ is
  port (
    Q6_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized6\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized6\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized6\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q6_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized6_30\ is
  port (
    Q2_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized6_30\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized6_30\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized6_30\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized8\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_TDO_3 : in STD_LOGIC;
    Dbg_TDO_4 : in STD_LOGIC;
    Dbg_TDO_5 : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO_INST_0_i_2_0 : in STD_LOGIC;
    Q6_out : in STD_LOGIC;
    Q11_in : in STD_LOGIC;
    Q_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized8\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized8\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized8\ is
  signal Dbg_TDO_INST_0_i_11_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_2_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_30_n_0 : STD_LOGIC;
  signal Q5_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FEFEFFFFFEFE"
    )
        port map (
      I0 => Dbg_TDO_0,
      I1 => Dbg_TDO_INST_0_i_2_n_0,
      I2 => Dbg_TDO_1,
      I3 => Dbg_TDO_2,
      I4 => Status_Reg_En,
      I5 => Dbg_TDO_3,
      O => Dbg_TDO
    );
Dbg_TDO_INST_0_i_11: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_30_n_0,
      I1 => Dbg_TDO_INST_0_i_2_0,
      O => Dbg_TDO_INST_0_i_11_n_0,
      S => Q(6)
    );
Dbg_TDO_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2000000000000"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_11_n_0,
      I1 => Q(7),
      I2 => Dbg_TDO_4,
      I3 => Dbg_TDO_5,
      I4 => Dbg_Reg_En(0),
      I5 => Dbg_Reg_En(1),
      O => Dbg_TDO_INST_0_i_2_n_0
    );
Dbg_TDO_INST_0_i_30: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q5_out,
      I1 => Q6_out,
      I2 => Q(5),
      I3 => Q11_in,
      I4 => Q(4),
      I5 => Q_0,
      O => Dbg_TDO_INST_0_i_30_n_0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"4340",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q5_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized8_29\ is
  port (
    Q3_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_29\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized8_29\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_29\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"4340",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized8_31\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Q2_out : in STD_LOGIC;
    Q3_out : in STD_LOGIC;
    Q4_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_31\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized8_31\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_31\ is
  signal Q1_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_31: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q1_out,
      I1 => Q2_out,
      I2 => Q(5),
      I3 => Q3_out,
      I4 => Q(4),
      I5 => Q4_out,
      O => \Serial_Dbg_Intf.shift_count_reg[5]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"4340",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_MB_SRL16E__parameterized8_33\ is
  port (
    Q3_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_33\ : entity is "MB_SRL16E";
end \design_1_microblaze_1_1_MB_SRL16E__parameterized8_33\;

architecture STRUCTURE of \design_1_microblaze_1_1_MB_SRL16E__parameterized8_33\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"4340",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E is
  port (
    SRL16_Sel_7 : out STD_LOGIC;
    \which_pc__0\ : out STD_LOGIC;
    SRL16_MC15_7 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E is
  signal \Use_unisim.MB_SRL16CE_I1_i_2_n_0\ : STD_LOGIC;
  signal \Use_unisim.MB_SRL16CE_I1_n_1\ : STD_LOGIC;
  signal \^which_pc__0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
  \which_pc__0\ <= \^which_pc__0\;
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \^which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_7,
      Q => SRL16_Sel_7,
      Q15 => \Use_unisim.MB_SRL16CE_I1_n_1\
    );
\Use_unisim.MB_SRL16CE_I1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000020"
    )
        port map (
      I0 => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\,
      I1 => Dbg_Reg_En(1),
      I2 => Dbg_Reg_En(3),
      I3 => Dbg_Reg_En(5),
      I4 => Dbg_Reg_En(4),
      O => \^which_pc__0\
    );
\Use_unisim.MB_SRL16CE_I1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => Dbg_Reg_En(7),
      I1 => Dbg_Reg_En(2),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(6),
      O => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_42 is
  port (
    SRL16_Sel_6 : out STD_LOGIC;
    SRL16_MC15_7 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_6 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_42 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_42;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_42 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_6,
      Q => SRL16_Sel_6,
      Q15 => SRL16_MC15_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_44 is
  port (
    SRL16_Sel_5 : out STD_LOGIC;
    SRL16_MC15_6 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_5 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_44 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_44;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_44 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_5,
      Q => SRL16_Sel_5,
      Q15 => SRL16_MC15_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_46 is
  port (
    SRL16_Sel_4 : out STD_LOGIC;
    SRL16_MC15_5 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_4 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_46 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_46;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_46 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_4,
      Q => SRL16_Sel_4,
      Q15 => SRL16_MC15_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_48 is
  port (
    SRL16_Sel_3 : out STD_LOGIC;
    SRL16_MC15_4 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_3 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_48 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_48;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_48 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_3,
      Q => SRL16_Sel_3,
      Q15 => SRL16_MC15_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_50 is
  port (
    SRL16_Sel_2 : out STD_LOGIC;
    SRL16_MC15_3 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_2 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_50 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_50;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_50 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_2,
      Q => SRL16_Sel_2,
      Q15 => SRL16_MC15_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_52 is
  port (
    SRL16_Sel_1 : out STD_LOGIC;
    SRL16_MC15_2 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_52 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_52;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_52 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_1,
      Q => SRL16_Sel_1,
      Q15 => SRL16_MC15_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MB_SRLC16E_54 is
  port (
    SRL16_Sel_0 : out STD_LOGIC;
    SRL16_MC15_1 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MB_SRLC16E_54 : entity is "MB_SRLC16E";
end design_1_microblaze_1_1_MB_SRLC16E_54;

architecture STRUCTURE of design_1_microblaze_1_1_MB_SRLC16E_54 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => Dbg_TDI,
      Q => SRL16_Sel_0,
      Q15 => SRL16_MC15_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    reset_temp : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_temp,
      Q => sync(1),
      R => '0'
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_0 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_0 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_0;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_0 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_1 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_1 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_1;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_1 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_56 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_84_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_56 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_56;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_56 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.normal_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_84_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_57 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_81_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_57 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_57;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_57 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.force_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_81_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_58 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Serial_Dbg_Intf.sample_synced_1_reg[8]\ : out STD_LOGIC;
    p_78_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Serial_Dbg_Intf.trig_in_1_reg\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_58 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_58;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_58 is
  signal p_12_out : STD_LOGIC;
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.start_single_cmd_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(2),
      O => p_78_out
    );
\Serial_Dbg_Intf.trig_in_1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CF8A"
    )
        port map (
      I0 => p_12_out,
      I1 => Q(0),
      I2 => \Serial_Dbg_Intf.trig_in_1_reg\(0),
      I3 => Dbg_Trig_In(0),
      O => \Serial_Dbg_Intf.sample_synced_1_reg[8]\
    );
\Serial_Dbg_Intf.trig_in_1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => Q(2),
      I1 => sync(2),
      I2 => Q(1),
      I3 => \Serial_Dbg_Intf.trig_in_1_reg\(1),
      O => p_12_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_59 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_76_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_59 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_59;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_59 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_MSR_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_76_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_60 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_73_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_60 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_60;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_60 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_PC_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_73_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_61 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_13_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Serial_Dbg_Intf.continue_from_brk_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_61 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_61;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_61 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.continue_from_brk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => Q(1),
      I1 => sync(2),
      I2 => Q(0),
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg\(0),
      O => p_13_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_62 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_66_out : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_62 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_62;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_62 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.if_debug_ready_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      O => p_66_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_63 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_63 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_63;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_63 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.trig_ack_out_1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      I2 => Dbg_Trig_Ack_Out(0),
      O => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_64 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_64 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_64;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_64 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_bit_65 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_bit_65 : entity is "mb_sync_bit";
end design_1_microblaze_1_1_mb_sync_bit_65;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_bit_65 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_brki_hit : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => dbg_brki_hit,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2_34\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    config_with_scan_reset : out STD_LOGIC;
    Pause : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_En : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_34\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2_34\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_34\ is
  signal \^config_with_scan_reset\ : STD_LOGIC;
begin
  config_with_scan_reset <= \^config_with_scan_reset\;
\Serial_Dbg_Intf.New_Instr_Reg_TCK[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      O => \^config_with_scan_reset\
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \^config_with_scan_reset\,
      D => Pause,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2_35\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    running_clock : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_35\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2_35\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_35\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => running_clock,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2_36\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Sleep : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_36\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2_36\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_36\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Sleep,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2_37\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_37\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2_37\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_37\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => LOCKSTEP_Master_Out(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized2_66\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_hit : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_66\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized2_66\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized2_66\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => dbg_hit(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized4\ is
  port (
    \Serial_Dbg_Intf.continue_from_brk_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    dbg_continue_i_reg : in STD_LOGIC;
    dbg_continue_i_reg_0 : in STD_LOGIC;
    of_Pause : in STD_LOGIC;
    normal_stop_cmd_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized4\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized4\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized4\ is
  signal dbg_wakeup_synced : STD_LOGIC;
begin
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => LOCKSTEP_Master_Out(1),
      Q => dbg_wakeup_synced,
      R => sync_reset
    );
dbg_continue_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F0F0F0F0F0E0"
    )
        port map (
      I0 => dbg_continue_i_reg,
      I1 => dbg_continue_i_reg_0,
      I2 => of_Pause,
      I3 => normal_stop_cmd_i,
      I4 => dbg_wakeup_synced,
      I5 => LOCKSTEP_Master_Out(0),
      O => \Serial_Dbg_Intf.continue_from_brk_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized4_38\ is
  port (
    trig_ack_in_0_synced : out STD_LOGIC;
    mb_halted_1_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    mb_halted_1 : in STD_LOGIC;
    trig_in_0_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    trig_ack_in_0_synced_1 : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized4_38\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized4_38\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized4_38\ is
  signal \^trig_ack_in_0_synced\ : STD_LOGIC;
begin
  trig_ack_in_0_synced <= \^trig_ack_in_0_synced\;
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => \^trig_ack_in_0_synced\,
      R => sync_reset
    );
trig_in_0_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0FF4044"
    )
        port map (
      I0 => mb_halted_1,
      I1 => trig_in_0_reg(0),
      I2 => trig_ack_in_0_synced_1,
      I3 => \^trig_ack_in_0_synced\,
      I4 => Dbg_Trig_In(0),
      O => mb_halted_1_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_bit__parameterized4_39\ is
  port (
    trig_out_0_synced : out STD_LOGIC;
    \Single_Synchronize.use_sync_reset.sync_reg_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    trig_out_0_synced_1 : in STD_LOGIC;
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_bit__parameterized4_39\ : entity is "mb_sync_bit";
end \design_1_microblaze_1_1_mb_sync_bit__parameterized4_39\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_bit__parameterized4_39\ is
  signal \^trig_out_0_synced\ : STD_LOGIC;
begin
  trig_out_0_synced <= \^trig_out_0_synced\;
\Area_Debug_Control.trig_ack_out_0_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B2"
    )
        port map (
      I0 => \^trig_out_0_synced\,
      I1 => trig_out_0_synced_1,
      I2 => Dbg_Trig_Ack_Out(0),
      O => \Single_Synchronize.use_sync_reset.sync_reg_0\
    );
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => \^trig_out_0_synced\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1023\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1024
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_934 is
  port (
    \Using_FPGA.Native_I2\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_934 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_934;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_934 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1021\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1022
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_I2_0\ => \Using_FPGA.Native_I2\,
      Valid_Req_1st_Cycle_i_2 => Valid_Req_1st_Cycle_i_2,
      Valid_Req_1st_Cycle_i_2_0 => Valid_Req_1st_Cycle_i_2_0,
      Valid_Req_1st_Cycle_i_2_1 => Valid_Req_1st_Cycle_i_2_1,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_935 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_935 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_935;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_935 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1019\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1020
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_936 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_936 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_936;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_936 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1017\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1018
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_937 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_937 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_937;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_937 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1015\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1016
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_938 is
  port (
    \Using_FPGA.Native_I2\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_938 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_938;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_938 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1013\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1014
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_I2_0\ => \Using_FPGA.Native_I2\,
      Valid_Req_1st_Cycle_i_2 => Valid_Req_1st_Cycle_i_2,
      Valid_Req_1st_Cycle_i_2_0 => Valid_Req_1st_Cycle_i_2_0,
      Valid_Req_1st_Cycle_i_2_1 => Valid_Req_1st_Cycle_i_2_1,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_939 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_939 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_939;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_939 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1011\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1012
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_940 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_940 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_940;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_940 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1009\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1010
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_941 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_941 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_941;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_941 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1007\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1008
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_942 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_942 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_942;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_942 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1005\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1006
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_943 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_943 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_943;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_943 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1003\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1004
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_944 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_944 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_944;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_944 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_1001\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1002
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_945 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_945 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_945;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_945 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_999\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1000
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_946 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_946 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_946;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_946 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_997\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_998
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_947 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_947 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_947;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_947 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_995\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_996
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_948 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_948 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_948;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_948 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_993\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\,
      DI => op2_is_1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_994
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_949 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_949 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_949;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_949 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_991\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_992
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_950 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_950 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_950;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_950 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_989\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\,
      DI => op2_is_1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_990
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_951 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_951 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_951;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_951 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_987\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\,
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_988
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_952 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_952 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_952;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_952 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_985\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\,
      DI => op2_is_1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_986
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_953 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_953 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_953;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_953 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_983\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\,
      DI => op2_is_1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_984
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_954 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_954 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_954;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_954 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_981\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_982
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_955 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_I2\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_955 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_955;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_955 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_979\
     port map (
      DI => op2_is_1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      \Using_FPGA.Native_I2\ => \Using_FPGA.Native_I2\,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_980
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_956 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    EX_Op1 : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_956 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_956;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_956 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_977\
     port map (
      DI => op2_is_1,
      EX_Op1 => EX_Op1,
      EX_Op2(0) => EX_Op2(0),
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_978
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      \in\(0) => \in\(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_957 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_957 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_957;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_957 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_975\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_976
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_958 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_958 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_958;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_958 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_973\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_974
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_959 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_959 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_959;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_959 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_971\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_972
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_960 is
  port (
    EX_CarryOut : out STD_LOGIC;
    O : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_960 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_960;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_960 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_969\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_970
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      O => O,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_961 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_961 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_961;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_961 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_967\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_968
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_962 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_962 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_962;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_962 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2_965\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_966
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU_Bit_963 is
  port (
    Valid_Req0 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_CarryOut : out STD_LOGIC;
    valid_req_XX_reg : in STD_LOGIC;
    valid_req_XX_reg_0 : in STD_LOGIC;
    O : in STD_LOGIC;
    valid_req_XX_reg_1 : in STD_LOGIC;
    valid_req_XX_reg_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_0 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_1 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_2 : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2_3 : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU_Bit_963 : entity is "ALU_Bit";
end design_1_microblaze_1_1_ALU_Bit_963;

architecture STRUCTURE of design_1_microblaze_1_1_ALU_Bit_963 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized2\
     port map (
      DI => op2_is_1,
      S => alu_AddSub,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op1(0) => op1(0),
      op2_C(0) => op2_C(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_964
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      O => O,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      Valid_Req0 => Valid_Req0,
      Valid_Req_1st_Cycle_i_2_0 => Valid_Req_1st_Cycle_i_2,
      Valid_Req_1st_Cycle_i_2_1 => Valid_Req_1st_Cycle_i_2_0,
      Valid_Req_1st_Cycle_i_2_2 => Valid_Req_1st_Cycle_i_2_1,
      Valid_Req_1st_Cycle_i_2_3 => Valid_Req_1st_Cycle_i_2_2,
      Valid_Req_1st_Cycle_i_2_4 => Valid_Req_1st_Cycle_i_2_3,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      valid_req_XX_reg => valid_req_XX_reg,
      valid_req_XX_reg_0 => valid_req_XX_reg_0,
      valid_req_XX_reg_1 => valid_req_XX_reg_1,
      valid_req_XX_reg_2 => valid_req_XX_reg_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_ALU_Bit__parameterized2\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    LO : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 0 to 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Shifted : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_ALU_Bit__parameterized2\ : entity is "ALU_Bit";
end \design_1_microblaze_1_1_ALU_Bit__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_ALU_Bit__parameterized2\ is
  signal alu_AddSub : STD_LOGIC;
  signal alu_AddSub_1 : STD_LOGIC;
  signal invert_result : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Last_Bit.I_ALU_LUT_2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized13\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ => S,
      S => alu_AddSub,
      alu_AddSub_1 => alu_AddSub_1,
      alu_Op(0) => alu_Op(0),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.I_ALU_LUT_V5\: entity work.design_1_microblaze_1_1_MB_LUT6
     port map (
      Shifted => Shifted,
      alu_AddSub_1 => alu_AddSub_1,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.MULT_AND_I\: entity work.design_1_microblaze_1_1_MB_MULT_AND_1025
     port map (
      DI => op2_is_1,
      alu_Op(0) => alu_Op(0),
      op2_C(0) => op2_C(0)
    );
\Last_Bit.MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_1026
     port map (
      CI => invert_result,
      DI => op2_is_1,
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => \^lopt\,
      lopt_1 => lopt_7
    );
\Last_Bit.Pre_MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_1027
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\,
      CI => invert_result,
      LO => LO,
      Unsigned_Op => Unsigned_Op,
      lopt => \^lopt\,
      lopt_1 => op2_is_1,
      lopt_2 => alu_AddSub,
      lopt_3 => \^lopt_1\,
      lopt_4 => \^lopt_2\,
      lopt_5 => \^lopt_3\,
      lopt_6 => \^lopt_4\,
      lopt_7 => \^lopt_5\,
      lopt_8 => lopt_6,
      lopt_9 => lopt_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Cache_Interface__parameterized1\ is
  port (
    \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_0\ : out STD_LOGIC;
    new_write_cmd_allowed : out STD_LOGIC;
    Write_Resp_Received : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]_0\ : out STD_LOGIC_VECTOR ( 103 downto 0 );
    \Using_New_CacheInterface_for_AXI.update_idle_1_reg\ : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.write_resp_received_i_reg_0\ : out STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.write_req_done_hold_reg\ : out STD_LOGIC;
    Write_Done : out STD_LOGIC;
    write_req0 : out STD_LOGIC;
    DIBDI : out STD_LOGIC_VECTOR ( 4 downto 0 );
    Read_Req_Granted : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    ADDRBWRADDR : out STD_LOGIC_VECTOR ( 7 downto 0 );
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_AXI.Use_Read_Data_Active.first_word_reg_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_New_CacheInterface_for_AXI.write_req_drop_reg\ : out STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.write_data_done_reg\ : out STD_LOGIC;
    \CacheLine_Cnt_reg[0]\ : out STD_LOGIC;
    \CacheLine_Cnt_reg[1]\ : out STD_LOGIC;
    \Using_AXI.r_read_fifo_addr_reg[0]_0\ : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Read_Req : in STD_LOGIC;
    \Using_AXI.M_AXI_ARBURST_reg[1]_0\ : in STD_LOGIC;
    dcache_read_idle : in STD_LOGIC;
    load_Store_i : in STD_LOGIC;
    Pause_Ack_reg : in STD_LOGIC;
    of_Pause : in STD_LOGIC;
    write_req : in STD_LOGIC;
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    write_req_done_hold : in STD_LOGIC;
    Write_Cacheline_conflict : in STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\ : in STD_LOGIC;
    Write_Strobe_i : in STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.write_data_done_reg_1\ : in STD_LOGIC;
    write_req_drop : in STD_LOGIC;
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    CacheLine_Cnt : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_RVALID : in STD_LOGIC;
    cache_hit : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[2697]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \LOCKSTEP_Out_reg[2185]\ : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Cache_Interface__parameterized1\ : entity is "Cache_Interface";
end \design_1_microblaze_1_1_Cache_Interface__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_Cache_Interface__parameterized1\ is
  signal \^dibdi\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal I1 : STD_LOGIC;
  signal I2 : STD_LOGIC;
  signal \^read_req_granted\ : STD_LOGIC;
  signal Real_Valid_Bits2 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Using_AXI.M_AXI_ARVALID_I_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.M_AXI_ARVALID_I_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_1\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_2\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_3\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_4\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[2].Addr_bit_FDSE_n_1\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_1\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_2\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[2]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[3]_i_1_n_0\ : STD_LOGIC;
  signal \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\ : STD_LOGIC_VECTOR ( 103 downto 0 );
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_2_n_0\ : STD_LOGIC;
  signal \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[3]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_12\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_2\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_3\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_4\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write[2]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write[3]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write[4]_i_2_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write_is_0_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write_is_1_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.pending_write_reg__0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \Using_AXI.Use_AXI_Write.write_cacheline_offset[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.write_cacheline_offset[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_AXI_Write.write_resp_received_i_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.first_word_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.read_data_counter[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.Use_Read_Data_Active.read_data_counter[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[0]_i_3__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr[3]_i_1__0_n_0\ : STD_LOGIC;
  signal \Using_AXI.r_read_fifo_addr_reg__0\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \Using_FPGA.Native_i_15__1_n_0\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.write_req_done_hold_i_2_n_0\ : STD_LOGIC;
  signal Write_Data_Valid : STD_LOGIC;
  signal \^write_resp_received\ : STD_LOGIC;
  signal aw_read_fifo_not_empty : STD_LOGIC;
  signal convert_Burst : STD_LOGIC;
  signal convert_Kind : STD_LOGIC;
  signal convert_Low_Addr : STD_LOGIC_VECTOR ( 28 to 29 );
  signal convert_Strobe : STD_LOGIC_VECTOR ( 0 to 3 );
  signal first_word : STD_LOGIC;
  signal last_outstanding_write : STD_LOGIC;
  signal \^new_write_cmd_allowed\ : STD_LOGIC;
  signal p_29_in : STD_LOGIC;
  signal p_61_out : STD_LOGIC;
  signal pending_write_is_0 : STD_LOGIC;
  signal pending_write_is_1 : STD_LOGIC;
  signal pop_write_aw : STD_LOGIC;
  signal read_data_counter : STD_LOGIC_VECTOR ( 0 to 1 );
  signal w_fifo_exist : STD_LOGIC;
  signal w_fifo_exist_i : STD_LOGIC;
  signal w_read_fifo_addr_0 : STD_LOGIC;
  signal w_read_fifo_addr_1 : STD_LOGIC;
  signal w_read_fifo_addr_2 : STD_LOGIC;
  signal w_read_fifo_addr_3 : STD_LOGIC;
  signal w_read_fifo_addr_i_0 : STD_LOGIC;
  signal w_read_fifo_addr_i_1 : STD_LOGIC;
  signal w_read_fifo_addr_i_2 : STD_LOGIC;
  signal w_read_fifo_addr_i_3 : STD_LOGIC;
  signal write_cacheline_offset : STD_LOGIC_VECTOR ( 0 to 1 );
  signal write_data_stall : STD_LOGIC;
  signal write_req_granted : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \CacheLine_Addr[0]_i_1\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \CacheLine_Cnt[0]_i_1\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of Pause_Ack_i_3 : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \Using_AXI.M_AXI_ARVALID_I_i_1__0\ : label is "soft_lutpair66";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name : string;
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][0]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][10]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][10]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][10]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][11]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][11]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][11]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][12]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][12]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][12]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][13]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][13]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][13]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][14]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][14]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][14]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][15]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][15]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][15]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][16]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][16]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][16]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][17]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][17]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][17]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][18]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][18]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][18]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][19]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][19]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][19]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][1]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][20]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][20]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][20]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][21]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][21]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][21]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][22]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][22]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][22]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][23]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][23]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][23]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][24]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][24]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][24]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][25]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][25]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][25]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][26]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][26]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][26]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][27]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][27]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][27]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][28]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][28]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][28]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][29]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][29]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][29]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][2]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][30]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][30]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][30]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][31]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][31]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][31]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][3]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][3]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][3]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][4]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][5]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][6]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][7]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][8]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][9]_srl16 ";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_2\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_3\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_2\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_2\ : label is "soft_lutpair69";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][5]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][6]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][7]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][8]_srl16 ";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[3]_i_1\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_4\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.pending_write[0]_i_1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.pending_write[3]_i_1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.pending_write[4]_i_3\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.pending_write_is_0_i_1\ : label is "soft_lutpair61";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][0]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][10]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][10]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][10]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][11]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][11]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][11]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][12]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][12]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][12]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][13]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][13]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][13]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][14]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][14]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][14]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][15]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][15]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][15]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][16]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][16]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][16]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][17]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][17]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][17]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][18]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][18]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][18]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][19]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][19]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][19]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][1]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][20]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][20]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][20]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][21]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][21]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][21]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][22]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][22]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][22]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][23]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][23]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][23]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][24]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][24]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][24]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][25]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][25]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][25]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][26]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][26]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][26]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][27]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][27]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][27]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][28]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][28]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][28]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][29]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][29]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][29]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][2]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][30]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][30]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][30]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][31]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][31]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][31]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][3]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][3]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][3]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][4]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][5]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][5]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][6]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][6]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][7]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][7]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][8]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][8]_srl16 ";
  attribute srl_bus_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][9]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][9]_srl16 ";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.write_cacheline_offset[0]_i_1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \Using_AXI.Use_AXI_Write.write_cacheline_offset[1]_i_1\ : label is "soft_lutpair67";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][0]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][0]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][1]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][1]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][2]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][2]_srl16 ";
  attribute srl_bus_name of \Using_AXI.r_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15] ";
  attribute srl_name of \Using_AXI.r_fifo_mem_reg[15][4]_srl16\ : label is "U0/\MicroBlaze_Core_I/Area.Core/Using_DCache.Using_WriteThrough.DCache_I1/Using_New_CacheInterface_for_AXI.Cache_Interface_I1/Using_AXI.r_fifo_mem_reg[15][4]_srl16 ";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[0]_i_2__0\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[0]_i_3__0\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \Using_AXI.r_read_fifo_addr[3]_i_1__0\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of mbar_first_i_5 : label is "soft_lutpair64";
begin
  DIBDI(4 downto 0) <= \^dibdi\(4 downto 0);
  Read_Req_Granted <= \^read_req_granted\;
  \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]_0\(103 downto 0) <= \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(103 downto 0);
  \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_0\ <= \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\;
  Write_Resp_Received <= \^write_resp_received\;
  new_write_cmd_allowed <= \^new_write_cmd_allowed\;
\CacheLine_Addr[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"81"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => CacheLine_Cnt(0),
      I2 => CacheLine_Cnt(1),
      O => SR(0)
    );
\CacheLine_Cnt[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => CacheLine_Cnt(1),
      I1 => \^dibdi\(0),
      I2 => CacheLine_Cnt(0),
      O => \CacheLine_Cnt_reg[1]\
    );
\CacheLine_Cnt[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000FFFF7FFF0000"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I4 => M_AXI_DC_RVALID,
      I5 => CacheLine_Cnt(1),
      O => \Using_AXI.r_read_fifo_addr_reg[0]_0\
    );
Pause_Ack_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"77F7FFFF"
    )
        port map (
      I0 => dcache_read_idle,
      I1 => \^write_resp_received\,
      I2 => load_Store_i,
      I3 => Pause_Ack_reg,
      I4 => of_Pause,
      O => \Using_New_CacheInterface_for_AXI.update_idle_1_reg\
    );
\Using_AXI.M_AXI_ARADDR_I_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(10),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(12),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(11),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(13),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(12),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(14),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(13),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(15),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(14),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(16),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(15),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(17),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(16),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(18),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(17),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(19),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(18),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(20),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(19),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(21),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(20),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(22),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(21),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(23),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(22),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(24),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(23),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(25),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(24),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(26),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(25),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(27),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(26),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(28),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(27),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(29),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(28),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(30),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(29),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(31),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(2),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(4),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(30),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(32),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(31),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(33),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(3),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(5),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(4),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(6),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(5),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(7),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(6),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(8),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(7),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(9),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(8),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(10),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARADDR_I_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => \in\(9),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(11),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARBURST_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.M_AXI_ARBURST_reg[1]_0\,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(2),
      R => '0'
    );
\Using_AXI.M_AXI_ARCACHE_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => Read_Req,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(1),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARLEN_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Read_Req,
      D => '1',
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(3),
      R => sync_reset
    );
\Using_AXI.M_AXI_ARVALID_I_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"5C"
    )
        port map (
      I0 => M_AXI_DC_ARREADY,
      I1 => \Using_AXI.M_AXI_ARVALID_I_i_2_n_0\,
      I2 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      O => \Using_AXI.M_AXI_ARVALID_I_i_1__0_n_0\
    );
\Using_AXI.M_AXI_ARVALID_I_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA00808080"
    )
        port map (
      I0 => Read_Req,
      I1 => pending_write_is_1,
      I2 => M_AXI_DC_BVALID,
      I3 => write_req,
      I4 => \^new_write_cmd_allowed\,
      I5 => pending_write_is_0,
      O => \Using_AXI.M_AXI_ARVALID_I_i_2_n_0\
    );
\Using_AXI.M_AXI_ARVALID_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.M_AXI_ARVALID_I_i_1__0_n_0\,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.Addr_bit[0].Addr_bit_FDSE\: entity work.\design_1_microblaze_1_1_MB_FDSE__parameterized1\
     port map (
      Clk => Clk,
      I1 => I1,
      I2 => I2,
      sync_reset => sync_reset,
      w_read_fifo_addr_0 => w_read_fifo_addr_0,
      w_read_fifo_addr_1 => w_read_fifo_addr_1,
      w_read_fifo_addr_2 => w_read_fifo_addr_2,
      w_read_fifo_addr_3 => w_read_fifo_addr_3,
      w_read_fifo_addr_i_3 => w_read_fifo_addr_i_3
    );
\Using_AXI.Use_AXI_Write.Addr_bit[0].Addr_bit_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized3\
     port map (
      I1 => I1,
      I2 => I2,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \Using_FPGA.Native_0\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      Write_Data_Valid => Write_Data_Valid,
      w_read_fifo_addr_3 => w_read_fifo_addr_3,
      w_read_fifo_addr_i_3 => w_read_fifo_addr_i_3
    );
\Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE\: entity work.\design_1_microblaze_1_1_MB_FDSE__parameterized1_15\
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_1\,
      \Using_FPGA.Native_1\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_2\,
      \Using_FPGA.Native_2\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_3\,
      \Using_FPGA.Native_3\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_4\,
      Write_Data_Valid => Write_Data_Valid,
      p_29_in => p_29_in,
      sync_reset => sync_reset,
      w_read_fifo_addr_0 => w_read_fifo_addr_0,
      w_read_fifo_addr_1 => w_read_fifo_addr_1,
      w_read_fifo_addr_2 => w_read_fifo_addr_2,
      w_read_fifo_addr_3 => w_read_fifo_addr_3,
      w_read_fifo_addr_i_2 => w_read_fifo_addr_i_2,
      write_data_stall => write_data_stall
    );
\Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized3_16\
     port map (
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_1\,
      \Using_FPGA.Native_1\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_2\,
      \Using_FPGA.Native_2\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      Write_Data_Valid => Write_Data_Valid,
      w_read_fifo_addr_2 => w_read_fifo_addr_2,
      w_read_fifo_addr_i_2 => w_read_fifo_addr_i_2
    );
\Using_AXI.Use_AXI_Write.Addr_bit[2].Addr_bit_FDSE\: entity work.\design_1_microblaze_1_1_MB_FDSE__parameterized1_17\
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[2].Addr_bit_FDSE_n_1\,
      sync_reset => sync_reset,
      w_read_fifo_addr_0 => w_read_fifo_addr_0,
      w_read_fifo_addr_1 => w_read_fifo_addr_1,
      w_read_fifo_addr_i_1 => w_read_fifo_addr_i_1
    );
\Using_AXI.Use_AXI_Write.Addr_bit[2].Addr_bit_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized3_18\
     port map (
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_1\,
      \Using_FPGA.Native_1\ => \Using_AXI.Use_AXI_Write.Addr_bit[2].Addr_bit_FDSE_n_1\,
      \Using_FPGA.Native_2\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      Write_Data_Valid => Write_Data_Valid,
      w_read_fifo_addr_1 => w_read_fifo_addr_1,
      w_read_fifo_addr_i_1 => w_read_fifo_addr_i_1
    );
\Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE\: entity work.\design_1_microblaze_1_1_MB_FDSE__parameterized1_19\
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_1\,
      \Using_FPGA.Native_1\ => \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_2\,
      sync_reset => sync_reset,
      w_read_fifo_addr_0 => w_read_fifo_addr_0,
      w_read_fifo_addr_1 => w_read_fifo_addr_1,
      w_read_fifo_addr_i_0 => w_read_fifo_addr_i_0
    );
\Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized3_20\
     port map (
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[3].Addr_bit_FDSE_n_2\,
      \Using_FPGA.Native_1\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      \Using_FPGA.Native_2\ => \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\,
      \Using_FPGA.Native_3\ => \Using_New_CacheInterface_for_AXI.write_data_done_reg_1\,
      Write_Data_Valid => Write_Data_Valid,
      Write_Strobe_i => Write_Strobe_i,
      w_read_fifo_addr_0 => w_read_fifo_addr_0,
      w_read_fifo_addr_i_0 => w_read_fifo_addr_i_0,
      write_data_stall => write_data_stall
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][0]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(31),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(103)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][0]_srl16_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^new_write_cmd_allowed\,
      I1 => write_req,
      O => write_req_granted
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][10]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(21),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(93)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][11]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(20),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(92)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][12]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(19),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(91)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][13]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(18),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(90)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][14]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(17),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(89)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][15]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(16),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(88)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][16]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(15),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(87)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][17]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(14),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(86)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][18]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(13),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(85)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][19]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(12),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(84)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][1]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(30),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(102)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][20]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(11),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(83)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][21]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(10),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(82)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][22]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(9),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(81)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][23]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(8),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(80)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][24]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(7),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(79)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][25]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(6),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(78)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][26]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(5),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(77)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][27]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(4),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(76)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][28]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(3),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(75)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][29]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(2),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(74)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][2]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(29),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(101)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][30]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(1),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(73)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][31]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(0),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(72)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][3]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(28),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(100)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][4]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(27),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(99)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][5]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(26),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(98)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][6]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(25),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(97)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][7]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(24),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(96)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][8]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(23),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(95)
    );
\Using_AXI.Use_AXI_Write.aw_fifo_mem_reg[15][9]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \in\(22),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(94)
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7888"
    )
        port map (
      I0 => write_req,
      I1 => \^new_write_cmd_allowed\,
      I2 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      I3 => M_AXI_DC_AWREADY,
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A6AAAA9A"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      I1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      I2 => pop_write_aw,
      I3 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      I4 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_2_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      I1 => M_AXI_DC_AWREADY,
      I2 => write_req,
      I3 => \^new_write_cmd_allowed\,
      O => pop_write_aw
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AA96A6A6A6A6A6A"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      I1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      I2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      I3 => write_req_granted,
      I4 => M_AXI_DC_AWREADY,
      I5 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[1]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"70008FFF8FFF7000"
    )
        port map (
      I0 => \^new_write_cmd_allowed\,
      I1 => write_req,
      I2 => M_AXI_DC_AWREADY,
      I3 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      I4 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      I5 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[2]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[3]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_2_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[1]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[2]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[0]_i_1_n_0\,
      D => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr[3]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFEFF0000"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_2_n_0\,
      I1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      I2 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      I3 => M_AXI_DC_AWREADY,
      I4 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      I5 => write_req_granted,
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      I1 => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_2_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.aw_read_fifo_not_empty_i_1_n_0\,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFEFF00FFFE00"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      I2 => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_2_n_0\,
      I3 => p_29_in,
      I4 => write_req_granted,
      I5 => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\,
      O => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_2_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\,
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][5]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2697]\(3),
      Q => convert_Strobe(0)
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][6]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2697]\(2),
      Q => convert_Strobe(1)
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][7]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2697]\(1),
      Q => convert_Strobe(2)
    );
\Using_AXI.Use_AXI_Write.aw_w_fifo_mem_reg[15][8]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      CE => write_req_granted,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2697]\(0),
      Q => convert_Strobe(3)
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[3]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\,
      D => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_2\,
      Q => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\,
      D => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_3\,
      Q => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\,
      D => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_4\,
      Q => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\,
      D => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr[3]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.exist_bit_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE
     port map (
      Clk => Clk,
      D(2) => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_2\,
      D(1) => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_3\,
      D(0) => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_4\,
      E(0) => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_5\,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      Q(3) => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(0),
      Q(2) => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(1),
      Q(1) => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(2),
      Q(0) => \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg__0\(3),
      \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(3) => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(0),
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(2) => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(1),
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(1) => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(2),
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]\(0) => \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg__0\(3),
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[0]_0\ => \^new_write_cmd_allowed\,
      \Using_AXI.Use_AXI_Write.aw_w_read_fifo_addr_reg[2]\ => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\,
      \Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\(3 downto 0) => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(4 downto 1),
      \Using_AXI.Use_AXI_Write.pending_write_reg[1]\ => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_12\,
      \Using_FPGA.Native_0\(4 downto 0) => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(38 downto 34),
      aw_read_fifo_not_empty => aw_read_fifo_not_empty,
      \out\(3) => convert_Strobe(0),
      \out\(2) => convert_Strobe(1),
      \out\(1) => convert_Strobe(2),
      \out\(0) => convert_Strobe(3),
      p_29_in => p_29_in,
      pop_write_aw => pop_write_aw,
      sync_reset => sync_reset,
      w_fifo_exist => w_fifo_exist,
      w_fifo_exist_i => w_fifo_exist_i,
      write_cacheline_offset(0 to 1) => write_cacheline_offset(0 to 1),
      write_req => write_req,
      write_req_granted => write_req_granted
    );
\Using_AXI.Use_AXI_Write.exist_bit_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized5\
     port map (
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \Using_FPGA.Native_0\ => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_3\,
      \Using_FPGA.Native_1\ => \^using_axi.use_axi_write.aw_w_fifo_exist_reg_0\,
      Write_Data_Valid => Write_Data_Valid,
      w_fifo_exist => w_fifo_exist,
      w_fifo_exist_i => w_fifo_exist_i
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => write_req,
      I1 => \^new_write_cmd_allowed\,
      I2 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(71),
      I3 => M_AXI_DC_AWREADY,
      O => aw_read_fifo_not_empty
    );
\Using_AXI.Use_AXI_Write.new_write_cmd_allowed_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.exist_bit_FDRE_n_12\,
      Q => \^new_write_cmd_allowed\,
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      O => \Using_AXI.Use_AXI_Write.pending_write[0]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAA6A6A95559595"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      I1 => write_req,
      I2 => \^new_write_cmd_allowed\,
      I3 => pending_write_is_0,
      I4 => M_AXI_DC_BVALID,
      I5 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      O => \Using_AXI.Use_AXI_Write.pending_write[1]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F778088EAEE1511"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      I1 => write_req_granted,
      I2 => pending_write_is_0,
      I3 => M_AXI_DC_BVALID,
      I4 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(2),
      I5 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      O => \Using_AXI.Use_AXI_Write.pending_write[2]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F80FE01"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      I1 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      I2 => p_61_out,
      I3 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(3),
      I4 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(2),
      O => \Using_AXI.Use_AXI_Write.pending_write[3]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8788"
    )
        port map (
      I0 => write_req,
      I1 => \^new_write_cmd_allowed\,
      I2 => pending_write_is_0,
      I3 => M_AXI_DC_BVALID,
      O => last_outstanding_write
    );
\Using_AXI.Use_AXI_Write.pending_write[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAA9"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(4),
      I1 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(3),
      I2 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      I3 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      I4 => p_61_out,
      I5 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(2),
      O => \Using_AXI.Use_AXI_Write.pending_write[4]_i_2_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8088"
    )
        port map (
      I0 => write_req,
      I1 => \^new_write_cmd_allowed\,
      I2 => pending_write_is_0,
      I3 => M_AXI_DC_BVALID,
      O => p_61_out
    );
\Using_AXI.Use_AXI_Write.pending_write_is_0_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00F8F8F8"
    )
        port map (
      I0 => pending_write_is_1,
      I1 => M_AXI_DC_BVALID,
      I2 => pending_write_is_0,
      I3 => \^new_write_cmd_allowed\,
      I4 => write_req,
      O => \Using_AXI.Use_AXI_Write.pending_write_is_0_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write_is_0_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.pending_write_is_0_i_1_n_0\,
      Q => pending_write_is_0,
      S => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_is_1_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000006"
    )
        port map (
      I0 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      I1 => p_61_out,
      I2 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      I3 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(2),
      I4 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(3),
      I5 => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(4),
      O => \Using_AXI.Use_AXI_Write.pending_write_is_1_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.pending_write_is_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write_is_1_i_1_n_0\,
      Q => pending_write_is_1,
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write[0]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(0),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write[1]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(1),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write[2]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(2),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write[3]_i_1_n_0\,
      Q => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(3),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.pending_write_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => last_outstanding_write,
      D => \Using_AXI.Use_AXI_Write.pending_write[4]_i_2_n_0\,
      Q => \Using_AXI.Use_AXI_Write.pending_write_reg__0\(4),
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][0]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(31),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(70)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][10]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(21),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(60)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][11]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(20),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(59)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][12]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(19),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(58)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][13]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(18),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(57)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][14]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(17),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(56)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][15]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(16),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(55)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][16]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(15),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(54)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][17]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(14),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(53)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][18]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(13),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(52)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][19]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(12),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(51)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][1]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(30),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(69)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][20]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(11),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(50)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][21]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(10),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(49)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][22]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(9),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(48)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][23]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(8),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(47)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][24]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(7),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(46)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][25]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(6),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(45)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][26]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(5),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(44)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][27]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(4),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(43)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][28]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(3),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(42)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][29]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(2),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(41)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][2]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(29),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(68)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][30]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(1),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(40)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][31]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(0),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(39)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][3]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(28),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(67)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][4]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(27),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(66)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][5]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(26),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(65)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][6]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(25),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(64)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][7]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(24),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(63)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][8]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(23),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(62)
    );
\Using_AXI.Use_AXI_Write.w_fifo_mem_reg[15][9]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => w_read_fifo_addr_0,
      A1 => w_read_fifo_addr_1,
      A2 => w_read_fifo_addr_2,
      A3 => w_read_fifo_addr_3,
      CE => Write_Data_Valid,
      CLK => Clk,
      D => \LOCKSTEP_Out_reg[2185]\(22),
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(61)
    );
\Using_AXI.Use_AXI_Write.write_cacheline_offset[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"002A"
    )
        port map (
      I0 => write_cacheline_offset(0),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\,
      I2 => w_fifo_exist,
      I3 => sync_reset,
      O => \Using_AXI.Use_AXI_Write.write_cacheline_offset[0]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.write_cacheline_offset[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"002A"
    )
        port map (
      I0 => write_cacheline_offset(1),
      I1 => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_n_0\,
      I2 => w_fifo_exist,
      I3 => sync_reset,
      O => \Using_AXI.Use_AXI_Write.write_cacheline_offset[1]_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.write_cacheline_offset_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.write_cacheline_offset[0]_i_1_n_0\,
      Q => write_cacheline_offset(0),
      R => '0'
    );
\Using_AXI.Use_AXI_Write.write_cacheline_offset_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.write_cacheline_offset[1]_i_1_n_0\,
      Q => write_cacheline_offset(1),
      R => '0'
    );
\Using_AXI.Use_AXI_Write.write_data_stall_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.Addr_bit[1].Addr_bit_FDSE_n_4\,
      Q => write_data_stall,
      R => sync_reset
    );
\Using_AXI.Use_AXI_Write.write_resp_received_i_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => pending_write_is_0,
      I1 => write_req,
      I2 => \^new_write_cmd_allowed\,
      O => \Using_AXI.Use_AXI_Write.write_resp_received_i_i_1_n_0\
    );
\Using_AXI.Use_AXI_Write.write_resp_received_i_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_AXI_Write.write_resp_received_i_i_1_n_0\,
      Q => \^write_resp_received\,
      S => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.first_word_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFAC"
    )
        port map (
      I0 => M_AXI_DC_RLAST,
      I1 => first_word,
      I2 => \^dibdi\(0),
      I3 => sync_reset,
      O => \Using_AXI.Use_Read_Data_Active.first_word_i_1__0_n_0\
    );
\Using_AXI.Use_Read_Data_Active.first_word_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_Read_Data_Active.first_word_i_1__0_n_0\,
      Q => first_word,
      R => '0'
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6FFF6000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_15__1_n_0\,
      I1 => Real_Valid_Bits2(0),
      I2 => convert_Burst,
      I3 => \^dibdi\(0),
      I4 => read_data_counter(0),
      O => \Using_AXI.Use_Read_Data_Active.read_data_counter[0]_i_1_n_0\
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4CFFFFFF7F000000"
    )
        port map (
      I0 => convert_Kind,
      I1 => first_word,
      I2 => convert_Low_Addr(29),
      I3 => convert_Burst,
      I4 => \^dibdi\(0),
      I5 => read_data_counter(1),
      O => \Using_AXI.Use_Read_Data_Active.read_data_counter[1]_i_1_n_0\
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_Read_Data_Active.read_data_counter[0]_i_1_n_0\,
      Q => read_data_counter(0),
      R => sync_reset
    );
\Using_AXI.Use_Read_Data_Active.read_data_counter_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_AXI.Use_Read_Data_Active.read_data_counter[1]_i_1_n_0\,
      Q => read_data_counter(1),
      R => sync_reset
    );
\Using_AXI.r_fifo_mem_reg[15][0]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => \^read_req_granted\,
      CLK => Clk,
      D => '1',
      Q => convert_Kind
    );
\Using_AXI.r_fifo_mem_reg[15][1]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => \^read_req_granted\,
      CLK => Clk,
      D => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(5),
      Q => convert_Low_Addr(28)
    );
\Using_AXI.r_fifo_mem_reg[15][2]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => \^read_req_granted\,
      CLK => Clk,
      D => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(4),
      Q => convert_Low_Addr(29)
    );
\Using_AXI.r_fifo_mem_reg[15][4]_srl16\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      A1 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      A2 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      A3 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      CE => \^read_req_granted\,
      CLK => Clk,
      D => '1',
      Q => convert_Burst
    );
\Using_AXI.r_fifo_mem_reg[15][4]_srl16_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => M_AXI_DC_ARREADY,
      I1 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      O => \^read_req_granted\
    );
\Using_AXI.r_read_fifo_addr[0]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7888"
    )
        port map (
      I0 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      I1 => M_AXI_DC_ARREADY,
      I2 => \^dibdi\(0),
      I3 => M_AXI_DC_RLAST,
      O => \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\
    );
\Using_AXI.r_read_fifo_addr[0]_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAA9"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I4 => \Using_AXI.r_read_fifo_addr[0]_i_3__0_n_0\,
      O => \Using_AXI.r_read_fifo_addr[0]_i_2__0_n_0\
    );
\Using_AXI.r_read_fifo_addr[0]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8FFF"
    )
        port map (
      I0 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      I1 => M_AXI_DC_ARREADY,
      I2 => \^dibdi\(0),
      I3 => M_AXI_DC_RLAST,
      O => \Using_AXI.r_read_fifo_addr[0]_i_3__0_n_0\
    );
\Using_AXI.r_read_fifo_addr[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08FFF700FFF70008"
    )
        port map (
      I0 => M_AXI_DC_RLAST,
      I1 => \^dibdi\(0),
      I2 => \^read_req_granted\,
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.r_read_fifo_addr[1]_i_1__0_n_0\
    );
\Using_AXI.r_read_fifo_addr[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6A55555595AAAAAA"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I1 => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]_0\(0),
      I2 => M_AXI_DC_ARREADY,
      I3 => \^dibdi\(0),
      I4 => M_AXI_DC_RLAST,
      I5 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      O => \Using_AXI.r_read_fifo_addr[2]_i_1__0_n_0\
    );
\Using_AXI.r_read_fifo_addr[3]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      O => \Using_AXI.r_read_fifo_addr[3]_i_1__0_n_0\
    );
\Using_AXI.r_read_fifo_addr_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\,
      D => \Using_AXI.r_read_fifo_addr[0]_i_2__0_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\,
      D => \Using_AXI.r_read_fifo_addr[1]_i_1__0_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\,
      D => \Using_AXI.r_read_fifo_addr[2]_i_1__0_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      S => sync_reset
    );
\Using_AXI.r_read_fifo_addr_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_AXI.r_read_fifo_addr[0]_i_1__0_n_0\,
      D => \Using_AXI.r_read_fifo_addr[3]_i_1__0_n_0\,
      Q => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      S => sync_reset
    );
\Using_FPGA.Native_i_10__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA08"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => \Using_FPGA.Native_i_15__1_n_0\,
      I2 => Real_Valid_Bits2(0),
      I3 => \Using_FPGA.Native_0\(2),
      O => \^dibdi\(3)
    );
\Using_FPGA.Native_i_11__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA08"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => Real_Valid_Bits2(0),
      I2 => \Using_FPGA.Native_i_15__1_n_0\,
      I3 => \Using_FPGA.Native_0\(1),
      O => \^dibdi\(2)
    );
\Using_FPGA.Native_i_12__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA02"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => \Using_FPGA.Native_i_15__1_n_0\,
      I2 => Real_Valid_Bits2(0),
      I3 => \Using_FPGA.Native_0\(0),
      O => \^dibdi\(1)
    );
\Using_FPGA.Native_i_13__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2AAAAAAA"
    )
        port map (
      I0 => M_AXI_DC_RVALID,
      I1 => \Using_AXI.r_read_fifo_addr_reg__0\(1),
      I2 => \Using_AXI.r_read_fifo_addr_reg__0\(2),
      I3 => \Using_AXI.r_read_fifo_addr_reg__0\(3),
      I4 => \Using_AXI.r_read_fifo_addr_reg__0\(0),
      O => \^dibdi\(0)
    );
\Using_FPGA.Native_i_15__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"35F5"
    )
        port map (
      I0 => read_data_counter(0),
      I1 => convert_Kind,
      I2 => first_word,
      I3 => convert_Low_Addr(28),
      O => \Using_FPGA.Native_i_15__1_n_0\
    );
\Using_FPGA.Native_i_16__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"35F5"
    )
        port map (
      I0 => read_data_counter(1),
      I1 => convert_Kind,
      I2 => first_word,
      I3 => convert_Low_Addr(29),
      O => Real_Valid_Bits2(0)
    );
\Using_FPGA.Native_i_1__87\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(7),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(7),
      O => ADDRBWRADDR(7)
    );
\Using_FPGA.Native_i_1__89\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B380"
    )
        port map (
      I0 => convert_Low_Addr(28),
      I1 => first_word,
      I2 => convert_Kind,
      I3 => read_data_counter(0),
      O => \Using_AXI.Use_Read_Data_Active.first_word_reg_0\(1)
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(6),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(6),
      O => ADDRBWRADDR(6)
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B380"
    )
        port map (
      I0 => convert_Low_Addr(29),
      I1 => first_word,
      I2 => convert_Kind,
      I3 => read_data_counter(1),
      O => \Using_AXI.Use_Read_Data_Active.first_word_reg_0\(0)
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEE0E0E0"
    )
        port map (
      I0 => Write_Data_Valid,
      I1 => \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\,
      I2 => write_req_done_hold,
      I3 => write_req,
      I4 => \^new_write_cmd_allowed\,
      I5 => Write_Cacheline_conflict,
      O => Write_Done
    );
\Using_FPGA.Native_i_3__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(5),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(5),
      O => ADDRBWRADDR(5)
    );
\Using_FPGA.Native_i_4__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(4),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(4),
      O => ADDRBWRADDR(4)
    );
\Using_FPGA.Native_i_5__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(3),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(3),
      O => ADDRBWRADDR(3)
    );
\Using_FPGA.Native_i_6__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(2),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(2),
      O => ADDRBWRADDR(2)
    );
\Using_FPGA.Native_i_7__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(1),
      O => ADDRBWRADDR(1)
    );
\Using_FPGA.Native_i_8__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \^dibdi\(0),
      I2 => \Using_FPGA.Native\(0),
      O => ADDRBWRADDR(0)
    );
\Using_FPGA.Native_i_9__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => \Using_FPGA.Native_i_15__1_n_0\,
      I2 => Real_Valid_Bits2(0),
      I3 => \Using_FPGA.Native_0\(3),
      O => \^dibdi\(4)
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF4C7F0000"
    )
        port map (
      I0 => convert_Low_Addr(28),
      I1 => first_word,
      I2 => convert_Kind,
      I3 => read_data_counter(0),
      I4 => Real_Valid_Bits2(0),
      I5 => \Using_FPGA.Native_0\(3),
      O => D(3)
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00004C7F"
    )
        port map (
      I0 => convert_Low_Addr(28),
      I1 => first_word,
      I2 => convert_Kind,
      I3 => read_data_counter(0),
      I4 => Real_Valid_Bits2(0),
      I5 => \Using_FPGA.Native_0\(2),
      O => D(2)
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF8A0A8000"
    )
        port map (
      I0 => Real_Valid_Bits2(0),
      I1 => convert_Low_Addr(28),
      I2 => first_word,
      I3 => convert_Kind,
      I4 => read_data_counter(0),
      I5 => \Using_FPGA.Native_0\(1),
      O => D(1)
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF0000B380"
    )
        port map (
      I0 => convert_Low_Addr(28),
      I1 => first_word,
      I2 => convert_Kind,
      I3 => read_data_counter(0),
      I4 => Real_Valid_Bits2(0),
      I5 => \Using_FPGA.Native_0\(0),
      O => D(0)
    );
\Using_New_CacheInterface_for_AXI.write_data_done_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000BAAA"
    )
        port map (
      I0 => \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\,
      I1 => write_data_stall,
      I2 => \Using_New_CacheInterface_for_AXI.write_data_done_reg_1\,
      I3 => Write_Strobe_i,
      I4 => cache_hit,
      I5 => sync_reset,
      O => \Using_New_CacheInterface_for_AXI.write_data_done_reg\
    );
\Using_New_CacheInterface_for_AXI.write_req_done_hold_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EAEAEAAA"
    )
        port map (
      I0 => write_req_done_hold,
      I1 => write_req,
      I2 => \^new_write_cmd_allowed\,
      I3 => Write_Cacheline_conflict,
      I4 => write_data_stall,
      I5 => \Using_New_CacheInterface_for_AXI.write_req_done_hold_i_2_n_0\,
      O => \Using_New_CacheInterface_for_AXI.write_req_done_hold_reg\
    );
\Using_New_CacheInterface_for_AXI.write_req_done_hold_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBABBBABBBAAAAA"
    )
        port map (
      I0 => sync_reset,
      I1 => Write_Cacheline_conflict,
      I2 => write_req_granted,
      I3 => write_req_done_hold,
      I4 => \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\,
      I5 => Write_Data_Valid,
      O => \Using_New_CacheInterface_for_AXI.write_req_done_hold_i_2_n_0\
    );
\Using_New_CacheInterface_for_AXI.write_req_drop_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => write_req_drop,
      I1 => \^new_write_cmd_allowed\,
      I2 => write_req,
      I3 => cache_hit,
      I4 => sync_reset,
      O => \Using_New_CacheInterface_for_AXI.write_req_drop_reg\
    );
\Using_New_CacheInterface_for_AXI.write_req_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080808"
    )
        port map (
      I0 => Write_Strobe_i,
      I1 => \Using_New_CacheInterface_for_AXI.write_data_done_reg_1\,
      I2 => write_req_drop,
      I3 => write_req,
      I4 => \^new_write_cmd_allowed\,
      O => write_req0
    );
Write_Cacheline_conflict_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"007E000000000000"
    )
        port map (
      I0 => \^dibdi\(0),
      I1 => CacheLine_Cnt(0),
      I2 => CacheLine_Cnt(1),
      I3 => sync_reset,
      I4 => CO(0),
      I5 => Write_Strobe_i,
      O => \CacheLine_Cnt_reg[0]\
    );
mbar_first_i_5: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^write_resp_received\,
      I1 => dcache_read_idle,
      O => \Using_AXI.Use_AXI_Write.write_resp_received_i_reg_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg_Bit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg_Bit : entity is "MSR_Reg_Bit";
end design_1_microblaze_1_1_MSR_Reg_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg_Bit is
begin
MSR_I: entity work.design_1_microblaze_1_1_MB_FDRSE_932
     port map (
      Address(0) => Address(0),
      Clk => Clk,
      I3_0 => I3_0,
      MSR_Rst => MSR_Rst,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg_Bit_924 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg_Bit_924 : entity is "MSR_Reg_Bit";
end design_1_microblaze_1_1_MSR_Reg_Bit_924;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg_Bit_924 is
begin
MSR_I: entity work.design_1_microblaze_1_1_MB_FDRSE_931
     port map (
      Address(0) => Address(0),
      Clk => Clk,
      I3_1 => I3_1,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg_Bit_925 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg_Bit_925 : entity is "MSR_Reg_Bit";
end design_1_microblaze_1_1_MSR_Reg_Bit_925;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg_Bit_925 is
begin
msr_i_RnM: entity work.design_1_microblaze_1_1_MB_FDRSE_930
     port map (
      Address(0) => Address(0),
      Clk => Clk,
      I3_2 => I3_2,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      msr_I(0) => msr_I(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg_Bit_926 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    I3_3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg_Bit_926 : entity is "MSR_Reg_Bit";
end design_1_microblaze_1_1_MSR_Reg_Bit_926;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg_Bit_926 is
begin
msr_i_RnM: entity work.design_1_microblaze_1_1_MB_FDRSE_929
     port map (
      Address(1 downto 0) => Address(1 downto 0),
      Clk => Clk,
      I3 => I3,
      I3_3 => I3_3,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      msr_I(0) => msr_I(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg_Bit_927 is
  port (
    msr_I : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_4 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg_Bit_927 : entity is "MSR_Reg_Bit";
end design_1_microblaze_1_1_MSR_Reg_Bit_927;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg_Bit_927 is
begin
msr_i_RnM: entity work.design_1_microblaze_1_1_MB_FDRSE_928
     port map (
      Address(0) => Address(0),
      Clk => Clk,
      I3_4 => I3_4,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      msr_I(0) => msr_I(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select_Bit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg_9\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_16 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[23]_2\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select_Bit : entity is "Operand_Select_Bit";
end design_1_microblaze_1_1_Operand_Select_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select_Bit is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_856
     port map (
      EX_Result(0) => EX_Result(0),
      I3_16 => I3_16,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_857
     port map (
      Clk => Clk,
      EX_Op2(0) => EX_Op2(4),
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_3\ => \Using_BitField.mem_mask1_reg[23]\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_5\,
      \Using_FPGA.The_Compare[0].sel_reg_9\ => \Using_FPGA.The_Compare[0].sel_reg_9\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_858
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_859
     port map (
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(0),
      D_7 => D_7,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_BitField.mem_mask1_reg[23]\ => \Using_BitField.mem_mask1_reg[23]\,
      \Using_BitField.mem_mask1_reg[23]_0\ => \Using_BitField.mem_mask1_reg[23]_0\,
      \Using_BitField.mem_mask1_reg[23]_1\ => \Using_BitField.mem_mask1_reg[23]_1\,
      \Using_BitField.mem_mask1_reg[23]_2\ => \Using_BitField.mem_mask1_reg[23]_2\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\(1 downto 0) => \Using_FPGA.Native_3\(1 downto 0),
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_8\ => \^using_fpga.native\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select_Bit_785 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_15 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_BitField.mem_mask0_reg[17]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[17]_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[29]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select_Bit_785 : entity is "Operand_Select_Bit";
end design_1_microblaze_1_1_Operand_Select_Bit_785;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select_Bit_785 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_852
     port map (
      EX_Result(0) => EX_Result(0),
      I3_15 => I3_15,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_853
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_854
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_855
     port map (
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D_6 => D_6,
      EX_Op2(2 downto 0) => EX_Op2(2 downto 0),
      \Using_BitField.mem_mask0_reg[17]\ => \Using_BitField.mem_mask0_reg[17]\,
      \Using_BitField.mem_mask0_reg[17]_0\ => \Using_BitField.mem_mask0_reg[17]_0\,
      \Using_BitField.mem_mask0_reg[17]_1\ => \Using_BitField.mem_mask0_reg[17]_1\,
      \Using_BitField.mem_mask0_reg[17]_2\ => \Using_BitField.mem_mask0_reg[17]_2\,
      \Using_BitField.mem_mask0_reg[29]\ => \Using_BitField.mem_mask0_reg[29]\,
      \Using_BitField.mem_mask0_reg[29]_0\ => \Using_BitField.mem_mask0_reg[29]_0\,
      \Using_BitField.mem_mask0_reg[29]_1\ => \Using_BitField.mem_mask0_reg[29]_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\(1 downto 0) => \Using_FPGA.Native_2\(1 downto 0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select_Bit_786 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_11 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \C_reg[28]\ : in STD_LOGIC;
    \C_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[28]_1\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[28]_2\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[19]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select_Bit_786 : entity is "Operand_Select_Bit";
end design_1_microblaze_1_1_Operand_Select_Bit_786;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select_Bit_786 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_836
     port map (
      EX_Result(0) => EX_Result(0),
      I3_11 => I3_11,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_837
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_838
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_839
     port map (
      BitField_Insert => BitField_Insert,
      \C_reg[28]\ => \C_reg[28]\,
      \C_reg[28]_0\(0) => \C_reg[28]_0\(0),
      \C_reg[28]_1\ => \C_reg[28]_1\,
      \C_reg[28]_2\ => \C_reg[28]_2\,
      Clk => Clk,
      D_2 => D_2,
      \Using_BitField.mem_mask0_reg[19]\ => \Using_BitField.mem_mask0_reg[19]\,
      \Using_BitField.mem_mask0_reg[19]_0\ => \Using_BitField.mem_mask0_reg[19]_0\,
      \Using_BitField.mem_mask0_reg[19]_1\ => \Using_BitField.mem_mask0_reg[19]_1\,
      \Using_BitField.mem_mask0_reg[19]_2\ => \Using_BitField.mem_mask0_reg[19]_2\,
      \Using_FPGA.Native_0\ => EX_Op2(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_3\(0),
      instr_ex(0) => instr_ex(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select_Bit_788 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg_7\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_10 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \C_reg[30]\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_3\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 1 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[30]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select_Bit_788 : entity is "Operand_Select_Bit";
end design_1_microblaze_1_1_Operand_Select_Bit_788;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select_Bit_788 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_828
     port map (
      EX_Result(0) => EX_Result(0),
      I3_10 => I3_10,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_829
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_i_3__8\ => \Using_FPGA.Native_i_3__8\,
      \Using_FPGA.Native_i_3__8_0\ => \Using_FPGA.Native_i_3__8_0\,
      \Using_FPGA.Native_i_3__8_1\ => \Using_FPGA.Native_i_3__8_1\,
      \Using_FPGA.Native_i_3__8_2\ => \Using_FPGA.Native_i_3__8_2\,
      \Using_FPGA.Native_i_3__8_3\ => \Using_FPGA.Native_i_3__8_3\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_830
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_8\(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_831
     port map (
      A(1 downto 0) => A(1 downto 0),
      \C_reg[30]\ => \C_reg[30]\,
      \C_reg[30]_0\ => \C_reg[30]_0\,
      Clk => Clk,
      D_1 => D_1,
      Op1_Logic => Op1_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_2\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_3\ => \^using_fpga.native\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_7\,
      \Using_FPGA.The_Compare[2].sel_reg_7\ => \Using_FPGA.The_Compare[2].sel_reg_7\,
      msr_I(0) => msr_I(0),
      of_PipeRun => of_PipeRun,
      void_bit => void_bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select_Bit_789 is
  port (
    Op1_Logic : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[27]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[27]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[11]_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select_Bit_789 : entity is "Operand_Select_Bit";
end design_1_microblaze_1_1_Operand_Select_Bit_789;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select_Bit_789 is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_824
     port map (
      EX_Result(0) => EX_Result(0),
      I3 => I3,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_825
     port map (
      Clk => Clk,
      Op1_Logic => Op1_Logic,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_826
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_827
     port map (
      A(0) => A(0),
      BitField_Insert => BitField_Insert,
      \C_reg[27]\(2 downto 0) => \C_reg[27]\(2 downto 0),
      \C_reg[27]_0\ => \C_reg[27]_0\,
      Clk => Clk,
      D_0 => D_0,
      \Using_BitField.mem_mask0_reg[11]\ => \Using_BitField.mem_mask0_reg[11]\,
      \Using_BitField.mem_mask0_reg[11]_0\ => \Using_BitField.mem_mask0_reg[11]_0\,
      \Using_BitField.mem_mask0_reg[11]_1\ => \Using_BitField.mem_mask0_reg[11]_1\,
      \Using_BitField.mem_mask0_reg[11]_2\ => \Using_BitField.mem_mask0_reg[11]_2\,
      \Using_BitField.mem_mask0_reg[11]_3\ => \Using_BitField.mem_mask0_reg[11]_3\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_2\(0),
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      of_PipeRun => of_PipeRun,
      void_bit => void_bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg_3\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10\ is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_916
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_917
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_918
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_919
     port map (
      Clk => Clk,
      D_21 => D_21,
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(1 downto 0) => \Using_FPGA.Native_1\(1 downto 0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.The_Compare[0].sel_reg_3\ => \Using_FPGA.The_Compare[0].sel_reg_3\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_772\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S_2 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_772\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_772\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_772\ is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_912
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_913
     port map (
      Clk => Clk,
      EX_Op2(0) => \^ex_op2\(0),
      S_2 => S_2,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(1 downto 0) => \Using_FPGA.Native_1\(1 downto 0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_914
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_915
     port map (
      Clk => Clk,
      D_20 => D_20,
      EX_Op2(0) => \^ex_op2\(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_773\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_773\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_773\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_773\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_908
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_909
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_910
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_911
     port map (
      Clk => Clk,
      D_19 => D_19,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_774\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_774\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_774\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_774\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_904
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_905
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_0\ => \Using_FPGA.Native_i_1__75_0\,
      \Using_FPGA.Native_i_1__75_1\ => \Using_FPGA.Native_i_1__75_1\,
      \Using_FPGA.Native_i_1__75_2\ => \Using_FPGA.Native_i_1__75_2\,
      \Using_FPGA.Native_i_1__75_3\ => \Using_FPGA.Native_i_1__75_3\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_906
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_907
     port map (
      Clk => Clk,
      D_18 => D_18,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_775\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_775\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_775\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_775\ is
  signal \^op1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  op1(0) <= \^op1\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_900
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_901
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_902
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_903
     port map (
      Clk => Clk,
      D_17 => D_17,
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.The_Compare[2].sel_reg_1\ => \Using_FPGA.The_Compare[2].sel_reg_1\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_776\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_776\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_776\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_776\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_896
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_897
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => op1(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_898
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_899
     port map (
      Clk => Clk,
      D_16 => D_16,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_780\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_780\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_780\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_780\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_876
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_877
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      of_PipeRun => of_PipeRun,
      op1(4 downto 0) => op1(4 downto 0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_878
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_879
     port map (
      Clk => Clk,
      D_30 => D_30,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_787\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_787\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_787\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_787\ is
  signal \^op1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  op1(0) <= \^op1\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_832
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_833
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_834
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_835
     port map (
      Clk => Clk,
      D_29 => D_29,
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\(1 downto 0) => \Using_FPGA.Native_0\(1 downto 0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Using_FPGA.The_Compare[0].sel_reg\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_790\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_790\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_790\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_790\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_820
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_821
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => op1(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_822
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_823
     port map (
      Clk => Clk,
      D_28 => D_28,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_791\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S_0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_791\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_791\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_791\ is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_816
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_817
     port map (
      Clk => Clk,
      EX_Op2(0) => \^ex_op2\(0),
      S_0 => S_0,
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native\(1 downto 0),
      \Using_FPGA.Native_1\(1 downto 0) => \Using_FPGA.Native_0\(1 downto 0),
      of_PipeRun => of_PipeRun,
      op1(0) => op1(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_818
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_819
     port map (
      Clk => Clk,
      D_27 => D_27,
      EX_Op2(0) => \^ex_op2\(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_792\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_792\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_792\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_792\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_812
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_813
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_814
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_815
     port map (
      Clk => Clk,
      D_26 => D_26,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_793\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_793\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_793\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_793\ is
  signal \^op1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  op1(0) <= \^op1\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_808
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_809
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_810
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_811
     port map (
      Clk => Clk,
      D_25 => D_25,
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.The_Compare[2].sel_reg\ => \Using_FPGA.The_Compare[2].sel_reg\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_794\ is
  port (
    op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_794\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_794\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_794\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_804
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_805
     port map (
      Clk => Clk,
      of_PipeRun => of_PipeRun,
      op1(0) => op1(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_806
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_807
     port map (
      Clk => Clk,
      D_24 => D_24,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_795\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__76\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_1\ : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_795\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_795\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_795\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_800
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_801
     port map (
      Clk => Clk,
      Is_Equal3_out => Is_Equal3_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_i_1__76\ => \Using_FPGA.Native_i_1__76\,
      \Using_FPGA.Native_i_1__76_0\ => \Using_FPGA.Native_i_1__76_0\,
      \Using_FPGA.Native_i_1__76_1\ => \Using_FPGA.Native_i_1__76_1\,
      \Using_FPGA.Native_i_5__1_0\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.Native_i_5__1_1\ => \Using_FPGA.Native_i_5__1_0\,
      \Using_FPGA.Native_i_5__1_2\ => \Using_FPGA.Native_i_5__1_1\,
      \Using_FPGA.Native_i_5__1_3\ => \Using_FPGA.Native_i_5__1_2\,
      of_PipeRun => of_PipeRun,
      op1(1 downto 0) => op1(1 downto 0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_802
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_803
     port map (
      Clk => Clk,
      D_23 => D_23,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_796\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_i_4__3\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_796\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_796\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_796\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_797
     port map (
      Clk => Clk,
      Is_Equal3_out => Is_Equal3_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_i_4__3\ => \Using_FPGA.Native_i_4__3\,
      of_PipeRun => of_PipeRun,
      op1(4 downto 0) => op1(4 downto 0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_798
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_799
     port map (
      Clk => Clk,
      D_22 => D_22,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized12\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \instr_EX_i_reg[22]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_17 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1\ : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    Is_Equal : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1_0\ : in STD_LOGIC;
    \C_reg[31]\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[29]\ : in STD_LOGIC;
    \C_reg[29]_0\ : in STD_LOGIC;
    \C_reg[29]_1\ : in STD_LOGIC;
    \C_reg[31]_0\ : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[31]_1\ : in STD_LOGIC;
    \C_reg[23]\ : in STD_LOGIC;
    \C_reg[23]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized12\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized12\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized12\ is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_920
     port map (
      EX_Result(0) => EX_Result(0),
      I3_17 => I3_17,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_921
     port map (
      A(0) => A(0),
      \C_reg[23]\ => \C_reg[23]\,
      \C_reg[23]_0\ => \C_reg[23]_0\,
      \C_reg[29]\ => \C_reg[29]\,
      \C_reg[29]_0\ => \C_reg[29]_0\,
      \C_reg[29]_1\ => \C_reg[29]_1\,
      \C_reg[31]\ => \C_reg[31]\,
      \C_reg[31]_0\ => \C_reg[31]_0\,
      \C_reg[31]_1\ => \C_reg[31]_1\,
      Clk => Clk,
      Is_Equal => Is_Equal,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_0\ => \Using_FPGA.Native_i_1__75_0\,
      \Using_FPGA.Native_i_1__75_1\ => \Using_FPGA.Native_i_1__75_1\,
      \Using_FPGA.Native_i_1__75_2\ => \Using_FPGA.Native_i_1__75_2\,
      \Using_FPGA.Native_i_5__1\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.Native_i_5__1_0\ => \Using_FPGA.Native_i_5__1_0\,
      clz_instr => clz_instr,
      \instr_EX_i_reg[22]\(1 downto 0) => \instr_EX_i_reg[22]\(1 downto 0),
      instr_ex(0) => instr_ex(0),
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_922
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_923
     port map (
      Clk => Clk,
      D_31 => D_31,
      S => S,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_i_5__1\,
      compare_Instr => compare_Instr,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized2\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_12 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7_2\ : in STD_LOGIC;
    \C_reg[23]\ : in STD_LOGIC;
    void_bit : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \C_reg[23]_0\ : in STD_LOGIC;
    \C_reg[23]_1\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[24]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[24]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[23]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[23]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[25]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized2\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized2\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_840
     port map (
      EX_Result(0) => EX_Result(0),
      I3_12 => I3_12,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_841
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_i_2__7\ => \Using_FPGA.Native_i_2__7\,
      \Using_FPGA.Native_i_2__7_0\ => \Using_FPGA.Native_i_2__7_0\,
      \Using_FPGA.Native_i_2__7_1\ => \Using_FPGA.Native_i_2__7_1\,
      \Using_FPGA.Native_i_2__7_2\ => \Using_FPGA.Native_i_2__7_2\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_842
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_843
     port map (
      BitField_Insert => BitField_Insert,
      \C_reg[23]\ => \C_reg[23]\,
      \C_reg[23]_0\ => \C_reg[23]_0\,
      \C_reg[23]_1\ => \C_reg[23]_1\,
      Clk => Clk,
      D_3 => D_3,
      EX_Op2(1 downto 0) => EX_Op2(1 downto 0),
      \Using_BitField.mem_mask0_reg[23]\ => \Using_BitField.mem_mask0_reg[23]\,
      \Using_BitField.mem_mask0_reg[23]_0\ => \Using_BitField.mem_mask0_reg[23]_0\,
      \Using_BitField.mem_mask0_reg[24]\ => \Using_BitField.mem_mask0_reg[24]\,
      \Using_BitField.mem_mask0_reg[24]_0\ => \Using_BitField.mem_mask0_reg[24]_0\,
      \Using_BitField.mem_mask0_reg[25]\ => \Using_BitField.mem_mask0_reg[25]\,
      \Using_BitField.mem_mask0_reg[25]_0\ => \Using_BitField.mem_mask0_reg[25]_0\,
      \Using_BitField.mem_mask0_reg[25]_1\ => \Using_BitField.mem_mask0_reg[25]_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_2\(0),
      \Using_FPGA.Native_2\(3 downto 0) => \Using_FPGA.Native_3\(3 downto 0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_4\,
      of_PipeRun => of_PipeRun,
      void_bit => void_bit
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized4\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S_8 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 11 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_13 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[14]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[1]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[3]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[15]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[15]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[4]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[5]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[13]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[14]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[7]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[9]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized4\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized4\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized4\ is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_844
     port map (
      EX_Result(0) => EX_Result(0),
      I3_13 => I3_13,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_845
     port map (
      Clk => Clk,
      S_8 => S_8,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \^ex_op2\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\(1 downto 0) => \Using_BitField.mem_mask0_reg[14]\(2 downto 1),
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_846
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_847
     port map (
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D_4 => D_4,
      \Using_BitField.mem_mask0_reg[10]\ => \Using_BitField.mem_mask0_reg[10]\,
      \Using_BitField.mem_mask0_reg[13]\ => \Using_BitField.mem_mask0_reg[13]\,
      \Using_BitField.mem_mask0_reg[14]\(2 downto 0) => \Using_BitField.mem_mask0_reg[14]\(2 downto 0),
      \Using_BitField.mem_mask0_reg[14]_0\ => \Using_BitField.mem_mask0_reg[14]_0\,
      \Using_BitField.mem_mask0_reg[15]\ => \Using_BitField.mem_mask0_reg[15]\,
      \Using_BitField.mem_mask0_reg[15]_0\ => \Using_BitField.mem_mask0_reg[15]_0\,
      \Using_BitField.mem_mask0_reg[1]\ => \Using_BitField.mem_mask0_reg[1]\,
      \Using_BitField.mem_mask0_reg[1]_0\ => \Using_BitField.mem_mask0_reg[1]_0\,
      \Using_BitField.mem_mask0_reg[1]_1\ => \Using_BitField.mem_mask0_reg[1]_1\,
      \Using_BitField.mem_mask0_reg[3]\ => \Using_BitField.mem_mask0_reg[3]\,
      \Using_BitField.mem_mask0_reg[4]\ => \Using_BitField.mem_mask0_reg[4]\,
      \Using_BitField.mem_mask0_reg[5]\ => \Using_BitField.mem_mask0_reg[5]\,
      \Using_BitField.mem_mask0_reg[7]\ => \Using_BitField.mem_mask0_reg[7]\,
      \Using_BitField.mem_mask0_reg[9]\ => \Using_BitField.mem_mask0_reg[9]\,
      \Using_FPGA.Native_0\ => \^ex_op2\(0),
      \Using_FPGA.Native_1\(11 downto 0) => \Using_FPGA.Native_0\(11 downto 0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized6\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    I3_14 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_1\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76_2\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ICache_Enabled : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized6\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized6\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized6\ is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Both_PC_and_MSR.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_848
     port map (
      EX_Result(0) => EX_Result(0),
      I3_14 => I3_14,
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_849
     port map (
      Clk => Clk,
      Is_Equal1_out => Is_Equal1_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_i_1__76\ => \Using_FPGA.Native_i_1__76\,
      \Using_FPGA.Native_i_1__76_0\ => \Using_FPGA.Native_i_1__76_0\,
      \Using_FPGA.Native_i_1__76_1\ => \Using_FPGA.Native_i_1__76_1\,
      \Using_FPGA.Native_i_1__76_2\ => \Using_FPGA.Native_i_1__76_2\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_850
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_851
     port map (
      Clk => Clk,
      D_5 => D_5,
      EX_Op2(0) => EX_Op2(0),
      ICache_Enabled => ICache_Enabled,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_4\ => \^using_fpga.native\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Sext : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_892
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_893
     port map (
      Clk => Clk,
      Sext => Sext,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sext16 => sext16,
      sext8 => sext8,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_894
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_895
     port map (
      Clk => Clk,
      D_15 => D_15,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_777\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[0].sel_reg_6\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_777\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_777\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_777\ is
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  EX_Op2(0) <= \^ex_op2\(0);
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_888
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_889
     port map (
      Clk => Clk,
      EX_Op2(0) => \^ex_op2\(0),
      Is_Equal1_out => Is_Equal1_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\(1 downto 0) => \Using_FPGA.Native_2\(1 downto 0),
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.The_Compare[0].sel_reg_6\ => \Using_FPGA.The_Compare[0].sel_reg_6\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_890
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_891
     port map (
      Clk => Clk,
      D_14 => D_14,
      EX_Op2(0) => \^ex_op2\(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_778\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_778\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_778\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_778\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_884
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_885
     port map (
      Clk => Clk,
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_i_1__75_0\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_1\ => \Using_FPGA.Native_i_1__75_0\,
      \Using_FPGA.Native_i_1__75_2\ => \Using_FPGA.Native_i_1__75_1\,
      \Using_FPGA.Native_i_1__75_3\ => \Using_FPGA.Native_i_1__75_2\,
      \Using_FPGA.Native_i_1__75_4\ => \Using_FPGA.Native_i_1__75_3\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_886
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_887
     port map (
      Clk => Clk,
      D_13 => D_13,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_779\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_779\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_779\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_779\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_880
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_881
     port map (
      Clk => Clk,
      I0 => I0,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_882
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_883
     port map (
      Clk => Clk,
      D_12 => D_12,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_781\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_781\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_781\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_781\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_872
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_873
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_874
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_875
     port map (
      Clk => Clk,
      D_11 => D_11,
      EX_Op2(0) => EX_Op2(0),
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_782\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 27 downto 0 );
    S_5 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[28]_1\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[15]\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_782\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_782\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_782\ is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_868
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_869
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_870
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_871
     port map (
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(27 downto 0) => D(27 downto 0),
      D_10 => D_10,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      S_5 => S_5,
      \Using_BitField.mem_mask0_reg[2]\ => \Using_BitField.mem_mask0_reg[2]\,
      \Using_BitField.mem_mask1_reg[15]\ => \Using_BitField.mem_mask1_reg[15]\,
      \Using_BitField.mem_mask1_reg[28]\ => \Using_BitField.mem_mask1_reg[28]\,
      \Using_BitField.mem_mask1_reg[28]_0\ => \Using_BitField.mem_mask1_reg[28]_0\,
      \Using_BitField.mem_mask1_reg[28]_1\ => \Using_BitField.mem_mask1_reg[28]_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_783\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.The_Compare[2].sel_reg_4\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_1\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_2\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_0\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[27]_2\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__8_2\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[28]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[28]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[21]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[30]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_783\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_783\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_783\ is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_864
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_865
     port map (
      Clk => Clk,
      Is_Equal1_out => Is_Equal1_out,
      Is_Equal3_out => Is_Equal3_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_i_1__74_0\ => \Using_FPGA.Native_i_1__74\,
      \Using_FPGA.Native_i_1__74_1\ => \Using_FPGA.Native_i_1__74_0\,
      \Using_FPGA.Native_i_1__74_2\ => \Using_FPGA.Native_i_1__74_1\,
      \Using_FPGA.Native_i_1__74_3\ => \Using_FPGA.Native_i_1__74_2\,
      \Using_FPGA.Native_i_3__8_0\ => \Using_FPGA.Native_i_3__8\,
      \Using_FPGA.Native_i_3__8_1\ => \Using_FPGA.Native_i_3__8_0\,
      \Using_FPGA.Native_i_3__8_2\ => \Using_FPGA.Native_i_3__8_1\,
      \Using_FPGA.Native_i_3__8_3\ => \Using_FPGA.Native_i_3__8_2\,
      of_PipeRun => of_PipeRun,
      op1(0) => op1(0),
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_866
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_867
     port map (
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(0),
      D_9 => D_9,
      EX_Op2(1 downto 0) => EX_Op2(1 downto 0),
      \Using_BitField.mem_mask0_reg[21]\ => \Using_BitField.mem_mask0_reg[21]\,
      \Using_BitField.mem_mask0_reg[28]\ => \Using_BitField.mem_mask0_reg[28]\,
      \Using_BitField.mem_mask0_reg[28]_0\ => \Using_BitField.mem_mask0_reg[28]_0\,
      \Using_BitField.mem_mask0_reg[30]\ => \Using_BitField.mem_mask0_reg[30]\,
      \Using_BitField.mem_mask1_reg[27]\ => \Using_BitField.mem_mask1_reg[27]\,
      \Using_BitField.mem_mask1_reg[27]_0\ => \Using_BitField.mem_mask1_reg[27]_0\,
      \Using_BitField.mem_mask1_reg[27]_1\ => \Using_BitField.mem_mask1_reg[27]_1\,
      \Using_BitField.mem_mask1_reg[27]_2\ => \Using_BitField.mem_mask1_reg[27]_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_2\(4 downto 0) => \Using_FPGA.Native_3\(4 downto 0),
      \Using_FPGA.Native_3\ => \^using_fpga.native\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_8\,
      \Using_FPGA.The_Compare[2].sel_reg_4\ => \Using_FPGA.The_Compare[2].sel_reg_4\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_784\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    res_Forward1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 0 );
    opsel1_SPR : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_0\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[26]_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    BitField_Insert : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[6]\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_1\ : in STD_LOGIC;
    \Using_BitField.mem_mask0_reg[27]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_784\ : entity is "Operand_Select_Bit";
end \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_784\;

architecture STRUCTURE of \design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_784\ is
  signal op1_I : STD_LOGIC;
  signal op1_Reg : STD_LOGIC;
begin
\Only_PC.Op1_LUT6\: entity work.design_1_microblaze_1_1_MB_LUT6_2_860
     port map (
      Address(0) => Address(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      op1_I => op1_I,
      op1_Reg => op1_Reg,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1
    );
Op1_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_861
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      of_PipeRun => of_PipeRun,
      op1_I => op1_I,
      sync_reset => sync_reset
    );
Op1_Reg_DFF: entity work.design_1_microblaze_1_1_MB_FDRE_862
     port map (
      Clk => Clk,
      EX_Op1(0) => EX_Op1(0),
      of_PipeRun => of_PipeRun,
      op1_Reg => op1_Reg,
      sync_reset => sync_reset
    );
Op2_DFF: entity work.design_1_microblaze_1_1_MB_FDE_863
     port map (
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(0),
      D_8 => D_8,
      EX_Op2(1 downto 0) => EX_Op2(1 downto 0),
      \Using_BitField.mem_mask0_reg[27]\ => \Using_BitField.mem_mask0_reg[27]\,
      \Using_BitField.mem_mask0_reg[27]_0\ => \Using_BitField.mem_mask0_reg[27]_0\,
      \Using_BitField.mem_mask0_reg[27]_1\ => \Using_BitField.mem_mask0_reg[27]_1\,
      \Using_BitField.mem_mask0_reg[27]_2\ => \Using_BitField.mem_mask0_reg[27]_2\,
      \Using_BitField.mem_mask0_reg[6]\ => \Using_BitField.mem_mask0_reg[6]\,
      \Using_BitField.mem_mask1_reg[26]\ => \Using_BitField.mem_mask1_reg[26]\,
      \Using_BitField.mem_mask1_reg[26]_0\ => \Using_BitField.mem_mask1_reg[26]_0\,
      \Using_BitField.mem_mask1_reg[26]_1\ => \Using_BitField.mem_mask1_reg[26]_1\,
      \Using_BitField.mem_mask1_reg[26]_2\ => \Using_BitField.mem_mask1_reg[26]_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(2 downto 0) => \Using_FPGA.Native_1\(2 downto 0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      of_PipeRun => of_PipeRun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_PC_Bit is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_PC_Bit : entity is "PC_Bit";
end design_1_microblaze_1_1_PC_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_PC_Bit is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_628
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_629\
     port map (
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_630
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_631
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
\Reset_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDRE_632
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_633\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_PC_Bit_575 is
  port (
    I3_1 : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_PC_Bit_575 : entity is "PC_Bit";
end design_1_microblaze_1_1_PC_Bit_575;

architecture STRUCTURE of design_1_microblaze_1_1_PC_Bit_575 is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_622
     port map (
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_623\
     port map (
      O => pc_Sum,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_624
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_625
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      I3_1 => I3_1,
      IReady => IReady,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      pc_I => pc_I
    );
\Reset_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDRE_626
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_627\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  lopt_1 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_766
     port map (
      LO => LO,
      lopt => lopt,
      pc_Sum => pc_Sum,
      xor_Sum => xor_Sum
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_767\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0),
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump,
      pc_Sum => pc_Sum
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_768
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_769
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_770\
     port map (
      pc_I => pc_I,
      xor_Sum => xor_Sum
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_771
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_553\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    valid_Req_XX_i_5 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_2 : in STD_LOGIC;
    valid_Req_XX_i_2_0 : in STD_LOGIC;
    valid_Req_XX_i_2_1 : in STD_LOGIC;
    valid_Req_XX_i_2_2 : in STD_LOGIC;
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_553\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_553\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_553\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_760
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_761\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \^instr_addr\,
      \in\(0) => \in\(0),
      jump => jump,
      valid_Req_XX_i_2 => valid_Req_XX_i_2,
      valid_Req_XX_i_2_0 => valid_Req_XX_i_2_0,
      valid_Req_XX_i_2_1 => valid_Req_XX_i_2_1,
      valid_Req_XX_i_2_2 => valid_Req_XX_i_2_2,
      valid_Req_XX_i_5 => valid_Req_XX_i_5
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_762
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_763
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_764\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_765
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_554\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_554\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_554\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_554\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_754
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_755\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_756
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_757
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_758\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_759
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_555\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_555\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_555\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_555\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_748
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_749\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_750
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_751
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_752\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_753
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_556\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_i_4 : in STD_LOGIC;
    valid_Req_XX_i_4_0 : in STD_LOGIC;
    valid_Req_XX_i_4_1 : in STD_LOGIC;
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_556\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_556\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_556\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_742
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_743\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \^instr_addr\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \in\(0) => \in\(0),
      jump => jump,
      valid_Req_XX_i_4 => valid_Req_XX_i_4,
      valid_Req_XX_i_4_0 => valid_Req_XX_i_4_0,
      valid_Req_XX_i_4_1 => valid_Req_XX_i_4_1
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_744
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_745
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_746\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_747
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_557\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_557\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_557\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_557\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_736
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_737\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_738
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_739
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_740\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_741
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_558\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_558\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_558\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_558\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_730
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_731\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_732
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_733
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_734\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_735
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_559\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_559\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_559\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_559\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_724
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_725\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_726
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_727
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_728\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_729
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_560\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_560\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_560\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_560\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_718
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_719\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_720
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_721
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_722\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_723
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_561\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_561\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_561\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_561\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_712
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_713\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_714
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_715
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_716\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_717
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_562\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_562\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_562\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_562\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_706
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_707\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_708
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_709
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_710\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_711
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_563\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_563\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_563\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_563\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_700
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_701\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_702
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_703
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_704\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_705
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_564\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_564\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_564\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_564\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_694
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_695\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_696
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_697
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_698\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_699
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_565\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_565\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_565\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_565\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_688
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_689\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_690
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_691
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_692\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_693
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_566\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_566\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_566\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_566\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_682
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_683\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_684
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_685
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_686\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_687
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_567\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_567\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_567\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_567\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_676
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_677\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_678
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_679
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_680\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_681
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_568\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_568\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_568\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_568\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_670
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_671\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_672
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_673
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_674\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_675
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_569\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3 : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_569\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_569\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_569\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_664
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_665\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_666
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_667
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      I3 => I3,
      IReady => IReady,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_668\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_669
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_570\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_570\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_570\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_570\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_658
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_659\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_660
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_661
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_662\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_663
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_571\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I3_0 : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_571\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_571\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_571\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_652
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_653\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_654
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_655
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      I3_0 => I3_0,
      IReady => IReady,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_656\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_657
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_572\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_572\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_572\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_572\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_646
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_647\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_648
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_649
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_650\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_651
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_573\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    DI : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_573\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_573\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_573\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lopt_1\ <= lopt_2;
  lopt_1 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_640
     port map (
      Carry_Out => Carry_Out,
      DI => DI,
      O => pc_Sum,
      S => xor_Sum,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_641\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_642
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_643
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_644\
     port map (
      DI => DI,
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_645
     port map (
      Clk => Clk,
      PC_Write => PC_Write,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_574\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_574\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_574\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_574\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_634
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_635\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_636
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_637
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_638\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_639
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_576\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_576\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_576\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_576\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_616
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_617\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_618
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_619
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_620\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_621
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_577\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_577\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_577\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_577\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_610
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_611\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_612
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_613
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_614\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_615
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_578\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    valid_Req_XX_i_4 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_reg : in STD_LOGIC;
    valid_Req_XX_reg_0 : in STD_LOGIC;
    valid_Req_XX_reg_1 : in STD_LOGIC;
    valid_Req_XX_reg_2 : in STD_LOGIC;
    valid_Req_XX_reg_3 : in STD_LOGIC;
    valid_Req_XX_i_2 : in STD_LOGIC;
    valid_Req_XX_i_2_0 : in STD_LOGIC;
    valid_Req_XX_i_2_1 : in STD_LOGIC;
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_578\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_578\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_578\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_604
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_605\
     port map (
      D(0) => D(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \^instr_addr\,
      \in\(0) => \in\(0),
      jump => jump,
      valid_Req_XX_i_2_0 => valid_Req_XX_i_2,
      valid_Req_XX_i_2_1 => valid_Req_XX_i_2_0,
      valid_Req_XX_i_2_2 => valid_Req_XX_i_2_1,
      valid_Req_XX_i_4 => valid_Req_XX_i_4,
      valid_Req_XX_reg => valid_Req_XX_reg,
      valid_Req_XX_reg_0 => valid_Req_XX_reg_0,
      valid_Req_XX_reg_1 => valid_Req_XX_reg_1,
      valid_Req_XX_reg_2 => valid_Req_XX_reg_2,
      valid_Req_XX_reg_3 => valid_Req_XX_reg_3
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_606
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_607
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_608\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_609
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_579\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_579\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_579\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_579\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_598
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_599\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_600
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_601
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_602\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_603
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_580\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_580\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_580\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_580\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_592
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_593\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_594
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_595
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_596\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_597
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_581\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_581\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_581\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_581\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_586
     port map (
      Carry_Out => Carry_Out,
      LO => LO,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33_587\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE_588
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_589
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31_590\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_591
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_PC_Bit__parameterized2_582\ is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr_Addr : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_In : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_PC_Bit__parameterized2_582\ : entity is "PC_Bit";
end \design_1_microblaze_1_1_PC_Bit__parameterized2_582\;

architecture STRUCTURE of \design_1_microblaze_1_1_PC_Bit__parameterized2_582\ is
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^instr_addr\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal pc_I : STD_LOGIC;
  signal pc_Sum : STD_LOGIC;
  signal xor_Sum : STD_LOGIC;
begin
  Address(0) <= \^address\(0);
  Instr_Addr <= \^instr_addr\;
  \^lopt_2\ <= lopt_3;
  lopt_2 <= xor_Sum;
MUXCY_XOR_I: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_583
     port map (
      Carry_In => Carry_In,
      Carry_Out => Carry_Out,
      O => pc_Sum,
      S => xor_Sum,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
NewPC_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized33\
     port map (
      D(0) => D(0),
      Instr_Addr => \^instr_addr\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\(0),
      O => pc_Sum,
      Q(0) => Q(0),
      \in\(0) => \in\(0),
      jump => jump
    );
PC_EX_DFF: entity work.design_1_microblaze_1_1_MB_FDE
     port map (
      Address(0) => \^address\(0),
      Clk => Clk,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
PC_OF_Buffer: entity work.design_1_microblaze_1_1_MB_SRL16E_584
     port map (
      Address(0) => \^address\(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      IReady => IReady,
      pc_I => pc_I
    );
SUM_I: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized31\
     port map (
      S => xor_Sum,
      pc_I => pc_I
    );
\Set_DFF.PC_IF_DFF\: entity work.design_1_microblaze_1_1_MB_FDSE_585
     port map (
      Clk => Clk,
      Instr_Addr => \^instr_addr\,
      PC_Write => PC_Write,
      pc_I => pc_I,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_PreFetch_Buffer is
  port (
    of_Valid_Raw : out STD_LOGIC;
    instr_OF : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 12 downto 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.set_BIP_I_reg\ : out STD_LOGIC;
    write_Reg_reg : out STD_LOGIC;
    mtsmsr_write_i_reg : out STD_LOGIC;
    \Using_MSR_Instr.msrxxx_carry_reg\ : out STD_LOGIC;
    p_36_out : out STD_LOGIC;
    DI : out STD_LOGIC;
    buffer_Full : out STD_LOGIC;
    msrxxx_write_carry : out STD_LOGIC;
    d_AS_I12_out : out STD_LOGIC;
    inHibit_EX_reg : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    reset_BIP_I : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    Reg_Test_Equal_i : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    Reg_Test_Equal_N_i4_out : out STD_LOGIC;
    use_Reg_Neg_DI_i22_out : out STD_LOGIC;
    force_Val1_i23_out : out STD_LOGIC;
    use_Reg_Neg_S_i24_out : out STD_LOGIC;
    force1_i25_out : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg\ : out STD_LOGIC;
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    of_mbar_decode : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    D_18 : out STD_LOGIC;
    D_19 : out STD_LOGIC;
    D_20 : out STD_LOGIC;
    D_21 : out STD_LOGIC;
    D_22 : out STD_LOGIC;
    D_23 : out STD_LOGIC;
    D_24 : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    D_27 : out STD_LOGIC;
    D_28 : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    D_30 : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    MSRclr_Instr_i : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    mbar_is_sleep0 : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    p_39_out : out STD_LOGIC;
    wic_first0 : out STD_LOGIC;
    wdc_first0 : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    write_Carry_I0 : out STD_LOGIC;
    p_37_out : out STD_LOGIC;
    p_38_out : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    of_Pause_reg : out STD_LOGIC;
    inHibit_EX_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    inHibit_EX_reg_1 : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    doublet_i_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    is_swx_I_reg : out STD_LOGIC;
    is_lwx_I_reg : out STD_LOGIC;
    byte_i_reg : out STD_LOGIC;
    Sext8_reg : out STD_LOGIC;
    Sext16_reg : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    doublet_Read_i_reg : out STD_LOGIC;
    quadlet_Read_i_reg : out STD_LOGIC;
    Sign_Extend_reg : out STD_LOGIC;
    R : in STD_LOGIC;
    Clk : in STD_LOGIC;
    CI : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    quadlet_Read_i_reg_0 : in STD_LOGIC;
    set_BIP_I : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    write_Reg_reg_0 : in STD_LOGIC;
    mtsmsr_write_i_reg_0 : in STD_LOGIC;
    msrxxx_carry : in STD_LOGIC;
    \Using_FPGA.Native_I1\ : in STD_LOGIC;
    ex_Valid_reg : in STD_LOGIC;
    \Using_FPGA.Native_I1_0\ : in STD_LOGIC;
    missed_IFetch : in STD_LOGIC;
    nonvalid_IFetch_n_reg : in STD_LOGIC;
    nonvalid_IFetch_n_reg_0 : in STD_LOGIC;
    mul_first_reg : in STD_LOGIC;
    \Size_17to32.imm_Reg_reg[15]\ : in STD_LOGIC;
    dbg_brki_hit : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    res_Forward2 : in STD_LOGIC;
    Reg2_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    jump_Carry2 : in STD_LOGIC;
    ex_Valid_reg_0 : in STD_LOGIC;
    complete_dready : in STD_LOGIC;
    mul_Executing : in STD_LOGIC;
    trace_jump_taken_i_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_28\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    nonvalid_IFetch_n_reg_1 : in STD_LOGIC;
    nonvalid_IFetch_n_reg_2 : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    is_swx_I_reg_0 : in STD_LOGIC;
    is_swx_I : in STD_LOGIC;
    is_lwx_I : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    Sext8_reg_0 : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    doublet_Read : in STD_LOGIC;
    quadlet_Read : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_PreFetch_Buffer : entity is "PreFetch_Buffer";
end design_1_microblaze_1_1_PreFetch_Buffer;

architecture STRUCTURE of design_1_microblaze_1_1_PreFetch_Buffer is
  signal \^d\ : STD_LOGIC_VECTOR ( 12 downto 0 );
  signal D_32 : STD_LOGIC;
  signal \PreFetch_Buffers[0].SRL16E_I_n_3\ : STD_LOGIC;
  signal \PreFetch_Buffers[0].SRL16E_I_n_4\ : STD_LOGIC;
  signal \PreFetch_Buffers[11].SRL16E_I_n_1\ : STD_LOGIC;
  signal \PreFetch_Buffers[13].SRL16E_I_n_1\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_10\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_11\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_12\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_13\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_14\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_15\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_16\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_17\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_3\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_4\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_5\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_6\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_7\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_8\ : STD_LOGIC;
  signal \PreFetch_Buffers[16].SRL16E_I_n_9\ : STD_LOGIC;
  signal \PreFetch_Buffers[1].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[1].SRL16E_I_n_5\ : STD_LOGIC;
  signal \PreFetch_Buffers[2].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[3].SRL16E_I_n_39\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_10\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_2\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_8\ : STD_LOGIC;
  signal \PreFetch_Buffers[4].SRL16E_I_n_9\ : STD_LOGIC;
  signal \PreFetch_Buffers[5].SRL16E_I_n_5\ : STD_LOGIC;
  signal S0_out : STD_LOGIC;
  signal S_33 : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_16\ : STD_LOGIC;
  signal \^using_fpga.native_18\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_8\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal buffer_Addr_Carry_1 : STD_LOGIC;
  signal buffer_Addr_Carry_2 : STD_LOGIC;
  signal buffer_Addr_S_I_0 : STD_LOGIC;
  signal buffer_Addr_S_I_1 : STD_LOGIC;
  signal buffer_Addr_S_I_2 : STD_LOGIC;
  signal \^instr_of\ : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal lopt_2 : STD_LOGIC;
  signal \^of_valid_raw\ : STD_LOGIC;
begin
  D(12 downto 0) <= \^d\(12 downto 0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_16\ <= \^using_fpga.native_16\;
  \Using_FPGA.Native_18\ <= \^using_fpga.native_18\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_8\ <= \^using_fpga.native_8\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
  instr_OF(10 downto 0) <= \^instr_of\(10 downto 0);
  of_Valid_Raw <= \^of_valid_raw\;
\Buffer_DFFs[1].FDS_I\: entity work.design_1_microblaze_1_1_MB_FDS
     port map (
      Clk => Clk,
      R => R,
      S_33 => S_33,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => quadlet_Read_i_reg_0,
      buffer_Addr_S_I_2 => buffer_Addr_S_I_2
    );
\Buffer_DFFs[1].MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY
     port map (
      LO => buffer_Addr_Carry_2,
      S_33 => S_33,
      buffer_Addr_S_I_2 => buffer_Addr_S_I_2,
      lopt => lopt_2
    );
\Buffer_DFFs[2].FDS_I\: entity work.design_1_microblaze_1_1_MB_FDS_96
     port map (
      Clk => Clk,
      O => buffer_Addr_S_I_1,
      R => R,
      S => S0_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => quadlet_Read_i_reg_0
    );
\Buffer_DFFs[2].MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_97
     port map (
      LO => buffer_Addr_Carry_2,
      O => buffer_Addr_S_I_1,
      S => S0_out,
      \Using_FPGA.Native\ => quadlet_Read_i_reg_0,
      \Using_FPGA.Native_0\ => buffer_Addr_Carry_1,
      lopt => lopt_2,
      lopt_1 => S_33
    );
\Buffer_DFFs[3].FDS_I\: entity work.design_1_microblaze_1_1_MB_FDS_98
     port map (
      Clk => Clk,
      O => buffer_Addr_S_I_0,
      R => R,
      \Using_FPGA.Native_0\ => \^using_fpga.native\
    );
\Buffer_DFFs[3].MUXCY_XOR_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_XORCY_99
     port map (
      CI => CI,
      LO => buffer_Addr_Carry_1,
      O => buffer_Addr_S_I_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_0\ => quadlet_Read_i_reg_0,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\PreFetch_Buffers[0].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E
     port map (
      CI => CI,
      Clk => Clk,
      Compare_Instr_reg => \^instr_of\(9),
      Compare_Instr_reg_0 => \^instr_of\(8),
      Compare_Instr_reg_1 => \^d\(0),
      \Using_FPGA.Native\ => \^instr_of\(10),
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_27\,
      d_AS_I12_out => d_AS_I12_out,
      d_AS_I_reg => quadlet_Read_i_reg_0,
      d_AS_I_reg_0 => nonvalid_IFetch_n_reg,
      d_AS_I_reg_1 => nonvalid_IFetch_n_reg_0,
      inHibit_EX_reg => inHibit_EX_reg,
      inHibit_EX_reg_0 => \PreFetch_Buffers[0].SRL16E_I_n_4\,
      inHibit_EX_reg_1 => mul_first_reg,
      inHibit_EX_reg_2 => \^instr_of\(4),
      inHibit_EX_reg_3 => \^instr_of\(5),
      inHibit_EX_reg_4 => \^d\(12),
      inHibit_EX_reg_5 => \PreFetch_Buffers[4].SRL16E_I_n_8\,
      \instr_EX_i_reg[0]\ => \^using_fpga.native\,
      \instr_EX_i_reg[0]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[0]_1\ => \^using_fpga.native_1\,
      jump2_I_reg => \^instr_of\(6),
      jump2_I_reg_0 => \^instr_of\(7),
      mux_Instr_Read(0) => mux_Instr_Read(0)
    );
\PreFetch_Buffers[10].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_100
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^instr_of\(0),
      mux_Instr_Read(0) => mux_Instr_Read(10),
      \write_Addr_I_reg[4]\ => \^using_fpga.native\,
      \write_Addr_I_reg[4]_0\ => \^using_fpga.native_0\,
      \write_Addr_I_reg[4]_1\ => \^using_fpga.native_1\
    );
\PreFetch_Buffers[11].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_101
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^d\(12),
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[11].SRL16E_I_n_1\,
      \Using_FPGA.set_BIP_I_reg\ => \^d\(11),
      \Using_FPGA.set_BIP_I_reg_0\ => \^d\(10),
      \instr_EX_i_reg[11]\ => \^using_fpga.native\,
      \instr_EX_i_reg[11]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[11]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(11)
    );
\PreFetch_Buffers[12].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_102
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^d\(11),
      \instr_EX_i_reg[12]\ => \^using_fpga.native\,
      \instr_EX_i_reg[12]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[12]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(12)
    );
\PreFetch_Buffers[13].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_103
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^d\(10),
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[13].SRL16E_I_n_1\,
      \Using_FPGA.Native_i_10__1\ => \^d\(11),
      \Using_FPGA.Native_i_10__1_0\ => \^d\(12),
      \Using_FPGA.Native_i_10__1_1\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_i_10__1_2\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_i_10__1_3\ => \^d\(1),
      \instr_EX_i_reg[13]\ => \^using_fpga.native\,
      \instr_EX_i_reg[13]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[13]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(13)
    );
\PreFetch_Buffers[14].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_104
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(9),
      \instr_EX_i_reg[14]\ => \^using_fpga.native\,
      \instr_EX_i_reg[14]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[14]_1\ => \^using_fpga.native_1\,
      mbar_decode_I_reg => \^instr_of\(6),
      mbar_decode_I_reg_0 => \^instr_of\(5),
      mbar_decode_I_reg_1 => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      mbar_decode_I_reg_2 => \^instr_of\(7),
      mbar_decode_I_reg_3 => \^instr_of\(8),
      mux_Instr_Read(0) => mux_Instr_Read(14),
      of_mbar_decode => of_mbar_decode
    );
\PreFetch_Buffers[15].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_105
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(8),
      MSRclr_Instr_i => MSRclr_Instr_i,
      \Using_MSR_Instr.MSRclr_Instr_i_reg\ => \^d\(7),
      \Using_MSR_Instr.MSRclr_Instr_i_reg_0\ => \PreFetch_Buffers[4].SRL16E_I_n_2\,
      \instr_EX_i_reg[15]\ => \^using_fpga.native\,
      \instr_EX_i_reg[15]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[15]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(15)
    );
\PreFetch_Buffers[16].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_106
     port map (
      CI => CI,
      Clk => Clk,
      \Size_17to32.imm_Reg_reg[0]\ => \PreFetch_Buffers[16].SRL16E_I_n_17\,
      \Size_17to32.imm_Reg_reg[10]\ => \PreFetch_Buffers[16].SRL16E_I_n_7\,
      \Size_17to32.imm_Reg_reg[11]\ => \PreFetch_Buffers[16].SRL16E_I_n_6\,
      \Size_17to32.imm_Reg_reg[12]\ => \PreFetch_Buffers[16].SRL16E_I_n_5\,
      \Size_17to32.imm_Reg_reg[13]\ => \PreFetch_Buffers[16].SRL16E_I_n_4\,
      \Size_17to32.imm_Reg_reg[14]\ => \PreFetch_Buffers[16].SRL16E_I_n_3\,
      \Size_17to32.imm_Reg_reg[15]\ => \PreFetch_Buffers[16].SRL16E_I_n_2\,
      \Size_17to32.imm_Reg_reg[1]\ => \PreFetch_Buffers[16].SRL16E_I_n_16\,
      \Size_17to32.imm_Reg_reg[2]\ => \PreFetch_Buffers[16].SRL16E_I_n_15\,
      \Size_17to32.imm_Reg_reg[3]\ => \PreFetch_Buffers[16].SRL16E_I_n_14\,
      \Size_17to32.imm_Reg_reg[4]\ => \PreFetch_Buffers[16].SRL16E_I_n_13\,
      \Size_17to32.imm_Reg_reg[5]\ => \PreFetch_Buffers[16].SRL16E_I_n_12\,
      \Size_17to32.imm_Reg_reg[6]\ => \PreFetch_Buffers[16].SRL16E_I_n_11\,
      \Size_17to32.imm_Reg_reg[7]\ => \PreFetch_Buffers[16].SRL16E_I_n_10\,
      \Size_17to32.imm_Reg_reg[8]\ => \PreFetch_Buffers[16].SRL16E_I_n_9\,
      \Size_17to32.imm_Reg_reg[9]\ => \PreFetch_Buffers[16].SRL16E_I_n_8\,
      \Using_FPGA.Native\ => \^d\(7),
      \Using_FPGA.Native_0\(15 downto 0) => \Using_FPGA.Native_28\(15 downto 0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_29\,
      \Using_MSR_Instr.msrxxx_write_carry_reg\ => \PreFetch_Buffers[4].SRL16E_I_n_2\,
      \Using_MSR_Instr.msrxxx_write_carry_reg_0\ => \^d\(1),
      \Using_MSR_Instr.msrxxx_write_carry_reg_1\ => nonvalid_IFetch_n_reg,
      \Using_MSR_Instr.msrxxx_write_carry_reg_2\ => nonvalid_IFetch_n_reg_0,
      \instr_EX_i_reg[16]\ => \^using_fpga.native\,
      \instr_EX_i_reg[16]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[16]_1\ => \^using_fpga.native_1\,
      msrxxx_write_carry => msrxxx_write_carry,
      mux_Instr_Read(0) => mux_Instr_Read(16)
    );
\PreFetch_Buffers[17].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_107
     port map (
      CI => CI,
      Clk => Clk,
      D(2 downto 0) => \^d\(5 downto 3),
      \Using_FPGA.Native\ => \^d\(6),
      \Using_FPGA.Native_0\ => \^using_fpga.native_18\,
      \Using_FPGA.Native_i_6__0\ => \^d\(0),
      \Using_FPGA.Native_i_6__0_0\ => \^using_fpga.native_9\,
      \instr_EX_i_reg[17]\ => \^using_fpga.native\,
      \instr_EX_i_reg[17]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[17]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(17)
    );
\PreFetch_Buffers[18].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_108
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(5),
      \instr_EX_i_reg[18]\ => \^using_fpga.native\,
      \instr_EX_i_reg[18]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[18]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(18)
    );
\PreFetch_Buffers[19].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_109
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(4),
      \instr_EX_i_reg[19]\ => \^using_fpga.native\,
      \instr_EX_i_reg[19]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[19]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(19)
    );
\PreFetch_Buffers[1].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_110
     port map (
      CI => CI,
      Clk => Clk,
      D(2 downto 1) => \^d\(11 downto 10),
      D(0) => \^d\(6),
      \Using_FPGA.Native\ => \^instr_of\(9),
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[1].SRL16E_I_n_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_3\ => \PreFetch_Buffers[1].SRL16E_I_n_5\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_5\ => \^instr_of\(6),
      \Using_FPGA.Native_6\ => \^instr_of\(5),
      \Using_FPGA.set_BIP_I_reg\ => \Using_FPGA.set_BIP_I_reg\,
      \Using_FPGA.set_BIP_I_reg_0\ => \PreFetch_Buffers[11].SRL16E_I_n_1\,
      \Using_FPGA.set_BIP_I_reg_1\ => quadlet_Read_i_reg_0,
      \instr_EX_i_reg[1]\ => \^using_fpga.native\,
      \instr_EX_i_reg[1]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[1]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(1),
      set_BIP_I => set_BIP_I,
      sync_reset => sync_reset,
      write_Reg_reg => \PreFetch_Buffers[2].SRL16E_I_n_2\,
      write_Reg_reg_0 => \PreFetch_Buffers[4].SRL16E_I_n_2\,
      writing_reg => \^instr_of\(10),
      writing_reg_0 => \^instr_of\(7)
    );
\PreFetch_Buffers[20].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_111
     port map (
      CI => CI,
      Clk => Clk,
      D(0) => \^d\(3),
      \instr_EX_i_reg[20]\ => \^using_fpga.native\,
      \instr_EX_i_reg[20]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[20]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(20)
    );
\PreFetch_Buffers[21].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_112
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^using_fpga.native_2\,
      \instr_EX_i_reg[21]\ => \^using_fpga.native\,
      \instr_EX_i_reg[21]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[21]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(21)
    );
\PreFetch_Buffers[22].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_113
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^using_fpga.native_3\,
      \instr_EX_i_reg[22]\ => \^using_fpga.native\,
      \instr_EX_i_reg[22]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[22]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(22)
    );
\PreFetch_Buffers[23].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_114
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^using_fpga.native_4\,
      \instr_EX_i_reg[23]\ => \^using_fpga.native\,
      \instr_EX_i_reg[23]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[23]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(23)
    );
\PreFetch_Buffers[24].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_115
     port map (
      CI => CI,
      Clk => Clk,
      Sext16_reg => Sext16_reg,
      Sext16_reg_0 => \^using_fpga.native_6\,
      Sext16_reg_1 => \^using_fpga.native_7\,
      Sext16_reg_2 => \^d\(0),
      Sext16_reg_3 => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      Sext16_reg_4 => quadlet_Read_i_reg_0,
      \Using_FPGA.Native\ => \^using_fpga.native_5\,
      \instr_EX_i_reg[24]\ => \^using_fpga.native\,
      \instr_EX_i_reg[24]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[24]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(24),
      sext16 => sext16,
      sync_reset => sync_reset
    );
\PreFetch_Buffers[25].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_116
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^using_fpga.native_6\,
      \instr_EX_i_reg[25]\ => \^using_fpga.native\,
      \instr_EX_i_reg[25]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[25]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(25)
    );
\PreFetch_Buffers[26].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_117
     port map (
      CI => CI,
      Clk => Clk,
      Shift_Oper => Shift_Oper,
      Sign_Extend_reg => Sign_Extend_reg,
      Sign_Extend_reg_0 => \^using_fpga.native_6\,
      Sign_Extend_reg_1 => \^using_fpga.native_5\,
      Sign_Extend_reg_2 => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      Sign_Extend_reg_3 => quadlet_Read_i_reg_0,
      \Using_FPGA.Native\ => \^using_fpga.native_7\,
      \instr_EX_i_reg[26]\ => \^using_fpga.native\,
      \instr_EX_i_reg[26]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[26]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(26),
      p_39_out => p_39_out
    );
\PreFetch_Buffers[27].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_118
     port map (
      \Area_Debug_Control.dbg_brki_hit_reg\ => \Area_Debug_Control.dbg_brki_hit_reg\,
      \Area_Debug_Control.dbg_brki_hit_reg_0\ => quadlet_Read_i_reg_0,
      \Area_Debug_Control.dbg_brki_hit_reg_1\ => \^using_fpga.native_18\,
      \Area_Debug_Control.dbg_brki_hit_reg_2\ => \^instr_of\(8),
      \Area_Debug_Control.dbg_brki_hit_reg_3\ => \^instr_of\(7),
      \Area_Debug_Control.dbg_brki_hit_reg_4\ => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      \Area_Debug_Control.dbg_brki_hit_reg_5\ => \PreFetch_Buffers[4].SRL16E_I_n_9\,
      CI => CI,
      Clk => Clk,
      Q(0) => Q(0),
      \Serial_Dbg_Intf.control_reg_reg[8]\ => \Serial_Dbg_Intf.control_reg_reg[8]\,
      \Using_FPGA.Native\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_i_10__1_0\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_i_10__1_1\ => \^d\(2),
      \Using_FPGA.Native_i_10__1_2\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_i_6__0\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_i_6__0_0\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_i_6__0_1\ => \^d\(7),
      \Using_FPGA.Native_i_6__0_2\ => \PreFetch_Buffers[13].SRL16E_I_n_1\,
      dbg_brki_hit => dbg_brki_hit,
      \instr_EX_i_reg[27]\ => \^using_fpga.native\,
      \instr_EX_i_reg[27]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[27]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(27)
    );
\PreFetch_Buffers[28].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_119
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^d\(2),
      Write_ICache_I_reg => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      Write_ICache_I_reg_0 => \^using_fpga.native_5\,
      Write_ICache_I_reg_1 => \^using_fpga.native_6\,
      Write_ICache_I_reg_2 => \^using_fpga.native_7\,
      \instr_EX_i_reg[28]\ => \^using_fpga.native\,
      \instr_EX_i_reg[28]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[28]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(28),
      wic_first0 => wic_first0
    );
\PreFetch_Buffers[29].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_120
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^d\(1),
      Write_DCache_I_reg => \^using_fpga.native_5\,
      Write_DCache_I_reg_0 => \^using_fpga.native_6\,
      Write_DCache_I_reg_1 => \^using_fpga.native_7\,
      \instr_EX_i_reg[29]\ => \^using_fpga.native\,
      \instr_EX_i_reg[29]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[29]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(29),
      sync_reset => sync_reset,
      wdc_first0 => wdc_first0,
      write_Reg_reg => write_Reg_reg,
      write_Reg_reg_0 => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      write_Reg_reg_1 => \PreFetch_Buffers[1].SRL16E_I_n_2\,
      write_Reg_reg_2 => quadlet_Read_i_reg_0,
      write_Reg_reg_3 => write_Reg_reg_0,
      write_Reg_reg_4 => \^d\(2)
    );
\PreFetch_Buffers[2].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_121
     port map (
      CI => CI,
      Clk => Clk,
      \Use_The_PCMP_instr.PCMP_Instr_reg\ => \^instr_of\(10),
      \Use_The_PCMP_instr.PCMP_Instr_reg_0\ => \^instr_of\(9),
      \Use_The_PCMP_instr.PCMP_Instr_reg_1\ => \^using_fpga.native_2\,
      \Using_Barrel_Shifter.BitField_Extract_reg\ => \^d\(6),
      \Using_Barrel_Shifter.BitField_Insert_reg\ => \^d\(7),
      \Using_FPGA.Native\ => \^instr_of\(8),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\ => \PreFetch_Buffers[2].SRL16E_I_n_2\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_26\,
      \instr_EX_i_reg[2]\ => \^using_fpga.native\,
      \instr_EX_i_reg[2]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[2]_1\ => \^using_fpga.native_1\,
      is_swx_I => is_swx_I,
      is_swx_I_reg => is_swx_I_reg,
      is_swx_I_reg_0 => \^instr_of\(7),
      is_swx_I_reg_1 => is_swx_I_reg_0,
      is_swx_I_reg_2 => quadlet_Read_i_reg_0,
      is_swx_I_reg_3 => \PreFetch_Buffers[5].SRL16E_I_n_5\,
      mux_Instr_Read(0) => mux_Instr_Read(2),
      p_37_out => p_37_out,
      p_38_out => p_38_out,
      using_Imm_reg => \^instr_of\(5),
      using_Imm_reg_0 => \^instr_of\(6)
    );
\PreFetch_Buffers[30].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_122
     port map (
      CI => CI,
      Clk => Clk,
      Unsigned_Op_reg => \^using_fpga.native\,
      Unsigned_Op_reg_0 => \^using_fpga.native_0\,
      Unsigned_Op_reg_1 => \^using_fpga.native_1\,
      \Using_FPGA.Native\ => \^using_fpga.native_9\,
      mux_Instr_Read(0) => mux_Instr_Read(30)
    );
\PreFetch_Buffers[31].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_123
     port map (
      CI => CI,
      Clk => Clk,
      Sext8_reg => Sext8_reg,
      Sext8_reg_0 => \^d\(1),
      Sext8_reg_1 => \^d\(2),
      Sext8_reg_2 => \^using_fpga.native_7\,
      Sext8_reg_3 => \^using_fpga.native_6\,
      Sext8_reg_4 => \^using_fpga.native_5\,
      Sext8_reg_5 => Sext8_reg_0,
      Sext8_reg_6 => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      Sext8_reg_7 => quadlet_Read_i_reg_0,
      \Using_FPGA.Native\ => \^d\(0),
      \instr_EX_i_reg[31]\ => \^using_fpga.native\,
      \instr_EX_i_reg[31]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[31]_1\ => \^using_fpga.native_1\,
      mux_Instr_Read(0) => mux_Instr_Read(31),
      sync_reset => sync_reset
    );
\PreFetch_Buffers[3].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_124
     port map (
      CI => CI,
      Clk => Clk,
      D(4 downto 0) => \^d\(7 downto 3),
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_16 => D_16,
      D_17 => D_17,
      D_18 => D_18,
      D_19 => D_19,
      D_2 => D_2,
      D_20 => D_20,
      D_21 => D_21,
      D_22 => D_22,
      D_23 => D_23,
      D_24 => D_24,
      D_25 => D_25,
      D_26 => D_26,
      D_27 => D_27,
      D_28 => D_28,
      D_29 => D_29,
      D_3 => D_3,
      D_30 => D_30,
      D_31 => D_31,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      Reg2_Data(0 to 31) => Reg2_Data(0 to 31),
      Reg_Test_Equal_N_i4_out => Reg_Test_Equal_N_i4_out,
      \Using_FPGA.Native\ => \^instr_of\(7),
      \Using_FPGA.Native_0\ => \^using_fpga.native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_10\ => \^d\(1),
      \Using_FPGA.Native_11\ => \^d\(2),
      \Using_FPGA.Native_12\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_13\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_14\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_15\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_16\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_17\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_18\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_19\ => \PreFetch_Buffers[16].SRL16E_I_n_2\,
      \Using_FPGA.Native_2\ => \PreFetch_Buffers[3].SRL16E_I_n_39\,
      \Using_FPGA.Native_20\ => \PreFetch_Buffers[16].SRL16E_I_n_3\,
      \Using_FPGA.Native_21\ => \PreFetch_Buffers[16].SRL16E_I_n_4\,
      \Using_FPGA.Native_22\ => \PreFetch_Buffers[16].SRL16E_I_n_5\,
      \Using_FPGA.Native_23\ => \PreFetch_Buffers[16].SRL16E_I_n_6\,
      \Using_FPGA.Native_24\ => \PreFetch_Buffers[16].SRL16E_I_n_7\,
      \Using_FPGA.Native_25\ => \PreFetch_Buffers[16].SRL16E_I_n_8\,
      \Using_FPGA.Native_26\ => \PreFetch_Buffers[16].SRL16E_I_n_9\,
      \Using_FPGA.Native_27\ => \PreFetch_Buffers[16].SRL16E_I_n_10\,
      \Using_FPGA.Native_28\ => \PreFetch_Buffers[16].SRL16E_I_n_11\,
      \Using_FPGA.Native_29\ => \PreFetch_Buffers[16].SRL16E_I_n_12\,
      \Using_FPGA.Native_3\ => \^instr_of\(2),
      \Using_FPGA.Native_30\ => \PreFetch_Buffers[16].SRL16E_I_n_13\,
      \Using_FPGA.Native_31\ => \PreFetch_Buffers[16].SRL16E_I_n_14\,
      \Using_FPGA.Native_32\ => \PreFetch_Buffers[16].SRL16E_I_n_15\,
      \Using_FPGA.Native_33\ => \PreFetch_Buffers[16].SRL16E_I_n_16\,
      \Using_FPGA.Native_34\ => \PreFetch_Buffers[16].SRL16E_I_n_17\,
      \Using_FPGA.Native_4\ => \^instr_of\(0),
      \Using_FPGA.Native_5\ => \^instr_of\(1),
      \Using_FPGA.Native_6\ => \^instr_of\(6),
      \Using_FPGA.Native_7\ => \^instr_of\(5),
      \Using_FPGA.Native_8\ => \^d\(0),
      \Using_FPGA.Native_9\ => \^using_fpga.native_9\,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      \instr_EX_i_reg[3]\ => \^using_fpga.native\,
      \instr_EX_i_reg[3]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[3]_1\ => \^using_fpga.native_1\,
      is_lwx_I_reg => \^instr_of\(8),
      mux_Instr_Read(0) => mux_Instr_Read(3),
      res_Forward2 => res_Forward2,
      use_Reg_Neg_DI_i22_out => use_Reg_Neg_DI_i22_out,
      use_Reg_Neg_S_i24_out => use_Reg_Neg_S_i24_out,
      write_Carry_I0 => write_Carry_I0,
      write_Carry_I_reg => \^instr_of\(10),
      write_Carry_I_reg_0 => \^instr_of\(9),
      write_Carry_I_reg_1 => \PreFetch_Buffers[4].SRL16E_I_n_10\
    );
\PreFetch_Buffers[4].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_125
     port map (
      CI => CI,
      Clk => Clk,
      D(1 downto 0) => \^d\(7 downto 6),
      \Using_FPGA.Native\ => \^instr_of\(6),
      \Using_FPGA.Native_0\ => \PreFetch_Buffers[4].SRL16E_I_n_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_10\ => \^instr_of\(10),
      \Using_FPGA.Native_11\ => \^instr_of\(8),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_4\ => \PreFetch_Buffers[4].SRL16E_I_n_8\,
      \Using_FPGA.Native_5\ => \PreFetch_Buffers[4].SRL16E_I_n_9\,
      \Using_FPGA.Native_6\ => \PreFetch_Buffers[4].SRL16E_I_n_10\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_8\ => \^instr_of\(7),
      \Using_FPGA.Native_9\ => \^instr_of\(9),
      \Using_FPGA.Native_i_1__25\ => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      \Using_MSR_Instr.msrxxx_carry_reg\ => \Using_MSR_Instr.msrxxx_carry_reg\,
      \Using_MSR_Instr.msrxxx_carry_reg_0\ => \^d\(1),
      doublet_Read => doublet_Read,
      doublet_Read_i_reg => doublet_Read_i_reg,
      doublet_Read_i_reg_0 => quadlet_Read_i_reg_0,
      doublet_i_reg => doublet_i_reg,
      doublet_i_reg_0 => \^instr_of\(5),
      doublet_i_reg_1 => \PreFetch_Buffers[1].SRL16E_I_n_5\,
      inHibit_EX_reg => inHibit_EX_reg_1,
      \instr_EX_i_reg[4]\ => \^using_fpga.native\,
      \instr_EX_i_reg[4]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[4]_1\ => \^using_fpga.native_1\,
      is_lwx_I => is_lwx_I,
      is_lwx_I_reg => is_lwx_I_reg,
      is_lwx_I_reg_0 => \PreFetch_Buffers[3].SRL16E_I_n_39\,
      is_swx_I => is_swx_I,
      isdoublet => isdoublet,
      jump2_I_reg(1) => \^d\(12),
      jump2_I_reg(0) => \^d\(8),
      jump2_I_reg_0 => \^instr_of\(4),
      jump2_I_reg_1 => \PreFetch_Buffers[0].SRL16E_I_n_4\,
      msrxxx_carry => msrxxx_carry,
      mtsmsr_write_i_reg => mtsmsr_write_i_reg,
      mtsmsr_write_i_reg_0 => \^d\(0),
      mtsmsr_write_i_reg_1 => mtsmsr_write_i_reg_0,
      mul_Executing_reg => nonvalid_IFetch_n_reg_0,
      mul_Executing_reg_0 => nonvalid_IFetch_n_reg,
      mul_first_reg => mul_first_reg,
      mux_Instr_Read(0) => mux_Instr_Read(4),
      p_36_out => p_36_out,
      sync_reset => sync_reset
    );
\PreFetch_Buffers[5].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_126
     port map (
      CI => CI,
      Clk => Clk,
      E(0) => E(0),
      \Size_17to32.imm_Reg_reg[15]\ => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      \Size_17to32.imm_Reg_reg[15]_0\ => \^instr_of\(8),
      \Size_17to32.imm_Reg_reg[15]_1\ => \Size_17to32.imm_Reg_reg[15]\,
      \Size_17to32.imm_Reg_reg[15]_2\ => \^of_valid_raw\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_Barrel_Shifter.Not_Barrel_Op_reg\ => \^instr_of\(7),
      \Using_FPGA.Native\ => \^instr_of\(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_1\ => \PreFetch_Buffers[5].SRL16E_I_n_5\,
      \Using_FPGA.Native_2\ => \^instr_of\(1),
      \Using_FPGA.Native_3\ => \^instr_of\(2),
      \Using_Mul_Instr.ex_not_mul_op_i_reg\ => \^instr_of\(6),
      byte_i_reg => byte_i_reg,
      byte_i_reg_0 => \^instr_of\(10),
      byte_i_reg_1 => \^instr_of\(9),
      force1_i25_out => force1_i25_out,
      force_Val1_i23_out => force_Val1_i23_out,
      \instr_EX_i_reg[5]\ => \^using_fpga.native\,
      \instr_EX_i_reg[5]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[5]_1\ => \^using_fpga.native_1\,
      isbyte => isbyte,
      mux_Instr_Read(0) => mux_Instr_Read(5),
      quadlet_Read => quadlet_Read,
      quadlet_Read_i_reg => quadlet_Read_i_reg,
      quadlet_Read_i_reg_0 => quadlet_Read_i_reg_0,
      sync_reset => sync_reset
    );
\PreFetch_Buffers[6].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_127
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^instr_of\(4),
      \instr_EX_i_reg[6]\ => \^using_fpga.native\,
      \instr_EX_i_reg[6]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[6]_1\ => \^using_fpga.native_1\,
      instr_OF(0) => \^instr_of\(3),
      mbar_is_sleep0 => mbar_is_sleep0,
      mux_Instr_Read(0) => mux_Instr_Read(6)
    );
\PreFetch_Buffers[7].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_128
     port map (
      CI => CI,
      Clk => Clk,
      \instr_EX_i_reg[7]\ => \^using_fpga.native\,
      \instr_EX_i_reg[7]_0\ => \^using_fpga.native_0\,
      \instr_EX_i_reg[7]_1\ => \^using_fpga.native_1\,
      instr_OF(0) => \^instr_of\(3),
      mux_Instr_Read(0) => mux_Instr_Read(7)
    );
\PreFetch_Buffers[8].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_129
     port map (
      CI => CI,
      Clk => Clk,
      \Using_FPGA.Native\ => \^instr_of\(2),
      mux_Instr_Read(0) => mux_Instr_Read(8),
      \write_Addr_I_reg[2]\ => \^using_fpga.native\,
      \write_Addr_I_reg[2]_0\ => \^using_fpga.native_0\,
      \write_Addr_I_reg[2]_1\ => \^using_fpga.native_1\
    );
\PreFetch_Buffers[9].SRL16E_I\: entity work.design_1_microblaze_1_1_MB_SRL16E_130
     port map (
      CI => CI,
      Clk => Clk,
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      \Using_FPGA.Native\ => \^instr_of\(1),
      \Using_FPGA.Native_0\ => \^using_fpga.native_16\,
      \Using_FPGA.reset_BIP_I_reg\ => \^instr_of\(6),
      \Using_FPGA.reset_BIP_I_reg_0\ => \^instr_of\(7),
      \Using_FPGA.reset_BIP_I_reg_1\ => \^instr_of\(5),
      \Using_FPGA.reset_BIP_I_reg_2\ => \PreFetch_Buffers[0].SRL16E_I_n_3\,
      \Using_FPGA.reset_BIP_I_reg_3\ => \^instr_of\(8),
      instr_OF(1) => \^instr_of\(2),
      instr_OF(0) => \^instr_of\(0),
      mux_Instr_Read(0) => mux_Instr_Read(9),
      reset_BIP_I => reset_BIP_I,
      \write_Addr_I_reg[3]\ => \^using_fpga.native\,
      \write_Addr_I_reg[3]_0\ => \^using_fpga.native_0\,
      \write_Addr_I_reg[3]_1\ => \^using_fpga.native_1\
    );
of_Valid_early: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => buffer_Addr_S_I_2,
      I1 => buffer_Addr_S_I_1,
      I2 => buffer_Addr_S_I_0,
      O => D_32
    );
of_valid_FDR_I: entity work.design_1_microblaze_1_1_MB_FDR
     port map (
      Clk => Clk,
      DI => DI,
      D_32 => D_32,
      R => R,
      \Using_FPGA.Native_0\ => \^of_valid_raw\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_2\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_I1\ => \Using_FPGA.Native_I1\,
      \Using_FPGA.Native_I1_0\ => \Using_FPGA.Native_I1_0\,
      buffer_Full => buffer_Full,
      complete_dready => complete_dready,
      complete_iready => complete_iready,
      ex_Valid_reg => ex_Valid_reg,
      ex_Valid_reg_0 => ex_Valid_reg_0,
      inHibit_EX_reg => inHibit_EX_reg_0,
      jump_Carry2 => jump_Carry2,
      missed_IFetch => missed_IFetch,
      mul_Executing => mul_Executing,
      nonvalid_IFetch_n_reg => \Size_17to32.imm_Reg_reg[15]\,
      nonvalid_IFetch_n_reg_0 => nonvalid_IFetch_n_reg_0,
      nonvalid_IFetch_n_reg_1 => nonvalid_IFetch_n_reg_1,
      nonvalid_IFetch_n_reg_2 => nonvalid_IFetch_n_reg,
      nonvalid_IFetch_n_reg_3 => nonvalid_IFetch_n_reg_2,
      of_Pause_reg => of_Pause_reg,
      trace_jump_taken_i_reg => trace_jump_taken_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_RAM_Module is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    Clk : in STD_LOGIC;
    ENB1_out : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 7 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 7 downto 0 );
    DIBDI : in STD_LOGIC_VECTOR ( 8 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_RAM_Module : entity is "RAM_Module";
end design_1_microblaze_1_1_RAM_Module;

architecture STRUCTURE of design_1_microblaze_1_1_RAM_Module is
begin
\Not_Using_XPM.Using_B36_S36.The_BRAMs[0].RAMB36_I1\: entity work.design_1_microblaze_1_1_MB_RAMB36
     port map (
      ADDRBWRADDR(7 downto 0) => ADDRBWRADDR(7 downto 0),
      Clk => Clk,
      D(7 downto 0) => D(7 downto 0),
      DIBDI(8 downto 0) => DIBDI(8 downto 0),
      DOADO(4 downto 0) => DOADO(4 downto 0),
      ENB1_out => ENB1_out,
      Q(1 downto 0) => Q(1 downto 0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_RAM_Module__parameterized1\ is
  port (
    \M_AXI_IC_RDATA[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    mux_Instr_Read : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 9 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 9 downto 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \A__0\ : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    \instr_EX_i_reg[0]\ : in STD_LOGIC;
    \instr_EX_i_reg[1]\ : in STD_LOGIC;
    \instr_EX_i_reg[2]\ : in STD_LOGIC;
    \instr_EX_i_reg[3]\ : in STD_LOGIC;
    \instr_EX_i_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[5]\ : in STD_LOGIC;
    \instr_EX_i_reg[6]\ : in STD_LOGIC;
    \instr_EX_i_reg[7]\ : in STD_LOGIC;
    \write_Addr_I_reg[2]\ : in STD_LOGIC;
    \write_Addr_I_reg[3]\ : in STD_LOGIC;
    \write_Addr_I_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[11]\ : in STD_LOGIC;
    \instr_EX_i_reg[12]\ : in STD_LOGIC;
    \instr_EX_i_reg[13]\ : in STD_LOGIC;
    \instr_EX_i_reg[14]\ : in STD_LOGIC;
    \instr_EX_i_reg[15]\ : in STD_LOGIC;
    \instr_EX_i_reg[16]\ : in STD_LOGIC;
    \instr_EX_i_reg[17]\ : in STD_LOGIC;
    \instr_EX_i_reg[18]\ : in STD_LOGIC;
    \instr_EX_i_reg[19]\ : in STD_LOGIC;
    \instr_EX_i_reg[20]\ : in STD_LOGIC;
    \instr_EX_i_reg[21]\ : in STD_LOGIC;
    \instr_EX_i_reg[22]\ : in STD_LOGIC;
    \instr_EX_i_reg[23]\ : in STD_LOGIC;
    \instr_EX_i_reg[24]\ : in STD_LOGIC;
    \instr_EX_i_reg[25]\ : in STD_LOGIC;
    \instr_EX_i_reg[26]\ : in STD_LOGIC;
    \instr_EX_i_reg[27]\ : in STD_LOGIC;
    \instr_EX_i_reg[28]\ : in STD_LOGIC;
    \instr_EX_i_reg[29]\ : in STD_LOGIC;
    Unsigned_Op_reg : in STD_LOGIC;
    \instr_EX_i_reg[31]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_RAM_Module__parameterized1\ : entity is "RAM_Module";
end \design_1_microblaze_1_1_RAM_Module__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_RAM_Module__parameterized1\ is
begin
\Not_Using_XPM.Using_B36_S36.The_BRAMs[0].RAMB36_I1\: entity work.design_1_microblaze_1_1_MB_RAMB36_8
     port map (
      ADDRBWRADDR(9 downto 0) => ADDRBWRADDR(9 downto 0),
      \A__0\ => \A__0\,
      Clk => Clk,
      D(9 downto 0) => D(9 downto 0),
      E(0) => E(0),
      IReady => IReady,
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      \M_AXI_IC_RDATA[31]\(31 downto 0) => \M_AXI_IC_RDATA[31]\(31 downto 0),
      Q(31 downto 0) => Q(31 downto 0),
      Unsigned_Op_reg => Unsigned_Op_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \instr_EX_i_reg[0]\ => \instr_EX_i_reg[0]\,
      \instr_EX_i_reg[11]\ => \instr_EX_i_reg[11]\,
      \instr_EX_i_reg[12]\ => \instr_EX_i_reg[12]\,
      \instr_EX_i_reg[13]\ => \instr_EX_i_reg[13]\,
      \instr_EX_i_reg[14]\ => \instr_EX_i_reg[14]\,
      \instr_EX_i_reg[15]\ => \instr_EX_i_reg[15]\,
      \instr_EX_i_reg[16]\ => \instr_EX_i_reg[16]\,
      \instr_EX_i_reg[17]\ => \instr_EX_i_reg[17]\,
      \instr_EX_i_reg[18]\ => \instr_EX_i_reg[18]\,
      \instr_EX_i_reg[19]\ => \instr_EX_i_reg[19]\,
      \instr_EX_i_reg[1]\ => \instr_EX_i_reg[1]\,
      \instr_EX_i_reg[20]\ => \instr_EX_i_reg[20]\,
      \instr_EX_i_reg[21]\ => \instr_EX_i_reg[21]\,
      \instr_EX_i_reg[22]\ => \instr_EX_i_reg[22]\,
      \instr_EX_i_reg[23]\ => \instr_EX_i_reg[23]\,
      \instr_EX_i_reg[24]\ => \instr_EX_i_reg[24]\,
      \instr_EX_i_reg[25]\ => \instr_EX_i_reg[25]\,
      \instr_EX_i_reg[26]\ => \instr_EX_i_reg[26]\,
      \instr_EX_i_reg[27]\ => \instr_EX_i_reg[27]\,
      \instr_EX_i_reg[28]\ => \instr_EX_i_reg[28]\,
      \instr_EX_i_reg[29]\ => \instr_EX_i_reg[29]\,
      \instr_EX_i_reg[2]\ => \instr_EX_i_reg[2]\,
      \instr_EX_i_reg[31]\ => \instr_EX_i_reg[31]\,
      \instr_EX_i_reg[3]\ => \instr_EX_i_reg[3]\,
      \instr_EX_i_reg[4]\ => \instr_EX_i_reg[4]\,
      \instr_EX_i_reg[5]\ => \instr_EX_i_reg[5]\,
      \instr_EX_i_reg[6]\ => \instr_EX_i_reg[6]\,
      \instr_EX_i_reg[7]\ => \instr_EX_i_reg[7]\,
      mux_Instr_Read(0 to 31) => mux_Instr_Read(0 to 31),
      \write_Addr_I_reg[2]\ => \write_Addr_I_reg[2]\,
      \write_Addr_I_reg[3]\ => \write_Addr_I_reg[3]\,
      \write_Addr_I_reg[4]\ => \write_Addr_I_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_RAM_Module__parameterized3\ is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Comp_Carry_Chain[1].carry_sel_reg\ : out STD_LOGIC;
    S : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 7 downto 0 );
    DIBDI : in STD_LOGIC_VECTOR ( 8 downto 0 );
    WEBWE : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_RAM_Module__parameterized3\ : entity is "RAM_Module";
end \design_1_microblaze_1_1_RAM_Module__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_RAM_Module__parameterized3\ is
begin
\Not_Using_XPM.Using_B36_S36.The_BRAMs[0].RAMB36_I1\: entity work.design_1_microblaze_1_1_MB_RAMB36_23
     port map (
      ADDRBWRADDR(7 downto 0) => ADDRBWRADDR(7 downto 0),
      Clk => Clk,
      \Comp_Carry_Chain[1].carry_sel_reg\ => \Comp_Carry_Chain[1].carry_sel_reg\,
      DIBDI(8 downto 0) => DIBDI(8 downto 0),
      DOADO(3 downto 0) => DOADO(3 downto 0),
      Q(3 downto 0) => Q(3 downto 0),
      S => S,
      WEBWE(0) => WEBWE(0),
      \in\(7 downto 0) => \in\(7 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_RAM_Module__parameterized5\ is
  port (
    DOADO : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 9 downto 0 );
    ADDRBWRADDR : in STD_LOGIC_VECTOR ( 9 downto 0 );
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    WEA : in STD_LOGIC_VECTOR ( 3 downto 0 );
    WEBWE : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_RAM_Module__parameterized5\ : entity is "RAM_Module";
end \design_1_microblaze_1_1_RAM_Module__parameterized5\;

architecture STRUCTURE of \design_1_microblaze_1_1_RAM_Module__parameterized5\ is
begin
\Not_Using_XPM.Using_B36_S36.The_BRAMs[0].RAMB36_I1\: entity work.design_1_microblaze_1_1_MB_RAMB36_24
     port map (
      ADDRBWRADDR(9 downto 0) => ADDRBWRADDR(9 downto 0),
      Clk => Clk,
      D(31 downto 0) => D(31 downto 0),
      DOADO(31 downto 0) => DOADO(31 downto 0),
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      WEA(3 downto 0) => WEA(3 downto 0),
      WEBWE(0) => WEBWE(0),
      \in\(9 downto 0) => \in\(9 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_551
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_552
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_459 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_459 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_459;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_459 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_549
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_550
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_460 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_460 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_460;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_460 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_547
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_548
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_461 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_461 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_461;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_461 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_545
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_546
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_462 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_462 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_462;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_462 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_543
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_544
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_463 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_463 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_463;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_463 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_541
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_542
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_464 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_464 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_464;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_464 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_539
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_540
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_465 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_465 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_465;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_465 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_537
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_538
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_466 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_466 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_466;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_466 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_535
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_536
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_467 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_467 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_467;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_467 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_533
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_534
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_468 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_468 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_468;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_468 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_531
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_532
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_469 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_469 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_469;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_469 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_529
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_530
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_470 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_470 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_470;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_470 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_527
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_528
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_471 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_471 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_471;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_471 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_525
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_526
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_472 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_472 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_472;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_472 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_523
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_524
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_473 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_473 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_473;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_473 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_521
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_522
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_474 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_474 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_474;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_474 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_519
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_520
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_475 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_475 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_475;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_475 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_517
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_518
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_476 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_476 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_476;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_476 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_515
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_516
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_477 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_477 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_477;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_477 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_513
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_514
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_478 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_478 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_478;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_478 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_511
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_512
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_479 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_479 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_479;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_479 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_509
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_510
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_480 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_480 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_480;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_480 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_507
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_508
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_481 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_481 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_481;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_481 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_505
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_506
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_482 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_482 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_482;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_482 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_503
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_504
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_483 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_483 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_483;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_483 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_501
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_502
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_484 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_484 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_484;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_484 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_499
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_500
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_485 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_485 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_485;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_485 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_497
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_498
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_486 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_486 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_486;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_486 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_495
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_496
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_487 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_487 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_487;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_487 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_493
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_494
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_488 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_488 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_488;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_488 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D_491
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_492
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File_Bit_489 is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File_Bit_489 : entity is "Register_File_Bit";
end design_1_microblaze_1_1_Register_File_Bit_489;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File_Bit_489 is
begin
RegFile_X1: entity work.design_1_microblaze_1_1_MB_RAM32X1D
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
RegFile_X2: entity work.design_1_microblaze_1_1_MB_RAM32X1D_490
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_456\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_457
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_458\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_335 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_335 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_335;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_335 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_453\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_454
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_455\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_336 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_336 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_336;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_336 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_450\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_451
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_452\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_337 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_337 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_337;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_337 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_447\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_448
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_449\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_338 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_338 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_338;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_338 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_444\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_445
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_446\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_339 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_339 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_339;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_339 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_441\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_442
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_443\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_340 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_340 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_340;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_340 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_438\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_439
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_440\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_341 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_341 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_341;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_341 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_435\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_436
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_437\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_342 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_342 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_342;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_342 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_432\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_433
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_434\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_343 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_343 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_343;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_343 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_429\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_430
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_431\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_344 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_344 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_344;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_344 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_426\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_427
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_428\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_345 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_345 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_345;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_345 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_423\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_424
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_425\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_346 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_346 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_346;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_346 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_420\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_421
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_422\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_347 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_347 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_347;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_347 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_417\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_418
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_419\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_348 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_348 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_348;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_348 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_414\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_415
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_416\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_349 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Shift_Logic_Res : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_349 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_349;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_349 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_411\
     port map (
      EX_Result(0) => \^ex_result\(0),
      Shift_Logic_Res => Shift_Logic_Res,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_412
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_413\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_350 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[24]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    \data_rd_reg_reg[24]_0\ : in STD_LOGIC;
    \data_rd_reg_reg[24]_1\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_350 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_350;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_350 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_408\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_2\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_409
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[24]\ => \data_rd_reg_reg[24]\,
      \data_rd_reg_reg[24]_0\ => \data_rd_reg_reg[24]_0\,
      \data_rd_reg_reg[24]_1\ => \data_rd_reg_reg[24]_1\,
      register_write => register_write
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_410\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_351 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_351 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_351;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_351 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_405\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_1\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_406
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_407\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_352 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[26]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    ICache_Enabled : in STD_LOGIC;
    \data_rd_reg_reg[26]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_352 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_352;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_352 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_402\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_403
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      ICache_Enabled => ICache_Enabled,
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[26]\ => \data_rd_reg_reg[26]\,
      \data_rd_reg_reg[26]_0\ => \data_rd_reg_reg[26]_0\,
      register_write => register_write
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_404\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_353 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_353 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_353;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_353 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_399\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_400
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_401\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_354 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[28]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[28]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_354 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_354;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_354 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_396\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_397
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[28]\ => \data_rd_reg_reg[28]\,
      \data_rd_reg_reg[28]_0\ => \data_rd_reg_reg[28]_0\,
      msr_I(0) => msr_I(0),
      register_write => register_write
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_398\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_355 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[29]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[29]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_355 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_355;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_355 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_393\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_394
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[29]\ => \data_rd_reg_reg[29]\,
      \data_rd_reg_reg[29]_0\ => \data_rd_reg_reg[29]_0\,
      msr_I(0) => msr_I(0),
      register_write => register_write
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_395\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_356 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_356 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_356;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_356 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_390\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_391
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_392\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_357 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_357 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_357;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_357 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_387\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_388
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[30]_0\ => \data_rd_reg_reg[30]_0\,
      msr_I(0) => msr_I(0),
      register_write => register_write
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_389\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_358 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Other_Result : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_358 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_358;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_358 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_384\
     port map (
      EX_Result(0) => \^ex_result\(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_385
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_386\
     port map (
      Other_Result => Other_Result,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_359 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_359 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_359;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_359 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_381\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_382
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_383\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_360 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_360 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_360;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_360 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_378\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_379
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_380\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_361 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_361 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_361;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_361 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_375\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_376
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_377\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_362 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_362 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_362;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_362 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_372\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_373
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_374\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_363 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_363 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_363;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_363 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_369\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_370
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_371\
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_364 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_364 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_364;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_364 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1_366\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD_367
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29_368\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux_Bit_365 is
  port (
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 0 to 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux_Bit_365 : entity is "Result_Mux_Bit";
end design_1_microblaze_1_1_Result_Mux_Bit_365;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux_Bit_365 is
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mul_ALU_Res : STD_LOGIC;
begin
  EX_Result(0) <= \^ex_result\(0);
Data_Shift_Mux: entity work.\design_1_microblaze_1_1_MB_LUT6__parameterized1\
     port map (
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_ALU_Res => mul_ALU_Res
    );
EX_Result_DFF: entity work.design_1_microblaze_1_1_MB_FD
     port map (
      Clk => Clk,
      EX_Result(0) => \^ex_result\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0)
    );
Mul_ALU_Mux: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized29\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \in\(0) => \in\(0),
      instr_ex(0) => instr_ex(0),
      mul_ALU_Res => mul_ALU_Res,
      mul_Result(0) => mul_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Shifted : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_332\
     port map (
      EX_Op2(0) => EX_Op2(0),
      Shifted => Shifted,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_333\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_334
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_185 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_185 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_185;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_185 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_329\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_330\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_331
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_186 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_186 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_186;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_186 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_326\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_327\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_328
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_187 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_187 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_187;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_187 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_323\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_324\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_325
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_188 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_188 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_188;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_188 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_320\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_321\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_322
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_189 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_189 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_189;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_189 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_317\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_318\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_319
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_190 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_190 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_190;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_190 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_314\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_315\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_316
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_191 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_191 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_191;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_191 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_311\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_312\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(0) => op1(0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_313
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_192 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_192 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_192;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_192 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_308\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_309\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(0) => op1(0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_310
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_193 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_193 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_193;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_193 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_305\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_306\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_307
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_194 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_194 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_194;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_194 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_302\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_303\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_304
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_195 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_195 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_195;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_195 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_299\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_300\
     port map (
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(0) => op1(0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_301
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_196 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_196 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_196;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_196 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_296\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_297\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(0) => op1(0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_298
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_197 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_197 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_197;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_197 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_293\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_294\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_295
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_198 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_198 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_198;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_198 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_290\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_291\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_292
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_199 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_199 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_199;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_199 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_287\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_288\
     port map (
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_289
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_200 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_200 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_200;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_200 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_284\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_285\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_286
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_201 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Op1_Logic : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_201 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_201;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_201 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_281\
     port map (
      EX_Op2(0) => EX_Op2(0),
      Op1_Logic => Op1_Logic,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_282\
     port map (
      Op1_Logic => Op1_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_283
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_202 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Op1_Logic : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_202 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_202;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_202 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_278\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_279\
     port map (
      Op1_Logic => Op1_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_280
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      logic_Res_i => logic_Res_i,
      shift_Logic_Result(0) => shift_Logic_Result(0),
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_203 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_203 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_203;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_203 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_275\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_276\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_4\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_277
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      logic_Res_i => logic_Res_i,
      shift_Logic_Result(0) => shift_Logic_Result(0),
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_204 is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_204 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_204;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_204 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_272\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_273\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_4\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_274
     port map (
      Select_Logic => Select_Logic,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      logic_Res_i => logic_Res_i,
      shift_Logic_Result(0) => shift_Logic_Result(0),
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_205 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_205 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_205;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_205 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_269\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_270\
     port map (
      Op1_Shift => Op1_Shift,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_271
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_206 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_206 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_206;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_206 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_266\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_267\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_268
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_207 is
  port (
    Shift_Logic_Res : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_207 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_207;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_207 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_263\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_264\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_265
     port map (
      Select_Logic => Select_Logic,
      Shift_Logic_Res => Shift_Logic_Res,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_208 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_0\ : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_208 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_208;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_208 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_260\
     port map (
      EX_Op2(0) => EX_Op2(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_261\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_262
     port map (
      Select_Logic => Select_Logic,
      Shifted => Shifted,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_i_1__74\ => \Using_FPGA.Native_i_1__74\,
      \Using_FPGA.Native_i_1__74_0\ => \Using_FPGA.Native_i_1__74_0\,
      \Using_FPGA.Native_i_1__74_1\ => \Using_FPGA.Native_i_1__74_1\,
      \Using_FPGA.Native_i_1__74_2\ => \Using_FPGA.Native_i_1__74_2\,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_209 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_209 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_209;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_209 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_257\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_258\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_259
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_210 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_210 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_210;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_210 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_254\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_255\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_256
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_211 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_211 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_211;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_211 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_251\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_252\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_253
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_212 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_212 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_212;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_212 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_248\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_249\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_250
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_213 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_213 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_213;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_213 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_245\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_246\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_247
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_214 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_214 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_214;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_214 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15_242\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17_243\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_244
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Bit_215 is
  port (
    Select_Logic_reg : out STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Bit_215 : entity is "Shift_Logic_Bit";
end design_1_microblaze_1_1_Shift_Logic_Bit_215;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Bit_215 is
  signal logic_Res_i : STD_LOGIC;
  signal shift_Res : STD_LOGIC;
begin
Logic_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized15\
     port map (
      EX_Op2(0) => EX_Op2(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      logic_Res_i => logic_Res_i,
      op1(0) => op1(0)
    );
Shift_LUT: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized17\
     port map (
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      op1(1 downto 0) => op1(1 downto 0),
      shift_Res => shift_Res
    );
Shift_Logic_Mux: entity work.design_1_microblaze_1_1_MB_MUXF7_241
     port map (
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      logic_Res_i => logic_Res_i,
      shift_Res => shift_Res
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Zero_Detect is
  port (
    Reg_zero : out STD_LOGIC;
    Reg_Test_Equal : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    EX_Op1 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Zero_Detect : entity is "Zero_Detect";
end design_1_microblaze_1_1_Zero_Detect;

architecture STRUCTURE of design_1_microblaze_1_1_Zero_Detect is
  signal S : STD_LOGIC;
  signal \S0_inferred__0/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__1/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__2/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__3/i__n_0\ : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal zero_CI_1 : STD_LOGIC;
  signal zero_CI_2 : STD_LOGIC;
  signal zero_CI_3 : STD_LOGIC;
  signal zero_CI_4 : STD_LOGIC;
  signal zero_CI_5 : STD_LOGIC;
  signal zero_CI_6 : STD_LOGIC;
begin
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
Part_Of_Zero_Carry_Start: entity work.design_1_microblaze_1_1_MB_MUXCY_131
     port map (
      Reg_Test_Equal => Reg_Test_Equal,
      lopt => \^lopt\,
      lopt_1 => reg_Test_Equal_N,
      lopt_2 => S,
      lopt_3 => \^lopt_1\,
      lopt_4 => \S0_inferred__3/i__n_0\,
      lopt_5 => \^lopt_2\,
      lopt_6 => \S0_inferred__2/i__n_0\,
      zero_CI_6 => zero_CI_6
    );
\S0_inferred__0/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => EX_Op1(0),
      I1 => EX_Op1(5),
      I2 => EX_Op1(3),
      I3 => EX_Op1(4),
      I4 => EX_Op1(1),
      I5 => EX_Op1(2),
      O => \S0_inferred__0/i__n_0\
    );
\S0_inferred__1/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => EX_Op1(6),
      I1 => EX_Op1(11),
      I2 => EX_Op1(9),
      I3 => EX_Op1(10),
      I4 => EX_Op1(7),
      I5 => EX_Op1(8),
      O => \S0_inferred__1/i__n_0\
    );
\S0_inferred__2/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => EX_Op1(12),
      I1 => EX_Op1(17),
      I2 => EX_Op1(15),
      I3 => EX_Op1(16),
      I4 => EX_Op1(13),
      I5 => EX_Op1(14),
      O => \S0_inferred__2/i__n_0\
    );
\S0_inferred__3/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => EX_Op1(18),
      I1 => EX_Op1(23),
      I2 => EX_Op1(21),
      I3 => EX_Op1(22),
      I4 => EX_Op1(19),
      I5 => EX_Op1(20),
      O => \S0_inferred__3/i__n_0\
    );
\S0_inferred__4/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => EX_Op1(24),
      I1 => EX_Op1(29),
      I2 => EX_Op1(27),
      I3 => EX_Op1(28),
      I4 => EX_Op1(25),
      I5 => EX_Op1(26),
      O => S
    );
\Zero_Detecting[1].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_132
     port map (
      Reg_zero => Reg_zero,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt_4,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_1 => zero_CI_1
    );
\Zero_Detecting[2].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_133
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__0/i__n_0\,
      lopt => lopt_3,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_1 => zero_CI_1,
      zero_CI_2 => zero_CI_2
    );
\Zero_Detecting[3].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_134
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__1/i__n_0\,
      lopt => lopt_3,
      lopt_1 => \S0_inferred__0/i__n_0\,
      lopt_2 => lopt_4,
      lopt_3 => \Using_FPGA.Native\,
      lopt_4 => lopt_5,
      lopt_5 => lopt_6,
      lopt_6 => lopt_7,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_2 => zero_CI_2,
      zero_CI_3 => zero_CI_3
    );
\Zero_Detecting[4].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_135
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__2/i__n_0\,
      lopt => \^lopt_2\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_3 => zero_CI_3,
      zero_CI_4 => zero_CI_4
    );
\Zero_Detecting[5].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_136
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__3/i__n_0\,
      lopt => \^lopt_1\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_4 => zero_CI_4,
      zero_CI_5 => zero_CI_5
    );
\Zero_Detecting[6].I_Part_Of_Zero_Detect\: entity work.design_1_microblaze_1_1_MB_MUXCY_137
     port map (
      S => S,
      lopt => \^lopt\,
      reg_Test_Equal_N => reg_Test_Equal_N,
      zero_CI_5 => zero_CI_5,
      zero_CI_6 => zero_CI_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_address_hit is
  port (
    single_Step_N_reg : out STD_LOGIC;
    Hit : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Single_Step_N : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_address_hit : entity is "address_hit";
end design_1_microblaze_1_1_address_hit;

architecture STRUCTURE of design_1_microblaze_1_1_address_hit is
  signal SRL16_MC15_1 : STD_LOGIC;
  signal SRL16_MC15_2 : STD_LOGIC;
  signal SRL16_MC15_3 : STD_LOGIC;
  signal SRL16_MC15_4 : STD_LOGIC;
  signal SRL16_MC15_5 : STD_LOGIC;
  signal SRL16_MC15_6 : STD_LOGIC;
  signal SRL16_MC15_7 : STD_LOGIC;
  signal SRL16_Sel_0 : STD_LOGIC;
  signal SRL16_Sel_1 : STD_LOGIC;
  signal SRL16_Sel_2 : STD_LOGIC;
  signal SRL16_Sel_3 : STD_LOGIC;
  signal SRL16_Sel_4 : STD_LOGIC;
  signal SRL16_Sel_5 : STD_LOGIC;
  signal SRL16_Sel_6 : STD_LOGIC;
  signal SRL16_Sel_7 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \which_pc__0\ : STD_LOGIC;
begin
\Compare[0].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_40
     port map (
      Q(0) => Q(0),
      SRL16_Sel_7 => SRL16_Sel_7,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => SRL16_Sel_6,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => SRL16_Sel_5,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => SRL16_Sel_4
    );
\Compare[0].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E
     port map (
      Address(3) => Address(28),
      Address(2) => Address(29),
      Address(1) => Address(30),
      Address(0) => Address(31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_7 => SRL16_Sel_7,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[1].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_41
     port map (
      SRL16_Sel_6 => SRL16_Sel_6,
      carry_6 => carry_6,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Compare[1].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_42
     port map (
      Address(3) => Address(24),
      Address(2) => Address(25),
      Address(1) => Address(26),
      Address(0) => Address(27),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_6 => SRL16_Sel_6,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[2].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_43
     port map (
      SRL16_Sel_5 => SRL16_Sel_5,
      carry_5 => carry_5,
      carry_6 => carry_6,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Compare[2].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_44
     port map (
      Address(3) => Address(20),
      Address(2) => Address(21),
      Address(1) => Address(22),
      Address(0) => Address(23),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_Sel_5 => SRL16_Sel_5,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[3].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_45
     port map (
      SRL16_Sel_4 => SRL16_Sel_4,
      carry_4 => carry_4,
      carry_5 => carry_5,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Compare[3].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_46
     port map (
      Address(3) => Address(16),
      Address(2) => Address(17),
      Address(1) => Address(18),
      Address(0) => Address(19),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_Sel_4 => SRL16_Sel_4,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[4].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_47
     port map (
      SRL16_Sel_3 => SRL16_Sel_3,
      carry_3 => carry_3,
      carry_4 => carry_4,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => SRL16_Sel_2,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => SRL16_Sel_1,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => SRL16_Sel_0
    );
\Compare[4].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_48
     port map (
      Address(3) => Address(12),
      Address(2) => Address(13),
      Address(1) => Address(14),
      Address(0) => Address(15),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_Sel_3 => SRL16_Sel_3,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[5].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_49
     port map (
      SRL16_Sel_2 => SRL16_Sel_2,
      carry_2 => carry_2,
      carry_3 => carry_3,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\Compare[5].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_50
     port map (
      Address(3) => Address(8),
      Address(2) => Address(9),
      Address(1) => Address(10),
      Address(0) => Address(11),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_Sel_2 => SRL16_Sel_2,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[6].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_51
     port map (
      SRL16_Sel_1 => SRL16_Sel_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt_8,
      lopt_1 => lopt_9
    );
\Compare[6].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_52
     port map (
      Address(3) => Address(4),
      Address(2) => Address(5),
      Address(1) => Address(6),
      Address(0) => Address(7),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_Sel_1 => SRL16_Sel_1,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[7].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_53
     port map (
      SRL16_Sel_0 => SRL16_Sel_0,
      carry_0 => carry_0,
      carry_1 => carry_1,
      lopt => lopt_10,
      lopt_1 => lopt_11
    );
\Compare[7].SRLC16E_I\: entity work.design_1_microblaze_1_1_MB_SRLC16E_54
     port map (
      Address(3) => Address(0),
      Address(2) => Address(1),
      Address(1) => Address(2),
      Address(0) => Address(3),
      Dbg_Clk => Dbg_Clk,
      Dbg_TDI => Dbg_TDI,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_Sel_0 => SRL16_Sel_0,
      \which_pc__0\ => \which_pc__0\
    );
\The_First_BreakPoints.MUXCY_Post\: entity work.design_1_microblaze_1_1_MB_MUXCY_55
     port map (
      Hit => Hit,
      Single_Step_N => Single_Step_N,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      carry_0 => carry_0,
      single_Step_N_reg => single_Step_N_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_barrel_shift is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Other_Result : out STD_LOGIC;
    \trace_data_write_value_i_reg[30]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[29]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[28]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[27]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[26]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[25]\ : out STD_LOGIC;
    \trace_data_write_value_i_reg[24]\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[23]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[22]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[21]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[20]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[19]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[18]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[17]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[16]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[15]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[14]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[13]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[12]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[11]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[10]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[9]_0\ : out STD_LOGIC;
    \Using_BitField.mem_Rd_reg[8]_0\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    Barrel_Result : out STD_LOGIC_VECTOR ( 7 downto 0 );
    Op1_Logic : in STD_LOGIC;
    \C_reg[27]_0\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 17 downto 0 );
    \C_reg[27]_1\ : in STD_LOGIC;
    \C_reg[27]_2\ : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \C_reg[30]_0\ : in STD_LOGIC;
    \C[14]_i_2\ : in STD_LOGIC;
    \C[13]_i_2\ : in STD_LOGIC;
    \C[12]_i_2\ : in STD_LOGIC;
    \C[12]_i_2_0\ : in STD_LOGIC;
    \C[13]_i_2_0\ : in STD_LOGIC;
    \C[13]_i_2_1\ : in STD_LOGIC;
    \C[7]_i_2\ : in STD_LOGIC;
    \C[7]_i_2_0\ : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    \C[8]_i_2\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 7 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    void_bit : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \C_reg[19]_0\ : in STD_LOGIC;
    \Using_BitField.mem_mask1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_BitField.mem_mask0_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Data_Write : in STD_LOGIC_VECTOR ( 23 downto 0 );
    \C_reg[23]_0\ : in STD_LOGIC_VECTOR ( 5 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_barrel_shift : entity is "barrel_shift";
end design_1_microblaze_1_1_barrel_shift;

architecture STRUCTURE of design_1_microblaze_1_1_barrel_shift is
  signal A : STD_LOGIC_VECTOR ( 0 to 29 );
  signal \BS_Rev_Loop[0].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_6\ : STD_LOGIC;
  signal \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_6\ : STD_LOGIC;
  signal \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_10\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_6\ : STD_LOGIC;
  signal \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_7\ : STD_LOGIC;
  signal \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_1\ : STD_LOGIC;
  signal \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_6\ : STD_LOGIC;
  signal \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_4\ : STD_LOGIC;
  signal \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_2\ : STD_LOGIC;
  signal \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_3\ : STD_LOGIC;
  signal \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_5\ : STD_LOGIC;
  signal \C_reg_n_0_[10]\ : STD_LOGIC;
  signal \C_reg_n_0_[11]\ : STD_LOGIC;
  signal \C_reg_n_0_[12]\ : STD_LOGIC;
  signal \C_reg_n_0_[13]\ : STD_LOGIC;
  signal \C_reg_n_0_[14]\ : STD_LOGIC;
  signal \C_reg_n_0_[15]\ : STD_LOGIC;
  signal \C_reg_n_0_[17]\ : STD_LOGIC;
  signal \C_reg_n_0_[18]\ : STD_LOGIC;
  signal \C_reg_n_0_[19]\ : STD_LOGIC;
  signal \C_reg_n_0_[1]\ : STD_LOGIC;
  signal \C_reg_n_0_[20]\ : STD_LOGIC;
  signal \C_reg_n_0_[21]\ : STD_LOGIC;
  signal \C_reg_n_0_[22]\ : STD_LOGIC;
  signal \C_reg_n_0_[23]\ : STD_LOGIC;
  signal \C_reg_n_0_[24]\ : STD_LOGIC;
  signal \C_reg_n_0_[25]\ : STD_LOGIC;
  signal \C_reg_n_0_[26]\ : STD_LOGIC;
  signal \C_reg_n_0_[27]\ : STD_LOGIC;
  signal \C_reg_n_0_[28]\ : STD_LOGIC;
  signal \C_reg_n_0_[29]\ : STD_LOGIC;
  signal \C_reg_n_0_[2]\ : STD_LOGIC;
  signal \C_reg_n_0_[30]\ : STD_LOGIC;
  signal \C_reg_n_0_[31]\ : STD_LOGIC;
  signal \C_reg_n_0_[3]\ : STD_LOGIC;
  signal \C_reg_n_0_[4]\ : STD_LOGIC;
  signal \C_reg_n_0_[5]\ : STD_LOGIC;
  signal \C_reg_n_0_[6]\ : STD_LOGIC;
  signal \C_reg_n_0_[7]\ : STD_LOGIC;
  signal \C_reg_n_0_[8]\ : STD_LOGIC;
  signal \C_reg_n_0_[9]\ : STD_LOGIC;
  signal I0 : STD_LOGIC;
  signal I1 : STD_LOGIC;
  signal Last_Mux_1_0 : STD_LOGIC;
  signal Last_Mux_1_1 : STD_LOGIC;
  signal Last_Mux_1_10 : STD_LOGIC;
  signal Last_Mux_1_11 : STD_LOGIC;
  signal Last_Mux_1_12 : STD_LOGIC;
  signal Last_Mux_1_13 : STD_LOGIC;
  signal Last_Mux_1_14 : STD_LOGIC;
  signal Last_Mux_1_15 : STD_LOGIC;
  signal Last_Mux_1_16 : STD_LOGIC;
  signal Last_Mux_1_17 : STD_LOGIC;
  signal Last_Mux_1_18 : STD_LOGIC;
  signal Last_Mux_1_19 : STD_LOGIC;
  signal Last_Mux_1_2 : STD_LOGIC;
  signal Last_Mux_1_20 : STD_LOGIC;
  signal Last_Mux_1_21 : STD_LOGIC;
  signal Last_Mux_1_22 : STD_LOGIC;
  signal Last_Mux_1_23 : STD_LOGIC;
  signal Last_Mux_1_24 : STD_LOGIC;
  signal Last_Mux_1_25 : STD_LOGIC;
  signal Last_Mux_1_26 : STD_LOGIC;
  signal Last_Mux_1_27 : STD_LOGIC;
  signal Last_Mux_1_28 : STD_LOGIC;
  signal Last_Mux_1_29 : STD_LOGIC;
  signal Last_Mux_1_3 : STD_LOGIC;
  signal Last_Mux_1_30 : STD_LOGIC;
  signal Last_Mux_1_31 : STD_LOGIC;
  signal Last_Mux_1_4 : STD_LOGIC;
  signal Last_Mux_1_5 : STD_LOGIC;
  signal Last_Mux_1_6 : STD_LOGIC;
  signal Last_Mux_1_7 : STD_LOGIC;
  signal Last_Mux_1_8 : STD_LOGIC;
  signal Last_Mux_1_9 : STD_LOGIC;
  signal O512_out : STD_LOGIC;
  signal O516_out : STD_LOGIC;
  signal O520_out : STD_LOGIC;
  signal O524_out : STD_LOGIC;
  signal O528_out : STD_LOGIC;
  signal O532_out : STD_LOGIC;
  signal O536_out : STD_LOGIC;
  signal O540_out : STD_LOGIC;
  signal O544_out : STD_LOGIC;
  signal O546_in : STD_LOGIC;
  signal O548_out : STD_LOGIC;
  signal O54_out : STD_LOGIC;
  signal O552_out : STD_LOGIC;
  signal O556_out : STD_LOGIC;
  signal O560_out : STD_LOGIC;
  signal O58_out : STD_LOGIC;
  signal O611_out : STD_LOGIC;
  signal O615_out : STD_LOGIC;
  signal O619_out : STD_LOGIC;
  signal O623_out : STD_LOGIC;
  signal O627_out : STD_LOGIC;
  signal O631_out : STD_LOGIC;
  signal O635_out : STD_LOGIC;
  signal O639_out : STD_LOGIC;
  signal O63_out : STD_LOGIC;
  signal O643_out : STD_LOGIC;
  signal O647_out : STD_LOGIC;
  signal O651_out : STD_LOGIC;
  signal O655_out : STD_LOGIC;
  signal O659_out : STD_LOGIC;
  signal O661_in : STD_LOGIC;
  signal O67_out : STD_LOGIC;
  signal \Using_BitField.mem_Rd_reg_n_0_[0]\ : STD_LOGIC;
  signal \Using_BitField.mem_mask0_reg_n_0_[31]\ : STD_LOGIC;
  signal \Using_BitField.mem_mask1_reg_n_0_[30]\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal mask_reset : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of mask_reset : signal is std.standard.true;
  signal p_0_in10_in : STD_LOGIC;
  signal p_0_in13_in : STD_LOGIC;
  signal p_0_in16_in : STD_LOGIC;
  signal p_0_in19_in : STD_LOGIC;
  signal p_0_in1_in : STD_LOGIC;
  signal p_0_in22_in : STD_LOGIC;
  signal p_0_in25_in : STD_LOGIC;
  signal p_0_in28_in : STD_LOGIC;
  signal p_0_in31_in : STD_LOGIC;
  signal p_0_in34_in : STD_LOGIC;
  signal p_0_in37_in : STD_LOGIC;
  signal p_0_in40_in : STD_LOGIC;
  signal p_0_in43_in : STD_LOGIC;
  signal p_0_in46_in : STD_LOGIC;
  signal p_0_in49_in : STD_LOGIC;
  signal p_0_in4_in : STD_LOGIC;
  signal p_0_in52_in : STD_LOGIC;
  signal p_0_in55_in : STD_LOGIC;
  signal p_0_in58_in : STD_LOGIC;
  signal p_0_in61_in : STD_LOGIC;
  signal p_0_in64_in : STD_LOGIC;
  signal p_0_in67_in : STD_LOGIC;
  signal p_0_in7_in : STD_LOGIC;
  signal p_10_in : STD_LOGIC;
  signal p_11_in : STD_LOGIC;
  signal p_12_in : STD_LOGIC;
  signal p_14_in : STD_LOGIC;
  signal p_15_in : STD_LOGIC;
  signal p_16_in : STD_LOGIC;
  signal p_18_in : STD_LOGIC;
  signal p_19_in : STD_LOGIC;
  signal p_1_in : STD_LOGIC;
  signal p_1_in11_in : STD_LOGIC;
  signal p_1_in14_in : STD_LOGIC;
  signal p_1_in17_in : STD_LOGIC;
  signal p_1_in20_in : STD_LOGIC;
  signal p_1_in23_in : STD_LOGIC;
  signal p_1_in26_in : STD_LOGIC;
  signal p_1_in29_in : STD_LOGIC;
  signal p_1_in2_in : STD_LOGIC;
  signal p_1_in32_in : STD_LOGIC;
  signal p_1_in35_in : STD_LOGIC;
  signal p_1_in38_in : STD_LOGIC;
  signal p_1_in41_in : STD_LOGIC;
  signal p_1_in44_in : STD_LOGIC;
  signal p_1_in47_in : STD_LOGIC;
  signal p_1_in50_in : STD_LOGIC;
  signal p_1_in53_in : STD_LOGIC;
  signal p_1_in56_in : STD_LOGIC;
  signal p_1_in59_in : STD_LOGIC;
  signal p_1_in5_in : STD_LOGIC;
  signal p_1_in62_in : STD_LOGIC;
  signal p_1_in65_in : STD_LOGIC;
  signal p_1_in68_in : STD_LOGIC;
  signal p_1_in8_in : STD_LOGIC;
  signal p_20_in : STD_LOGIC;
  signal p_22_in : STD_LOGIC;
  signal p_23_in : STD_LOGIC;
  signal p_24_in : STD_LOGIC;
  signal p_26_in : STD_LOGIC;
  signal p_27_in : STD_LOGIC;
  signal p_28_in : STD_LOGIC;
  signal p_2_in100_in : STD_LOGIC;
  signal p_2_in107_in : STD_LOGIC;
  signal p_2_in114_in : STD_LOGIC;
  signal p_2_in121_in : STD_LOGIC;
  signal p_2_in128_in : STD_LOGIC;
  signal p_2_in135_in : STD_LOGIC;
  signal p_2_in142_in : STD_LOGIC;
  signal p_2_in151_in : STD_LOGIC;
  signal p_2_in45_in : STD_LOGIC;
  signal p_2_in51_in : STD_LOGIC;
  signal p_2_in57_in : STD_LOGIC;
  signal p_2_in63_in : STD_LOGIC;
  signal p_2_in69_in : STD_LOGIC;
  signal p_2_in75_in : STD_LOGIC;
  signal p_2_in81_in : STD_LOGIC;
  signal p_2_in87_in : STD_LOGIC;
  signal p_2_in93_in : STD_LOGIC;
  signal p_3_in : STD_LOGIC;
  signal p_4_in : STD_LOGIC;
  signal p_6_in : STD_LOGIC;
  signal p_7_in : STD_LOGIC;
  signal p_8_in : STD_LOGIC;
  signal \void_bit16_reg_n_0_[15]\ : STD_LOGIC;
begin
  \Using_FPGA.Native\(1 downto 0) <= \^using_fpga.native\(1 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  mask_reset <= in0;
\BS_Rev_Loop[0].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4\
     port map (
      A(1) => A(0),
      A(0) => A(16),
      \C[2]_i_5\ => \C_reg[27]_0\,
      \C[2]_i_5_0\ => \C_reg[27]_1\,
      \C[2]_i_5_1\ => \C_reg[27]_2\,
      \C_reg[16]\(2) => A(17),
      \C_reg[16]\(1) => A(18),
      \C_reg[16]\(0) => A(19),
      EX_Op2(1 downto 0) => EX_Op2(1 downto 0),
      Op1_Logic => Op1_Logic,
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[0].I_BS_REV_A_LUT6_n_2\,
      op1(0) => op1(3)
    );
\BS_Rev_Loop[0].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_138\
     port map (
      \Barrel_Result0_inferred__14/i_\ => \C_reg[27]_2\,
      Last_Mux_1_0 => Last_Mux_1_0,
      Last_Mux_1_15 => Last_Mux_1_15,
      Last_Mux_1_16 => Last_Mux_1_16,
      Last_Mux_1_31 => Last_Mux_1_31,
      O560_out => O560_out,
      O659_out => O659_out
    );
\BS_Rev_Loop[0].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_139\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_15 => Last_Mux_1_15,
      Last_Mux_1_31 => Last_Mux_1_31,
      Q(1) => I0,
      Q(0) => I1,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[10].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_140\
     port map (
      A(1) => A(10),
      A(0) => A(26),
      \C[13]_i_2\ => \C[13]_i_2_1\,
      \C[13]_i_2_0\ => \C[13]_i_2_0\,
      \C[13]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[4]\(7) => A(8),
      \C_reg[4]\(6) => A(9),
      \C_reg[4]\(5) => A(11),
      \C_reg[4]\(4) => A(12),
      \C_reg[4]\(3) => A(13),
      \C_reg[4]\(2) => A(24),
      \C_reg[4]\(1) => A(25),
      \C_reg[4]\(0) => A(27),
      \C_reg[4]_0\ => \BS_Rev_Loop[0].I_BS_REV_A_LUT6_n_2\,
      \C_reg[4]_1\ => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_4\,
      \C_reg[4]_2\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_5\,
      \C_reg[6]\ => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_10\,
      \C_reg[6]_0\ => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_5\,
      \C_reg[6]_1\ => \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_3\,
      D(1) => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_3\,
      D(0) => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_4\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_2\,
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_5\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_6\,
      op1(1) => op1(13),
      op1(0) => op1(8)
    );
\BS_Rev_Loop[10].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_141\
     port map (
      \Barrel_Result0_inferred__4/i_\ => \C_reg[27]_2\,
      Last_Mux_1_10 => Last_Mux_1_10,
      Last_Mux_1_21 => Last_Mux_1_21,
      Last_Mux_1_26 => Last_Mux_1_26,
      Last_Mux_1_5 => Last_Mux_1_5,
      O520_out => O520_out,
      O619_out => O619_out
    );
\BS_Rev_Loop[10].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_142\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_21 => Last_Mux_1_21,
      Last_Mux_1_5 => Last_Mux_1_5,
      Q(1) => \C_reg_n_0_[10]\,
      Q(0) => \C_reg_n_0_[26]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[11].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_143\
     port map (
      A(5) => A(12),
      A(4) => A(13),
      A(3) => A(14),
      A(2) => A(25),
      A(1) => A(26),
      A(0) => A(28),
      \C[12]_i_2\ => \C[12]_i_2_0\,
      \C[12]_i_2_0\ => \C[12]_i_2\,
      \C[12]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[11]\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_3\,
      \C_reg[11]_0\ => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_3\,
      \C_reg[11]_1\ => \^using_fpga.native_1\,
      \C_reg[21]\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_4\,
      \C_reg[21]_0\ => \^using_fpga.native_0\,
      \C_reg[7]\ => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_4\,
      D(2) => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_2\,
      D(1) => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_3\,
      D(0) => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_4\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(1) => A(11),
      \Using_FPGA.Native_0\(0) => A(27),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_5\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_6\,
      op1(1) => op1(14),
      op1(0) => op1(7),
      void_bit => void_bit
    );
\BS_Rev_Loop[11].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_144\
     port map (
      \Barrel_Result0_inferred__3/i_\ => \C_reg[27]_2\,
      Last_Mux_1_11 => Last_Mux_1_11,
      Last_Mux_1_20 => Last_Mux_1_20,
      Last_Mux_1_27 => Last_Mux_1_27,
      Last_Mux_1_4 => Last_Mux_1_4,
      O516_out => O516_out,
      O615_out => O615_out
    );
\BS_Rev_Loop[11].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_145\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_20 => Last_Mux_1_20,
      Last_Mux_1_4 => Last_Mux_1_4,
      Q(1) => \C_reg_n_0_[11]\,
      Q(0) => \C_reg_n_0_[27]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[12].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_146\
     port map (
      A(1) => A(12),
      A(0) => A(28),
      \C[13]_i_2\ => \C[13]_i_2\,
      \C[13]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[12]\(5) => A(13),
      \C_reg[12]\(4) => A(14),
      \C_reg[12]\(3) => A(15),
      \C_reg[12]\(2) => A(26),
      \C_reg[12]\(1) => A(27),
      \C_reg[12]\(0) => A(29),
      \C_reg[12]_0\ => \BS_Rev_Loop[0].I_BS_REV_A_LUT6_n_2\,
      \C_reg[12]_1\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_2\,
      \C_reg[12]_2\ => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_4\,
      \C_reg[8]\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_6\,
      D(1) => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_3\,
      D(0) => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_4\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_2\,
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_5\,
      op1(2) => op1(15),
      op1(1) => op1(6),
      op1(0) => op1(0)
    );
\BS_Rev_Loop[12].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_147\
     port map (
      \Barrel_Result0_inferred__2/i_\ => \C_reg[27]_2\,
      Last_Mux_1_12 => Last_Mux_1_12,
      Last_Mux_1_19 => Last_Mux_1_19,
      Last_Mux_1_28 => Last_Mux_1_28,
      Last_Mux_1_3 => Last_Mux_1_3,
      O512_out => O512_out,
      O611_out => O611_out
    );
\BS_Rev_Loop[12].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_148\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_19 => Last_Mux_1_19,
      Last_Mux_1_3 => Last_Mux_1_3,
      Q(1) => \C_reg_n_0_[12]\,
      Q(0) => \C_reg_n_0_[28]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[13].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_149\
     port map (
      A(1) => A(27),
      A(0) => A(28),
      \C[14]_i_2\ => \C[14]_i_2\,
      \C[14]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[19]\ => \^using_fpga.native\(1),
      EX_Op2(1 downto 0) => EX_Op2(1 downto 0),
      \Using_FPGA.Native_0\(1) => A(13),
      \Using_FPGA.Native_0\(0) => A(29),
      \Using_FPGA.Native_1\ => \^using_fpga.native_2\,
      op1(2) => op1(16),
      op1(1) => op1(5),
      op1(0) => op1(1)
    );
\BS_Rev_Loop[13].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_150\
     port map (
      \Barrel_Result0_inferred__1/i_\ => \C_reg[27]_2\,
      Last_Mux_1_13 => Last_Mux_1_13,
      Last_Mux_1_18 => Last_Mux_1_18,
      Last_Mux_1_2 => Last_Mux_1_2,
      Last_Mux_1_29 => Last_Mux_1_29,
      O58_out => O58_out,
      O67_out => O67_out
    );
\BS_Rev_Loop[13].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_151\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_18 => Last_Mux_1_18,
      Last_Mux_1_2 => Last_Mux_1_2,
      Q(1) => \C_reg_n_0_[13]\,
      Q(0) => \C_reg_n_0_[29]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[14].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_152\
     port map (
      A(4) => A(15),
      A(3) => A(16),
      A(2) => A(17),
      A(1) => A(28),
      A(0) => A(29),
      \C_reg[10]\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_5\,
      \C_reg[18]\ => \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_3\,
      \C_reg[22]\ => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_2\,
      \C_reg[24]\ => \^using_fpga.native\(0),
      \C_reg[24]_0\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_2\,
      \C_reg[25]\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_5\,
      \C_reg[26]\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_2\,
      \C_reg[30]\ => \C_reg[30]_0\,
      \C_reg[30]_0\ => \C_reg[27]_2\,
      D(5) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_2\,
      D(4) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_3\,
      D(3) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_4\,
      D(2) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_5\,
      D(1) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_6\,
      D(0) => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_7\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(0) => A(14),
      \Using_FPGA.Native_1\ => \^using_fpga.native\(1),
      \Using_FPGA.Native_2\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_3\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_4\ => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_10\,
      op1(2) => op1(17),
      op1(1) => op1(4),
      op1(0) => op1(2),
      void_bit => void_bit
    );
\BS_Rev_Loop[14].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_153\
     port map (
      \Barrel_Result0_inferred__0/i_\ => \C_reg[27]_2\,
      Last_Mux_1_1 => Last_Mux_1_1,
      Last_Mux_1_14 => Last_Mux_1_14,
      Last_Mux_1_17 => Last_Mux_1_17,
      Last_Mux_1_30 => Last_Mux_1_30,
      O54_out => O54_out,
      O63_out => O63_out
    );
\BS_Rev_Loop[14].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_154\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_1 => Last_Mux_1_1,
      Last_Mux_1_17 => Last_Mux_1_17,
      Q(1) => \C_reg_n_0_[14]\,
      Q(0) => \C_reg_n_0_[30]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[15].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_155\
     port map (
      A(0) => A(15),
      \C_reg[27]\ => \C_reg[27]_1\,
      \C_reg[27]_0\ => \C_reg[27]_0\,
      \C_reg[27]_1\ => \C_reg[27]_2\,
      \C_reg[9]\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_4\,
      \C_reg[9]_0\ => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_5\,
      \C_reg[9]_1\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_2\,
      \C_reg[9]_2\(2) => A(13),
      \C_reg[9]_2\(1) => A(14),
      \C_reg[9]_2\(0) => A(16),
      D(0) => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_2\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      Op1_Logic => Op1_Logic,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native\(0),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_3\,
      op1(0) => op1(3)
    );
\BS_Rev_Loop[15].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_156\
     port map (
      Barrel_Result0 => \C_reg[27]_2\,
      Last_Mux_1_0 => Last_Mux_1_0,
      Last_Mux_1_15 => Last_Mux_1_15,
      Last_Mux_1_16 => Last_Mux_1_16,
      Last_Mux_1_31 => Last_Mux_1_31,
      O546_in => O546_in,
      O661_in => O661_in
    );
\BS_Rev_Loop[15].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_157\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_0 => Last_Mux_1_0,
      Last_Mux_1_16 => Last_Mux_1_16,
      Q(1) => \C_reg_n_0_[15]\,
      Q(0) => \C_reg_n_0_[31]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[1].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_158\
     port map (
      \C[4]_i_2\ => \C_reg[30]_0\,
      \C[4]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[0]\(8) => A(0),
      \C_reg[0]\(7) => A(2),
      \C_reg[0]\(6) => A(3),
      \C_reg[0]\(5) => A(4),
      \C_reg[0]\(4) => A(15),
      \C_reg[0]\(3) => A(16),
      \C_reg[0]\(2) => A(18),
      \C_reg[0]\(1) => A(19),
      \C_reg[0]\(0) => A(20),
      \C_reg[13]\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_4\,
      \C_reg[13]_0\ => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_3\,
      \C_reg[13]_1\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_5\,
      D(0) => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_1\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(0) => A(17),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_2\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_3\,
      \Using_FPGA.Native_3\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_4\,
      \Using_FPGA.Native_4\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_5\,
      op1(2) => op1(17),
      op1(1) => op1(4),
      op1(0) => op1(2)
    );
\BS_Rev_Loop[1].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_159\
     port map (
      \Barrel_Result0_inferred__13/i_\ => \C_reg[27]_2\,
      Last_Mux_1_1 => Last_Mux_1_1,
      Last_Mux_1_14 => Last_Mux_1_14,
      Last_Mux_1_17 => Last_Mux_1_17,
      Last_Mux_1_30 => Last_Mux_1_30,
      O556_out => O556_out,
      O655_out => O655_out
    );
\BS_Rev_Loop[1].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_160\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_14 => Last_Mux_1_14,
      Last_Mux_1_30 => Last_Mux_1_30,
      Q(1) => \C_reg_n_0_[1]\,
      Q(0) => \C_reg_n_0_[17]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[2].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_161\
     port map (
      A(2) => A(19),
      A(1) => A(20),
      A(0) => A(21),
      \C[4]_i_2\ => \C[14]_i_2\,
      \C[4]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[14]\ => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_2\,
      \C_reg[14]_0\ => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_10\,
      \C_reg[14]_1\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_2\,
      D(0) => \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_2\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(1) => A(2),
      \Using_FPGA.Native_0\(0) => A(18),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_3\,
      op1(2) => op1(16),
      op1(1) => op1(5),
      op1(0) => op1(1)
    );
\BS_Rev_Loop[2].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_162\
     port map (
      \Barrel_Result0_inferred__12/i_\ => \C_reg[27]_2\,
      Last_Mux_1_13 => Last_Mux_1_13,
      Last_Mux_1_18 => Last_Mux_1_18,
      Last_Mux_1_2 => Last_Mux_1_2,
      Last_Mux_1_29 => Last_Mux_1_29,
      O552_out => O552_out,
      O651_out => O651_out
    );
\BS_Rev_Loop[2].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_163\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_13 => Last_Mux_1_13,
      Last_Mux_1_29 => Last_Mux_1_29,
      Q(1) => \C_reg_n_0_[2]\,
      Q(0) => \C_reg_n_0_[18]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[3].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_164\
     port map (
      A(5) => A(2),
      A(4) => A(4),
      A(3) => A(5),
      A(2) => A(20),
      A(1) => A(21),
      A(0) => A(22),
      \C[4]_i_2\ => \C[13]_i_2\,
      \C[4]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[15]\ => \^using_fpga.native_1\,
      \C_reg[15]_0\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_3\,
      \C_reg[15]_1\ => \^using_fpga.native_2\,
      D(0) => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_2\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(1) => A(3),
      \Using_FPGA.Native_0\(0) => A(19),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_3\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_4\,
      op1(2) => op1(15),
      op1(1) => op1(6),
      op1(0) => op1(0)
    );
\BS_Rev_Loop[3].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_165\
     port map (
      \Barrel_Result0_inferred__11/i_\ => \C_reg[27]_2\,
      Last_Mux_1_12 => Last_Mux_1_12,
      Last_Mux_1_19 => Last_Mux_1_19,
      Last_Mux_1_28 => Last_Mux_1_28,
      Last_Mux_1_3 => Last_Mux_1_3,
      O548_out => O548_out,
      O647_out => O647_out
    );
\BS_Rev_Loop[3].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_166\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_12 => Last_Mux_1_12,
      Last_Mux_1_28 => Last_Mux_1_28,
      Q(1) => \C_reg_n_0_[3]\,
      Q(0) => \C_reg_n_0_[19]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[4].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_167\
     port map (
      A(1) => A(4),
      A(0) => A(20),
      \C[5]_i_2\ => \C[12]_i_2\,
      \C[5]_i_2_0\ => \C[12]_i_2_0\,
      \C[5]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[16]\ => \^using_fpga.native_3\,
      \C_reg[16]_0\ => \BS_Rev_Loop[0].I_BS_REV_A_LUT6_n_2\,
      \C_reg[20]\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_2\,
      \C_reg[20]_0\(2) => A(21),
      \C_reg[20]_0\(1) => A(22),
      \C_reg[20]_0\(0) => A(23),
      D(1) => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_2\,
      D(0) => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_3\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_4\,
      op1(1) => op1(14),
      op1(0) => op1(7),
      void_bit => void_bit
    );
\BS_Rev_Loop[4].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_168\
     port map (
      \Barrel_Result0_inferred__10/i_\ => \C_reg[27]_2\,
      Last_Mux_1_11 => Last_Mux_1_11,
      Last_Mux_1_20 => Last_Mux_1_20,
      Last_Mux_1_27 => Last_Mux_1_27,
      Last_Mux_1_4 => Last_Mux_1_4,
      O544_out => O544_out,
      O643_out => O643_out
    );
\BS_Rev_Loop[4].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_169\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_11 => Last_Mux_1_11,
      Last_Mux_1_27 => Last_Mux_1_27,
      Q(1) => \C_reg_n_0_[4]\,
      Q(0) => \C_reg_n_0_[20]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[5].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_170\
     port map (
      A(1) => A(5),
      A(0) => A(21),
      \C[6]_i_2\ => \C[13]_i_2_0\,
      \C[6]_i_2_0\ => \C[13]_i_2_1\,
      \C[6]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[17]\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_5\,
      \C_reg[17]_0\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_2\,
      \C_reg[17]_1\ => \^using_fpga.native_0\,
      \C_reg[1]\ => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_5\,
      \C_reg[1]_0\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_4\,
      \C_reg[1]_1\ => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_3\,
      \C_reg[3]\(7) => A(3),
      \C_reg[3]\(6) => A(4),
      \C_reg[3]\(5) => A(6),
      \C_reg[3]\(4) => A(7),
      \C_reg[3]\(3) => A(8),
      \C_reg[3]\(2) => A(22),
      \C_reg[3]\(1) => A(23),
      \C_reg[3]\(0) => A(24),
      D(1) => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_2\,
      D(0) => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_3\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_4\,
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_5\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_6\,
      op1(1) => op1(13),
      op1(0) => op1(8)
    );
\BS_Rev_Loop[5].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_171\
     port map (
      \Barrel_Result0_inferred__9/i_\ => \C_reg[27]_2\,
      Last_Mux_1_10 => Last_Mux_1_10,
      Last_Mux_1_21 => Last_Mux_1_21,
      Last_Mux_1_26 => Last_Mux_1_26,
      Last_Mux_1_5 => Last_Mux_1_5,
      O540_out => O540_out,
      O639_out => O639_out
    );
\BS_Rev_Loop[5].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_172\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_10 => Last_Mux_1_10,
      Last_Mux_1_26 => Last_Mux_1_26,
      Q(1) => \C_reg_n_0_[5]\,
      Q(0) => \C_reg_n_0_[21]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[6].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_173\
     port map (
      A(5) => A(4),
      A(4) => A(5),
      A(3) => A(7),
      A(2) => A(23),
      A(1) => A(24),
      A(0) => A(25),
      \C[7]_i_2\ => \C[7]_i_2\,
      \C[7]_i_2_0\ => \C[7]_i_2_0\,
      \C[7]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[0]\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_5\,
      \C_reg[0]_0\ => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_5\,
      \C_reg[0]_1\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_6\,
      D(0) => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_3\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(1) => A(6),
      \Using_FPGA.Native_0\(0) => A(22),
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_2\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_4\,
      op1(1) => op1(12),
      op1(0) => op1(9)
    );
\BS_Rev_Loop[6].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_174\
     port map (
      \Barrel_Result0_inferred__8/i_\ => \C_reg[27]_2\,
      Last_Mux_1_22 => Last_Mux_1_22,
      Last_Mux_1_25 => Last_Mux_1_25,
      Last_Mux_1_6 => Last_Mux_1_6,
      Last_Mux_1_9 => Last_Mux_1_9,
      O536_out => O536_out,
      O635_out => O635_out
    );
\BS_Rev_Loop[6].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_175\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_25 => Last_Mux_1_25,
      Last_Mux_1_9 => Last_Mux_1_9,
      Q(1) => \C_reg_n_0_[6]\,
      Q(0) => \C_reg_n_0_[22]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[7].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_176\
     port map (
      A(1) => A(7),
      A(0) => A(23),
      \C[8]_i_2\ => \C[8]_i_2\,
      \C[8]_i_2_0\ => \C_reg[27]_2\,
      \C_reg[2]\(3) => A(6),
      \C_reg[2]\(2) => A(8),
      \C_reg[2]\(1) => A(9),
      \C_reg[2]\(0) => A(10),
      \C_reg[2]_0\ => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_5\,
      \C_reg[2]_1\ => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_4\,
      \C_reg[2]_2\ => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_10\,
      \C_reg[3]\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_5\,
      \C_reg[3]_0\ => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_6\,
      \C_reg[3]_1\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_3\,
      D(1) => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_2\,
      D(0) => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_3\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      Shifted => Shifted,
      \Using_FPGA.Native_0\ => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_4\,
      \Using_FPGA.Native_1\ => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_5\,
      op1(1 downto 0) => op1(11 downto 10)
    );
\BS_Rev_Loop[7].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_177\
     port map (
      \Barrel_Result0_inferred__7/i_\ => \C_reg[27]_2\,
      Last_Mux_1_23 => Last_Mux_1_23,
      Last_Mux_1_24 => Last_Mux_1_24,
      Last_Mux_1_7 => Last_Mux_1_7,
      Last_Mux_1_8 => Last_Mux_1_8,
      O532_out => O532_out,
      O631_out => O631_out
    );
\BS_Rev_Loop[7].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_178\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_24 => Last_Mux_1_24,
      Last_Mux_1_8 => Last_Mux_1_8,
      Q(1) => \C_reg_n_0_[7]\,
      Q(0) => \C_reg_n_0_[23]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[8].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_179\
     port map (
      \C[12]_i_2\ => \C[8]_i_2\,
      \C[12]_i_2_0\ => \C_reg[27]_2\,
      Shifted => Shifted,
      \Using_FPGA.Native_0\(1) => A(8),
      \Using_FPGA.Native_0\(0) => A(24),
      op1(1 downto 0) => op1(11 downto 10)
    );
\BS_Rev_Loop[8].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_180\
     port map (
      \Barrel_Result0_inferred__6/i_\ => \C_reg[27]_2\,
      Last_Mux_1_23 => Last_Mux_1_23,
      Last_Mux_1_24 => Last_Mux_1_24,
      Last_Mux_1_7 => Last_Mux_1_7,
      Last_Mux_1_8 => Last_Mux_1_8,
      O528_out => O528_out,
      O627_out => O627_out
    );
\BS_Rev_Loop[8].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_181\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_23 => Last_Mux_1_23,
      Last_Mux_1_7 => Last_Mux_1_7,
      Q(1) => \C_reg_n_0_[8]\,
      Q(0) => \C_reg_n_0_[24]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
\BS_Rev_Loop[9].I_BS_REV_A_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_182\
     port map (
      A(5) => A(10),
      A(4) => A(11),
      A(3) => A(12),
      A(2) => A(23),
      A(1) => A(24),
      A(0) => A(26),
      \C[12]_i_2\ => \C[7]_i_2_0\,
      \C[12]_i_2_0\ => \C[7]_i_2\,
      \C[12]_i_2_1\ => \C_reg[27]_2\,
      \C_reg[19]\ => \^using_fpga.native_2\,
      \C_reg[19]_0\ => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_3\,
      \C_reg[19]_1\ => \C_reg[19]_0\,
      \C_reg[5]\ => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_2\,
      \C_reg[5]_0\ => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_6\,
      \C_reg[5]_1\ => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_3\,
      D(1) => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_2\,
      D(0) => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_3\,
      EX_Op2(3 downto 0) => EX_Op2(3 downto 0),
      \Using_FPGA.Native_0\(1) => A(9),
      \Using_FPGA.Native_0\(0) => A(25),
      \Using_FPGA.Native_1\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_2\ => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_5\,
      op1(1) => op1(12),
      op1(0) => op1(9)
    );
\BS_Rev_Loop[9].I_BS_REV_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_183\
     port map (
      \Barrel_Result0_inferred__5/i_\ => \C_reg[27]_2\,
      Last_Mux_1_22 => Last_Mux_1_22,
      Last_Mux_1_25 => Last_Mux_1_25,
      Last_Mux_1_6 => Last_Mux_1_6,
      Last_Mux_1_9 => Last_Mux_1_9,
      O524_out => O524_out,
      O623_out => O623_out
    );
\BS_Rev_Loop[9].I_BS_SHIFT16_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_184\
     port map (
      EX_Op2(0) => EX_Op2(4),
      Last_Mux_1_22 => Last_Mux_1_22,
      Last_Mux_1_6 => Last_Mux_1_6,
      Q(1) => \C_reg_n_0_[9]\,
      Q(0) => \C_reg_n_0_[25]\,
      \Using_FPGA.Native_0\ => \void_bit16_reg_n_0_[15]\
    );
Barrel_Result0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E2"
    )
        port map (
      I0 => D(0),
      I1 => \Using_BitField.mem_mask0_reg_n_0_[31]\,
      I2 => O661_in,
      O => Other_Result
    );
\Barrel_Result0_inferred__0/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(1),
      I1 => p_1_in,
      I2 => \Using_BitField.mem_mask1_reg_n_0_[30]\,
      I3 => O63_out,
      O => \trace_data_write_value_i_reg[30]\
    );
\Barrel_Result0_inferred__1/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(2),
      I1 => p_1_in2_in,
      I2 => p_0_in1_in,
      I3 => O67_out,
      O => \trace_data_write_value_i_reg[29]\
    );
\Barrel_Result0_inferred__10/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in63_in,
      I1 => p_1_in29_in,
      I2 => p_0_in28_in,
      I3 => O643_out,
      O => \Using_BitField.mem_Rd_reg[20]_0\
    );
\Barrel_Result0_inferred__11/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in69_in,
      I1 => p_1_in32_in,
      I2 => p_0_in31_in,
      I3 => O647_out,
      O => \Using_BitField.mem_Rd_reg[19]_0\
    );
\Barrel_Result0_inferred__12/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in75_in,
      I1 => p_1_in35_in,
      I2 => p_0_in34_in,
      I3 => O651_out,
      O => \Using_BitField.mem_Rd_reg[18]_0\
    );
\Barrel_Result0_inferred__13/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in81_in,
      I1 => p_1_in38_in,
      I2 => p_0_in37_in,
      I3 => O655_out,
      O => \Using_BitField.mem_Rd_reg[17]_0\
    );
\Barrel_Result0_inferred__14/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in87_in,
      I1 => p_1_in41_in,
      I2 => p_0_in40_in,
      I3 => O659_out,
      O => \Using_BitField.mem_Rd_reg[16]_0\
    );
\Barrel_Result0_inferred__15/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in93_in,
      I1 => p_1_in44_in,
      I2 => p_0_in43_in,
      I3 => O546_in,
      O => \Using_BitField.mem_Rd_reg[15]_0\
    );
\Barrel_Result0_inferred__16/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in100_in,
      I1 => p_1_in47_in,
      I2 => p_0_in46_in,
      I3 => O54_out,
      O => \Using_BitField.mem_Rd_reg[14]_0\
    );
\Barrel_Result0_inferred__17/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in107_in,
      I1 => p_1_in50_in,
      I2 => p_0_in49_in,
      I3 => O58_out,
      O => \Using_BitField.mem_Rd_reg[13]_0\
    );
\Barrel_Result0_inferred__18/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in114_in,
      I1 => p_1_in53_in,
      I2 => p_0_in52_in,
      I3 => O512_out,
      O => \Using_BitField.mem_Rd_reg[12]_0\
    );
\Barrel_Result0_inferred__19/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in121_in,
      I1 => p_1_in56_in,
      I2 => p_0_in55_in,
      I3 => O516_out,
      O => \Using_BitField.mem_Rd_reg[11]_0\
    );
\Barrel_Result0_inferred__2/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(3),
      I1 => p_1_in5_in,
      I2 => p_0_in4_in,
      I3 => O611_out,
      O => \trace_data_write_value_i_reg[28]\
    );
\Barrel_Result0_inferred__20/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in128_in,
      I1 => p_1_in59_in,
      I2 => p_0_in58_in,
      I3 => O520_out,
      O => \Using_BitField.mem_Rd_reg[10]_0\
    );
\Barrel_Result0_inferred__21/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in135_in,
      I1 => p_1_in62_in,
      I2 => p_0_in61_in,
      I3 => O524_out,
      O => \Using_BitField.mem_Rd_reg[9]_0\
    );
\Barrel_Result0_inferred__22/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in142_in,
      I1 => p_1_in65_in,
      I2 => p_0_in64_in,
      I3 => O528_out,
      O => \Using_BitField.mem_Rd_reg[8]_0\
    );
\Barrel_Result0_inferred__3/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(4),
      I1 => p_1_in8_in,
      I2 => p_0_in7_in,
      I3 => O615_out,
      O => \trace_data_write_value_i_reg[27]\
    );
\Barrel_Result0_inferred__4/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(5),
      I1 => p_1_in11_in,
      I2 => p_0_in10_in,
      I3 => O619_out,
      O => \trace_data_write_value_i_reg[26]\
    );
\Barrel_Result0_inferred__5/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(6),
      I1 => p_1_in14_in,
      I2 => p_0_in13_in,
      I3 => O623_out,
      O => \trace_data_write_value_i_reg[25]\
    );
\Barrel_Result0_inferred__6/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => D(7),
      I1 => p_1_in17_in,
      I2 => p_0_in16_in,
      I3 => O627_out,
      O => \trace_data_write_value_i_reg[24]\
    );
\Barrel_Result0_inferred__7/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in45_in,
      I1 => p_1_in20_in,
      I2 => p_0_in19_in,
      I3 => O631_out,
      O => \Using_BitField.mem_Rd_reg[23]_0\
    );
\Barrel_Result0_inferred__8/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in51_in,
      I1 => p_1_in23_in,
      I2 => p_0_in22_in,
      I3 => O635_out,
      O => \Using_BitField.mem_Rd_reg[22]_0\
    );
\Barrel_Result0_inferred__9/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in57_in,
      I1 => p_1_in26_in,
      I2 => p_0_in25_in,
      I3 => O639_out,
      O => \Using_BitField.mem_Rd_reg[21]_0\
    );
\C_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[6].I_BS_REV_A_LUT6_n_3\,
      Q => I0,
      R => SR(0)
    );
\C_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[10]\,
      R => SR(0)
    );
\C_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[11]\,
      R => SR(0)
    );
\C_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_4\,
      Q => \C_reg_n_0_[12]\,
      R => SR(0)
    );
\C_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[1].I_BS_REV_A_LUT6_n_1\,
      Q => \C_reg_n_0_[13]\,
      R => SR(0)
    );
\C_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[2].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[14]\,
      R => SR(0)
    );
\C_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[3].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[15]\,
      R => SR(0)
    );
\C_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_2\,
      Q => I1,
      R => SR(0)
    );
\C_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[17]\,
      R => SR(0)
    );
\C_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[18]\,
      R => SR(0)
    );
\C_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[19]\,
      R => SR(0)
    );
\C_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[5].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[1]\,
      R => SR(0)
    );
\C_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[4].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[20]\,
      R => SR(0)
    );
\C_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_4\,
      Q => \C_reg_n_0_[21]\,
      R => SR(0)
    );
\C_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_4\,
      Q => \C_reg_n_0_[22]\,
      R => SR(0)
    );
\C_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(5),
      Q => \C_reg_n_0_[23]\,
      R => SR(0)
    );
\C_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_5\,
      Q => \C_reg_n_0_[24]\,
      R => SR(0)
    );
\C_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_6\,
      Q => \C_reg_n_0_[25]\,
      R => SR(0)
    );
\C_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[14].I_BS_REV_A_LUT6_n_7\,
      Q => \C_reg_n_0_[26]\,
      R => SR(0)
    );
\C_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(4),
      Q => \C_reg_n_0_[27]\,
      R => SR(0)
    );
\C_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(3),
      Q => \C_reg_n_0_[28]\,
      R => SR(0)
    );
\C_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(2),
      Q => \C_reg_n_0_[29]\,
      R => SR(0)
    );
\C_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[2]\,
      R => SR(0)
    );
\C_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(1),
      Q => \C_reg_n_0_[30]\,
      R => SR(0)
    );
\C_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \C_reg[23]_0\(0),
      Q => \C_reg_n_0_[31]\,
      R => SR(0)
    );
\C_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[7].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[3]\,
      R => SR(0)
    );
\C_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[4]\,
      R => SR(0)
    );
\C_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[9].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[5]\,
      R => SR(0)
    );
\C_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[10].I_BS_REV_A_LUT6_n_4\,
      Q => \C_reg_n_0_[6]\,
      R => SR(0)
    );
\C_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[11].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[7]\,
      R => SR(0)
    );
\C_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[12].I_BS_REV_A_LUT6_n_3\,
      Q => \C_reg_n_0_[8]\,
      R => SR(0)
    );
\C_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \BS_Rev_Loop[15].I_BS_REV_A_LUT6_n_2\,
      Q => \C_reg_n_0_[9]\,
      R => SR(0)
    );
\Using_BitField.mem_Rd_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(23),
      Q => \Using_BitField.mem_Rd_reg_n_0_[0]\,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(13),
      Q => p_2_in128_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(12),
      Q => p_2_in121_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(11),
      Q => p_2_in114_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(10),
      Q => p_2_in107_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(9),
      Q => p_2_in100_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(8),
      Q => p_2_in93_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(7),
      Q => p_2_in87_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(6),
      Q => p_2_in81_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(5),
      Q => p_2_in75_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(4),
      Q => p_2_in69_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(22),
      Q => p_26_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(3),
      Q => p_2_in63_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(2),
      Q => p_2_in57_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(1),
      Q => p_2_in51_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(0),
      Q => p_2_in45_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(21),
      Q => p_22_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(20),
      Q => p_18_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(19),
      Q => p_14_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(18),
      Q => p_10_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(17),
      Q => p_6_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(16),
      Q => p_2_in151_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(15),
      Q => p_2_in142_in,
      R => '0'
    );
\Using_BitField.mem_Rd_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Write(14),
      Q => p_2_in135_in,
      R => '0'
    );
\Using_BitField.mem_mask0_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(31),
      Q => p_28_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[10]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(21),
      Q => p_1_in59_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[11]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(20),
      Q => p_1_in56_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[12]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(19),
      Q => p_1_in53_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[13]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(18),
      Q => p_1_in50_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[14]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(17),
      Q => p_1_in47_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[15]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(16),
      Q => p_1_in44_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[16]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(15),
      Q => p_1_in41_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[17]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(14),
      Q => p_1_in38_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[18]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(13),
      Q => p_1_in35_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[19]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(12),
      Q => p_1_in32_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(30),
      Q => p_24_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[20]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(11),
      Q => p_1_in29_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[21]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(10),
      Q => p_1_in26_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[22]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(9),
      Q => p_1_in23_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[23]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(8),
      Q => p_1_in20_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[24]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(7),
      Q => p_1_in17_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[25]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(6),
      Q => p_1_in14_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[26]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(5),
      Q => p_1_in11_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[27]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(4),
      Q => p_1_in8_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[28]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(3),
      Q => p_1_in5_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[29]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(2),
      Q => p_1_in2_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(29),
      Q => p_20_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[30]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(1),
      Q => p_1_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[31]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(0),
      Q => \Using_BitField.mem_mask0_reg_n_0_[31]\,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(28),
      Q => p_16_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[4]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(27),
      Q => p_12_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[5]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(26),
      Q => p_8_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[6]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(25),
      Q => p_4_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[7]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(24),
      Q => p_1_in68_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[8]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(23),
      Q => p_1_in65_in,
      S => mask_reset
    );
\Using_BitField.mem_mask0_reg[9]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask0_reg[0]_0\(22),
      Q => p_1_in62_in,
      S => mask_reset
    );
\Using_BitField.mem_mask1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(30),
      Q => p_27_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(20),
      Q => p_0_in58_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(19),
      Q => p_0_in55_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(18),
      Q => p_0_in52_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(17),
      Q => p_0_in49_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(16),
      Q => p_0_in46_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(15),
      Q => p_0_in43_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(14),
      Q => p_0_in40_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(13),
      Q => p_0_in37_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(12),
      Q => p_0_in34_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(11),
      Q => p_0_in31_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(29),
      Q => p_23_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(10),
      Q => p_0_in28_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(9),
      Q => p_0_in25_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(8),
      Q => p_0_in22_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(7),
      Q => p_0_in19_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(6),
      Q => p_0_in16_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(5),
      Q => p_0_in13_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(4),
      Q => p_0_in10_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(3),
      Q => p_0_in7_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(2),
      Q => p_0_in4_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(1),
      Q => p_0_in1_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(28),
      Q => p_19_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(0),
      Q => \Using_BitField.mem_mask1_reg_n_0_[30]\,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(27),
      Q => p_15_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(26),
      Q => p_11_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(25),
      Q => p_7_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(24),
      Q => p_3_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(23),
      Q => p_0_in67_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(22),
      Q => p_0_in64_in,
      R => mask_reset
    );
\Using_BitField.mem_mask1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BitField.mem_mask1_reg[0]_0\(21),
      Q => p_0_in61_in,
      R => mask_reset
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_2_in151_in,
      I1 => p_1_in68_in,
      I2 => p_0_in67_in,
      I3 => O532_out,
      O => Barrel_Result(0)
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_6_in,
      I1 => p_4_in,
      I2 => p_3_in,
      I3 => O536_out,
      O => Barrel_Result(1)
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_10_in,
      I1 => p_8_in,
      I2 => p_7_in,
      I3 => O540_out,
      O => Barrel_Result(2)
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_14_in,
      I1 => p_12_in,
      I2 => p_11_in,
      I3 => O544_out,
      O => Barrel_Result(3)
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_18_in,
      I1 => p_16_in,
      I2 => p_15_in,
      I3 => O548_out,
      O => Barrel_Result(4)
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_22_in,
      I1 => p_20_in,
      I2 => p_19_in,
      I3 => O552_out,
      O => Barrel_Result(5)
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => p_26_in,
      I1 => p_24_in,
      I2 => p_23_in,
      I3 => O556_out,
      O => Barrel_Result(6)
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E82"
    )
        port map (
      I0 => \Using_BitField.mem_Rd_reg_n_0_[0]\,
      I1 => p_28_in,
      I2 => p_27_in,
      I3 => O560_out,
      O => Barrel_Result(7)
    );
\void_bit16_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => void_bit,
      Q => \void_bit16_reg_n_0_[15]\,
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_and is
  port (
    word_is_valid : out STD_LOGIC;
    Trace_ICache_Rdy_reg : in STD_LOGIC;
    Carry_OUT : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_and : entity is "carry_and";
end design_1_microblaze_1_1_carry_and;

architecture STRUCTURE of design_1_microblaze_1_1_carry_and is
begin
MUXCY_I: entity work.design_1_microblaze_1_1_MB_MUXCY_3
     port map (
      Carry_OUT => Carry_OUT,
      Trace_ICache_Rdy_reg => Trace_ICache_Rdy_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      word_is_valid => word_is_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_and_21 is
  port (
    Carry_Out : out STD_LOGIC;
    Trace_Cache_Hit0 : out STD_LOGIC;
    Trace_Cache_Hit_reg : in STD_LOGIC;
    tag_ok_without_parity : in STD_LOGIC;
    Valid_Req_1st_Cycle : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_and_21 : entity is "carry_and";
end design_1_microblaze_1_1_carry_and_21;

architecture STRUCTURE of design_1_microblaze_1_1_carry_and_21 is
begin
MUXCY_I: entity work.design_1_microblaze_1_1_MB_MUXCY_22
     port map (
      Carry_Out => Carry_Out,
      Trace_Cache_Hit0 => Trace_Cache_Hit0,
      Trace_Cache_Hit_reg => Trace_Cache_Hit_reg,
      Valid_Req_1st_Cycle => Valid_Req_1st_Cycle,
      lopt => lopt,
      lopt_1 => lopt_1,
      tag_ok_without_parity => tag_ok_without_parity
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_equal is
  port (
    byte_3 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    byte_0x_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Use_The_PCMP_instr.CLZ_Instr_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_equal : entity is "carry_equal";
end design_1_microblaze_1_1_carry_equal;

architecture STRUCTURE of design_1_microblaze_1_1_carry_equal is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^byte_3\ : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  byte_3 <= \^byte_3\;
\Using_FPGA.MUXCY_L_Enable\: entity work.design_1_microblaze_1_1_MB_MUXCY_236
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      byte_3 => \^byte_3\,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Using_FPGA.MUXCY_L_Enable_2\: entity work.design_1_microblaze_1_1_MB_MUXCY_237
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      byte_0x_3 => byte_0x_3,
      byte_3 => \^byte_3\
    );
\Using_FPGA.The_Compare[0].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_238
     port map (
      \Use_The_PCMP_instr.CLZ_Instr_reg\ => \Use_The_PCMP_instr.CLZ_Instr_reg\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_0\ => \Using_FPGA.Native_i_1__75_0\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Using_FPGA.The_Compare[0].sel_reg\,
      carry_2 => carry_2,
      clz_instr => clz_instr,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Using_FPGA.The_Compare[1].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_239
     port map (
      S => S,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Using_FPGA.The_Compare[2].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_240
     port map (
      \Using_FPGA.The_Compare[2].sel_reg\ => \Using_FPGA.The_Compare[2].sel_reg\,
      carry_1 => carry_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.The_Compare[0].sel_reg\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_equal_217 is
  port (
    byte_2 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    byte_0x_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_0\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_equal_217 : entity is "carry_equal";
end design_1_microblaze_1_1_carry_equal_217;

architecture STRUCTURE of design_1_microblaze_1_1_carry_equal_217 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^byte_2\ : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  byte_2 <= \^byte_2\;
\Using_FPGA.MUXCY_L_Enable\: entity work.design_1_microblaze_1_1_MB_MUXCY_231
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      byte_2 => \^byte_2\,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Using_FPGA.MUXCY_L_Enable_2\: entity work.design_1_microblaze_1_1_MB_MUXCY_232
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      byte_0x_2 => byte_0x_2,
      byte_2 => \^byte_2\
    );
\Using_FPGA.The_Compare[0].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_233
     port map (
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.The_Compare[0].sel_reg_2\ => \Using_FPGA.The_Compare[0].sel_reg_2\,
      carry_2 => carry_2,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Using_FPGA.The_Compare[1].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_234
     port map (
      S_1 => S_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Using_FPGA.The_Compare[2].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_235
     port map (
      \Using_FPGA.The_Compare[2].sel_reg_0\ => \Using_FPGA.The_Compare[2].sel_reg_0\,
      carry_1 => carry_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S_1,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.The_Compare[0].sel_reg_2\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_equal_218 is
  port (
    byte_1 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    byte_0x_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_3\ : in STD_LOGIC;
    S_4 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_equal_218 : entity is "carry_equal";
end design_1_microblaze_1_1_carry_equal_218;

architecture STRUCTURE of design_1_microblaze_1_1_carry_equal_218 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^byte_1\ : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  byte_1 <= \^byte_1\;
\Using_FPGA.MUXCY_L_Enable\: entity work.design_1_microblaze_1_1_MB_MUXCY_226
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      byte_1 => \^byte_1\,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Using_FPGA.MUXCY_L_Enable_2\: entity work.design_1_microblaze_1_1_MB_MUXCY_227
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      byte_0x_1 => byte_0x_1,
      byte_1 => \^byte_1\
    );
\Using_FPGA.The_Compare[0].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_228
     port map (
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.The_Compare[0].sel_reg_5\ => \Using_FPGA.The_Compare[0].sel_reg_5\,
      carry_2 => carry_2,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Using_FPGA.The_Compare[1].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_229
     port map (
      S_4 => S_4,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Using_FPGA.The_Compare[2].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_230
     port map (
      \Using_FPGA.The_Compare[2].sel_reg_3\ => \Using_FPGA.The_Compare[2].sel_reg_3\,
      carry_1 => carry_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S_4,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.The_Compare[0].sel_reg_5\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_equal_219 is
  port (
    byte_0 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    byte_0x_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    PCMP_Instr2_out : in STD_LOGIC;
    Enable_2 : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_6\ : in STD_LOGIC;
    S_7 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_6__4_0\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_equal_219 : entity is "carry_equal";
end design_1_microblaze_1_1_carry_equal_219;

architecture STRUCTURE of design_1_microblaze_1_1_carry_equal_219 is
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^byte_0\ : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
begin
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  byte_0 <= \^byte_0\;
\Using_FPGA.MUXCY_L_Enable\: entity work.design_1_microblaze_1_1_MB_MUXCY_221
     port map (
      PCMP_Instr2_out => PCMP_Instr2_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      byte_0 => \^byte_0\,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Using_FPGA.MUXCY_L_Enable_2\: entity work.design_1_microblaze_1_1_MB_MUXCY_222
     port map (
      Enable_2 => Enable_2,
      byte_0 => \^byte_0\,
      byte_0x_0 => byte_0x_0
    );
\Using_FPGA.The_Compare[0].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_223
     port map (
      Op1_Logic => Op1_Logic,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_i_6__4\ => \Using_FPGA.Native_i_6__4\,
      \Using_FPGA.Native_i_6__4_0\ => \Using_FPGA.Native_i_6__4_0\,
      \Using_FPGA.The_Compare[0].sel_reg_8\ => \Using_FPGA.The_Compare[0].sel_reg_8\,
      carry_2 => carry_2,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Using_FPGA.The_Compare[1].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_224
     port map (
      S_7 => S_7,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Using_FPGA.The_Compare[2].MUXCY_L_I1\: entity work.design_1_microblaze_1_1_MB_MUXCY_225
     port map (
      \Using_FPGA.The_Compare[2].sel_reg_6\ => \Using_FPGA.The_Compare[2].sel_reg_6\,
      carry_1 => carry_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S_7,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.The_Compare[0].sel_reg_8\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => PCMP_Instr2_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_or is
  port (
    complete_iready : out STD_LOGIC;
    S : in STD_LOGIC;
    icache_ready : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_or : entity is "carry_or";
end design_1_microblaze_1_1_carry_or;

architecture STRUCTURE of design_1_microblaze_1_1_carry_or is
begin
MUXCY_I: entity work.design_1_microblaze_1_1_MB_MUXCY
     port map (
      S => S,
      complete_iready => complete_iready,
      icache_ready => icache_ready,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_carry_or_2 is
  port (
    \Use_XX_Accesses.xx_valid_data_reg\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    valid_Req_XX_reg : out STD_LOGIC;
    word_is_valid : in STD_LOGIC;
    valid_Req_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_reg_0 : in STD_LOGIC;
    valid_Req_XX_reg_1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \A__0\ : in STD_LOGIC;
    valid_Req_XX_reg_2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_carry_or_2 : entity is "carry_or";
end design_1_microblaze_1_1_carry_or_2;

architecture STRUCTURE of design_1_microblaze_1_1_carry_or_2 is
begin
MUXCY_I: entity work.design_1_microblaze_1_1_MB_MUXCY_4
     port map (
      \A__0\ => \A__0\,
      \Use_XX_Accesses.xx_valid_data_reg\ => \Use_XX_Accesses.xx_valid_data_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      sync_reset => sync_reset,
      valid_Req => valid_Req,
      valid_Req_XX_reg => valid_Req_XX_reg,
      valid_Req_XX_reg_0 => valid_Req_XX_reg_0,
      valid_Req_XX_reg_1(0) => valid_Req_XX_reg_1(0),
      valid_Req_XX_reg_2 => valid_Req_XX_reg_2,
      valid_Req_reg(0) => valid_Req_reg(0),
      word_is_valid => word_is_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_comparator is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Carry_OUT : out STD_LOGIC;
    Trace_ICache_Hit0 : out STD_LOGIC;
    valid_Req_reg : out STD_LOGIC;
    valid_addr_strobe_q : in STD_LOGIC;
    \req_Addr_reg[27]\ : in STD_LOGIC;
    valid_Req : in STD_LOGIC;
    xx_wait_for_data_postponed : in STD_LOGIC;
    \Use_XX_Accesses.xx_wait_for_data_postponed_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    DOADO : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_comparator : entity is "comparator";
end design_1_microblaze_1_1_comparator;

architecture STRUCTURE of design_1_microblaze_1_1_comparator is
  signal \Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal S : STD_LOGIC;
  signal carry_chain_1 : STD_LOGIC;
  signal carry_chain_2 : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
begin
  lopt <= lopt_4;
  lopt_5 <= lopt_1;
  lopt_6 <= lopt_2;
\Comp_Carry_Chain[0].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_5
     port map (
      S => S,
      carry_chain_1 => carry_chain_1,
      carry_chain_2 => carry_chain_2,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_6
     port map (
      \Comp_Carry_Chain[1].carry_sel_reg\ => \Comp_Carry_Chain[1].carry_sel_reg\,
      E(0) => E(0),
      \Not_Using_TLBS.instr_Addr_1_reg[16]\ => Carry_OUT,
      Trace_ICache_Hit0 => Trace_ICache_Hit0,
      \Use_XX_Accesses.xx_wait_for_data_postponed_reg\ => \Use_XX_Accesses.xx_wait_for_data_postponed_reg\,
      carry_chain_1 => carry_chain_1,
      lopt => \^lopt_2\,
      lopt_1 => lopt_3,
      \req_Addr_reg[27]\ => \req_Addr_reg[27]\,
      valid_Req => valid_Req,
      valid_Req_reg => valid_Req_reg,
      valid_addr_strobe_q => valid_addr_strobe_q,
      xx_wait_for_data_postponed => xx_wait_for_data_postponed
    );
\Using_Extra_Carry.MUXCY_EXTRA_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_7
     port map (
      carry_chain_2 => carry_chain_2,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => S,
      lopt_3 => \^lopt_2\,
      lopt_4 => lopt_3,
      lopt_5 => \Comp_Carry_Chain[1].carry_sel_reg\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => lopt_6,
      valid_Req => valid_Req
    );
carry_sel0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"90000090"
    )
        port map (
      I0 => Q(3),
      I1 => DOADO(3),
      I2 => DOADO(4),
      I3 => DOADO(2),
      I4 => Q(2),
      O => \Comp_Carry_Chain[1].carry_sel_reg\
    );
\carry_sel0_inferred__0/i_\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => DOADO(1),
      I1 => Q(1),
      I2 => DOADO(0),
      I3 => Q(0),
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_comparator_11 is
  port (
    tag_ok_without_parity : out STD_LOGIC;
    WEA : out STD_LOGIC_VECTOR ( 3 downto 0 );
    Read_Req : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.read_req_done_reg\ : out STD_LOGIC;
    \Using_AXI.M_AXI_ARBURST_reg[1]\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \Comp_Carry_Chain[1].carry_sel_reg\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Write_Cacheline_conflict : in STD_LOGIC;
    new_write_cmd_allowed : in STD_LOGIC;
    write_req : in STD_LOGIC;
    write_req_done_hold : in STD_LOGIC;
    Write_Strobe_i : in STD_LOGIC;
    read_req_done : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_AXI.M_AXI_ARBURST_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Read_Req_Granted : in STD_LOGIC;
    write_data_done : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_comparator_11 : entity is "comparator";
end design_1_microblaze_1_1_comparator_11;

architecture STRUCTURE of design_1_microblaze_1_1_comparator_11 is
  signal carry_chain_1 : STD_LOGIC;
  signal carry_chain_2 : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
begin
  lopt <= lopt_4;
  lopt_5 <= lopt_1;
  lopt_6 <= lopt_2;
\Comp_Carry_Chain[0].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_12
     port map (
      S => S,
      carry_chain_1 => carry_chain_1,
      carry_chain_2 => carry_chain_2,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_13
     port map (
      \Comp_Carry_Chain[1].carry_sel_reg\ => \Comp_Carry_Chain[1].carry_sel_reg\,
      \Data_Addr_1_reg[16]\ => tag_ok_without_parity,
      Read_Req => Read_Req,
      Read_Req_Granted => Read_Req_Granted,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_AXI.M_AXI_ARBURST_reg[1]\ => \Using_AXI.M_AXI_ARBURST_reg[1]\,
      \Using_AXI.M_AXI_ARBURST_reg[1]_0\(0) => \Using_AXI.M_AXI_ARBURST_reg[1]_0\(0),
      \Using_FPGA.Native_0\(3 downto 0) => \Using_FPGA.Native\(3 downto 0),
      \Using_New_CacheInterface_for_AXI.read_req_done_reg\ => \Using_New_CacheInterface_for_AXI.read_req_done_reg\,
      WEA(3 downto 0) => WEA(3 downto 0),
      Write_Cacheline_conflict => Write_Cacheline_conflict,
      Write_Strobe_i => Write_Strobe_i,
      carry_chain_1 => carry_chain_1,
      lopt => \^lopt_2\,
      lopt_1 => lopt_3,
      new_write_cmd_allowed => new_write_cmd_allowed,
      read_req_done => read_req_done,
      sync_reset => sync_reset,
      write_data_done => write_data_done,
      write_req => write_req,
      write_req_done_hold => write_req_done_hold
    );
\Using_Extra_Carry.MUXCY_EXTRA_I\: entity work.design_1_microblaze_1_1_MB_MUXCY_14
     port map (
      \Using_FPGA.Native_0\ => \Using_AXI.M_AXI_ARBURST_reg[1]\,
      carry_chain_2 => carry_chain_2,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => S,
      lopt_3 => \^lopt_2\,
      lopt_4 => lopt_3,
      lopt_5 => \Comp_Carry_Chain[1].carry_sel_reg\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => lopt_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_dsp_module is
  port (
    P : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_dsp_module : entity is "dsp_module";
end design_1_microblaze_1_1_dsp_module;

architecture STRUCTURE of design_1_microblaze_1_1_dsp_module is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.design_1_microblaze_1_1_MB_DSP48E1
     port map (
      Clk => Clk,
      EX_Op1(16 downto 0) => EX_Op1(16 downto 0),
      EX_Op2(16 downto 0) => EX_Op2(16 downto 0),
      P(16 downto 0) => P(16 downto 0),
      \Using_FPGA.DSP48E1_I1_0\(47 downto 0) => \Using_FPGA.DSP48E1_I1\(47 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_dsp_module__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    Clk : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_dsp_module__parameterized1\ : entity is "dsp_module";
end \design_1_microblaze_1_1_dsp_module__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_dsp_module__parameterized1\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\design_1_microblaze_1_1_MB_DSP48E1__parameterized1\
     port map (
      Clk => Clk,
      EX_Op1(14 downto 0) => EX_Op1(14 downto 0),
      EX_Op2(16 downto 0) => EX_Op2(16 downto 0),
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      \Using_FPGA.DSP48E1_I1_0\(47 downto 0) => \Using_FPGA.DSP48E1_I1\(47 downto 0),
      ex_not_mul_op => ex_not_mul_op
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_dsp_module__parameterized3\ is
  port (
    mul_Result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    Clk : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 14 downto 0 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_dsp_module__parameterized3\ : entity is "dsp_module";
end \design_1_microblaze_1_1_dsp_module__parameterized3\;

architecture STRUCTURE of \design_1_microblaze_1_1_dsp_module__parameterized3\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\design_1_microblaze_1_1_MB_DSP48E1__parameterized3\
     port map (
      Clk => Clk,
      EX_Op1(16 downto 0) => EX_Op1(16 downto 0),
      EX_Op2(14 downto 0) => EX_Op2(14 downto 0),
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      ex_not_mul_op => ex_not_mul_op,
      mul_Result(14 downto 0) => mul_Result(14 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mb_sync_vec is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_hit : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    config_with_scan_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mb_sync_vec : entity is "mb_sync_vec";
end design_1_microblaze_1_1_mb_sync_vec;

architecture STRUCTURE of design_1_microblaze_1_1_mb_sync_vec is
begin
\sync_bits[0].sync_bit\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2_66\
     port map (
      D(0) => D(0),
      Dbg_Clk => Dbg_Clk,
      config_with_scan_reset => config_with_scan_reset,
      dbg_hit(0) => dbg_hit(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_mb_sync_vec__parameterized1\ is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 9 );
    p_66_out : out STD_LOGIC;
    p_84_out : out STD_LOGIC;
    p_81_out : out STD_LOGIC;
    p_76_out : out STD_LOGIC;
    p_73_out : out STD_LOGIC;
    \Serial_Dbg_Intf.sample_synced_1_reg[8]\ : out STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]\ : out STD_LOGIC;
    p_13_out : out STD_LOGIC;
    p_78_out : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_4\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_mb_sync_vec__parameterized1\ : entity is "mb_sync_vec";
end \design_1_microblaze_1_1_mb_sync_vec__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_mb_sync_vec__parameterized1\ is
  signal \^sample_synced\ : STD_LOGIC_VECTOR ( 0 to 9 );
begin
  sample_synced(0 to 9) <= \^sample_synced\(0 to 9);
\sync_bits[0].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_56
     port map (
      Clk => Clk,
      D(0) => D(0),
      Q(0) => Q(7),
      p_84_out => p_84_out,
      sample_synced(0) => \^sample_synced\(0),
      sync_reset => sync_reset
    );
\sync_bits[1].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_57
     port map (
      Clk => Clk,
      Q(0) => Q(6),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]\(0),
      p_81_out => p_81_out,
      sample_synced(0) => \^sample_synced\(1),
      sync_reset => sync_reset
    );
\sync_bits[2].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_58
     port map (
      Clk => Clk,
      Dbg_Trig_In(0) => Dbg_Trig_In(0),
      Q(2) => Q(5),
      Q(1) => Q(2),
      Q(0) => Q(0),
      \Serial_Dbg_Intf.sample_synced_1_reg[8]\ => \Serial_Dbg_Intf.sample_synced_1_reg[8]\,
      \Serial_Dbg_Intf.trig_in_1_reg\(1) => \^sample_synced\(5),
      \Serial_Dbg_Intf.trig_in_1_reg\(0) => \^sample_synced\(8),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      p_78_out => p_78_out,
      sample_synced(0) => \^sample_synced\(2),
      sync_reset => sync_reset
    );
\sync_bits[3].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_59
     port map (
      Clk => Clk,
      Q(0) => Q(4),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(1),
      p_76_out => p_76_out,
      sample_synced(0) => \^sample_synced\(3),
      sync_reset => sync_reset
    );
\sync_bits[4].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_60
     port map (
      Clk => Clk,
      Q(0) => Q(3),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(0),
      p_73_out => p_73_out,
      sample_synced(0) => \^sample_synced\(4),
      sync_reset => sync_reset
    );
\sync_bits[5].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_61
     port map (
      Clk => Clk,
      Q(1 downto 0) => Q(2 downto 1),
      \Serial_Dbg_Intf.continue_from_brk_reg\(0) => \^sample_synced\(7),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_2\(0),
      p_13_out => p_13_out,
      sample_synced(0) => \^sample_synced\(5),
      sync_reset => sync_reset
    );
\sync_bits[6].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_62
     port map (
      Clk => Clk,
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_3\(0),
      p_66_out => p_66_out,
      sample_synced(0) => \^sample_synced\(6),
      sync_reset => sync_reset
    );
\sync_bits[7].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_63
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_Out(0) => Dbg_Trig_Ack_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(0) => Q(1),
      \Synchronize.use_sync_reset.sync_reg[2]_0\ => \Synchronize.use_sync_reset.sync_reg[2]\,
      sample_synced(0) => \^sample_synced\(7),
      sync_reset => sync_reset
    );
\sync_bits[8].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_64
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      sample_synced(0) => \^sample_synced\(8),
      sync_reset => sync_reset
    );
\sync_bits[9].sync_bit\: entity work.design_1_microblaze_1_1_mb_sync_bit_65
     port map (
      Clk => Clk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_4\(0),
      sample_synced(0) => \^sample_synced\(9),
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mux4_8 is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 31 );
    sel_Write_Mux_MSB : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mux4_8 : entity is "mux4_8";
end design_1_microblaze_1_1_mux4_8;

architecture STRUCTURE of design_1_microblaze_1_1_mux4_8 is
begin
\GEN4_LOOP[0].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1032\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(8),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(16),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(24),
      D(1) => D(15),
      D(0) => D(7),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[1].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1033\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(1),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(9),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(17),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[22]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(25),
      D(1) => D(14),
      D(0) => D(6),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[2].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1034\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(2),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(10),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(18),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[21]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(26),
      D(1) => D(13),
      D(0) => D(5),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[3].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1035\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(3),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(11),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(19),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[20]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(27),
      D(1) => D(12),
      D(0) => D(4),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[4].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1036\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(4),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(12),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(20),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[19]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(28),
      D(1) => D(11),
      D(0) => D(3),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[5].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1037\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(5),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(13),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(21),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[18]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(29),
      D(1) => D(10),
      D(0) => D(2),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[6].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1038\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(6),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(14),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(22),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[17]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(30),
      D(1) => D(9),
      D(0) => D(1),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\GEN4_LOOP[7].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1039\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(7),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(15),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(23),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[16]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(31),
      D(1) => D(8),
      D(0) => D(0),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_ALU is
  port (
    Valid_Req0 : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    carry_In : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    op2_C : in STD_LOGIC_VECTOR ( 25 downto 0 );
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    Shifted : in STD_LOGIC;
    S : in STD_LOGIC;
    Valid_Req_1st_Cycle_i_2 : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 5 downto 0 );
    EX_Op1 : in STD_LOGIC;
    \Using_FPGA.Native_I2\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 17 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_ALU : entity is "ALU";
end design_1_microblaze_1_1_ALU;

architecture STRUCTURE of design_1_microblaze_1_1_ALU is
  signal \^o\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[11].ALU_Bit_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[15].ALU_Bit_I1_n_0\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_10\ : STD_LOGIC;
  signal \^using_fpga.native_11\ : STD_LOGIC;
  signal \^using_fpga.native_12\ : STD_LOGIC;
  signal \^using_fpga.native_13\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_8\ : STD_LOGIC;
  signal alu_carry_1 : STD_LOGIC;
  signal alu_carry_10 : STD_LOGIC;
  signal alu_carry_11 : STD_LOGIC;
  signal alu_carry_12 : STD_LOGIC;
  signal alu_carry_13 : STD_LOGIC;
  signal alu_carry_14 : STD_LOGIC;
  signal alu_carry_15 : STD_LOGIC;
  signal alu_carry_16 : STD_LOGIC;
  signal alu_carry_17 : STD_LOGIC;
  signal alu_carry_18 : STD_LOGIC;
  signal alu_carry_19 : STD_LOGIC;
  signal alu_carry_2 : STD_LOGIC;
  signal alu_carry_20 : STD_LOGIC;
  signal alu_carry_21 : STD_LOGIC;
  signal alu_carry_22 : STD_LOGIC;
  signal alu_carry_23 : STD_LOGIC;
  signal alu_carry_24 : STD_LOGIC;
  signal alu_carry_25 : STD_LOGIC;
  signal alu_carry_26 : STD_LOGIC;
  signal alu_carry_27 : STD_LOGIC;
  signal alu_carry_28 : STD_LOGIC;
  signal alu_carry_29 : STD_LOGIC;
  signal alu_carry_3 : STD_LOGIC;
  signal alu_carry_30 : STD_LOGIC;
  signal alu_carry_31 : STD_LOGIC;
  signal alu_carry_4 : STD_LOGIC;
  signal alu_carry_5 : STD_LOGIC;
  signal alu_carry_6 : STD_LOGIC;
  signal alu_carry_7 : STD_LOGIC;
  signal alu_carry_8 : STD_LOGIC;
  signal alu_carry_9 : STD_LOGIC;
  signal alu_carry_in : STD_LOGIC;
  signal control_carry : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
begin
  O <= \^o\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_10\ <= \^using_fpga.native_10\;
  \Using_FPGA.Native_11\ <= \^using_fpga.native_11\;
  \Using_FPGA.Native_12\ <= \^using_fpga.native_12\;
  \Using_FPGA.Native_13\ <= \^using_fpga.native_13\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_8\ <= \^using_fpga.native_8\;
  lopt <= lopt_96;
  lopt_100 <= lopt_4;
  lopt_101 <= lopt_5;
  lopt_3 <= lopt_99;
  lopt_97 <= lopt_1;
  lopt_98 <= lopt_2;
\No_Carry_Decoding.CarryIn_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_933
     port map (
      CI => alu_carry_in,
      carry_In => carry_In,
      control_carry => control_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => \^lopt_2\,
      lopt_3 => \^lopt_3\,
      lopt_4 => \^lopt_4\,
      lopt_5 => \^lopt_5\,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
\No_Carry_Decoding.alu_carry_select_LUT\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized7\
     port map (
      carry_In => carry_In,
      control_carry => control_carry
    );
\Using_FPGA.ALL_Bits[0].ALU_Bit_I1\: entity work.\design_1_microblaze_1_1_ALU_Bit__parameterized2\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\,
      LO => alu_carry_31,
      S => S,
      Shifted => Shifted,
      Unsigned_Op => Unsigned_Op,
      \Using_FPGA.Native\ => LO,
      \Using_FPGA.Native_0\ => \^using_fpga.native_2\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_96,
      lopt_1 => lopt_97,
      lopt_2 => lopt_98,
      lopt_3 => lopt_99,
      lopt_4 => lopt_100,
      lopt_5 => lopt_101,
      op2_C(0) => op2_C(25)
    );
\Using_FPGA.ALL_Bits[10].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit
     port map (
      EX_CarryOut => alu_carry_22,
      LO => alu_carry_21,
      \Using_FPGA.Native\ => \^using_fpga.native_0\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => lopt_65,
      lopt_3 => lopt_70,
      op1(0) => op1(8),
      op2_C(0) => op2_C(15)
    );
\Using_FPGA.ALL_Bits[11].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_934
     port map (
      EX_CarryOut => alu_carry_21,
      LO => alu_carry_20,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_I2\ => \Using_FPGA.ALL_Bits[11].ALU_Bit_I1_n_0\,
      Valid_Req_1st_Cycle_i_2 => \^using_fpga.native_6\,
      Valid_Req_1st_Cycle_i_2_0 => \^using_fpga.native_7\,
      Valid_Req_1st_Cycle_i_2_1 => \^using_fpga.native_8\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_60,
      lopt_1 => lopt_61,
      lopt_2 => lopt_62,
      lopt_3 => lopt_69,
      op1(0) => op1(7),
      op2_C(0) => op2_C(14)
    );
\Using_FPGA.ALL_Bits[12].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_935
     port map (
      EX_CarryOut => alu_carry_20,
      LO => alu_carry_19,
      \Using_FPGA.Native\ => \^using_fpga.native_8\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_60,
      lopt_1 => lopt_61,
      lopt_10 => lopt_70,
      lopt_11 => lopt_71,
      lopt_2 => lopt_62,
      lopt_3 => lopt_63,
      lopt_4 => lopt_64,
      lopt_5 => lopt_65,
      lopt_6 => lopt_66,
      lopt_7 => lopt_67,
      lopt_8 => lopt_68,
      lopt_9 => lopt_69,
      op1(0) => op1(6),
      op2_C(0) => op2_C(13)
    );
\Using_FPGA.ALL_Bits[13].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_936
     port map (
      EX_CarryOut => alu_carry_19,
      LO => alu_carry_18,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_56,
      lopt_3 => lopt_59,
      op1(0) => op1(5),
      op2_C(0) => op2_C(12)
    );
\Using_FPGA.ALL_Bits[14].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_937
     port map (
      EX_CarryOut => alu_carry_18,
      LO => alu_carry_17,
      \Using_FPGA.Native\ => \^using_fpga.native_11\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_51,
      lopt_1 => lopt_52,
      lopt_2 => lopt_53,
      lopt_3 => lopt_58,
      op1(0) => op1(4),
      op2_C(0) => op2_C(11)
    );
\Using_FPGA.ALL_Bits[15].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_938
     port map (
      EX_CarryOut => alu_carry_17,
      LO => alu_carry_16,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_I2\ => \Using_FPGA.ALL_Bits[15].ALU_Bit_I1_n_0\,
      Valid_Req_1st_Cycle_i_2 => \^using_fpga.native_2\,
      Valid_Req_1st_Cycle_i_2_0 => \^using_fpga.native_3\,
      Valid_Req_1st_Cycle_i_2_1 => \^using_fpga.native_4\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_50,
      lopt_3 => lopt_57,
      op1(0) => op1(3),
      op2_C(0) => op2_C(10)
    );
\Using_FPGA.ALL_Bits[16].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_939
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\,
      EX_CarryOut => alu_carry_16,
      LO => alu_carry_15,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(15),
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_10 => lopt_58,
      lopt_11 => lopt_59,
      lopt_2 => lopt_50,
      lopt_3 => lopt_51,
      lopt_4 => lopt_52,
      lopt_5 => lopt_53,
      lopt_6 => lopt_54,
      lopt_7 => lopt_55,
      lopt_8 => lopt_56,
      lopt_9 => lopt_57,
      op2_C(0) => op2_C(9)
    );
\Using_FPGA.ALL_Bits[17].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_940
     port map (
      EX_CarryOut => alu_carry_15,
      LO => alu_carry_14,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(14),
      lopt => lopt_42,
      lopt_1 => lopt_43,
      lopt_2 => lopt_44,
      lopt_3 => lopt_47,
      op1(0) => op1(2),
      op2_C(0) => op2_C(8)
    );
\Using_FPGA.ALL_Bits[18].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_941
     port map (
      EX_CarryOut => alu_carry_14,
      LO => alu_carry_13,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(13),
      lopt => lopt_39,
      lopt_1 => lopt_40,
      lopt_2 => lopt_41,
      lopt_3 => lopt_46,
      op1(0) => op1(1),
      op2_C(0) => op2_C(7)
    );
\Using_FPGA.ALL_Bits[19].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_942
     port map (
      EX_CarryOut => alu_carry_13,
      LO => alu_carry_12,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(12),
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_2 => lopt_38,
      lopt_3 => lopt_45,
      op1(0) => op1(0),
      op2_C(0) => op2_C(6)
    );
\Using_FPGA.ALL_Bits[1].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_943
     port map (
      EX_CarryOut => alu_carry_31,
      LO => alu_carry_30,
      \Using_FPGA.Native\ => \^using_fpga.native_7\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_90,
      lopt_1 => lopt_91,
      lopt_2 => lopt_92,
      lopt_3 => lopt_95,
      op1(0) => op1(17),
      op2_C(0) => op2_C(24)
    );
\Using_FPGA.ALL_Bits[20].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_944
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\,
      EX_CarryOut => alu_carry_12,
      LO => alu_carry_11,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(11),
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_10 => lopt_46,
      lopt_11 => lopt_47,
      lopt_2 => lopt_38,
      lopt_3 => lopt_39,
      lopt_4 => lopt_40,
      lopt_5 => lopt_41,
      lopt_6 => lopt_42,
      lopt_7 => lopt_43,
      lopt_8 => lopt_44,
      lopt_9 => lopt_45,
      op2_C(0) => op2_C(5)
    );
\Using_FPGA.ALL_Bits[21].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_945
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\,
      EX_CarryOut => alu_carry_11,
      LO => alu_carry_10,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(10),
      lopt => lopt_30,
      lopt_1 => lopt_31,
      lopt_2 => lopt_32,
      lopt_3 => lopt_35,
      op2_C(0) => op2_C(4)
    );
\Using_FPGA.ALL_Bits[22].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_946
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\,
      EX_CarryOut => alu_carry_10,
      LO => alu_carry_9,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(9),
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_29,
      lopt_3 => lopt_34,
      op2_C(0) => op2_C(3)
    );
\Using_FPGA.ALL_Bits[23].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_947
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\,
      EX_CarryOut => alu_carry_9,
      LO => alu_carry_8,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(8),
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => lopt_26,
      lopt_3 => lopt_33,
      op2_C(0) => op2_C(2)
    );
\Using_FPGA.ALL_Bits[24].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_948
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\,
      EX_CarryOut => alu_carry_8,
      EX_Op2(0) => EX_Op2(5),
      LO => alu_carry_7,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(7),
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => lopt_26,
      lopt_3 => lopt_27,
      lopt_4 => lopt_28,
      lopt_5 => lopt_29,
      lopt_6 => lopt_30,
      lopt_7 => lopt_31,
      lopt_8 => lopt_32,
      lopt_9 => lopt_33
    );
\Using_FPGA.ALL_Bits[25].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_949
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\,
      EX_CarryOut => alu_carry_7,
      LO => alu_carry_6,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(6),
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      lopt_3 => lopt_23,
      op2_C(0) => op2_C(1)
    );
\Using_FPGA.ALL_Bits[26].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_950
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\,
      EX_CarryOut => alu_carry_6,
      EX_Op2(0) => EX_Op2(4),
      LO => alu_carry_5,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(5),
      lopt => lopt_15,
      lopt_1 => lopt_16,
      lopt_2 => lopt_17,
      lopt_3 => lopt_22
    );
\Using_FPGA.ALL_Bits[27].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_951
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\,
      EX_CarryOut => alu_carry_5,
      LO => alu_carry_4,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(4),
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_14,
      lopt_3 => lopt_21,
      op2_C(0) => op2_C(0)
    );
\Using_FPGA.ALL_Bits[28].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_952
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\,
      EX_CarryOut => alu_carry_4,
      EX_Op2(0) => EX_Op2(3),
      LO => alu_carry_3,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(3),
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_10 => lopt_22,
      lopt_11 => lopt_23,
      lopt_2 => lopt_14,
      lopt_3 => lopt_15,
      lopt_4 => lopt_16,
      lopt_5 => lopt_17,
      lopt_6 => lopt_18,
      lopt_7 => lopt_19,
      lopt_8 => lopt_20,
      lopt_9 => lopt_21
    );
\Using_FPGA.ALL_Bits[29].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_953
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\,
      EX_CarryOut => alu_carry_3,
      EX_Op2(0) => EX_Op2(2),
      LO => alu_carry_2,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(2),
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      lopt_3 => lopt_11
    );
\Using_FPGA.ALL_Bits[2].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_954
     port map (
      EX_CarryOut => alu_carry_30,
      LO => alu_carry_29,
      \Using_FPGA.Native\ => \^using_fpga.native_4\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_87,
      lopt_1 => lopt_88,
      lopt_2 => lopt_89,
      lopt_3 => lopt_94,
      op1(0) => op1(16),
      op2_C(0) => op2_C(23)
    );
\Using_FPGA.ALL_Bits[30].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_955
     port map (
      EX_CarryOut => alu_carry_2,
      EX_Op2(0) => EX_Op2(1),
      LO => alu_carry_1,
      \Using_FPGA.Native_I2\ => \Using_FPGA.Native_I2\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(1),
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\,
      lopt_3 => lopt_10
    );
\Using_FPGA.ALL_Bits[31].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_956
     port map (
      EX_CarryIn => alu_carry_in,
      EX_CarryOut => alu_carry_1,
      EX_Op1 => EX_Op1,
      EX_Op2(0) => EX_Op2(0),
      alu_Op(0 to 1) => alu_Op(0 to 1),
      \in\(0) => \in\(0),
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      lopt_3 => lopt_9
    );
\Using_FPGA.ALL_Bits[3].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_957
     port map (
      EX_CarryOut => alu_carry_29,
      LO => alu_carry_28,
      \Using_FPGA.Native\ => \^using_fpga.native_6\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_2 => lopt_86,
      lopt_3 => lopt_93,
      op1(0) => op1(15),
      op2_C(0) => op2_C(22)
    );
\Using_FPGA.ALL_Bits[4].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_958
     port map (
      EX_CarryOut => alu_carry_28,
      LO => alu_carry_27,
      \Using_FPGA.Native\ => \^using_fpga.native_12\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_10 => lopt_94,
      lopt_11 => lopt_95,
      lopt_2 => lopt_86,
      lopt_3 => lopt_87,
      lopt_4 => lopt_88,
      lopt_5 => lopt_89,
      lopt_6 => lopt_90,
      lopt_7 => lopt_91,
      lopt_8 => lopt_92,
      lopt_9 => lopt_93,
      op1(0) => op1(14),
      op2_C(0) => op2_C(21)
    );
\Using_FPGA.ALL_Bits[5].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_959
     port map (
      EX_CarryOut => alu_carry_27,
      LO => alu_carry_26,
      \Using_FPGA.Native\ => \^using_fpga.native_13\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_78,
      lopt_1 => lopt_79,
      lopt_2 => lopt_80,
      lopt_3 => lopt_83,
      op1(0) => op1(13),
      op2_C(0) => op2_C(20)
    );
\Using_FPGA.ALL_Bits[6].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_960
     port map (
      EX_CarryOut => alu_carry_26,
      LO => alu_carry_25,
      O => \^o\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_75,
      lopt_1 => lopt_76,
      lopt_2 => lopt_77,
      lopt_3 => lopt_82,
      op1(0) => op1(12),
      op2_C(0) => op2_C(19)
    );
\Using_FPGA.ALL_Bits[7].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_961
     port map (
      EX_CarryOut => alu_carry_25,
      LO => alu_carry_24,
      \Using_FPGA.Native\ => \^using_fpga.native_3\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_2 => lopt_74,
      lopt_3 => lopt_81,
      op1(0) => op1(11),
      op2_C(0) => op2_C(18)
    );
\Using_FPGA.ALL_Bits[8].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_962
     port map (
      EX_CarryOut => alu_carry_24,
      LO => alu_carry_23,
      \Using_FPGA.Native\ => \^using_fpga.native_10\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_10 => lopt_82,
      lopt_11 => lopt_83,
      lopt_2 => lopt_74,
      lopt_3 => lopt_75,
      lopt_4 => lopt_76,
      lopt_5 => lopt_77,
      lopt_6 => lopt_78,
      lopt_7 => lopt_79,
      lopt_8 => lopt_80,
      lopt_9 => lopt_81,
      op1(0) => op1(10),
      op2_C(0) => op2_C(17)
    );
\Using_FPGA.ALL_Bits[9].ALU_Bit_I1\: entity work.design_1_microblaze_1_1_ALU_Bit_963
     port map (
      EX_CarryIn => alu_carry_22,
      EX_CarryOut => alu_carry_23,
      O => \^o\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      Valid_Req0 => Valid_Req0,
      Valid_Req_1st_Cycle_i_2 => Valid_Req_1st_Cycle_i_2,
      Valid_Req_1st_Cycle_i_2_0 => \^using_fpga.native_10\,
      Valid_Req_1st_Cycle_i_2_1 => \^using_fpga.native_11\,
      Valid_Req_1st_Cycle_i_2_2 => \^using_fpga.native_12\,
      Valid_Req_1st_Cycle_i_2_3 => \^using_fpga.native_13\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      lopt => lopt_66,
      lopt_1 => lopt_67,
      lopt_2 => lopt_68,
      lopt_3 => lopt_71,
      op1(0) => op1(9),
      op2_C(0) => op2_C(16),
      valid_req_XX_reg => \Using_FPGA.ALL_Bits[11].ALU_Bit_I1_n_0\,
      valid_req_XX_reg_0 => \Using_FPGA.ALL_Bits[15].ALU_Bit_I1_n_0\,
      valid_req_XX_reg_1 => \^using_fpga.native\,
      valid_req_XX_reg_2 => \^using_fpga.native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Byte_Doublet_Handle is
  port (
    \in\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    D : out STD_LOGIC_VECTOR ( 25 downto 0 );
    O : out STD_LOGIC;
    byte_i_reg : out STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\ : in STD_LOGIC;
    isbyte : in STD_LOGIC;
    isdoublet : in STD_LOGIC;
    \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Byte_Doublet_Handle : entity is "Byte_Doublet_Handle";
end design_1_microblaze_1_1_Byte_Doublet_Handle;

architecture STRUCTURE of design_1_microblaze_1_1_Byte_Doublet_Handle is
  signal byte_selects_0 : STD_LOGIC;
  signal byte_selects_1 : STD_LOGIC;
  signal low_addr_i_0 : STD_LOGIC;
  signal low_addr_i_1 : STD_LOGIC;
  signal sel_Write_Mux_MSB : STD_LOGIC_VECTOR ( 1 downto 0 );
begin
\Not_Using_Long.BYTE_0_1_I\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized10\
     port map (
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1,
      \in\(1 downto 0) => \in\(1 downto 0),
      isbyte => isbyte,
      isdoublet => isdoublet
    );
\Not_Using_Long.BYTE_2_3_I\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized12\
     port map (
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1,
      \in\(1 downto 0) => \in\(3 downto 2),
      isbyte => isbyte,
      isdoublet => isdoublet
    );
\Not_Using_Long.LOW_ADDR_OUT_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized14\
     port map (
      D(1 downto 0) => D(25 downto 24),
      isbyte => isbyte,
      isdoublet => isdoublet,
      low_addr_i_0 => low_addr_i_0,
      low_addr_i_1 => low_addr_i_1
    );
\Not_Using_Long.byte_selects_i_INST\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized8\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\,
      \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[2]_0\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\,
      byte_selects_0 => byte_selects_0,
      byte_selects_1 => byte_selects_1,
      op1(1 downto 0) => op1(1 downto 0)
    );
\Not_Using_Long.low_addr_i_INST\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized6\
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\,
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\ => \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\,
      low_addr_i_0 => low_addr_i_0,
      low_addr_i_1 => low_addr_i_1,
      op1(1 downto 0) => op1(1 downto 0)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.EXT_DATA_WRITE_MUX_MSB_I\: entity work.design_1_microblaze_1_1_mux4_8
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0 to 31) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0 to 31),
      D(15 downto 0) => D(23 downto 8),
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.GEN4_LOOP[0].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1028\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(16),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(20),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(24),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[15]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(28),
      D(1) => D(7),
      D(0) => D(3),
      isbyte => isbyte
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.GEN4_LOOP[1].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1029\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(17),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(21),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(25),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[14]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(29),
      D(1) => D(6),
      D(0) => D(2),
      isbyte => isbyte
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.GEN4_LOOP[2].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1030\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(18),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(22),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(26),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[13]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(30),
      D(1) => D(5),
      D(0) => D(1),
      isbyte => isbyte
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.GEN4_LOOP[3].BYTESTEER_LUT6\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized4_1031\
     port map (
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(3) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(19),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(2) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(23),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(1) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(27),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[12]\(0) => \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(31),
      D(1) => D(4),
      D(0) => D(0),
      isbyte => isbyte
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.READ_SEL_LEFT_I\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized9\
     port map (
      O => O,
      byte_selects_1 => byte_selects_1,
      isbyte => isbyte,
      isdoublet => isdoublet
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.READ_SEL_RIGHT_I\: entity work.\design_1_microblaze_1_1_MB_LUT2__parameterized2\
     port map (
      byte_i_reg => byte_i_reg,
      byte_selects_0 => byte_selects_0,
      isbyte => isbyte
    );
\Use_Dynamic_Bus_Sizing.Not_Using_Reverse_Mem_Instr_No_Long.WRITE_MSB_SEL_I\: entity work.\design_1_microblaze_1_1_MB_LUT6_2__parameterized16\
     port map (
      isbyte => isbyte,
      isdoublet => isdoublet,
      sel_Write_Mux_MSB(1 downto 0) => sel_Write_Mux_MSB(1 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Debug is
  port (
    dbg_brki_hit : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 36 downto 0 );
    force_stop_cmd_i : out STD_LOGIC;
    force_stop_cmd_hold : out STD_LOGIC;
    read_register_MSR_1_reg_0 : out STD_LOGIC;
    register_write : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Area_Debug_Control.mb_halted_i_reg_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Sleep_Out : out STD_LOGIC;
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Reg_Write : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]_0\ : out STD_LOGIC;
    Sext : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Sleep : in STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg_0\ : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    p_2_out : in STD_LOGIC;
    reg_Write_dbg : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    use_Imm_Reg : in STD_LOGIC;
    delay_slot_instr_reg_0 : in STD_LOGIC;
    branch_with_delay : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    \Using_BitField.mem_Rd_reg[9]\ : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    \Area_Debug_Control.normal_stop_cmd_hold_reg_0\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    Not_Barrel_Op : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_1 : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Shift : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Valid_Instr_i : in STD_LOGIC;
    \Serial_Dbg_Intf.status_reg_reg[25]_0\ : in STD_LOGIC_VECTOR ( 28 downto 0 );
    PC_EX_i : in STD_LOGIC_VECTOR ( 26 downto 0 );
    has_inhibit_EX : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    of_Pause : in STD_LOGIC;
    S80_out : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Sleep_Decode : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    \data_rd_reg_reg[24]_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \Serial_Dbg_Intf.status_reg_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    jump : in STD_LOGIC;
    inHibit_EX : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Debug : entity is "Debug";
end design_1_microblaze_1_1_Debug;

architecture STRUCTURE of design_1_microblaze_1_1_Debug is
  signal A1 : STD_LOGIC;
  signal A2 : STD_LOGIC;
  signal A3 : STD_LOGIC;
  signal \Area_Debug_Control.Dbg_Inhibit_EX_FDRSE_n_4\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_CPU_FDRSE_n_1\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_10\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_11\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_12\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_13\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_14\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_15\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_16\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_17\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_18\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_19\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_20\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_21\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_22\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_23\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_24\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_25\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_26\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_27\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_28\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_29\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_3\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_30\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_31\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_32\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_33\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_34\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_35\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_4\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_5\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_7\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_8\ : STD_LOGIC;
  signal \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_9\ : STD_LOGIC;
  signal \Area_Debug_Control.dbg_hit[0]_i_1_n_0\ : STD_LOGIC;
  signal \Area_Debug_Control.dbg_stop_Detected_reg_n_0\ : STD_LOGIC;
  signal \^area_debug_control.mb_halted_i_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Area_Debug_Control.normal_stop_cmd_hold_i_1_n_0\ : STD_LOGIC;
  signal \Area_Debug_Control.saved_reset_mode_sleep_1_i_1_n_0\ : STD_LOGIC;
  signal Command_Reg_En : STD_LOGIC;
  signal Control_Reg_En : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_10_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_17_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_18_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_19_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_1_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_20_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_21_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_22_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_23_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_24_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_25_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_26_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_27_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_28_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_29_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_33_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_34_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_35_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_3_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_4_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_6_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_7_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_8_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_9_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal Full_32_bit : STD_LOGIC;
  signal Full_32_bit_1 : STD_LOGIC;
  signal Instr_Insert_Reg_En : STD_LOGIC;
  signal Instr_Insert_Reg_En_1 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 36 downto 0 );
  signal New_Dbg_Instr2_TCK : STD_LOGIC;
  signal New_Dbg_Instr_TCK : STD_LOGIC;
  signal Q0_out : STD_LOGIC;
  signal Q11_in : STD_LOGIC;
  signal Q2_in : STD_LOGIC;
  signal Q2_out : STD_LOGIC;
  signal Q3_in : STD_LOGIC;
  signal Q3_out : STD_LOGIC;
  signal Q4_out : STD_LOGIC;
  signal Q6_out : STD_LOGIC;
  signal Q_0 : STD_LOGIC;
  signal S_1 : STD_LOGIC;
  signal \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.SRL16E_4_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.continue_from_brk_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.dbg_wakeup_i_i_3_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_15\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_16\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_stop_CPU_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.unchanged_i_1_n_0\ : STD_LOGIC;
  signal \^sleep_out\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\ : STD_LOGIC;
  signal capture_1 : STD_LOGIC;
  signal command_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal command_reg_clear : STD_LOGIC;
  signal command_reg_clear_i_1_n_0 : STD_LOGIC;
  signal command_reg_rst22_out : STD_LOGIC;
  signal config_with_scan_reset : STD_LOGIC;
  signal continue_from_brk_TClk : STD_LOGIC;
  signal continue_from_brk_rst23_out : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[30]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[31]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[32]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal data_read_reg : STD_LOGIC_VECTOR ( 0 to 32 );
  signal \^dbg_brki_hit\ : STD_LOGIC;
  signal dbg_brki_hit_synced : STD_LOGIC;
  signal dbg_continue_i_i_2_n_0 : STD_LOGIC;
  signal dbg_halt_reset_mode_i_1_n_0 : STD_LOGIC;
  signal dbg_halt_reset_mode_reg_n_0 : STD_LOGIC;
  signal dbg_hit : STD_LOGIC_VECTOR ( 0 to 0 );
  signal dbg_stop_1 : STD_LOGIC;
  signal executing_i_1_n_0 : STD_LOGIC;
  signal force_stop_TClk : STD_LOGIC;
  signal force_stop_cmd_1 : STD_LOGIC;
  signal \^force_stop_cmd_hold\ : STD_LOGIC;
  signal \^force_stop_cmd_i\ : STD_LOGIC;
  signal force_stop_cmd_rst19_out : STD_LOGIC;
  signal force_stop_overrun : STD_LOGIC;
  signal instr_rd_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal instr_read_reg : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mb_halted_1 : STD_LOGIC;
  signal no_sleeping1_out : STD_LOGIC;
  signal normal_stop_TClk : STD_LOGIC;
  signal normal_stop_cmd_hold : STD_LOGIC;
  signal normal_stop_cmd_i : STD_LOGIC;
  signal normal_stop_cmd_rst18_out : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_0_in61_in : STD_LOGIC;
  signal p_0_in_2 : STD_LOGIC;
  signal p_13_out : STD_LOGIC;
  signal p_1_in : STD_LOGIC;
  signal p_34_out : STD_LOGIC;
  signal p_66_out : STD_LOGIC;
  signal p_73_out : STD_LOGIC;
  signal p_76_out : STD_LOGIC;
  signal p_78_out : STD_LOGIC;
  signal p_81_out : STD_LOGIC;
  signal p_84_out : STD_LOGIC;
  signal p_87_out : STD_LOGIC;
  signal pause_synced : STD_LOGIC;
  signal pc_brk_1 : STD_LOGIC;
  signal read_register_MSR : STD_LOGIC;
  signal \^read_register_msr_1_reg_0\ : STD_LOGIC;
  signal read_register_PC : STD_LOGIC;
  signal read_register_PC_1_reg_n_0 : STD_LOGIC;
  signal \^register_write\ : STD_LOGIC;
  signal running_clock : STD_LOGIC;
  signal running_clock_rst10_out : STD_LOGIC;
  signal running_clock_synced : STD_LOGIC;
  signal sample_synced : STD_LOGIC_VECTOR ( 0 to 9 );
  signal saved_reset_mode_dbg_halt : STD_LOGIC;
  signal saved_reset_mode_dbg_halt_i_1_n_0 : STD_LOGIC;
  signal saved_reset_mode_sleep : STD_LOGIC;
  signal saved_reset_mode_sleep_1 : STD_LOGIC;
  signal saved_reset_mode_sleep_i_1_n_0 : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \sel0__0\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal single_Step_N : STD_LOGIC;
  signal single_Step_N_i_1_n_0 : STD_LOGIC;
  signal single_Step_TClk : STD_LOGIC;
  signal single_step_N_1 : STD_LOGIC;
  signal single_step_count : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \single_step_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \single_step_count[1]_i_1_n_0\ : STD_LOGIC;
  signal sleep_reset_mode_i_1_n_0 : STD_LOGIC;
  signal sleep_reset_mode_i_2_n_0 : STD_LOGIC;
  signal sleep_synced : STD_LOGIC;
  signal start_dbg_exec_reg_n_0 : STD_LOGIC;
  signal start_single_cmd : STD_LOGIC;
  signal start_single_step_i_1_n_0 : STD_LOGIC;
  signal start_single_step_reg_n_0 : STD_LOGIC;
  signal start_single_step_rst20_out : STD_LOGIC;
  signal step_continue : STD_LOGIC;
  signal step_continue_1 : STD_LOGIC;
  signal sync : STD_LOGIC;
  signal sync_trig_ack_in_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_1 : STD_LOGIC;
  signal tdo_config_word1_0 : STD_LOGIC;
  signal trig_ack_in_0_synced : STD_LOGIC;
  signal trig_ack_in_0_synced_1 : STD_LOGIC;
  signal trig_out_0_synced : STD_LOGIC;
  signal trig_out_0_synced_1 : STD_LOGIC;
  signal unchanged : STD_LOGIC;
  signal wb_read_imm_reg_1_i : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Area_Debug_Control.saved_reset_mode_sleep_1_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_18 : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_21 : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_23 : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_7 : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.dbg_wakeup_i_i_3\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[0]_i_1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[1]_i_1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[2]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[3]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[6]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[7]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[7]_i_2\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of saved_reset_mode_dbg_halt_i_1 : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of saved_reset_mode_sleep_i_1 : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of sleep_reset_mode_i_2 : label is "soft_lutpair47";
begin
  \Area_Debug_Control.mb_halted_i_reg_0\(0) <= \^area_debug_control.mb_halted_i_reg_0\(0);
  D(0) <= \^d\(0);
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
  Dbg_Trig_Ack_Out(1 downto 0) <= \^dbg_trig_ack_out\(1 downto 0);
  Dbg_Trig_In(1 downto 0) <= \^dbg_trig_in\(1 downto 0);
  LOCKSTEP_Master_Out(36 downto 0) <= \^lockstep_master_out\(36 downto 0);
  Sleep_Out <= \^sleep_out\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  dbg_brki_hit <= \^dbg_brki_hit\;
  force_stop_cmd_hold <= \^force_stop_cmd_hold\;
  force_stop_cmd_i <= \^force_stop_cmd_i\;
  read_register_MSR_1_reg_0 <= \^read_register_msr_1_reg_0\;
  register_write <= \^register_write\;
\Area_Debug_Control.Dbg_Inhibit_EX_FDRSE\: entity work.design_1_microblaze_1_1_MB_FDRSE
     port map (
      Clk => Clk,
      Not_Barrel_Op => Not_Barrel_Op,
      Q(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      Reg_Write => Reg_Write,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      SR(0) => SR(0),
      S_1 => S_1,
      Sext => Sext,
      \Use_Async_Reset.sync_reset_reg\ => \Area_Debug_Control.Dbg_Inhibit_EX_FDRSE_n_4\,
      \Using_BitField.mem_Rd_reg[9]\ => \Using_BitField.mem_Rd_reg[9]\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => dbg_halt_reset_mode_reg_n_0,
      \Using_FPGA.Native_3\ => start_single_step_reg_n_0,
      \Using_FPGA.Native_4\ => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      \Using_FPGA.Native_5\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_34\,
      \Using_FPGA.Native_6\ => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\,
      \Using_FPGA.Native_7\(0) => \Using_FPGA.Native_5\(0),
      \Using_FPGA.Native_8\ => start_dbg_exec_reg_n_0,
      ex_Valid => ex_Valid,
      saved_reset_mode_sleep => saved_reset_mode_sleep,
      sext8 => sext8,
      sync_reset => sync_reset
    );
\Area_Debug_Control.Stop_CPU_FDRSE\: entity work.design_1_microblaze_1_1_MB_FDRSE_25
     port map (
      \Area_Debug_Control.dbg_stop_Detected_reg\ => \Area_Debug_Control.dbg_stop_Detected_reg_n_0\,
      Clk => Clk,
      Dbg_Stop => Dbg_Stop,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      S_1 => S_1,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Area_Debug_Control.Stop_CPU_FDRSE_n_1\,
      \Using_FPGA.Native_2\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_34\,
      \Using_FPGA.Native_3\ => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\,
      \Using_FPGA.Native_4\ => \Area_Debug_Control.Dbg_Inhibit_EX_FDRSE_n_4\,
      \Using_FPGA.Native_5\ => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      dbg_stop_1 => dbg_stop_1,
      sync_reset => sync_reset,
      trig_out_0_synced => trig_out_0_synced,
      trig_out_0_synced_1 => trig_out_0_synced_1
    );
\Area_Debug_Control.Stop_Instr_Fetch_FDRSE\: entity work.design_1_microblaze_1_1_MB_FDRSE_26
     port map (
      \Area_Debug_Control.force_stop_cmd_1_reg\ => \^force_stop_cmd_hold\,
      \Area_Debug_Control.force_stop_cmd_1_reg_0\ => \^force_stop_cmd_i\,
      \Area_Debug_Control.force_stop_cmd_hold_reg\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_3\,
      \Area_Debug_Control.normal_stop_cmd_hold_reg\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_5\,
      Clk => Clk,
      D(0) => \data_rd_reg_reg_n_0_[32]\,
      Dbg_Clean_Stop_reg => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_34\,
      PC_EX_i(26 downto 0) => PC_EX_i(26 downto 0),
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      S_1 => S_1,
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_35\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Use_Async_Reset.sync_reset_reg_0\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_4\,
      \Using_FPGA.Native_0\ => \^lockstep_master_out\(34),
      \Using_FPGA.Native_1\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_7\,
      \Using_FPGA.Native_10\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_16\,
      \Using_FPGA.Native_11\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_17\,
      \Using_FPGA.Native_12\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_18\,
      \Using_FPGA.Native_13\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_19\,
      \Using_FPGA.Native_14\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_20\,
      \Using_FPGA.Native_15\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_21\,
      \Using_FPGA.Native_16\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_22\,
      \Using_FPGA.Native_17\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_23\,
      \Using_FPGA.Native_18\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_24\,
      \Using_FPGA.Native_19\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_25\,
      \Using_FPGA.Native_2\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_8\,
      \Using_FPGA.Native_20\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_26\,
      \Using_FPGA.Native_21\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_27\,
      \Using_FPGA.Native_22\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_28\,
      \Using_FPGA.Native_23\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_29\,
      \Using_FPGA.Native_24\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_30\,
      \Using_FPGA.Native_25\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_31\,
      \Using_FPGA.Native_26\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_32\,
      \Using_FPGA.Native_27\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_33\,
      \Using_FPGA.Native_28\ => \Area_Debug_Control.normal_stop_cmd_hold_reg_0\,
      \Using_FPGA.Native_29\ => \Area_Debug_Control.dbg_stop_Detected_reg_n_0\,
      \Using_FPGA.Native_3\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_9\,
      \Using_FPGA.Native_30\ => dbg_halt_reset_mode_reg_n_0,
      \Using_FPGA.Native_31\ => \^sleep_out\,
      \Using_FPGA.Native_32\ => \Area_Debug_Control.Dbg_Inhibit_EX_FDRSE_n_4\,
      \Using_FPGA.Native_33\ => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\,
      \Using_FPGA.Native_34\ => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      \Using_FPGA.Native_4\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_10\,
      \Using_FPGA.Native_5\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_11\,
      \Using_FPGA.Native_6\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_12\,
      \Using_FPGA.Native_7\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_13\,
      \Using_FPGA.Native_8\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_14\,
      \Using_FPGA.Native_9\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_15\,
      Valid_Instr_i => Valid_Instr_i,
      \data_rd_reg_reg[0]\ => \^read_register_msr_1_reg_0\,
      \data_rd_reg_reg[0]_0\ => \^register_write\,
      \data_rd_reg_reg[0]_1\(26 downto 0) => \Serial_Dbg_Intf.status_reg_reg[25]_0\(26 downto 0),
      \data_rd_reg_reg[31]\ => read_register_PC_1_reg_n_0,
      \data_rd_reg_reg[32]\ => \^lockstep_master_out\(35),
      \data_rd_reg_reg[32]_0\ => \^using_fpga.native_0\,
      dbg_clean_stop => dbg_clean_stop,
      normal_stop_cmd_hold => normal_stop_cmd_hold,
      normal_stop_cmd_i => normal_stop_cmd_i,
      read_register_PC_1_reg => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      saved_reset_mode_dbg_halt => saved_reset_mode_dbg_halt,
      saved_reset_mode_sleep => saved_reset_mode_sleep,
      saved_reset_mode_sleep_1 => saved_reset_mode_sleep_1,
      sync_reset => sync_reset
    );
\Area_Debug_Control.dbg_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.dbg_brki_hit_reg_0\,
      Q => \^dbg_brki_hit\,
      R => sync_reset
    );
\Area_Debug_Control.dbg_hit[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A3A0"
    )
        port map (
      I0 => single_step_N_1,
      I1 => step_continue_1,
      I2 => pc_brk_1,
      I3 => dbg_hit(0),
      O => \Area_Debug_Control.dbg_hit[0]_i_1_n_0\
    );
\Area_Debug_Control.dbg_hit_i_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\,
      Q => pc_brk_1,
      R => sync_reset
    );
\Area_Debug_Control.dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.dbg_hit[0]_i_1_n_0\,
      Q => dbg_hit(0),
      R => sync_reset
    );
\Area_Debug_Control.dbg_stop_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Dbg_Stop,
      Q => dbg_stop_1,
      R => sync_reset
    );
\Area_Debug_Control.dbg_stop_Detected_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.Stop_CPU_FDRSE_n_1\,
      Q => \Area_Debug_Control.dbg_stop_Detected_reg_n_0\,
      R => sync_reset
    );
\Area_Debug_Control.force_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_3\,
      Q => force_stop_cmd_1,
      R => sync_reset
    );
\Area_Debug_Control.force_stop_cmd_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_2_out,
      Q => \^force_stop_cmd_hold\,
      R => sync_reset
    );
\Area_Debug_Control.force_stop_overrun_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => force_stop_cmd_1,
      I1 => \^force_stop_cmd_i\,
      I2 => \^force_stop_cmd_hold\,
      O => p_34_out
    );
\Area_Debug_Control.force_stop_overrun_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_34_out,
      Q => force_stop_overrun,
      R => sync_reset
    );
\Area_Debug_Control.mb_halted_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_4\,
      Q => \^area_debug_control.mb_halted_i_reg_0\(0),
      R => '0'
    );
\Area_Debug_Control.normal_stop_cmd_hold_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEE0000000E"
    )
        port map (
      I0 => normal_stop_cmd_i,
      I1 => normal_stop_cmd_hold,
      I2 => \^force_stop_cmd_hold\,
      I3 => \^force_stop_cmd_i\,
      I4 => dbg_clean_stop,
      I5 => \Area_Debug_Control.normal_stop_cmd_hold_reg_0\,
      O => \Area_Debug_Control.normal_stop_cmd_hold_i_1_n_0\
    );
\Area_Debug_Control.normal_stop_cmd_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.normal_stop_cmd_hold_i_1_n_0\,
      Q => normal_stop_cmd_hold,
      R => sync_reset
    );
\Area_Debug_Control.saved_reset_mode_sleep_1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => sync_reset,
      I3 => saved_reset_mode_sleep,
      O => \Area_Debug_Control.saved_reset_mode_sleep_1_i_1_n_0\
    );
\Area_Debug_Control.saved_reset_mode_sleep_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.saved_reset_mode_sleep_1_i_1_n_0\,
      Q => saved_reset_mode_sleep_1,
      R => '0'
    );
\Area_Debug_Control.single_step_N_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => single_Step_N,
      Q => single_step_N_1,
      R => sync_reset
    );
\Area_Debug_Control.step_continue_1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I1 => start_single_step_reg_n_0,
      O => step_continue
    );
\Area_Debug_Control.step_continue_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => step_continue,
      Q => step_continue_1,
      R => sync_reset
    );
\Area_Debug_Control.trig_ack_out_0_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_1,
      Q => \^dbg_trig_ack_out\(1),
      R => sync_reset
    );
\Area_Debug_Control.trig_out_0_synced_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_out_0_synced,
      Q => trig_out_0_synced_1,
      R => sync_reset
    );
\Area_Optimized.register_write_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => reg_Write_dbg,
      Q => \^register_write\,
      R => sync_reset
    );
\Area_Optimized.wb_read_imm_reg_1_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun,
      D => use_Imm_Reg,
      Q => wb_read_imm_reg_1_i,
      R => sync_reset
    );
Dbg_TDO_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFBEDB9A"
    )
        port map (
      I0 => \sel0__0\(1),
      I1 => sel0(0),
      I2 => Dbg_TDO_INST_0_i_7_n_0,
      I3 => Dbg_TDO_INST_0_i_8_n_0,
      I4 => Dbg_TDO_INST_0_i_9_n_0,
      I5 => Dbg_TDO_INST_0_i_10_n_0,
      O => Dbg_TDO_INST_0_i_1_n_0
    );
Dbg_TDO_INST_0_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFBFFFBFFFBFFFF"
    )
        port map (
      I0 => Dbg_TDO_1,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(7),
      I3 => \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2_n_0\,
      I4 => Dbg_TDO_INST_0_i_29_n_0,
      I5 => data_read_reg(0),
      O => Dbg_TDO_INST_0_i_10_n_0
    );
Dbg_TDO_INST_0_i_16: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(2),
      O => Dbg_Reg_En_1_sn_1
    );
Dbg_TDO_INST_0_i_17: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2B2B2B2828282B28"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_33_n_0,
      I1 => A1,
      I2 => A2,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I5 => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\,
      O => Dbg_TDO_INST_0_i_17_n_0
    );
Dbg_TDO_INST_0_i_18: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EB28"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_34_n_0,
      I1 => A1,
      I2 => A2,
      I3 => Dbg_TDO_INST_0_i_35_n_0,
      O => Dbg_TDO_INST_0_i_18_n_0
    );
Dbg_TDO_INST_0_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(13),
      I1 => data_read_reg(14),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(15),
      I5 => data_read_reg(16),
      O => Dbg_TDO_INST_0_i_19_n_0
    );
Dbg_TDO_INST_0_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(9),
      I1 => data_read_reg(10),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(11),
      I5 => data_read_reg(12),
      O => Dbg_TDO_INST_0_i_20_n_0
    );
Dbg_TDO_INST_0_i_21: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA9"
    )
        port map (
      I0 => A3,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A2,
      O => Dbg_TDO_INST_0_i_21_n_0
    );
Dbg_TDO_INST_0_i_22: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(5),
      I1 => data_read_reg(6),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(7),
      I5 => data_read_reg(8),
      O => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_23: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A9"
    )
        port map (
      I0 => A2,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A1,
      O => Dbg_TDO_INST_0_i_23_n_0
    );
Dbg_TDO_INST_0_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(1),
      I1 => data_read_reg(2),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(3),
      I5 => data_read_reg(4),
      O => Dbg_TDO_INST_0_i_24_n_0
    );
Dbg_TDO_INST_0_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(29),
      I1 => data_read_reg(30),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(31),
      I5 => data_read_reg(32),
      O => Dbg_TDO_INST_0_i_25_n_0
    );
Dbg_TDO_INST_0_i_26: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(25),
      I1 => data_read_reg(26),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(27),
      I5 => data_read_reg(28),
      O => Dbg_TDO_INST_0_i_26_n_0
    );
Dbg_TDO_INST_0_i_27: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(21),
      I1 => data_read_reg(22),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(23),
      I5 => data_read_reg(24),
      O => Dbg_TDO_INST_0_i_27_n_0
    );
Dbg_TDO_INST_0_i_28: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(17),
      I1 => data_read_reg(18),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(19),
      I5 => data_read_reg(20),
      O => Dbg_TDO_INST_0_i_28_n_0
    );
Dbg_TDO_INST_0_i_29: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555556"
    )
        port map (
      I0 => \sel0__0\(1),
      I1 => sel0(0),
      I2 => A3,
      I3 => A1,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I5 => A2,
      O => Dbg_TDO_INST_0_i_29_n_0
    );
Dbg_TDO_INST_0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => instr_read_reg(0),
      I2 => Dbg_Reg_En(1),
      I3 => Dbg_Reg_En(3),
      I4 => Dbg_TDO_1,
      I5 => Dbg_TDO_2,
      O => Dbg_TDO_INST_0_i_3_n_0
    );
Dbg_TDO_INST_0_i_33: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\,
      I2 => A1,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => Dbg_TDO_INST_0_i_33_n_0
    );
Dbg_TDO_INST_0_i_34: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B833B800"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\,
      O => Dbg_TDO_INST_0_i_34_n_0
    );
Dbg_TDO_INST_0_i_35: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFF000AACCAACC"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_35_n_0
    );
Dbg_TDO_INST_0_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2000000000000002"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A2,
      I3 => A1,
      I4 => A3,
      I5 => sel0(0),
      O => Dbg_TDO_INST_0_i_4_n_0
    );
Dbg_TDO_INST_0_i_6: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B5555777BFFFF777"
    )
        port map (
      I0 => sel0(0),
      I1 => Dbg_TDO_INST_0_i_17_n_0,
      I2 => A1,
      I3 => A2,
      I4 => A3,
      I5 => Dbg_TDO_INST_0_i_18_n_0,
      O => Dbg_TDO_INST_0_i_6_n_0
    );
Dbg_TDO_INST_0_i_7: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => A3,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A2,
      O => Dbg_TDO_INST_0_i_7_n_0
    );
Dbg_TDO_INST_0_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_19_n_0,
      I1 => Dbg_TDO_INST_0_i_20_n_0,
      I2 => Dbg_TDO_INST_0_i_21_n_0,
      I3 => Dbg_TDO_INST_0_i_22_n_0,
      I4 => Dbg_TDO_INST_0_i_23_n_0,
      I5 => Dbg_TDO_INST_0_i_24_n_0,
      O => Dbg_TDO_INST_0_i_8_n_0
    );
Dbg_TDO_INST_0_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_25_n_0,
      I1 => Dbg_TDO_INST_0_i_26_n_0,
      I2 => Dbg_TDO_INST_0_i_21_n_0,
      I3 => Dbg_TDO_INST_0_i_27_n_0,
      I4 => Dbg_TDO_INST_0_i_23_n_0,
      I5 => Dbg_TDO_INST_0_i_28_n_0,
      O => Dbg_TDO_INST_0_i_9_n_0
    );
Full_32_bit_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => delay_slot_instr_reg_0,
      D => wb_read_imm_reg_1_i,
      Q => Full_32_bit_1,
      R => sync_reset
    );
Full_32_bit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => delay_slot_instr_reg_0,
      D => use_Imm_Reg,
      Q => Full_32_bit,
      R => sync_reset
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => Dbg_Reg_En(6),
      I1 => Dbg_Reg_En(0),
      I2 => Dbg_Reg_En(2),
      I3 => Dbg_Reg_En(7),
      I4 => \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2_n_0\,
      O => Instr_Insert_Reg_En
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(5),
      I3 => Dbg_Reg_En(4),
      O => \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_2_n_0\
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Instr_Insert_Reg_En,
      Q => Instr_Insert_Reg_En_1
    );
\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => New_Dbg_Instr_TCK,
      Q => New_Dbg_Instr2_TCK
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00020000"
    )
        port map (
      I0 => Instr_Insert_Reg_En,
      I1 => instr_read_reg(0),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\,
      I4 => sel0(0),
      O => p_87_out
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => A3,
      O => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_87_out,
      Q => New_Dbg_Instr_TCK
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\,
      Q => \^lockstep_master_out\(31)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \^lockstep_master_out\(21)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \^lockstep_master_out\(20)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \^lockstep_master_out\(19)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \^lockstep_master_out\(18)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \^lockstep_master_out\(17)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \^lockstep_master_out\(16)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \^lockstep_master_out\(15)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \^lockstep_master_out\(14)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \^lockstep_master_out\(13)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \^lockstep_master_out\(12)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \^lockstep_master_out\(30)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \^lockstep_master_out\(11)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \^lockstep_master_out\(10)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \^lockstep_master_out\(9)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \^lockstep_master_out\(8)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \^lockstep_master_out\(7)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \^lockstep_master_out\(6)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \^lockstep_master_out\(5)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \^lockstep_master_out\(4)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \^lockstep_master_out\(3)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \^lockstep_master_out\(2)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \^lockstep_master_out\(29)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(1)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \^lockstep_master_out\(0)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \^lockstep_master_out\(28)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \^lockstep_master_out\(27)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \^lockstep_master_out\(26)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \^lockstep_master_out\(25)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \^lockstep_master_out\(24)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \^lockstep_master_out\(23)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \^lockstep_master_out\(22)
    );
\Serial_Dbg_Intf.SRL16E_1\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized2\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q_0 => Q_0
    );
\Serial_Dbg_Intf.SRL16E_2\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized4\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q11_in => Q11_in
    );
\Serial_Dbg_Intf.SRL16E_3\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized12\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q2_in => Q2_in
    );
\Serial_Dbg_Intf.SRL16E_4\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized14\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_TDO_INST_0_i_2 => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\,
      Q(6 downto 5) => \sel0__0\(2 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q0_out => Q0_out,
      Q2_in => Q2_in,
      Q3_in => Q3_in,
      \Serial_Dbg_Intf.shift_count_reg[6]\ => \Serial_Dbg_Intf.SRL16E_4_n_0\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized10\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      \Serial_Dbg_Intf.shift_count_reg[0]\ => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\
    );
\Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized10_27\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized6\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q6_out => Q6_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized8\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(1) => Dbg_Reg_En(6),
      Dbg_Reg_En(0) => Dbg_Reg_En(7),
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_INST_0_i_1_n_0,
      Dbg_TDO_1 => Dbg_TDO_INST_0_i_3_n_0,
      Dbg_TDO_2 => Dbg_TDO_INST_0_i_4_n_0,
      Dbg_TDO_3 => Dbg_TDO_INST_0_i_6_n_0,
      Dbg_TDO_4 => \Serial_Dbg_Intf.SRL16E_4_n_0\,
      Dbg_TDO_5 => Dbg_TDO_0,
      Dbg_TDO_INST_0_i_2_0 => \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\,
      Q(7 downto 5) => \sel0__0\(3 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q11_in => Q11_in,
      Q6_out => Q6_out,
      Q_0 => Q_0,
      Status_Reg_En => Status_Reg_En
    );
\Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized10_28\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q4_out => Q4_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized8_29\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q3_out => Q3_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized6_30\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q2_out => Q2_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized8_31\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(5) => \sel0__0\(1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q2_out => Q2_out,
      Q3_out => Q3_out,
      Q4_out => Q4_out,
      \Serial_Dbg_Intf.shift_count_reg[5]\ => \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\
    );
\Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized10_32\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q0_out => Q0_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I\: entity work.\design_1_microblaze_1_1_MB_SRL16E__parameterized8_33\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q3_in => Q3_in
    );
\Serial_Dbg_Intf.capture_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_Capture,
      Q => capture_1
    );
\Serial_Dbg_Intf.command_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => Dbg_Reg_En(7),
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(2),
      I3 => Dbg_Reg_En(0),
      I4 => \Serial_Dbg_Intf.dbg_wakeup_i_i_3_n_0\,
      O => Command_Reg_En
    );
\Serial_Dbg_Intf.command_reg[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => command_reg_clear,
      O => command_reg_rst22_out
    );
\Serial_Dbg_Intf.command_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst22_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => command_reg(0)
    );
\Serial_Dbg_Intf.command_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst22_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => command_reg(1)
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      O => continue_from_brk_rst23_out
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => continue_from_brk_rst23_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => continue_from_brk_TClk
    );
\Serial_Dbg_Intf.continue_from_brk_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_13_out,
      Q => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      R => sync_reset
    );
\Serial_Dbg_Intf.control_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.control_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.control_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.control_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.control_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => Q(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[0]\,
      Q => data_read_reg(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[10]\,
      Q => data_read_reg(10)
    );
\Serial_Dbg_Intf.data_read_reg_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[11]\,
      Q => data_read_reg(11)
    );
\Serial_Dbg_Intf.data_read_reg_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[12]\,
      Q => data_read_reg(12)
    );
\Serial_Dbg_Intf.data_read_reg_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[13]\,
      Q => data_read_reg(13)
    );
\Serial_Dbg_Intf.data_read_reg_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[14]\,
      Q => data_read_reg(14)
    );
\Serial_Dbg_Intf.data_read_reg_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[15]\,
      Q => data_read_reg(15)
    );
\Serial_Dbg_Intf.data_read_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[16]\,
      Q => data_read_reg(16)
    );
\Serial_Dbg_Intf.data_read_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[17]\,
      Q => data_read_reg(17)
    );
\Serial_Dbg_Intf.data_read_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[18]\,
      Q => data_read_reg(18)
    );
\Serial_Dbg_Intf.data_read_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[19]\,
      Q => data_read_reg(19)
    );
\Serial_Dbg_Intf.data_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[1]\,
      Q => data_read_reg(1)
    );
\Serial_Dbg_Intf.data_read_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[20]\,
      Q => data_read_reg(20)
    );
\Serial_Dbg_Intf.data_read_reg_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[21]\,
      Q => data_read_reg(21)
    );
\Serial_Dbg_Intf.data_read_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[22]\,
      Q => data_read_reg(22)
    );
\Serial_Dbg_Intf.data_read_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[23]\,
      Q => data_read_reg(23)
    );
\Serial_Dbg_Intf.data_read_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[24]\,
      Q => data_read_reg(24)
    );
\Serial_Dbg_Intf.data_read_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[25]\,
      Q => data_read_reg(25)
    );
\Serial_Dbg_Intf.data_read_reg_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[26]\,
      Q => data_read_reg(26)
    );
\Serial_Dbg_Intf.data_read_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[27]\,
      Q => data_read_reg(27)
    );
\Serial_Dbg_Intf.data_read_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[28]\,
      Q => data_read_reg(28)
    );
\Serial_Dbg_Intf.data_read_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[29]\,
      Q => data_read_reg(29)
    );
\Serial_Dbg_Intf.data_read_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[2]\,
      Q => data_read_reg(2)
    );
\Serial_Dbg_Intf.data_read_reg_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[30]\,
      Q => data_read_reg(30)
    );
\Serial_Dbg_Intf.data_read_reg_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[31]\,
      Q => data_read_reg(31)
    );
\Serial_Dbg_Intf.data_read_reg_reg[32]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[32]\,
      Q => data_read_reg(32)
    );
\Serial_Dbg_Intf.data_read_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[3]\,
      Q => data_read_reg(3)
    );
\Serial_Dbg_Intf.data_read_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[4]\,
      Q => data_read_reg(4)
    );
\Serial_Dbg_Intf.data_read_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[5]\,
      Q => data_read_reg(5)
    );
\Serial_Dbg_Intf.data_read_reg_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[6]\,
      Q => data_read_reg(6)
    );
\Serial_Dbg_Intf.data_read_reg_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[7]\,
      Q => data_read_reg(7)
    );
\Serial_Dbg_Intf.data_read_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[8]\,
      Q => data_read_reg(8)
    );
\Serial_Dbg_Intf.data_read_reg_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[9]\,
      Q => data_read_reg(9)
    );
\Serial_Dbg_Intf.dbg_disable_interrupt_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(9),
      Q => \^lockstep_master_out\(36),
      R => sync_reset
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => \Serial_Dbg_Intf.dbg_wakeup_i_i_3_n_0\,
      I1 => Dbg_Reg_En(7),
      I2 => Dbg_Reg_En(2),
      I3 => Dbg_Reg_En(0),
      I4 => Dbg_Reg_En(6),
      O => Control_Reg_En
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0808080B"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => \^sleep_out\,
      I4 => Sleep_Decode,
      O => no_sleeping1_out
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(4),
      I3 => Dbg_Reg_En(5),
      O => \Serial_Dbg_Intf.dbg_wakeup_i_i_3_n_0\
    );
\Serial_Dbg_Intf.dbg_wakeup_i_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => no_sleeping1_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(33)
    );
\Serial_Dbg_Intf.force_stop_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0B0B0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => \^force_stop_cmd_hold\,
      I4 => \^force_stop_cmd_i\,
      O => force_stop_cmd_rst19_out
    );
\Serial_Dbg_Intf.force_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => force_stop_cmd_rst19_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => force_stop_TClk
    );
\Serial_Dbg_Intf.force_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_81_out,
      Q => \^force_stop_cmd_i\,
      R => sync_reset
    );
\Serial_Dbg_Intf.if_debug_ready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_66_out,
      Q => \^lockstep_master_out\(35),
      R => sync_reset
    );
\Serial_Dbg_Intf.instr_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => instr_rd_reg(0),
      Q => instr_read_reg(0)
    );
\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Instr_Insert_Reg_En_1,
      Q => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      R => sync_reset
    );
\Serial_Dbg_Intf.normal_stop_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0B0B0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => normal_stop_cmd_hold,
      I4 => normal_stop_cmd_i,
      O => normal_stop_cmd_rst18_out
    );
\Serial_Dbg_Intf.normal_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => normal_stop_cmd_rst18_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => normal_stop_TClk
    );
\Serial_Dbg_Intf.normal_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_84_out,
      Q => normal_stop_cmd_i,
      R => sync_reset
    );
\Serial_Dbg_Intf.read_register_MSR_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_76_out,
      Q => read_register_MSR,
      R => sync_reset
    );
\Serial_Dbg_Intf.read_register_PC_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_73_out,
      Q => read_register_PC,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(0),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(1),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(2),
      Q => p_1_in,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(3),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(4),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(5),
      Q => p_0_in_2,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(6),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(7),
      Q => p_0_in61_in,
      R => sync_reset
    );
\Serial_Dbg_Intf.sample_synced_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(8),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      R => sync_reset
    );
\Serial_Dbg_Intf.shift_count[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => p_0_in(0)
    );
\Serial_Dbg_Intf.shift_count[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A1,
      O => p_0_in(1)
    );
\Serial_Dbg_Intf.shift_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2A80"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A2,
      O => p_0_in(2)
    );
\Serial_Dbg_Intf.shift_count[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2AAA8000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => A2,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => A3,
      O => p_0_in(3)
    );
\Serial_Dbg_Intf.shift_count[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2AAAAAAA80000000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A3,
      I3 => A1,
      I4 => A2,
      I5 => sel0(0),
      O => p_0_in(4)
    );
\Serial_Dbg_Intf.shift_count[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I2 => \sel0__0\(1),
      O => p_0_in(5)
    );
\Serial_Dbg_Intf.shift_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2A80"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \sel0__0\(1),
      I2 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I3 => \sel0__0\(2),
      O => p_0_in(6)
    );
\Serial_Dbg_Intf.shift_count[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2AAA8000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I2 => \sel0__0\(2),
      I3 => \sel0__0\(1),
      I4 => \sel0__0\(3),
      O => p_0_in(7)
    );
\Serial_Dbg_Intf.shift_count[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => A3,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => sel0(0),
      O => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\
    );
\Serial_Dbg_Intf.shift_count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(0),
      Q => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.shift_count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(1),
      Q => A1
    );
\Serial_Dbg_Intf.shift_count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(2),
      Q => A2
    );
\Serial_Dbg_Intf.shift_count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(3),
      Q => A3
    );
\Serial_Dbg_Intf.shift_count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(4),
      Q => sel0(0)
    );
\Serial_Dbg_Intf.shift_count_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(5),
      Q => \sel0__0\(1)
    );
\Serial_Dbg_Intf.shift_count_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(6),
      Q => \sel0__0\(2)
    );
\Serial_Dbg_Intf.shift_count_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(7),
      Q => \sel0__0\(3)
    );
\Serial_Dbg_Intf.shift_datain_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\
    );
\Serial_Dbg_Intf.shift_datain_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\
    );
\Serial_Dbg_Intf.shift_datain_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\
    );
\Serial_Dbg_Intf.shift_datain_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\
    );
\Serial_Dbg_Intf.shift_datain_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\
    );
\Serial_Dbg_Intf.shift_datain_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\
    );
\Serial_Dbg_Intf.shift_datain_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.shift_datain_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.shift_datain_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.shift_datain_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.shift_datain_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\
    );
\Serial_Dbg_Intf.shift_datain_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.shift_datain_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\
    );
\Serial_Dbg_Intf.shift_datain_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\
    );
\Serial_Dbg_Intf.shift_datain_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.shift_datain_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.shift_datain_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\
    );
\Serial_Dbg_Intf.shift_datain_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\
    );
\Serial_Dbg_Intf.shift_datain_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.shift_datain_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.shift_datain_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.shift_datain_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\
    );
\Serial_Dbg_Intf.shift_datain_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\
    );
\Serial_Dbg_Intf.shift_datain_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\
    );
\Serial_Dbg_Intf.shift_datain_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.shift_datain_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.shift_datain_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.shift_datain_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\
    );
\Serial_Dbg_Intf.shift_datain_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\
    );
\Serial_Dbg_Intf.shift_datain_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\
    );
\Serial_Dbg_Intf.shift_datain_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\
    );
\Serial_Dbg_Intf.single_Step_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => start_single_step_reg_n_0,
      O => start_single_step_rst20_out
    );
\Serial_Dbg_Intf.single_Step_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => start_single_step_rst20_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => single_Step_TClk
    );
\Serial_Dbg_Intf.start_single_cmd_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_78_out,
      Q => start_single_cmd,
      R => sync_reset
    );
\Serial_Dbg_Intf.status_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sync,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.status_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.status_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sync_reset,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.status_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.status_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \^d\(0),
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.status_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit_1,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.status_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.status_reg_reg[22]_0\(0),
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\
    );
\Serial_Dbg_Intf.status_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => dbg_brki_hit_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.status_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => running_clock_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.status_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.status_reg_reg[25]_0\(28),
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\
    );
\Serial_Dbg_Intf.status_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sleep_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.status_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => pause_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.status_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => unchanged,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.sync_dbg_brk_hit\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2\
     port map (
      D(0) => dbg_brki_hit_synced,
      Dbg_Clk => Dbg_Clk,
      config_with_scan_reset => config_with_scan_reset,
      dbg_brki_hit => \^dbg_brki_hit\
    );
\Serial_Dbg_Intf.sync_dbg_hit\: entity work.design_1_microblaze_1_1_mb_sync_vec
     port map (
      D(0) => sync,
      Dbg_Clk => Dbg_Clk,
      config_with_scan_reset => config_with_scan_reset,
      dbg_hit(0) => dbg_hit(0)
    );
\Serial_Dbg_Intf.sync_dbg_wakeup\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized4\
     port map (
      Clk => Clk,
      LOCKSTEP_Master_Out(1 downto 0) => \^lockstep_master_out\(33 downto 32),
      \Serial_Dbg_Intf.continue_from_brk_reg\ => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      dbg_continue_i_reg => dbg_continue_i_i_2_n_0,
      dbg_continue_i_reg_0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      normal_stop_cmd_i => normal_stop_cmd_i,
      of_Pause => of_Pause,
      sync_reset => sync_reset
    );
\Serial_Dbg_Intf.sync_pause\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2_34\
     port map (
      D(0) => pause_synced,
      Dbg_Clk => Dbg_Clk,
      Pause => Pause,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      config_with_scan_reset => config_with_scan_reset
    );
\Serial_Dbg_Intf.sync_running_clock\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2_35\
     port map (
      D(0) => running_clock_synced,
      Dbg_Clk => Dbg_Clk,
      config_with_scan_reset => config_with_scan_reset,
      running_clock => running_clock
    );
\Serial_Dbg_Intf.sync_sample\: entity work.\design_1_microblaze_1_1_mb_sync_vec__parameterized1\
     port map (
      Clk => Clk,
      D(0) => normal_stop_TClk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(7) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      Q(6) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      Q(5) => p_1_in,
      Q(4) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      Q(3) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      Q(2) => p_0_in_2,
      Q(1) => p_0_in61_in,
      Q(0) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      \Serial_Dbg_Intf.sample_synced_1_reg[8]\ => \Serial_Dbg_Intf.sync_sample_n_15\,
      \Synchronize.use_sync_reset.sync_reg[1]\(0) => force_stop_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => single_Step_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_1\(1) => command_reg(0),
      \Synchronize.use_sync_reset.sync_reg[1]_1\(0) => command_reg(1),
      \Synchronize.use_sync_reset.sync_reg[1]_2\(0) => continue_from_brk_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_3\(0) => New_Dbg_Instr2_TCK,
      \Synchronize.use_sync_reset.sync_reg[1]_4\(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\,
      \Synchronize.use_sync_reset.sync_reg[2]\ => \Serial_Dbg_Intf.sync_sample_n_16\,
      p_13_out => p_13_out,
      p_66_out => p_66_out,
      p_73_out => p_73_out,
      p_76_out => p_76_out,
      p_78_out => p_78_out,
      p_81_out => p_81_out,
      p_84_out => p_84_out,
      sample_synced(0 to 9) => sample_synced(0 to 9),
      sync_reset => sync_reset
    );
\Serial_Dbg_Intf.sync_sleep\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2_36\
     port map (
      D(0) => sleep_synced,
      Dbg_Clk => Dbg_Clk,
      Sleep => Sleep,
      config_with_scan_reset => config_with_scan_reset
    );
\Serial_Dbg_Intf.sync_stop_CPU\: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized2_37\
     port map (
      D(0) => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Dbg_Clk => Dbg_Clk,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(34),
      config_with_scan_reset => config_with_scan_reset
    );
\Serial_Dbg_Intf.trig_ack_out_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_16\,
      Q => \^dbg_trig_ack_out\(0),
      R => sync_reset
    );
\Serial_Dbg_Intf.trig_in_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_15\,
      Q => \^dbg_trig_in\(0),
      R => sync_reset
    );
\Serial_Dbg_Intf.unchanged_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00000040"
    )
        port map (
      I0 => Dbg_Reg_En_1_sn_1,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(4),
      I4 => Dbg_Reg_En(5),
      I5 => unchanged,
      O => \Serial_Dbg_Intf.unchanged_i_1_n_0\
    );
\Serial_Dbg_Intf.unchanged_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.unchanged_i_1_n_0\,
      Q => unchanged
    );
\Use_unisim.MB_SRL16E_I1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(0),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(31),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(1),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(30),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(2),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(29),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(11),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(20),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(12),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(19),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(13),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(18),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(14),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(17),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(15),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(16),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(16),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(15),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(17),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(14),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(18),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(13),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(19),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(12),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(20),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(11),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(3),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(28),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(21),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(10),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(22),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(9),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(23),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(8),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(24),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(7),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(25),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(6),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(26),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(5),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(27),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(4),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(28),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(3),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(29),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(2),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(30),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(1),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(4),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(27),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(31),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(0),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(5),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(26),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(6),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(25),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(7),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(24),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(8),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(23),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(9),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(22),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]_0\
    );
\Use_unisim.MB_SRL16E_I1_i_2__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^lockstep_master_out\(10),
      I1 => \^lockstep_master_out\(35),
      I2 => IReady,
      I3 => Instr(21),
      O => \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]_0\
    );
\Using_FPGA.Native_i_1__90\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^lockstep_master_out\(35),
      I1 => IReady,
      O => S
    );
\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I\: entity work.design_1_microblaze_1_1_address_hit
     port map (
      Address(0 to 31) => Address(0 to 31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_TDI => Dbg_TDI,
      Hit => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\,
      Q(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      Single_Step_N => single_Step_N,
      \Using_FPGA.Native\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_5\,
      \Using_FPGA.Native_0\ => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_4\,
      single_Step_N_reg => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\
    );
command_reg_clear_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^read_register_msr_1_reg_0\,
      I1 => read_register_PC_1_reg_n_0,
      O => command_reg_clear_i_1_n_0
    );
command_reg_clear_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => command_reg_clear_i_1_n_0,
      Q => command_reg_clear,
      R => sync_reset
    );
\data_rd_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_33\,
      Q => \data_rd_reg_reg_n_0_[0]\,
      R => sync_reset
    );
\data_rd_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_23\,
      Q => \data_rd_reg_reg_n_0_[10]\,
      R => sync_reset
    );
\data_rd_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_22\,
      Q => \data_rd_reg_reg_n_0_[11]\,
      R => sync_reset
    );
\data_rd_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_21\,
      Q => \data_rd_reg_reg_n_0_[12]\,
      R => sync_reset
    );
\data_rd_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_20\,
      Q => \data_rd_reg_reg_n_0_[13]\,
      R => sync_reset
    );
\data_rd_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_19\,
      Q => \data_rd_reg_reg_n_0_[14]\,
      R => sync_reset
    );
\data_rd_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_18\,
      Q => \data_rd_reg_reg_n_0_[15]\,
      R => sync_reset
    );
\data_rd_reg_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_17\,
      Q => \data_rd_reg_reg_n_0_[16]\,
      R => sync_reset
    );
\data_rd_reg_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_16\,
      Q => \data_rd_reg_reg_n_0_[17]\,
      R => sync_reset
    );
\data_rd_reg_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_15\,
      Q => \data_rd_reg_reg_n_0_[18]\,
      R => sync_reset
    );
\data_rd_reg_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_14\,
      Q => \data_rd_reg_reg_n_0_[19]\,
      R => sync_reset
    );
\data_rd_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_32\,
      Q => \data_rd_reg_reg_n_0_[1]\,
      R => sync_reset
    );
\data_rd_reg_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_13\,
      Q => \data_rd_reg_reg_n_0_[20]\,
      R => sync_reset
    );
\data_rd_reg_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_12\,
      Q => \data_rd_reg_reg_n_0_[21]\,
      R => sync_reset
    );
\data_rd_reg_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_11\,
      Q => \data_rd_reg_reg_n_0_[22]\,
      R => sync_reset
    );
\data_rd_reg_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_10\,
      Q => \data_rd_reg_reg_n_0_[23]\,
      R => sync_reset
    );
\data_rd_reg_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \data_rd_reg_reg[24]_0\(4),
      Q => \data_rd_reg_reg_n_0_[24]\,
      R => sync_reset
    );
\data_rd_reg_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_9\,
      Q => \data_rd_reg_reg_n_0_[25]\,
      R => sync_reset
    );
\data_rd_reg_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \data_rd_reg_reg[24]_0\(3),
      Q => \data_rd_reg_reg_n_0_[26]\,
      R => sync_reset
    );
\data_rd_reg_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_8\,
      Q => \data_rd_reg_reg_n_0_[27]\,
      R => sync_reset
    );
\data_rd_reg_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \data_rd_reg_reg[24]_0\(2),
      Q => \data_rd_reg_reg_n_0_[28]\,
      R => sync_reset
    );
\data_rd_reg_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \data_rd_reg_reg[24]_0\(1),
      Q => \data_rd_reg_reg_n_0_[29]\,
      R => sync_reset
    );
\data_rd_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_31\,
      Q => \data_rd_reg_reg_n_0_[2]\,
      R => sync_reset
    );
\data_rd_reg_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \data_rd_reg_reg[24]_0\(0),
      Q => \data_rd_reg_reg_n_0_[30]\,
      R => sync_reset
    );
\data_rd_reg_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_7\,
      Q => \data_rd_reg_reg_n_0_[31]\,
      R => sync_reset
    );
\data_rd_reg_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_35\,
      Q => \data_rd_reg_reg_n_0_[32]\,
      R => sync_reset
    );
\data_rd_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_30\,
      Q => \data_rd_reg_reg_n_0_[3]\,
      R => sync_reset
    );
\data_rd_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_29\,
      Q => \data_rd_reg_reg_n_0_[4]\,
      R => sync_reset
    );
\data_rd_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_28\,
      Q => \data_rd_reg_reg_n_0_[5]\,
      R => sync_reset
    );
\data_rd_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_27\,
      Q => \data_rd_reg_reg_n_0_[6]\,
      R => sync_reset
    );
\data_rd_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_26\,
      Q => \data_rd_reg_reg_n_0_[7]\,
      R => sync_reset
    );
\data_rd_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_25\,
      Q => \data_rd_reg_reg_n_0_[8]\,
      R => sync_reset
    );
\data_rd_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_6\,
      D => \Area_Debug_Control.Stop_Instr_Fetch_FDRSE_n_24\,
      Q => \data_rd_reg_reg_n_0_[9]\,
      R => sync_reset
    );
dbg_continue_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \Area_Debug_Control.dbg_stop_Detected_reg_n_0\,
      I1 => start_single_cmd,
      I2 => \^lockstep_master_out\(35),
      I3 => \^force_stop_cmd_i\,
      O => dbg_continue_i_i_2_n_0
    );
dbg_continue_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      Q => \^lockstep_master_out\(32),
      R => sync_reset
    );
dbg_halt_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"44444444000F0000"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => step_continue,
      I3 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      I4 => dbg_halt_reset_mode_reg_n_0,
      I5 => sync_reset,
      O => dbg_halt_reset_mode_i_1_n_0
    );
dbg_halt_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => dbg_halt_reset_mode_i_1_n_0,
      Q => dbg_halt_reset_mode_reg_n_0,
      R => '0'
    );
delay_slot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => delay_slot_instr_reg_0,
      D => branch_with_delay,
      Q => \^d\(0),
      R => sync_reset
    );
executing_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"005D000C"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg[25]_0\(27),
      I1 => start_dbg_exec_reg_n_0,
      I2 => has_inhibit_EX,
      I3 => force_stop_overrun,
      I4 => instr_rd_reg(0),
      O => executing_i_1_n_0
    );
executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => executing_i_1_n_0,
      Q => instr_rd_reg(0),
      R => sync_reset
    );
mb_halted_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^area_debug_control.mb_halted_i_reg_0\(0),
      Q => mb_halted_1,
      R => sync_reset
    );
read_register_MSR_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR,
      Q => \^read_register_msr_1_reg_0\,
      R => sync_reset
    );
read_register_PC_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC,
      Q => read_register_PC_1_reg_n_0,
      R => sync_reset
    );
running_clock_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_En,
      I3 => capture_1,
      O => running_clock_rst10_out
    );
running_clock_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      CLR => running_clock_rst10_out,
      D => '1',
      Q => running_clock
    );
saved_reset_mode_dbg_halt_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => sync_reset,
      I3 => saved_reset_mode_dbg_halt,
      O => saved_reset_mode_dbg_halt_i_1_n_0
    );
saved_reset_mode_dbg_halt_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_dbg_halt_i_1_n_0,
      Q => saved_reset_mode_dbg_halt,
      R => '0'
    );
saved_reset_mode_sleep_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => sync_reset,
      I3 => \^sleep_out\,
      O => saved_reset_mode_sleep_i_1_n_0
    );
saved_reset_mode_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_sleep_i_1_n_0,
      Q => saved_reset_mode_sleep,
      R => '0'
    );
single_Step_N_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEFFF0000EF00"
    )
        port map (
      I0 => single_step_count(1),
      I1 => single_step_count(0),
      I2 => start_single_step_reg_n_0,
      I3 => of_PipeRun,
      I4 => S80_out,
      I5 => single_Step_N,
      O => single_Step_N_i_1_n_0
    );
single_Step_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => single_Step_N_i_1_n_0,
      Q => single_Step_N,
      S => sync_reset
    );
\single_step_count[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAFCCAFA0A033A0"
    )
        port map (
      I0 => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\,
      I1 => single_step_count(1),
      I2 => start_single_cmd,
      I3 => of_PipeRun,
      I4 => S80_out,
      I5 => single_step_count(0),
      O => \single_step_count[0]_i_1_n_0\
    );
\single_step_count[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BB0B0B0B88F8F8F8"
    )
        port map (
      I0 => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\,
      I1 => start_single_cmd,
      I2 => of_PipeRun,
      I3 => jump,
      I4 => inHibit_EX,
      I5 => single_step_count(1),
      O => \single_step_count[1]_i_1_n_0\
    );
\single_step_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[0]_i_1_n_0\,
      Q => single_step_count(0),
      R => sync_reset
    );
\single_step_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[1]_i_1_n_0\,
      Q => single_step_count(1),
      R => sync_reset
    );
sleep_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888BBBBB88888888"
    )
        port map (
      I0 => sleep_reset_mode_i_2_n_0,
      I1 => sync_reset,
      I2 => wakeup_i(0),
      I3 => wakeup_i(1),
      I4 => saved_reset_mode_sleep,
      I5 => \^sleep_out\,
      O => sleep_reset_mode_i_1_n_0
    );
sleep_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      O => sleep_reset_mode_i_2_n_0
    );
sleep_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_reset_mode_i_1_n_0,
      Q => \^sleep_out\,
      R => '0'
    );
start_dbg_exec_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^lockstep_master_out\(35),
      Q => start_dbg_exec_reg_n_0,
      R => sync_reset
    );
start_single_step_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFAAFCAAFFAAFFAA"
    )
        port map (
      I0 => start_single_cmd,
      I1 => single_step_count(1),
      I2 => single_step_count(0),
      I3 => start_single_step_reg_n_0,
      I4 => S80_out,
      I5 => of_PipeRun,
      O => start_single_step_i_1_n_0
    );
start_single_step_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => start_single_step_i_1_n_0,
      Q => start_single_step_reg_n_0,
      R => sync_reset
    );
sync_trig_ack_in_0: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized4_38\
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      mb_halted_1 => mb_halted_1,
      mb_halted_1_reg => sync_trig_ack_in_0_n_1,
      sync_reset => sync_reset,
      trig_ack_in_0_synced => trig_ack_in_0_synced,
      trig_ack_in_0_synced_1 => trig_ack_in_0_synced_1,
      trig_in_0_reg(0) => \^area_debug_control.mb_halted_i_reg_0\(0)
    );
sync_trig_out_0: entity work.\design_1_microblaze_1_1_mb_sync_bit__parameterized4_39\
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      \Single_Synchronize.use_sync_reset.sync_reg_0\ => sync_trig_out_0_n_1,
      sync_reset => sync_reset,
      trig_out_0_synced => trig_out_0_synced,
      trig_out_0_synced_1 => trig_out_0_synced_1
    );
trig_ack_in_0_synced_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_ack_in_0_synced,
      Q => trig_ack_in_0_synced_1,
      R => sync_reset
    );
trig_in_0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_ack_in_0_n_1,
      Q => \^dbg_trig_in\(1),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Decode is
  port (
    IReady : out STD_LOGIC;
    Buffer_Addr : out STD_LOGIC_VECTOR ( 2 downto 0 );
    reg1_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : out STD_LOGIC_VECTOR ( 0 to 15 );
    jump : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 6 downto 0 );
    of_Pause : out STD_LOGIC;
    of_PipeRun : out STD_LOGIC;
    opsel1_SPR : out STD_LOGIC;
    instr_ex : out STD_LOGIC_VECTOR ( 27 downto 0 );
    \write_Addr_I_reg[2]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_Valid : out STD_LOGIC;
    res_Forward1 : out STD_LOGIC;
    alu_Op : out STD_LOGIC_VECTOR ( 0 to 1 );
    carry_In : out STD_LOGIC;
    S80_out : out STD_LOGIC;
    Reg_Test_Equal : out STD_LOGIC;
    reg_Test_Equal_N : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    compare_Instr : out STD_LOGIC;
    Unsigned_Op : out STD_LOGIC;
    Select_Logic : out STD_LOGIC;
    clz_instr : out STD_LOGIC;
    ex_not_mul_op : out STD_LOGIC;
    BitField_Insert : out STD_LOGIC;
    BitField_Extract : out STD_LOGIC;
    Write_ICache_I : out STD_LOGIC;
    has_inhibit_EX : out STD_LOGIC;
    inHibit_EX : out STD_LOGIC;
    dbg_clean_stop : out STD_LOGIC;
    Valid_Instr_i : out STD_LOGIC;
    iFetch_In_Progress : out STD_LOGIC;
    load_Store_i : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Sleep_Decode : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    isbyte : out STD_LOGIC;
    isdoublet : out STD_LOGIC;
    use_Imm_Reg : out STD_LOGIC;
    sext8 : out STD_LOGIC;
    sext16 : out STD_LOGIC;
    Not_Barrel_Op : out STD_LOGIC;
    mtsmsr_write_i_reg_0 : out STD_LOGIC;
    DI : out STD_LOGIC;
    PC_Write : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    MSR_Rst : out STD_LOGIC;
    Op1_Shift : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    WEBWE : out STD_LOGIC_VECTOR ( 0 to 0 );
    reg_Write_I : out STD_LOGIC;
    reset_delay_reg_0 : out STD_LOGIC;
    reg_Write_dbg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    d_AS_I_reg_0 : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    inHibit_EX_reg_0 : out STD_LOGIC;
    p_2_out : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Area_Debug_Control.dbg_brki_hit_reg\ : out STD_LOGIC;
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    D_3 : out STD_LOGIC;
    D_4 : out STD_LOGIC;
    D_5 : out STD_LOGIC;
    D_6 : out STD_LOGIC;
    D_7 : out STD_LOGIC;
    D_8 : out STD_LOGIC;
    D_9 : out STD_LOGIC;
    D_10 : out STD_LOGIC;
    D_11 : out STD_LOGIC;
    D_12 : out STD_LOGIC;
    D_13 : out STD_LOGIC;
    D_14 : out STD_LOGIC;
    D_15 : out STD_LOGIC;
    D_16 : out STD_LOGIC;
    D_17 : out STD_LOGIC;
    D_18 : out STD_LOGIC;
    D_19 : out STD_LOGIC;
    D_20 : out STD_LOGIC;
    D_21 : out STD_LOGIC;
    D_22 : out STD_LOGIC;
    D_23 : out STD_LOGIC;
    D_24 : out STD_LOGIC;
    D_25 : out STD_LOGIC;
    D_26 : out STD_LOGIC;
    D_27 : out STD_LOGIC;
    D_28 : out STD_LOGIC;
    D_29 : out STD_LOGIC;
    D_30 : out STD_LOGIC;
    D_31 : out STD_LOGIC;
    branch_with_delay : out STD_LOGIC;
    Valid_Req_1st_Cycle0 : out STD_LOGIC;
    data_Read_Mask : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_The_PCMP_instr.PCMP_Instr_reg_0\ : out STD_LOGIC;
    I3 : out STD_LOGIC;
    \Use_The_PCMP_instr.CLZ_Instr_reg_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Enable_2 : out STD_LOGIC;
    PCMP_Instr2_out : out STD_LOGIC;
    \Use_The_PCMP_instr.CLZ_Instr_reg_1\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    Shifted : out STD_LOGIC;
    void_bit : out STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg_1\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg_2\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Use_The_PCMP_instr.PCMP_Instr_reg_3\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_MSR_Instr.MSRclr_Instr_i_reg_0\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    d_AS_I_reg_1 : out STD_LOGIC;
    writing_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_Barrel_Shifter.BitField_Extract_reg_0\ : out STD_LOGIC;
    Shift_Oper : out STD_LOGIC;
    Clk : in STD_LOGIC;
    mux_Instr_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    complete_dready : in STD_LOGIC;
    complete_iready : in STD_LOGIC;
    iFetch_In_Progress_reg_0 : in STD_LOGIC;
    using_Imm_reg_0 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \void_bit16_reg[15]\ : in STD_LOGIC_VECTOR ( 5 downto 0 );
    LO : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    Reg_zero : in STD_LOGIC;
    Pause : in STD_LOGIC;
    \Using_LWX_SWX_instr.reservation_reg_0\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    incoming_data_valid : in STD_LOGIC;
    \No_XX_Accesses4.valid_cache_hit_reg\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    write_access_reg : in STD_LOGIC;
    Write_Done : in STD_LOGIC;
    force_stop_cmd_i : in STD_LOGIC;
    force_stop_cmd_hold : in STD_LOGIC;
    wic_first_reg_0 : in STD_LOGIC;
    dcache_read_idle : in STD_LOGIC;
    dbg_brki_hit : in STD_LOGIC;
    ex_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    Reg2_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    Pause_Ack_reg_0 : in STD_LOGIC;
    hibernate_i_reg_0 : in STD_LOGIC;
    Write_Resp_Received : in STD_LOGIC;
    mbar_first_reg_0 : in STD_LOGIC;
    mbar_first_reg_1 : in STD_LOGIC;
    mbar_first_reg_2 : in STD_LOGIC;
    Valid_Req0 : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    delay_slot_instr_reg : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep_Out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    trace_reg_write_novalid : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    mem_access : in STD_LOGIC;
    read_access_reg : in STD_LOGIC;
    valid_cache_hit : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : in STD_LOGIC;
    lopt_12 : out STD_LOGIC;
    lopt_13 : in STD_LOGIC;
    lopt_14 : in STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Decode : entity is "Decode";
end design_1_microblaze_1_1_Decode;

architecture STRUCTURE of design_1_microblaze_1_1_Decode is
  signal \^bitfield_extract\ : STD_LOGIC;
  signal \^bitfield_insert\ : STD_LOGIC;
  signal Blocked_Valid_Instr : STD_LOGIC;
  signal Blocked_Valid_Instr0 : STD_LOGIC;
  signal \^buffer_addr\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^d\ : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal Dbg_Clean_Stop_i_1_n_0 : STD_LOGIC;
  signal \^hibernate\ : STD_LOGIC;
  signal I281_out : STD_LOGIC;
  signal \^iready\ : STD_LOGIC;
  signal MSRclr_Instr : STD_LOGIC;
  signal MSRclr_Instr_i : STD_LOGIC;
  signal MSRxxx_Instr_i : STD_LOGIC;
  signal MTSMSR_Write : STD_LOGIC;
  signal \^not_barrel_op\ : STD_LOGIC;
  signal Pause_Ack0 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_100 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_102 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_106 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_110 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_111 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_112 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_113 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_114 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_115 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_116 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_117 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_118 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_119 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_120 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_121 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_122 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_123 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_124 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_125 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_126 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_127 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_36 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_37 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_38 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_39 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_45 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_46 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_48 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_49 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_51 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_52 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_53 : STD_LOGIC;
  signal PreFetch_Buffer_I_n_55 : STD_LOGIC;
  signal R : STD_LOGIC;
  signal Reg_Test_Equal_N_i4_out : STD_LOGIC;
  signal Reg_Test_Equal_i : STD_LOGIC;
  signal S1_out : STD_LOGIC;
  signal \^s80_out\ : STD_LOGIC;
  signal \^shift_oper\ : STD_LOGIC;
  signal \^sleep_decode\ : STD_LOGIC;
  signal \^suspend\ : STD_LOGIC;
  signal \^use_the_pcmp_instr.pcmp_instr_reg_0\ : STD_LOGIC;
  signal \Using_FPGA.MUXCY_JUMP_CARRY3_n_10\ : STD_LOGIC;
  signal \Using_FPGA.MUXCY_JUMP_CARRY3_n_11\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__8_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__12_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_5__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.iFetch_MuxCY_2_n_1\ : STD_LOGIC;
  signal \Using_FPGA.iFetch_MuxCY_2_n_3\ : STD_LOGIC;
  signal \Using_FPGA.iFetch_MuxCY_2_n_4\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.of_PipeRun_MuxCY_1_n_9\ : STD_LOGIC;
  signal \Using_FPGA.reset_BIP_I_reg_n_0\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.reservation_i_4_n_0\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.reservation_reg_n_0\ : STD_LOGIC;
  signal \^using_msr_instr.msrclr_instr_i_reg_0\ : STD_LOGIC;
  signal \Using_MSR_Instr.msrxxx_write_carry_reg_n_0\ : STD_LOGIC;
  signal Write_DCache_I : STD_LOGIC;
  signal active_wakeup : STD_LOGIC;
  signal active_wakeup0 : STD_LOGIC;
  signal buffer_Full : STD_LOGIC;
  signal \^clz_instr\ : STD_LOGIC;
  signal correct_Carry : STD_LOGIC;
  signal correct_Carry_I : STD_LOGIC;
  signal correct_Carry_II : STD_LOGIC;
  signal correct_Carry_Select : STD_LOGIC;
  signal d_AS_I : STD_LOGIC;
  signal d_AS_I12_out : STD_LOGIC;
  signal doublet_Read : STD_LOGIC;
  signal \^ex_valid\ : STD_LOGIC;
  signal ex_Valid_1st_cycle : STD_LOGIC;
  signal ex_first_cycle : STD_LOGIC;
  signal force1 : STD_LOGIC;
  signal force1_i25_out : STD_LOGIC;
  signal force2 : STD_LOGIC;
  signal force_DI1 : STD_LOGIC;
  signal force_DI2 : STD_LOGIC;
  signal force_Val1 : STD_LOGIC;
  signal force_Val1_i23_out : STD_LOGIC;
  signal force_Val2_N : STD_LOGIC;
  signal force_jump1 : STD_LOGIC;
  signal force_jump2 : STD_LOGIC;
  signal hibernate_i_i_1_n_0 : STD_LOGIC;
  signal \^ifetch_in_progress\ : STD_LOGIC;
  signal ifetch_carry1 : STD_LOGIC;
  signal ifetch_carry2 : STD_LOGIC;
  signal \^imm_value\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal \^inhibit_ex\ : STD_LOGIC;
  signal instr_OF : STD_LOGIC_VECTOR ( 0 to 10 );
  signal \^instr_ex\ : STD_LOGIC_VECTOR ( 27 downto 0 );
  signal is_lwx_I : STD_LOGIC;
  signal is_swx_I : STD_LOGIC;
  signal is_swx_I_reg_n_0 : STD_LOGIC;
  signal \^isbyte\ : STD_LOGIC;
  signal \^isdoublet\ : STD_LOGIC;
  signal \^jump\ : STD_LOGIC;
  signal jump2_I_1 : STD_LOGIC;
  signal jump2_I_reg_n_0 : STD_LOGIC;
  signal jump_Carry1 : STD_LOGIC;
  signal jump_Carry2 : STD_LOGIC;
  signal \^load_store_i\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_14\ : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal mbar_decode_I : STD_LOGIC;
  signal mbar_first : STD_LOGIC;
  signal mbar_first_i_2_n_0 : STD_LOGIC;
  signal mbar_first_i_3_n_0 : STD_LOGIC;
  signal mbar_first_reg_n_0 : STD_LOGIC;
  signal mbar_hold_I_reg_n_0 : STD_LOGIC;
  signal mbar_is_sleep : STD_LOGIC;
  signal mbar_is_sleep0 : STD_LOGIC;
  signal mbar_sleep : STD_LOGIC;
  signal mbar_sleep_i_1_n_0 : STD_LOGIC;
  signal missed_IFetch : STD_LOGIC;
  signal msrxxx_carry : STD_LOGIC;
  signal msrxxx_write_carry : STD_LOGIC;
  signal \^mtsmsr_write_i_reg_0\ : STD_LOGIC;
  signal mul_Executing : STD_LOGIC;
  signal mul_Executing0 : STD_LOGIC;
  signal mul_Executing_delayed : STD_LOGIC;
  signal mul_Executing_done : STD_LOGIC;
  signal mul_Executing_done0 : STD_LOGIC;
  signal mul_first : STD_LOGIC;
  signal new_Carry : STD_LOGIC;
  signal nonvalid_IFetch_n_reg_n_0 : STD_LOGIC;
  signal \^of_pause\ : STD_LOGIC;
  signal \^of_piperun\ : STD_LOGIC;
  signal of_PipeRun_Select : STD_LOGIC;
  signal of_PipeRun_without_dready : STD_LOGIC;
  signal of_Valid_Raw : STD_LOGIC;
  signal of_mbar_decode : STD_LOGIC;
  signal ok_To_Stop : STD_LOGIC;
  signal opsel1_SPR_Select_1 : STD_LOGIC;
  signal opsel1_SPR_Select_2_1 : STD_LOGIC;
  signal opsel1_SPR_Select_2_2 : STD_LOGIC;
  signal p_36_out : STD_LOGIC;
  signal p_37_out : STD_LOGIC;
  signal p_38_out : STD_LOGIC;
  signal p_39_out : STD_LOGIC;
  signal pcmp_instr : STD_LOGIC;
  signal quadlet_Read : STD_LOGIC;
  signal \^reg1_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal res_Forward2 : STD_LOGIC;
  signal res_forward1_1 : STD_LOGIC;
  signal res_forward1_2 : STD_LOGIC;
  signal res_forward1_3 : STD_LOGIC;
  signal res_forward2_1 : STD_LOGIC;
  signal res_forward2_2 : STD_LOGIC;
  signal res_forward2_3 : STD_LOGIC;
  signal reset_BIP_I : STD_LOGIC;
  signal reset_delay : STD_LOGIC;
  signal select_ALU_Carry : STD_LOGIC;
  signal set_BIP_I : STD_LOGIC;
  signal \^sext16\ : STD_LOGIC;
  signal \^sext8\ : STD_LOGIC;
  signal shift_Carry_In : STD_LOGIC;
  signal sleep_i0 : STD_LOGIC;
  signal sleep_i00_in : STD_LOGIC;
  signal sleep_i_i_1_n_0 : STD_LOGIC;
  signal sub_Carry : STD_LOGIC;
  signal suspend_i_i_1_n_0 : STD_LOGIC;
  signal swx_ready : STD_LOGIC;
  signal trace_valid_instr_part1 : STD_LOGIC;
  signal trace_valid_instr_part10 : STD_LOGIC;
  signal \^use_imm_reg\ : STD_LOGIC;
  signal use_Reg_Neg_DI : STD_LOGIC;
  signal use_Reg_Neg_DI_i22_out : STD_LOGIC;
  signal use_Reg_Neg_S : STD_LOGIC;
  signal use_Reg_Neg_S_i24_out : STD_LOGIC;
  signal wdc_first : STD_LOGIC;
  signal wdc_first0 : STD_LOGIC;
  signal wdc_first_reg_n_0 : STD_LOGIC;
  signal wic_first : STD_LOGIC;
  signal wic_first0 : STD_LOGIC;
  signal wic_first_reg_n_0 : STD_LOGIC;
  signal \^write_addr_i_reg[2]_0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal write_Carry_I : STD_LOGIC;
  signal write_Carry_I0 : STD_LOGIC;
  signal write_Reg_I_S : STD_LOGIC;
  signal write_Reg_reg_n_0 : STD_LOGIC;
  signal writing : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of D_AS_INST_0 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0 : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of Trace_Reg_Write_INST_0 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of Trace_Valid_Instr_INST_0 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__147\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__80\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__81\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__6\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__2\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__21\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__5\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__6\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4__1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4__12\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5__0\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_9__1\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \Using_LWX_SWX_instr.reservation_i_4\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of Valid_Req_1st_Cycle_i_1 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of hibernate_i_i_1 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of mask_reset_inferred_i_1 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of mbar_first_i_3 : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of mbar_sleep_i_2 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of mul_Executing_done_i_1 : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \void_bit16[15]_i_1\ : label is "soft_lutpair30";
begin
  BitField_Extract <= \^bitfield_extract\;
  BitField_Insert <= \^bitfield_insert\;
  Buffer_Addr(2 downto 0) <= \^buffer_addr\(2 downto 0);
  D(6 downto 0) <= \^d\(6 downto 0);
  Hibernate <= \^hibernate\;
  IReady <= \^iready\;
  Not_Barrel_Op <= \^not_barrel_op\;
  S80_out <= \^s80_out\;
  Shift_Oper <= \^shift_oper\;
  Sleep_Decode <= \^sleep_decode\;
  Suspend <= \^suspend\;
  \Use_The_PCMP_instr.PCMP_Instr_reg_0\ <= \^use_the_pcmp_instr.pcmp_instr_reg_0\;
  \Using_MSR_Instr.MSRclr_Instr_i_reg_0\ <= \^using_msr_instr.msrclr_instr_i_reg_0\;
  \^lopt_1\ <= lopt_2;
  \^lopt_4\ <= lopt_5;
  \^lopt_5\ <= lopt_8;
  \^lopt_7\ <= lopt_11;
  \^lopt_8\ <= lopt_13;
  clz_instr <= \^clz_instr\;
  ex_Valid <= \^ex_valid\;
  iFetch_In_Progress <= \^ifetch_in_progress\;
  imm_Value(0 to 15) <= \^imm_value\(0 to 15);
  inHibit_EX <= \^inhibit_ex\;
  instr_ex(27 downto 0) <= \^instr_ex\(27 downto 0);
  isbyte <= \^isbyte\;
  isdoublet <= \^isdoublet\;
  jump <= \^jump\;
  load_Store_i <= \^load_store_i\;
  lopt_1 <= select_ALU_Carry;
  lopt_10 <= nonvalid_IFetch_n_reg_n_0;
  lopt_12 <= S1_out;
  lopt_15 <= of_PipeRun_without_dready;
  lopt_16 <= of_PipeRun_Select;
  lopt_18 <= lopt_14;
  lopt_3 <= \^lopt_2\;
  lopt_4 <= \^lopt_3\;
  lopt_6 <= force_DI1;
  lopt_7 <= force_jump1;
  lopt_9 <= \^lopt_6\;
  mtsmsr_write_i_reg_0 <= \^mtsmsr_write_i_reg_0\;
  of_Pause <= \^of_pause\;
  of_PipeRun <= \^of_piperun\;
  reg1_Addr(0 to 4) <= \^reg1_addr\(0 to 4);
  sext16 <= \^sext16\;
  sext8 <= \^sext8\;
  use_Imm_Reg <= \^use_imm_reg\;
  \write_Addr_I_reg[2]_0\(2 downto 0) <= \^write_addr_i_reg[2]_0\(2 downto 0);
\Area_Optimized.register_write_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20222020"
    )
        port map (
      I0 => \^ex_valid\,
      I1 => \Using_FPGA.Native_16\,
      I2 => write_Reg_reg_n_0,
      I3 => writing,
      I4 => complete_dready,
      O => reg_Write_dbg
    );
Blocked_Valid_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Blocked_Valid_Instr0,
      Q => Blocked_Valid_Instr,
      R => sync_reset
    );
Compare_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_111,
      Q => compare_Instr,
      R => sync_reset
    );
D_AS_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00B0"
    )
        port map (
      I0 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I1 => is_swx_I_reg_n_0,
      I2 => d_AS_I,
      I3 => \Using_FPGA.Native_16\,
      O => \^d\(4)
    );
Dbg_Clean_Stop_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^use_imm_reg\,
      I1 => jump2_I_reg_n_0,
      O => Dbg_Clean_Stop_i_1_n_0
    );
Dbg_Clean_Stop_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => Dbg_Clean_Stop_i_1_n_0,
      Q => dbg_clean_stop,
      S => sync_reset
    );
Has_Inhibit_EX_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^inhibit_ex\,
      Q => has_inhibit_EX,
      R => sync_reset
    );
\LOCKSTEP_Master_Out[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00D000D000D00000"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I2 => \^load_store_i\,
      I3 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I4 => force_stop_cmd_i,
      I5 => force_stop_cmd_hold,
      O => LOCKSTEP_Master_Out(0)
    );
\No_XX_Accesses4.valid_cache_hit_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBAFF00008A00"
    )
        port map (
      I0 => \No_XX_Accesses4.valid_cache_hit_reg\(2),
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I2 => is_swx_I_reg_n_0,
      I3 => d_AS_I,
      I4 => \Using_FPGA.Native_16\,
      I5 => valid_cache_hit,
      O => \Using_FPGA.Native_14\
    );
Pause_Ack_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101000100010001"
    )
        port map (
      I0 => wic_first_reg_0,
      I1 => \^ifetch_in_progress\,
      I2 => Pause_Ack_reg_0,
      I3 => mul_Executing,
      I4 => mbar_is_sleep,
      I5 => mbar_decode_I,
      O => Pause_Ack0
    );
Pause_Ack_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause_Ack0,
      Q => Pause_Ack,
      R => sync_reset
    );
PreFetch_Buffer_I: entity work.design_1_microblaze_1_1_PreFetch_Buffer
     port map (
      \Area_Debug_Control.dbg_brki_hit_reg\ => \Area_Debug_Control.dbg_brki_hit_reg\,
      CI => \^iready\,
      Clk => Clk,
      D(12) => \^reg1_addr\(0),
      D(11) => \^reg1_addr\(1),
      D(10) => \^reg1_addr\(2),
      D(9) => \^reg1_addr\(3),
      D(8) => \^reg1_addr\(4),
      D(7) => \^imm_value\(0),
      D(6) => \^imm_value\(1),
      D(5) => \^imm_value\(2),
      D(4) => \^imm_value\(3),
      D(3) => \^imm_value\(4),
      D(2) => \^imm_value\(12),
      D(1) => \^imm_value\(13),
      D(0) => \^imm_value\(15),
      DI => DI,
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_16 => D_16,
      D_17 => D_17,
      D_18 => D_18,
      D_19 => D_19,
      D_2 => D_2,
      D_20 => D_20,
      D_21 => D_21,
      D_22 => D_22,
      D_23 => D_23,
      D_24 => D_24,
      D_25 => D_25,
      D_26 => D_26,
      D_27 => D_27,
      D_28 => D_28,
      D_29 => D_29,
      D_3 => D_3,
      D_30 => D_30,
      D_31 => D_31,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      E(0) => E(0),
      MSRclr_Instr_i => MSRclr_Instr_i,
      Q(0) => Q(0),
      R => R,
      Reg2_Data(0 to 31) => Reg2_Data(0 to 31),
      Reg_Test_Equal_N_i4_out => Reg_Test_Equal_N_i4_out,
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      \Serial_Dbg_Intf.control_reg_reg[8]\ => \Serial_Dbg_Intf.control_reg_reg[8]\,
      Sext16_reg => PreFetch_Buffer_I_n_123,
      Sext8_reg => PreFetch_Buffer_I_n_122,
      Sext8_reg_0 => \^sext8\,
      Shift_Oper => \^shift_oper\,
      Sign_Extend_reg => PreFetch_Buffer_I_n_127,
      \Size_17to32.imm_Reg_reg[15]\ => \^of_pause\,
      \Use_Async_Reset.sync_reset_reg\ => PreFetch_Buffer_I_n_118,
      \Using_FPGA.Native\ => \^buffer_addr\(0),
      \Using_FPGA.Native_0\ => \^buffer_addr\(1),
      \Using_FPGA.Native_1\ => \^buffer_addr\(2),
      \Using_FPGA.Native_10\ => PreFetch_Buffer_I_n_46,
      \Using_FPGA.Native_11\ => PreFetch_Buffer_I_n_48,
      \Using_FPGA.Native_12\ => PreFetch_Buffer_I_n_49,
      \Using_FPGA.Native_13\ => PreFetch_Buffer_I_n_51,
      \Using_FPGA.Native_14\ => PreFetch_Buffer_I_n_52,
      \Using_FPGA.Native_15\ => PreFetch_Buffer_I_n_53,
      \Using_FPGA.Native_16\ => PreFetch_Buffer_I_n_55,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_2\ => \^imm_value\(5),
      \Using_FPGA.Native_20\ => PreFetch_Buffer_I_n_100,
      \Using_FPGA.Native_21\ => PreFetch_Buffer_I_n_102,
      \Using_FPGA.Native_22\ => PreFetch_Buffer_I_n_106,
      \Using_FPGA.Native_23\ => PreFetch_Buffer_I_n_110,
      \Using_FPGA.Native_24\ => PreFetch_Buffer_I_n_111,
      \Using_FPGA.Native_25\ => PreFetch_Buffer_I_n_114,
      \Using_FPGA.Native_26\ => PreFetch_Buffer_I_n_116,
      \Using_FPGA.Native_27\ => PreFetch_Buffer_I_n_124,
      \Using_FPGA.Native_28\(15 downto 0) => \Using_FPGA.Native_22\(15 downto 0),
      \Using_FPGA.Native_29\ => \^use_imm_reg\,
      \Using_FPGA.Native_3\ => \^imm_value\(6),
      \Using_FPGA.Native_30\ => S1_out,
      \Using_FPGA.Native_4\ => \^imm_value\(7),
      \Using_FPGA.Native_5\ => \^imm_value\(8),
      \Using_FPGA.Native_6\ => \^imm_value\(9),
      \Using_FPGA.Native_7\ => \^imm_value\(10),
      \Using_FPGA.Native_8\ => \^imm_value\(11),
      \Using_FPGA.Native_9\ => \^imm_value\(14),
      \Using_FPGA.Native_I1\ => mbar_hold_I_reg_n_0,
      \Using_FPGA.Native_I1_0\ => \^ex_valid\,
      \Using_FPGA.set_BIP_I_reg\ => PreFetch_Buffer_I_n_36,
      \Using_MSR_Instr.msrxxx_carry_reg\ => PreFetch_Buffer_I_n_39,
      buffer_Full => buffer_Full,
      byte_i_reg => PreFetch_Buffer_I_n_121,
      complete_dready => complete_dready,
      complete_iready => complete_iready,
      d_AS_I12_out => d_AS_I12_out,
      dbg_brki_hit => dbg_brki_hit,
      doublet_Read => doublet_Read,
      doublet_Read_i_reg => PreFetch_Buffer_I_n_125,
      doublet_i_reg => PreFetch_Buffer_I_n_117,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      ex_Valid_reg => \Using_FPGA.Native_16\,
      ex_Valid_reg_0 => \^load_store_i\,
      force1_i25_out => force1_i25_out,
      force_Val1_i23_out => force_Val1_i23_out,
      inHibit_EX_reg => PreFetch_Buffer_I_n_45,
      inHibit_EX_reg_0 => PreFetch_Buffer_I_n_113,
      inHibit_EX_reg_1 => PreFetch_Buffer_I_n_115,
      instr_OF(10) => instr_OF(0),
      instr_OF(9) => instr_OF(1),
      instr_OF(8) => instr_OF(2),
      instr_OF(7) => instr_OF(3),
      instr_OF(6) => instr_OF(4),
      instr_OF(5) => instr_OF(5),
      instr_OF(4) => instr_OF(6),
      instr_OF(3) => instr_OF(7),
      instr_OF(2) => instr_OF(8),
      instr_OF(1) => instr_OF(9),
      instr_OF(0) => instr_OF(10),
      is_lwx_I => is_lwx_I,
      is_lwx_I_reg => PreFetch_Buffer_I_n_120,
      is_swx_I => is_swx_I,
      is_swx_I_reg => PreFetch_Buffer_I_n_119,
      is_swx_I_reg_0 => is_swx_I_reg_n_0,
      isbyte => \^isbyte\,
      isdoublet => \^isdoublet\,
      jump_Carry2 => jump_Carry2,
      lopt => \^lopt_7\,
      lopt_1 => \^lopt_8\,
      mbar_is_sleep0 => mbar_is_sleep0,
      missed_IFetch => missed_IFetch,
      msrxxx_carry => msrxxx_carry,
      msrxxx_write_carry => msrxxx_write_carry,
      mtsmsr_write_i_reg => PreFetch_Buffer_I_n_38,
      mtsmsr_write_i_reg_0 => \^mtsmsr_write_i_reg_0\,
      mul_Executing => mul_Executing,
      mul_first_reg => \^s80_out\,
      mux_Instr_Read(0 to 31) => mux_Instr_Read(0 to 31),
      nonvalid_IFetch_n_reg => \^jump\,
      nonvalid_IFetch_n_reg_0 => \^inhibit_ex\,
      nonvalid_IFetch_n_reg_1 => \^d\(5),
      nonvalid_IFetch_n_reg_2 => nonvalid_IFetch_n_reg_n_0,
      of_Pause_reg => PreFetch_Buffer_I_n_112,
      of_Valid_Raw => of_Valid_Raw,
      of_mbar_decode => of_mbar_decode,
      p_36_out => p_36_out,
      p_37_out => p_37_out,
      p_38_out => p_38_out,
      p_39_out => p_39_out,
      quadlet_Read => quadlet_Read,
      quadlet_Read_i_reg => PreFetch_Buffer_I_n_126,
      quadlet_Read_i_reg_0 => \^of_piperun\,
      res_Forward2 => res_Forward2,
      reset_BIP_I => reset_BIP_I,
      set_BIP_I => set_BIP_I,
      sext16 => \^sext16\,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => jump2_I_reg_n_0,
      use_Reg_Neg_DI_i22_out => use_Reg_Neg_DI_i22_out,
      use_Reg_Neg_S_i24_out => use_Reg_Neg_S_i24_out,
      wdc_first0 => wdc_first0,
      wic_first0 => wic_first0,
      write_Carry_I0 => write_Carry_I0,
      write_Reg_reg => PreFetch_Buffer_I_n_37,
      write_Reg_reg_0 => write_Reg_reg_n_0
    );
Read_Strobe_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0040"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => \^ex_valid\,
      I2 => \^load_store_i\,
      I3 => writing,
      O => \^d\(3)
    );
Select_Logic_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => write_Carry_I0,
      Q => Select_Logic,
      R => sync_reset
    );
Sext16_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_123,
      Q => \^sext16\,
      R => '0'
    );
Sext8_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_122,
      Q => \^sext8\,
      R => '0'
    );
Shift_Carry_In_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => correct_Carry,
      Q => shift_Carry_In,
      R => sync_reset
    );
Sign_Extend_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_127,
      Q => \^shift_oper\,
      R => sync_reset
    );
Sleep_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => Sleep_Out,
      O => Sleep
    );
Trace_Reg_Write_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A2A2A280"
    )
        port map (
      I0 => trace_reg_write_novalid,
      I1 => jump2_I_1,
      I2 => Blocked_Valid_Instr,
      I3 => mul_Executing_done,
      I4 => trace_valid_instr_part1,
      O => \^d\(0)
    );
Trace_Valid_Instr_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0EE"
    )
        port map (
      I0 => trace_valid_instr_part1,
      I1 => mul_Executing_done,
      I2 => Blocked_Valid_Instr,
      I3 => jump2_I_1,
      O => \^d\(1)
    );
Unsigned_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(14),
      Q => Unsigned_Op,
      R => sync_reset
    );
\Use_The_PCMP_instr.CLZ_Instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => p_39_out,
      Q => \^clz_instr\,
      R => sync_reset
    );
\Use_The_PCMP_instr.PCMP_Instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_116,
      Q => pcmp_instr,
      R => sync_reset
    );
\Using_Barrel_Shifter.BitField_Extract_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => p_38_out,
      Q => \^bitfield_extract\,
      R => sync_reset
    );
\Using_Barrel_Shifter.BitField_Insert_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => p_37_out,
      Q => \^bitfield_insert\,
      R => sync_reset
    );
\Using_Barrel_Shifter.Not_Barrel_Op_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_118,
      Q => \^not_barrel_op\,
      R => '0'
    );
\Using_Ext_Databus.mem_access_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7575557530300030"
    )
        port map (
      I0 => complete_dready,
      I1 => \Using_FPGA.Native_16\,
      I2 => d_AS_I,
      I3 => is_swx_I_reg_n_0,
      I4 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I5 => mem_access,
      O => \Using_FPGA.Native_13\
    );
\Using_FPGA.ALU_Carry_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_67
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_piperun\,
      carry_In => carry_In,
      correct_Carry_II => correct_Carry_II,
      sync_reset => sync_reset
    );
\Using_FPGA.ALU_Carry_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_68
     port map (
      correct_Carry => correct_Carry,
      correct_Carry_I => correct_Carry_I,
      correct_Carry_Select => correct_Carry_Select,
      lopt => \^lopt_9\,
      lopt_1 => \^lopt_10\,
      lopt_2 => \^lopt_11\,
      sub_Carry => sub_Carry
    );
\Using_FPGA.ALU_OP0_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_69
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_piperun\,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I_n_53,
      alu_Op(0) => alu_Op(0),
      sync_reset => sync_reset
    );
\Using_FPGA.ALU_OP1_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_70
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_piperun\,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I_n_52,
      alu_Op(0) => alu_Op(1),
      sync_reset => sync_reset
    );
\Using_FPGA.Correct_Carry_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_71
     port map (
      Shift_Carry_In_reg => \^ex_valid\,
      Shift_Carry_In_reg_0 => \Using_FPGA.Native_16\,
      Shift_Carry_In_reg_1 => \Using_MSR_Instr.msrxxx_write_carry_reg_n_0\,
      Shift_Carry_In_reg_2(0) => \No_XX_Accesses4.valid_cache_hit_reg\(0),
      Shift_Carry_In_reg_3 => \Using_FPGA.Native_i_3__2_n_0\,
      Shift_Carry_In_reg_4 => is_swx_I_reg_n_0,
      Shift_Carry_In_reg_5 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      correct_Carry => correct_Carry,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\,
      lopt_2 => \^lopt_3\,
      msrxxx_carry => msrxxx_carry,
      new_Carry => new_Carry,
      write_Carry_I => write_Carry_I
    );
\Using_FPGA.Force1_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_72
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      force1 => force1,
      force1_i25_out => force1_i25_out
    );
\Using_FPGA.Force2_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_73
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I_n_55,
      force2 => force2
    );
\Using_FPGA.Force_Val1_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_74
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      force_Val1 => force_Val1,
      force_Val1_i23_out => force_Val1_i23_out
    );
\Using_FPGA.Force_Val2_FDRSE\: entity work.design_1_microblaze_1_1_MB_FDRSE_75
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I_n_51,
      force_Val2_N => force_Val2_N
    );
\Using_FPGA.I_correct_Carry_Select\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized9\
     port map (
      \Using_FPGA.Native_0\ => PreFetch_Buffer_I_n_52,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I_n_53,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I_n_124,
      correct_Carry_Select => correct_Carry_Select
    );
\Using_FPGA.Intr_Carry_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_76
     port map (
      correct_Carry_I => correct_Carry_I,
      correct_Carry_II => correct_Carry_II,
      lopt => \^lopt_9\,
      lopt_1 => \^lopt_10\,
      lopt_2 => \^lopt_11\
    );
\Using_FPGA.MULT_AND_I\: entity work.design_1_microblaze_1_1_MB_MULT_AND
     port map (
      \Using_FPGA.Native_0\ => PreFetch_Buffer_I_n_52,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I_n_53,
      sub_Carry => sub_Carry
    );
\Using_FPGA.MUXCY_JUMP_CARRY\: entity work.design_1_microblaze_1_1_MB_MUXCY_77
     port map (
      Reg_zero => Reg_zero,
      force_DI1 => force_DI1,
      force_jump1 => force_jump1,
      jump_Carry1 => jump_Carry1,
      lopt => \^lopt_4\
    );
\Using_FPGA.MUXCY_JUMP_CARRY2\: entity work.design_1_microblaze_1_1_MB_MUXCY_78
     port map (
      force_DI2 => force_DI2,
      force_jump2 => force_jump2,
      jump_Carry1 => jump_Carry1,
      jump_Carry2 => jump_Carry2,
      lopt => \^lopt_12\,
      lopt_1 => \^lopt_13\,
      lopt_2 => PreFetch_Buffer_I_n_112,
      lopt_3 => \^lopt_14\,
      lopt_4 => \^lopt_15\,
      lopt_5 => buffer_Full,
      lopt_6 => \^lopt_16\,
      lopt_7 => lopt_17,
      lopt_8 => iFetch_In_Progress_reg_0
    );
\Using_FPGA.MUXCY_JUMP_CARRY3\: entity work.design_1_microblaze_1_1_MB_MUXCY_79
     port map (
      PC_Write => PC_Write,
      R => R,
      \Using_FPGA.Native_0\ => using_Imm_reg_0,
      \Using_FPGA.Native_1\ => \^d\(5),
      \Using_FPGA.Native_2\ => \^inhibit_ex\,
      branch_with_delay => branch_with_delay,
      dcache_read_idle => dcache_read_idle,
      delay_slot_instr_reg => jump2_I_reg_n_0,
      ex_Valid_1st_cycle_reg => \^of_piperun\,
      ex_Valid_reg => PreFetch_Buffer_I_n_100,
      ex_Valid_reg_0 => \^ex_valid\,
      ex_first_cycle => ex_first_cycle,
      inHibit_EX_reg => \^s80_out\,
      inHibit_EX_reg_0 => inHibit_EX_reg_0,
      inHibit_EX_reg_1 => \Using_FPGA.MUXCY_JUMP_CARRY3_n_10\,
      inHibit_EX_reg_2 => \Using_FPGA.MUXCY_JUMP_CARRY3_n_11\,
      jump_Carry2 => jump_Carry2,
      lopt => \^lopt_12\,
      lopt_1 => \^lopt_13\,
      mbar_first => mbar_first,
      mbar_first_reg => mbar_first_i_2_n_0,
      mbar_first_reg_0 => mbar_first_i_3_n_0,
      mbar_sleep => mbar_sleep,
      mul_Executing0 => mul_Executing0,
      mul_Executing_reg => PreFetch_Buffer_I_n_115,
      mul_first => mul_first,
      of_Pause_reg => \^jump\,
      of_mbar_decode => of_mbar_decode,
      sync_reset => sync_reset,
      trace_jump_taken_i_reg => PreFetch_Buffer_I_n_112,
      wdc_first => wdc_first,
      wdc_first0 => wdc_first0,
      wdc_first_reg => \Using_FPGA.Native_16\,
      wdc_first_reg_0 => wdc_first_reg_n_0,
      wic_first => wic_first,
      wic_first0 => wic_first0,
      wic_first_reg => wic_first_reg_0,
      wic_first_reg_0 => wic_first_reg_n_0
    );
\Using_FPGA.Native_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BAAA"
    )
        port map (
      I0 => incoming_data_valid,
      I1 => \Using_FPGA.Native_16\,
      I2 => \^ex_valid\,
      I3 => Write_DCache_I,
      O => WEBWE(0)
    );
\Using_FPGA.Native_i_1__106\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E2"
    )
        port map (
      I0 => \void_bit16_reg[15]\(5),
      I1 => \^instr_ex\(4),
      I2 => shift_Carry_In,
      I3 => \^instr_ex\(5),
      O => Shifted
    );
\Using_FPGA.Native_i_1__138\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => pcmp_instr,
      I1 => \Using_FPGA.Native_16\,
      O => \Use_The_PCMP_instr.PCMP_Instr_reg_1\
    );
\Using_FPGA.Native_i_1__139\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => pcmp_instr,
      I2 => \^instr_ex\(23),
      O => \Using_FPGA.Native_8\
    );
\Using_FPGA.Native_i_1__140\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => pcmp_instr,
      I1 => \Using_FPGA.Native_16\,
      O => \Use_The_PCMP_instr.PCMP_Instr_reg_2\
    );
\Using_FPGA.Native_i_1__141\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => pcmp_instr,
      I2 => \^instr_ex\(23),
      O => \Using_FPGA.Native_9\
    );
\Using_FPGA.Native_i_1__142\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => pcmp_instr,
      I1 => \Using_FPGA.Native_16\,
      O => \Use_The_PCMP_instr.PCMP_Instr_reg_3\
    );
\Using_FPGA.Native_i_1__143\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => pcmp_instr,
      I2 => \^instr_ex\(23),
      O => \Using_FPGA.Native_10\
    );
\Using_FPGA.Native_i_1__147\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => \^bitfield_extract\,
      I1 => \^instr_ex\(9),
      I2 => \^bitfield_insert\,
      O => \Using_Barrel_Shifter.BitField_Extract_reg_0\
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBF00BFFFBF0080"
    )
        port map (
      I0 => \Using_FPGA.Native_17\,
      I1 => MSRclr_Instr,
      I2 => MSRxxx_Instr_i,
      I3 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I4 => sync_reset,
      I5 => \Using_FPGA.reset_BIP_I_reg_n_0\,
      O => \Using_FPGA.Native\
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBFFFFF00800000"
    )
        port map (
      I0 => \Using_FPGA.Native_18\,
      I1 => MSRclr_Instr,
      I2 => MSRxxx_Instr_i,
      I3 => \Using_FPGA.Native_16\,
      I4 => \^ex_valid\,
      I5 => sync_reset,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBFFFFF00800000"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(0),
      I1 => MSRclr_Instr,
      I2 => MSRxxx_Instr_i,
      I3 => \Using_FPGA.Native_16\,
      I4 => \^ex_valid\,
      I5 => sync_reset,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__71\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EC20EC20EC20EF20"
    )
        port map (
      I0 => \void_bit16_reg[15]\(3),
      I1 => \Using_FPGA.Native_16\,
      I2 => \^sext8\,
      I3 => doublet_Read,
      I4 => pcmp_instr,
      I5 => \^clz_instr\,
      O => data_Read_Mask(0)
    );
\Using_FPGA.Native_i_1__73\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB888B888B888"
    )
        port map (
      I0 => \void_bit16_reg[15]\(3),
      I1 => \Using_FPGA.Native_i_3__5_n_0\,
      I2 => \void_bit16_reg[15]\(4),
      I3 => \Using_FPGA.Native_i_4__12_n_0\,
      I4 => quadlet_Read,
      I5 => \^use_the_pcmp_instr.pcmp_instr_reg_0\,
      O => data_Read_Mask(1)
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBFFFFF00800000"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(1),
      I1 => MSRclr_Instr,
      I2 => MSRxxx_Instr_i,
      I3 => \Using_FPGA.Native_16\,
      I4 => \^ex_valid\,
      I5 => sync_reset,
      O => MSR_Rst
    );
\Using_FPGA.Native_i_1__80\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A0A2"
    )
        port map (
      I0 => Shift_Logic_Res,
      I1 => \^clz_instr\,
      I2 => \Using_FPGA.Native_16\,
      I3 => pcmp_instr,
      O => \Use_The_PCMP_instr.CLZ_Instr_reg_0\(0)
    );
\Using_FPGA.Native_i_1__81\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A0A2"
    )
        port map (
      I0 => \Using_FPGA.Native_21\,
      I1 => \^clz_instr\,
      I2 => \Using_FPGA.Native_16\,
      I3 => pcmp_instr,
      O => \Use_The_PCMP_instr.CLZ_Instr_reg_0\(1)
    );
\Using_FPGA.Native_i_1__82\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => pcmp_instr,
      I2 => \^instr_ex\(23),
      O => Enable_2
    );
\Using_FPGA.Native_i_1__83\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => pcmp_instr,
      I1 => \Using_FPGA.Native_16\,
      O => PCMP_Instr2_out
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AEAAA2AA"
    )
        port map (
      I0 => \void_bit16_reg[15]\(1),
      I1 => \^ex_valid\,
      I2 => \Using_FPGA.Native_16\,
      I3 => MSRxxx_Instr_i,
      I4 => shift_Carry_In,
      O => Op1_Shift
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AEAAA2AA"
    )
        port map (
      I0 => \void_bit16_reg[15]\(5),
      I1 => \^ex_valid\,
      I2 => \Using_FPGA.Native_16\,
      I3 => MSRxxx_Instr_i,
      I4 => shift_Carry_In,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4544454555555555"
    )
        port map (
      I0 => reset_delay,
      I1 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I2 => write_Reg_reg_n_0,
      I3 => writing,
      I4 => complete_dready,
      I5 => \Using_FPGA.Native_i_2__8_n_0\,
      O => reset_delay_reg_0
    );
\Using_FPGA.Native_i_2__43\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFE2E2E2FFE2"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__1_n_0\,
      I1 => \^using_msr_instr.msrclr_instr_i_reg_0\,
      I2 => \Using_FPGA.Native_17\,
      I3 => \No_XX_Accesses4.valid_cache_hit_reg\(1),
      I4 => MTSMSR_Write,
      I5 => \void_bit16_reg[15]\(2),
      O => \Using_FPGA.Native_11\
    );
\Using_FPGA.Native_i_2__44\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFF404040FF40"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => \^ex_valid\,
      I2 => write_Carry_I,
      I3 => \No_XX_Accesses4.valid_cache_hit_reg\(0),
      I4 => \Using_FPGA.Native_i_3__0_n_0\,
      I5 => \Using_FPGA.Native_i_4__0_n_0\,
      O => \Using_FPGA.Native_12\
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \^instr_ex\(23),
      I1 => \Using_FPGA.Native_16\,
      I2 => pcmp_instr,
      O => I3
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^instr_ex\(20),
      I1 => \^instr_ex\(21),
      I2 => \^write_addr_i_reg[2]_0\(0),
      I3 => \^write_addr_i_reg[2]_0\(1),
      I4 => \^write_addr_i_reg[2]_0\(2),
      O => \Using_FPGA.Native_i_2__8_n_0\
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55FF555555D55555"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__2_n_0\,
      I1 => \Using_FPGA.Native_20\,
      I2 => MSRxxx_Instr_i,
      I3 => \Using_FPGA.Native_16\,
      I4 => \^ex_valid\,
      I5 => \^mtsmsr_write_i_reg_0\,
      O => \Using_FPGA.Native_i_3__0_n_0\
    );
\Using_FPGA.Native_i_3__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => set_BIP_I,
      I1 => \^ex_valid\,
      I2 => \Using_FPGA.Native_16\,
      O => \Using_FPGA.Native_i_3__1_n_0\
    );
\Using_FPGA.Native_i_3__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F1FFFFFF"
    )
        port map (
      I0 => is_lwx_I,
      I1 => is_swx_I_reg_n_0,
      I2 => \Using_FPGA.Native_16\,
      I3 => \^ex_valid\,
      I4 => \^load_store_i\,
      O => \Using_FPGA.Native_i_3__2_n_0\
    );
\Using_FPGA.Native_i_3__21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0400"
    )
        port map (
      I0 => MSRclr_Instr,
      I1 => MSRxxx_Instr_i,
      I2 => \Using_FPGA.Native_16\,
      I3 => \^ex_valid\,
      O => \^using_msr_instr.msrclr_instr_i_reg_0\
    );
\Using_FPGA.Native_i_3__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^sext8\,
      I1 => \Using_FPGA.Native_16\,
      O => \Using_FPGA.Native_i_3__5_n_0\
    );
\Using_FPGA.Native_i_3__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"CD"
    )
        port map (
      I0 => pcmp_instr,
      I1 => \Using_FPGA.Native_16\,
      I2 => \^clz_instr\,
      O => \^use_the_pcmp_instr.pcmp_instr_reg_0\
    );
\Using_FPGA.Native_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F704F7F7F7040404"
    )
        port map (
      I0 => MSRclr_Instr,
      I1 => \Using_FPGA.Native_20\,
      I2 => \Using_FPGA.Native_i_5__0_n_0\,
      I3 => \void_bit16_reg[15]\(1),
      I4 => \Using_FPGA.Native_i_3__2_n_0\,
      I5 => \Using_FPGA.Native_i_6__1_n_0\,
      O => \Using_FPGA.Native_i_4__0_n_0\
    );
\Using_FPGA.Native_i_4__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^mtsmsr_write_i_reg_0\,
      I1 => \^ex_valid\,
      I2 => \Using_FPGA.Native_16\,
      O => MTSMSR_Write
    );
\Using_FPGA.Native_i_4__12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^sext16\,
      I1 => \Using_FPGA.Native_16\,
      O => \Using_FPGA.Native_i_4__12_n_0\
    );
\Using_FPGA.Native_i_5__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => \^ex_valid\,
      I1 => \Using_FPGA.Native_16\,
      I2 => MSRxxx_Instr_i,
      O => \Using_FPGA.Native_i_5__0_n_0\
    );
\Using_FPGA.Native_i_6__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      O => \Using_FPGA.Native_i_6__1_n_0\
    );
\Using_FPGA.Native_i_9__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^clz_instr\,
      I1 => \Using_FPGA.Native_16\,
      O => \Use_The_PCMP_instr.CLZ_Instr_reg_1\
    );
\Using_FPGA.New_Carry_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_80
     port map (
      LO => LO,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\(0) => \void_bit16_reg[15]\(0),
      \Using_FPGA.Native_1\ => \^ex_valid\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_16\,
      lopt => lopt,
      new_Carry => new_Carry,
      select_ALU_Carry => select_ALU_Carry,
      sync_reset => sync_reset,
      write_Carry_I => write_Carry_I
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_1\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized1\
     port map (
      instr_OF(3) => instr_OF(0),
      instr_OF(2) => instr_OF(1),
      instr_OF(1) => instr_OF(3),
      instr_OF(0) => instr_OF(4),
      opsel1_SPR_Select_1 => opsel1_SPR_Select_1
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized3\
     port map (
      instr_OF(3) => instr_OF(0),
      instr_OF(2) => instr_OF(1),
      instr_OF(1) => instr_OF(2),
      instr_OF(0) => instr_OF(3),
      opsel1_SPR_Select_2_1 => opsel1_SPR_Select_2_1
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_3\: entity work.design_1_microblaze_1_1_MB_LUT3
     port map (
      D(0) => \^imm_value\(1),
      instr_OF(1) => instr_OF(4),
      instr_OF(0) => instr_OF(5),
      opsel1_SPR_Select_2_2 => opsel1_SPR_Select_2_2
    );
\Using_FPGA.OpSel1_SPR_Select_LUT_4\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized1\
     port map (
      opsel1_SPR => opsel1_SPR,
      opsel1_SPR_Select_1 => opsel1_SPR_Select_1,
      opsel1_SPR_Select_2_1 => opsel1_SPR_Select_2_1,
      opsel1_SPR_Select_2_2 => opsel1_SPR_Select_2_2
    );
\Using_FPGA.Reg_Test_Equal_FDSE\: entity work.design_1_microblaze_1_1_MB_FDSE
     port map (
      Clk => Clk,
      Reg_Test_Equal => Reg_Test_Equal,
      Reg_Test_Equal_i => Reg_Test_Equal_i,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\
    );
\Using_FPGA.Reg_Test_Equal_N_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_81
     port map (
      Clk => Clk,
      Reg_Test_Equal_N_i4_out => Reg_Test_Equal_N_i4_out,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      reg_Test_Equal_N => reg_Test_Equal_N
    );
\Using_FPGA.Res_Forward1_LUT1\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized5\
     port map (
      \Using_FPGA.Native_0\ => \^instr_ex\(21),
      \Using_FPGA.Native_1\ => \^instr_ex\(20),
      reg1_Addr(1) => \^reg1_addr\(0),
      reg1_Addr(0) => \^reg1_addr\(1),
      res_forward1_1 => res_forward1_1
    );
\Using_FPGA.Res_Forward1_LUT2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized5_82\
     port map (
      \Using_FPGA.Native_0\ => \^write_addr_i_reg[2]_0\(2),
      \Using_FPGA.Native_1\ => \^write_addr_i_reg[2]_0\(1),
      reg1_Addr(1) => \^reg1_addr\(2),
      reg1_Addr(0) => \^reg1_addr\(3),
      res_forward1_2 => res_forward1_2
    );
\Using_FPGA.Res_Forward1_LUT3\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized3\
     port map (
      \Using_FPGA.Native_0\ => \^write_addr_i_reg[2]_0\(0),
      \Using_FPGA.Native_1\ => \^ex_valid\,
      reg1_Addr(0) => \^reg1_addr\(4),
      res_forward1_3 => res_forward1_3
    );
\Using_FPGA.Res_Forward1_LUT4\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized7\
     port map (
      res_Forward1 => res_Forward1,
      res_forward1_1 => res_forward1_1,
      res_forward1_2 => res_forward1_2,
      res_forward1_3 => res_forward1_3,
      write_Reg_I_S => write_Reg_I_S
    );
\Using_FPGA.Res_Forward2_LUT1\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized5_83\
     port map (
      \Using_FPGA.Native_0\ => \^instr_ex\(21),
      \Using_FPGA.Native_1\ => \^instr_ex\(20),
      imm_Value(1) => \^imm_value\(0),
      imm_Value(0) => \^imm_value\(1),
      res_forward2_1 => res_forward2_1
    );
\Using_FPGA.Res_Forward2_LUT2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized5_84\
     port map (
      \Using_FPGA.Native_0\ => \^write_addr_i_reg[2]_0\(2),
      \Using_FPGA.Native_1\ => \^write_addr_i_reg[2]_0\(1),
      imm_Value(1) => \^imm_value\(2),
      imm_Value(0) => \^imm_value\(3),
      res_forward2_2 => res_forward2_2
    );
\Using_FPGA.Res_Forward2_LUT3\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized3_85\
     port map (
      \Using_FPGA.Native_0\ => \^write_addr_i_reg[2]_0\(0),
      \Using_FPGA.Native_1\ => \^ex_valid\,
      imm_Value(0) => \^imm_value\(4),
      res_forward2_3 => res_forward2_3
    );
\Using_FPGA.Res_Forward2_LUT4\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized7_86\
     port map (
      res_Forward2 => res_Forward2,
      res_forward2_1 => res_forward2_1,
      res_forward2_2 => res_forward2_2,
      res_forward2_3 => res_forward2_3,
      write_Reg_I_S => write_Reg_I_S
    );
\Using_FPGA.Use_Reg_Neg_DI_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_87
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      use_Reg_Neg_DI => use_Reg_Neg_DI,
      use_Reg_Neg_DI_i22_out => use_Reg_Neg_DI_i22_out
    );
\Using_FPGA.Use_Reg_Neg_S_FDRE\: entity work.design_1_microblaze_1_1_MB_FDRE_88
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^s80_out\,
      \Using_FPGA.Native_1\ => \^of_piperun\,
      use_Reg_Neg_S => use_Reg_Neg_S,
      use_Reg_Neg_S_i24_out => use_Reg_Neg_S_i24_out
    );
\Using_FPGA.Valid_Instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ok_To_Stop,
      Q => Valid_Instr_i,
      R => sync_reset
    );
\Using_FPGA.clean_iReady_MuxCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_89
     port map (
      IReady => \^iready\,
      complete_iready => complete_iready,
      lopt => \^lopt_5\,
      lopt_1 => \^lopt_6\,
      \write_Addr_I_reg[3]\ => nonvalid_IFetch_n_reg_n_0
    );
\Using_FPGA.force_di1_LUT3\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized5\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      force_DI1 => force_DI1,
      force_Val1 => force_Val1,
      use_Reg_Neg_DI => use_Reg_Neg_DI
    );
\Using_FPGA.force_di2_LUT4\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized11\
     port map (
      \Using_FPGA.Native_0\ => \^ex_valid\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_16\,
      force_DI2 => force_DI2,
      force_Val2_N => force_Val2_N
    );
\Using_FPGA.force_jump1_LUT3\: entity work.\design_1_microblaze_1_1_MB_LUT3__parameterized5_90\
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      force1 => force1,
      force_jump1 => force_jump1,
      use_Reg_Neg_S => use_Reg_Neg_S
    );
\Using_FPGA.force_jump2_LUT4\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized3_91\
     port map (
      \Using_FPGA.Native_0\ => \^ex_valid\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_16\,
      force2 => force2,
      force_jump2 => force_jump2
    );
\Using_FPGA.iFetch_MuxCY_1\: entity work.design_1_microblaze_1_1_MB_MUXCY_92
     port map (
      \Using_FPGA.Native_0\ => \^jump\,
      buffer_Full => buffer_Full,
      ifetch_carry1 => ifetch_carry1,
      lopt => \^lopt_14\,
      lopt_1 => \^lopt_15\
    );
\Using_FPGA.iFetch_MuxCY_2\: entity work.design_1_microblaze_1_1_MB_MUXCY_93
     port map (
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ => \Using_LWX_SWX_instr.reservation_reg_0\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\ => \^ifetch_in_progress\,
      complete_iready => complete_iready,
      iFetch_In_Progress_reg => \Using_FPGA.iFetch_MuxCY_2_n_3\,
      iFetch_In_Progress_reg_0 => iFetch_In_Progress_reg_0,
      ifetch_carry1 => ifetch_carry1,
      ifetch_carry2 => ifetch_carry2,
      lopt => \^lopt_16\,
      lopt_1 => lopt_17,
      mbar_decode_I => mbar_decode_I,
      mbar_hold_I_reg => \Using_FPGA.iFetch_MuxCY_2_n_1\,
      mbar_hold_I_reg_0 => \^of_piperun\,
      mbar_hold_I_reg_1 => mbar_hold_I_reg_n_0,
      missed_IFetch => missed_IFetch,
      missed_IFetch_reg => \Using_FPGA.iFetch_MuxCY_2_n_4\,
      missed_IFetch_reg_0 => \^jump\,
      mul_Executing => mul_Executing,
      mul_Executing_reg => \^d\(5),
      of_mbar_decode => of_mbar_decode,
      sync_reset => sync_reset
    );
\Using_FPGA.iFetch_MuxCY_3\: entity work.design_1_microblaze_1_1_MB_MUXCY_94
     port map (
      D(0) => \^d\(6),
      \Serial_Dbg_Intf.status_reg_reg[25]\ => \^ifetch_in_progress\,
      ifetch_carry2 => ifetch_carry2
    );
\Using_FPGA.of_PipeRun_MuxCY_1\: entity work.design_1_microblaze_1_1_MB_MUXCY_95
     port map (
      \Area_Debug_Control.force_stop_cmd_hold_reg\ => \^inhibit_ex\,
      \Area_Debug_Control.force_stop_cmd_hold_reg_0\ => \^jump\,
      Blocked_Valid_Instr0 => Blocked_Valid_Instr0,
      Blocked_Valid_Instr_reg => jump2_I_reg_n_0,
      Buffer_Addr(0) => \^buffer_addr\(0),
      \Using_FPGA.Native_0\ => S1_out,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_7\,
      \Using_LWX_SWX_instr.reservation_reg\ => \Using_FPGA.of_PipeRun_MuxCY_1_n_9\,
      \Using_LWX_SWX_instr.reservation_reg_0\ => is_swx_I_reg_n_0,
      \Using_LWX_SWX_instr.reservation_reg_1\ => \Using_LWX_SWX_instr.reservation_reg_0\,
      \Using_LWX_SWX_instr.reservation_reg_2\ => \Using_LWX_SWX_instr.reservation_i_4_n_0\,
      complete_dready => complete_dready,
      complete_iready => complete_iready,
      delay_slot_instr_reg => delay_slot_instr_reg,
      force_stop_cmd_hold => force_stop_cmd_hold,
      force_stop_cmd_i => force_stop_cmd_i,
      inHibit_EX_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_1\,
      inHibit_EX_reg_0 => PreFetch_Buffer_I_n_45,
      inHibit_EX_reg_1 => nonvalid_IFetch_n_reg_n_0,
      instr_OF(1) => instr_OF(0),
      instr_OF(0) => instr_OF(1),
      is_lwx_I => is_lwx_I,
      is_swx_I => is_swx_I,
      is_swx_I_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_4\,
      load_Store_i_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\,
      load_Store_i_reg_0 => \^s80_out\,
      load_Store_i_reg_1 => \^load_store_i\,
      load_Store_i_reg_2 => \Using_FPGA.Native_16\,
      lopt => lopt_18,
      mul_Executing_reg => \^of_piperun\,
      of_PipeRun_Select => of_PipeRun_Select,
      of_PipeRun_without_dready => of_PipeRun_without_dready,
      ok_To_Stop => ok_To_Stop,
      p_2_out => p_2_out,
      set_BIP_I => set_BIP_I,
      swx_ready => swx_ready,
      swx_ready_reg => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      sync_reset => sync_reset,
      using_Imm_reg => \Using_FPGA.of_PipeRun_MuxCY_1_n_2\,
      using_Imm_reg_0 => \^use_imm_reg\,
      using_Imm_reg_1 => PreFetch_Buffer_I_n_49,
      using_Imm_reg_2 => using_Imm_reg_0
    );
\Using_FPGA.of_PipeRun_Select_LUT5\: entity work.design_1_microblaze_1_1_MB_LUT5
     port map (
      I281_out => I281_out,
      \Using_FPGA.Native_0\ => using_Imm_reg_0,
      \Using_FPGA.Native_1\ => \^of_pause\,
      mul_Executing => mul_Executing,
      of_PipeRun_Select => of_PipeRun_Select,
      of_Valid_Raw => of_Valid_Raw
    );
\Using_FPGA.of_PipeRun_without_dready_LUT5\: entity work.\design_1_microblaze_1_1_MB_LUT5__parameterized1\
     port map (
      I281_out => I281_out,
      \Using_FPGA.Native_0\ => using_Imm_reg_0,
      \Using_FPGA.Native_1\ => \^of_pause\,
      \Using_FPGA.Native_2\ => \^load_store_i\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_16\,
      mul_Executing => mul_Executing,
      of_PipeRun_without_dready => of_PipeRun_without_dready,
      of_Valid_Raw => of_Valid_Raw
    );
\Using_FPGA.reset_BIP_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => reset_BIP_I,
      Q => \Using_FPGA.reset_BIP_I_reg_n_0\,
      R => sync_reset
    );
\Using_FPGA.set_BIP_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_36,
      Q => set_BIP_I,
      R => '0'
    );
\Using_LWX_SWX_instr.reservation_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^load_store_i\,
      I1 => \^ex_valid\,
      I2 => \Using_FPGA.Native_16\,
      O => \Using_LWX_SWX_instr.reservation_i_4_n_0\
    );
\Using_LWX_SWX_instr.reservation_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_4\,
      Q => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      R => '0'
    );
\Using_MSR_Instr.MSRclr_Instr_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => MSRclr_Instr_i,
      Q => MSRclr_Instr,
      R => sync_reset
    );
\Using_MSR_Instr.MSRxxx_Instr_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => p_36_out,
      Q => MSRxxx_Instr_i,
      R => sync_reset
    );
\Using_MSR_Instr.msrxxx_carry_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_39,
      Q => msrxxx_carry,
      R => '0'
    );
\Using_MSR_Instr.msrxxx_write_carry_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => msrxxx_write_carry,
      Q => \Using_MSR_Instr.msrxxx_write_carry_reg_n_0\,
      R => sync_reset
    );
\Using_Mul_Instr.ex_not_mul_op_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_48,
      Q => ex_not_mul_op,
      R => sync_reset
    );
Valid_Req_1st_Cycle_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44040000"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => d_AS_I,
      I2 => is_swx_I_reg_n_0,
      I3 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I4 => Valid_Req0,
      O => Valid_Req_1st_Cycle0
    );
Write_DCache_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => wdc_first0,
      Q => Write_DCache_I,
      R => sync_reset
    );
Write_ICache_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => wic_first0,
      Q => Write_ICache_I,
      R => sync_reset
    );
Write_Strobe_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000D00000000000"
    )
        port map (
      I0 => is_swx_I_reg_n_0,
      I1 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I2 => \^load_store_i\,
      I3 => \^ex_valid\,
      I4 => \Using_FPGA.Native_16\,
      I5 => writing,
      O => \^d\(2)
    );
Write_Strobe_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000FF08"
    )
        port map (
      I0 => \^d\(2),
      I1 => d_AS_I,
      I2 => \Using_FPGA.Native_16\,
      I3 => write_access_reg,
      I4 => Write_Done,
      I5 => sync_reset,
      O => d_AS_I_reg_0
    );
active_wakeup_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFEFE00"
    )
        port map (
      I0 => \^hibernate\,
      I1 => \^suspend\,
      I2 => \^sleep_decode\,
      I3 => wakeup_i(1),
      I4 => wakeup_i(0),
      O => active_wakeup0
    );
active_wakeup_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_wakeup0,
      Q => active_wakeup,
      R => sync_reset
    );
byte_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_121,
      Q => \^isbyte\,
      R => '0'
    );
d_AS_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => d_AS_I12_out,
      Q => d_AS_I,
      R => sync_reset
    );
doublet_Read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_125,
      Q => doublet_Read,
      R => sync_reset
    );
doublet_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_117,
      Q => \^isdoublet\,
      R => '0'
    );
ex_Valid_1st_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.MUXCY_JUMP_CARRY3_n_11\,
      Q => ex_Valid_1st_cycle,
      R => '0'
    );
ex_Valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.MUXCY_JUMP_CARRY3_n_10\,
      Q => \^ex_valid\,
      R => sync_reset
    );
ex_first_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^of_piperun\,
      Q => ex_first_cycle,
      R => sync_reset
    );
hibernate_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => \^hibernate\,
      I1 => sleep_i00_in,
      I2 => \^instr_ex\(21),
      I3 => active_wakeup,
      I4 => sync_reset,
      O => hibernate_i_i_1_n_0
    );
hibernate_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A800A800A800"
    )
        port map (
      I0 => mbar_sleep,
      I1 => \^write_addr_i_reg[2]_0\(0),
      I2 => hibernate_i_reg_0,
      I3 => \^write_addr_i_reg[2]_0\(1),
      I4 => dcache_read_idle,
      I5 => Write_Resp_Received,
      O => sleep_i00_in
    );
hibernate_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => hibernate_i_i_1_n_0,
      Q => \^hibernate\,
      R => '0'
    );
iFetch_In_Progress_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.iFetch_MuxCY_2_n_3\,
      Q => \^ifetch_in_progress\,
      R => sync_reset
    );
inHibit_EX_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_1\,
      Q => \^inhibit_ex\,
      R => '0'
    );
\instr_EX_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(0),
      Q => \^instr_ex\(27),
      R => sync_reset
    );
\instr_EX_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^reg1_addr\(0),
      Q => \^instr_ex\(19),
      R => sync_reset
    );
\instr_EX_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^reg1_addr\(1),
      Q => \^instr_ex\(18),
      R => sync_reset
    );
\instr_EX_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^reg1_addr\(2),
      Q => \^instr_ex\(17),
      R => sync_reset
    );
\instr_EX_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^reg1_addr\(3),
      Q => \^instr_ex\(16),
      R => sync_reset
    );
\instr_EX_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^reg1_addr\(4),
      Q => \^instr_ex\(15),
      R => sync_reset
    );
\instr_EX_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(0),
      Q => \^instr_ex\(14),
      R => sync_reset
    );
\instr_EX_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(1),
      Q => \^instr_ex\(13),
      R => sync_reset
    );
\instr_EX_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(2),
      Q => \^instr_ex\(12),
      R => sync_reset
    );
\instr_EX_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(3),
      Q => \^instr_ex\(11),
      R => sync_reset
    );
\instr_EX_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(1),
      Q => \^instr_ex\(26),
      R => sync_reset
    );
\instr_EX_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(4),
      Q => \^instr_ex\(10),
      R => sync_reset
    );
\instr_EX_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(5),
      Q => \^instr_ex\(9),
      R => sync_reset
    );
\instr_EX_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(6),
      Q => \^instr_ex\(8),
      R => sync_reset
    );
\instr_EX_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(7),
      Q => \^instr_ex\(7),
      R => sync_reset
    );
\instr_EX_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(8),
      Q => \^instr_ex\(6),
      R => sync_reset
    );
\instr_EX_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(9),
      Q => \^instr_ex\(5),
      R => sync_reset
    );
\instr_EX_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(10),
      Q => \^instr_ex\(4),
      R => sync_reset
    );
\instr_EX_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(11),
      Q => \^instr_ex\(3),
      R => sync_reset
    );
\instr_EX_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(12),
      Q => \^instr_ex\(2),
      R => sync_reset
    );
\instr_EX_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(13),
      Q => \^instr_ex\(1),
      R => sync_reset
    );
\instr_EX_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(2),
      Q => \^instr_ex\(25),
      R => sync_reset
    );
\instr_EX_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => \^imm_value\(15),
      Q => \^instr_ex\(0),
      R => sync_reset
    );
\instr_EX_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(3),
      Q => \^instr_ex\(24),
      R => sync_reset
    );
\instr_EX_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(4),
      Q => \^instr_ex\(23),
      R => sync_reset
    );
\instr_EX_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(5),
      Q => \^instr_ex\(22),
      R => sync_reset
    );
\instr_EX_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(6),
      Q => \^instr_ex\(21),
      R => sync_reset
    );
\instr_EX_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(7),
      Q => \^instr_ex\(20),
      R => sync_reset
    );
is_lwx_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_120,
      Q => is_lwx_I,
      R => '0'
    );
is_swx_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_119,
      Q => is_swx_I_reg_n_0,
      R => '0'
    );
jump2_I_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump2_I_reg_n_0,
      Q => jump2_I_1,
      R => sync_reset
    );
jump2_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_46,
      Q => jump2_I_reg_n_0,
      R => sync_reset
    );
load_Store_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_11\,
      Q => \^load_store_i\,
      R => '0'
    );
mask_reset_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EEEF"
    )
        port map (
      I0 => \^not_barrel_op\,
      I1 => \Using_FPGA.Native_16\,
      I2 => \^bitfield_insert\,
      I3 => \^bitfield_extract\,
      O => in0
    );
mbar_decode_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => of_mbar_decode,
      Q => mbar_decode_I,
      R => sync_reset
    );
mbar_first_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111FFFFF1FF"
    )
        port map (
      I0 => mbar_first_reg_0,
      I1 => \^write_addr_i_reg[2]_0\(1),
      I2 => \^ifetch_in_progress\,
      I3 => mbar_first_reg_1,
      I4 => mbar_first_reg_2,
      I5 => \^write_addr_i_reg[2]_0\(0),
      O => mbar_first_i_2_n_0
    );
mbar_first_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => mbar_first_reg_n_0,
      I1 => \Using_FPGA.Native_16\,
      O => mbar_first_i_3_n_0
    );
mbar_first_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => mbar_first,
      Q => mbar_first_reg_n_0,
      R => sync_reset
    );
mbar_hold_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.iFetch_MuxCY_2_n_1\,
      Q => mbar_hold_I_reg_n_0,
      R => '0'
    );
mbar_is_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => mbar_is_sleep0,
      Q => mbar_is_sleep,
      R => sync_reset
    );
mbar_sleep_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAAAEAAA"
    )
        port map (
      I0 => mbar_sleep,
      I1 => mbar_is_sleep,
      I2 => mbar_decode_I,
      I3 => ex_first_cycle,
      I4 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I5 => sleep_i0,
      O => mbar_sleep_i_1_n_0
    );
mbar_sleep_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => active_wakeup,
      O => sleep_i0
    );
mbar_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mbar_sleep_i_1_n_0,
      Q => mbar_sleep,
      R => '0'
    );
missed_IFetch_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.iFetch_MuxCY_2_n_4\,
      Q => missed_IFetch,
      R => sync_reset
    );
mtsmsr_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_38,
      Q => \^mtsmsr_write_i_reg_0\,
      R => '0'
    );
mul_Executing_delayed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mul_Executing,
      Q => mul_Executing_delayed,
      R => sync_reset
    );
mul_Executing_done_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => mul_Executing_delayed,
      I1 => mul_Executing,
      I2 => \Using_FPGA.Native_16\,
      O => mul_Executing_done0
    );
mul_Executing_done_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mul_Executing_done0,
      Q => mul_Executing_done,
      R => sync_reset
    );
mul_Executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mul_Executing0,
      Q => mul_Executing,
      R => sync_reset
    );
mul_first_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_114,
      Q => mul_first,
      R => sync_reset
    );
nonvalid_IFetch_n_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_113,
      Q => nonvalid_IFetch_n_reg_n_0,
      S => sync_reset
    );
of_Pause_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause,
      Q => \^of_pause\,
      R => sync_reset
    );
quadlet_Read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_126,
      Q => quadlet_Read,
      R => sync_reset
    );
read_access_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"040400FF04040000"
    )
        port map (
      I0 => writing,
      I1 => \^load_store_i\,
      I2 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I3 => complete_dready,
      I4 => \^d\(4),
      I5 => read_access_reg,
      O => writing_reg_0
    );
reset_delay_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync_reset,
      Q => reset_delay,
      R => '0'
    );
select_ALU_Carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_110,
      Q => select_ALU_Carry,
      R => sync_reset
    );
sleep_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => sleep_i00_in,
      I2 => \^instr_ex\(20),
      I3 => active_wakeup,
      I4 => sync_reset,
      O => sleep_i_i_1_n_0
    );
sleep_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_i_i_1_n_0,
      Q => \^sleep_decode\,
      R => '0'
    );
suspend_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000E222"
    )
        port map (
      I0 => \^suspend\,
      I1 => sleep_i00_in,
      I2 => \^instr_ex\(20),
      I3 => \^instr_ex\(21),
      I4 => active_wakeup,
      I5 => sync_reset,
      O => suspend_i_i_1_n_0
    );
suspend_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => suspend_i_i_1_n_0,
      Q => \^suspend\,
      R => '0'
    );
swx_ready_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_9\,
      Q => swx_ready,
      R => '0'
    );
trace_data_access_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"40004040"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => \^ex_valid\,
      I2 => \^load_store_i\,
      I3 => \Using_LWX_SWX_instr.reservation_reg_n_0\,
      I4 => is_swx_I_reg_n_0,
      O => \Using_FPGA.Native_3\(0)
    );
trace_reg_write_novalid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF0000AA08"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__8_n_0\,
      I1 => complete_dready,
      I2 => writing,
      I3 => write_Reg_reg_n_0,
      I4 => \Using_LWX_SWX_instr.reservation_reg_0\,
      I5 => reset_delay,
      O => reg_Write_I
    );
trace_valid_instr_part1_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000E0E00000EFE0"
    )
        port map (
      I0 => complete_dready,
      I1 => swx_ready,
      I2 => \^load_store_i\,
      I3 => ex_Valid_1st_cycle,
      I4 => \Using_FPGA.Native_16\,
      I5 => mul_Executing,
      O => trace_valid_instr_part10
    );
trace_valid_instr_part1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_valid_instr_part10,
      Q => trace_valid_instr_part1,
      R => sync_reset
    );
using_Imm_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.of_PipeRun_MuxCY_1_n_2\,
      Q => \^use_imm_reg\,
      R => '0'
    );
\void_bit16[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F1000000"
    )
        port map (
      I0 => \^bitfield_insert\,
      I1 => \^instr_ex\(9),
      I2 => \^bitfield_extract\,
      I3 => \^instr_ex\(8),
      I4 => \void_bit16_reg[15]\(5),
      O => void_bit
    );
wdc_first_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => wdc_first,
      Q => wdc_first_reg_n_0,
      R => sync_reset
    );
wic_first_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => wic_first,
      Q => wic_first_reg_n_0,
      R => sync_reset
    );
\write_Addr_I_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(8),
      Q => \^write_addr_i_reg[2]_0\(2),
      R => sync_reset
    );
\write_Addr_I_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(9),
      Q => \^write_addr_i_reg[2]_0\(1),
      R => sync_reset
    );
\write_Addr_I_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => instr_OF(10),
      Q => \^write_addr_i_reg[2]_0\(0),
      R => sync_reset
    );
write_Carry_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_102,
      Q => write_Carry_I,
      R => sync_reset
    );
write_Reg_I_LUT: entity work.design_1_microblaze_1_1_MB_LUT4
     port map (
      \Using_FPGA.Native_0\ => write_Reg_reg_n_0,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_i_2__8_n_0\,
      complete_dready => complete_dready,
      write_Reg_I_S => write_Reg_I_S,
      writing => writing
    );
write_Reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I_n_37,
      Q => write_Reg_reg_n_0,
      R => '0'
    );
write_access_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"080808FF08080800"
    )
        port map (
      I0 => \^d\(2),
      I1 => d_AS_I,
      I2 => \Using_FPGA.Native_16\,
      I3 => complete_dready,
      I4 => \^d\(4),
      I5 => write_access_reg,
      O => d_AS_I_reg_1
    );
writing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^of_piperun\,
      D => PreFetch_Buffer_I_n_106,
      Q => writing,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MSR_Reg is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    msr_I : out STD_LOGIC_VECTOR ( 2 downto 0 );
    I3 : out STD_LOGIC;
    I3_0 : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    I3_2 : out STD_LOGIC;
    I3_3 : out STD_LOGIC;
    I3_4 : out STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 5 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MSR_Reg : entity is "MSR_Reg";
end design_1_microblaze_1_1_MSR_Reg;

architecture STRUCTURE of design_1_microblaze_1_1_MSR_Reg is
begin
\MSR_Bits[24].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.design_1_microblaze_1_1_MSR_Reg_Bit
     port map (
      Address(0) => Address(4),
      Clk => Clk,
      I3_0 => I3_0,
      MSR_Rst => MSR_Rst,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\
    );
\MSR_Bits[26].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.design_1_microblaze_1_1_MSR_Reg_Bit_924
     port map (
      Address(0) => Address(3),
      Clk => Clk,
      I3_1 => I3_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_10\
    );
\MSR_Bits[28].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.design_1_microblaze_1_1_MSR_Reg_Bit_925
     port map (
      Address(0) => Address(2),
      Clk => Clk,
      I3_2 => I3_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      msr_I(0) => msr_I(2)
    );
\MSR_Bits[29].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.design_1_microblaze_1_1_MSR_Reg_Bit_926
     port map (
      Address(1) => Address(5),
      Address(0) => Address(1),
      Clk => Clk,
      I3 => I3,
      I3_3 => I3_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      msr_I(0) => msr_I(1)
    );
\MSR_Bits[30].Using_MSR_Reg_Bit.MSR_Reg_Bit_I\: entity work.design_1_microblaze_1_1_MSR_Reg_Bit_927
     port map (
      Address(0) => Address(0),
      Clk => Clk,
      I3_4 => I3_4,
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      msr_I(0) => msr_I(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Operand_Select is
  port (
    Op1_Logic : out STD_LOGIC;
    EX_Op1 : out STD_LOGIC_VECTOR ( 0 to 31 );
    EX_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    Shifted : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    op1 : out STD_LOGIC_VECTOR ( 17 downto 0 );
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg\ : out STD_LOGIC;
    Sext : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    I0 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_FPGA.The_Compare[2].sel_reg\ : out STD_LOGIC;
    S_0 : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_1\ : out STD_LOGIC;
    S_2 : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_3\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_4\ : out STD_LOGIC;
    S_5 : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_6\ : out STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_7\ : out STD_LOGIC;
    S_8 : out STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_9\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC_VECTOR ( 5 downto 0 );
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Size_17to32.imm_Reg_reg[0]_0\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Reg1_Data : in STD_LOGIC_VECTOR ( 0 to 31 );
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    res_Forward1 : in STD_LOGIC;
    I3 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    I3_10 : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    I3_11 : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    I3_12 : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    I3_13 : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    I3_14 : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    I3_15 : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    I3_16 : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 22 downto 0 );
    D_9 : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    I3_17 : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1\ : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    Is_Equal3_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    \Using_FPGA.Native_i_1__76\ : in STD_LOGIC;
    Is_Equal : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_2__7\ : in STD_LOGIC;
    Is_Equal1_out : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    A : in STD_LOGIC_VECTOR ( 1 downto 0 );
    void_bit : in STD_LOGIC;
    \C_reg[28]\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 0 to 0 );
    \C_reg[29]\ : in STD_LOGIC;
    \C_reg[27]\ : in STD_LOGIC;
    \C_reg[23]\ : in STD_LOGIC;
    \C_reg[28]_0\ : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    ICache_Enabled : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 15 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Operand_Select : entity is "Operand_Select";
end design_1_microblaze_1_1_Operand_Select;

architecture STRUCTURE of design_1_microblaze_1_1_Operand_Select is
  signal \^ex_op1\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^ex_op2\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^op1_logic\ : STD_LOGIC;
  signal \OpSelect_Bits[0].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \OpSelect_Bits[0].Operand_Select_Bit_I_n_5\ : STD_LOGIC;
  signal \OpSelect_Bits[13].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[17].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \OpSelect_Bits[22].Operand_Select_Bit_I_n_6\ : STD_LOGIC;
  signal \OpSelect_Bits[23].Operand_Select_Bit_I_n_7\ : STD_LOGIC;
  signal \OpSelect_Bits[24].Operand_Select_Bit_I_n_5\ : STD_LOGIC;
  signal \OpSelect_Bits[25].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[25].Operand_Select_Bit_I_n_6\ : STD_LOGIC;
  signal \OpSelect_Bits[26].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\ : STD_LOGIC;
  signal \OpSelect_Bits[28].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\ : STD_LOGIC;
  signal \OpSelect_Bits[29].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \OpSelect_Bits[29].Operand_Select_Bit_I_n_5\ : STD_LOGIC;
  signal \OpSelect_Bits[30].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \OpSelect_Bits[31].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \OpSelect_Bits[31].Operand_Select_Bit_I_n_6\ : STD_LOGIC;
  signal \OpSelect_Bits[8].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[9].Operand_Select_Bit_I_n_3\ : STD_LOGIC;
  signal \OpSelect_Bits[9].Operand_Select_Bit_I_n_4\ : STD_LOGIC;
  signal \^shifted\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_10\ : STD_LOGIC;
  signal \^using_fpga.native_15\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_8\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal \^op1\ : STD_LOGIC_VECTOR ( 17 downto 0 );
begin
  EX_Op1(0 to 31) <= \^ex_op1\(0 to 31);
  EX_Op2(0 to 31) <= \^ex_op2\(0 to 31);
  Op1_Logic <= \^op1_logic\;
  Shifted <= \^shifted\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_10\ <= \^using_fpga.native_10\;
  \Using_FPGA.Native_15\ <= \^using_fpga.native_15\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_8\ <= \^using_fpga.native_8\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
  op1(17 downto 0) <= \^op1\(17 downto 0);
\OpSelect_Bits[0].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized12\
     port map (
      A(0) => A(0),
      \C_reg[23]\ => \^ex_op2\(31),
      \C_reg[23]_0\ => \^ex_op2\(30),
      \C_reg[29]\ => \C_reg[29]\,
      \C_reg[29]_0\ => \^ex_op2\(29),
      \C_reg[29]_1\ => \^ex_op2\(28),
      \C_reg[31]\ => \C_reg[28]\,
      \C_reg[31]_0\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_4\,
      \C_reg[31]_1\ => \OpSelect_Bits[29].Operand_Select_Bit_I_n_5\,
      Clk => Clk,
      D_31 => D_31,
      EX_Op1(0) => \^ex_op1\(0),
      EX_Result(0) => EX_Result(0),
      I3_17 => I3_17,
      Is_Equal => Is_Equal,
      Reg1_Data(0) => Reg1_Data(0),
      S => S,
      \Using_FPGA.Native\ => \^using_fpga.native_10\,
      \Using_FPGA.Native_0\ => \^ex_op2\(0),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[0].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_2\ => \OpSelect_Bits[0].Operand_Select_Bit_I_n_5\,
      \Using_FPGA.Native_3\ => \^using_fpga.native_15\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_i_1__75\ => \^op1\(14),
      \Using_FPGA.Native_i_1__75_0\ => \^op1\(13),
      \Using_FPGA.Native_i_1__75_1\ => \^op1\(15),
      \Using_FPGA.Native_i_1__75_2\ => \^op1\(16),
      \Using_FPGA.Native_i_5__1\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.Native_i_5__1_0\ => \^op1\(17),
      clz_instr => clz_instr,
      compare_Instr => compare_Instr,
      \instr_EX_i_reg[22]\(1) => \Using_FPGA.Native_14\(2),
      \instr_EX_i_reg[22]\(0) => \Using_FPGA.Native_14\(0),
      instr_ex(0) => instr_ex(0),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[10].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10\
     port map (
      Address(0) => Address(13),
      Clk => Clk,
      D_21 => D_21,
      EX_Op1(0) => \^ex_op1\(10),
      EX_Op2(0) => \^ex_op2\(10),
      EX_Result(0) => EX_Result(10),
      Reg1_Data(0) => Reg1_Data(10),
      \Using_FPGA.Native\ => \^op1\(8),
      \Using_FPGA.Native_0\ => \^op1\(10),
      \Using_FPGA.Native_1\(1) => \^ex_op2\(8),
      \Using_FPGA.Native_1\(0) => \^ex_op2\(9),
      \Using_FPGA.Native_2\ => \^op1\(9),
      \Using_FPGA.The_Compare[0].sel_reg_3\ => \Using_FPGA.The_Compare[0].sel_reg_3\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[11].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_772\
     port map (
      Address(0) => Address(12),
      Clk => Clk,
      D_20 => D_20,
      EX_Op1(0) => \^ex_op1\(11),
      EX_Op2(0) => \^ex_op2\(11),
      EX_Result(0) => EX_Result(11),
      Reg1_Data(0) => Reg1_Data(11),
      S_2 => S_2,
      \Using_FPGA.Native\ => \^op1\(7),
      \Using_FPGA.Native_0\ => \^op1\(6),
      \Using_FPGA.Native_1\(1) => \^ex_op2\(12),
      \Using_FPGA.Native_1\(0) => \^ex_op2\(13),
      \Using_FPGA.Native_2\ => \^op1\(5),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[12].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_773\
     port map (
      Address(0) => Address(11),
      Clk => Clk,
      D_19 => D_19,
      EX_Op1(0) => \^ex_op1\(12),
      EX_Op2(0) => \^ex_op2\(12),
      EX_Result(0) => EX_Result(12),
      Reg1_Data(0) => Reg1_Data(12),
      \Using_FPGA.Native\ => \^op1\(6),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[13].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_774\
     port map (
      Address(0) => Address(10),
      Clk => Clk,
      D_18 => D_18,
      EX_Op1(0) => \^ex_op1\(13),
      EX_Op2(0) => \^ex_op2\(13),
      EX_Result(0) => EX_Result(13),
      Reg1_Data(0) => Reg1_Data(13),
      \Using_FPGA.Native\ => \^op1\(5),
      \Using_FPGA.Native_0\ => \OpSelect_Bits[13].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_0\ => \^op1\(6),
      \Using_FPGA.Native_i_1__75_1\ => \^op1\(8),
      \Using_FPGA.Native_i_1__75_2\ => \^op1\(7),
      \Using_FPGA.Native_i_1__75_3\ => \OpSelect_Bits[9].Operand_Select_Bit_I_n_3\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[14].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_775\
     port map (
      Address(0) => Address(9),
      Clk => Clk,
      D_17 => D_17,
      EX_Op1(0) => \^ex_op1\(14),
      EX_Op2(0) => \^ex_op2\(14),
      EX_Result(0) => EX_Result(14),
      Reg1_Data(0) => Reg1_Data(14),
      \Using_FPGA.Native\(0) => \^ex_op2\(15),
      \Using_FPGA.Native_0\(0) => \^op1\(3),
      \Using_FPGA.The_Compare[2].sel_reg_1\ => \Using_FPGA.The_Compare[2].sel_reg_1\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(4),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[15].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_776\
     port map (
      Address(0) => Address(8),
      Clk => Clk,
      D_16 => D_16,
      EX_Op1(0) => \^ex_op1\(15),
      EX_Op2(0) => \^ex_op2\(15),
      EX_Result(0) => EX_Result(15),
      Reg1_Data(0) => Reg1_Data(15),
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(3),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[16].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8\
     port map (
      Address(0) => Address(7),
      Clk => Clk,
      D_15 => D_15,
      EX_Op1(0) => \^ex_op1\(16),
      EX_Op2(0) => \^ex_op2\(16),
      EX_Result(0) => EX_Result(16),
      Reg1_Data(0) => Reg1_Data(16),
      Sext => Sext,
      \Using_FPGA.Native\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.Native_1\ => \^shifted\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sext16 => sext16,
      sext8 => sext8,
      sync_reset => sync_reset
    );
\OpSelect_Bits[17].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_777\
     port map (
      Address(0) => Address(6),
      Clk => Clk,
      D_14 => D_14,
      EX_Op1(0) => \^ex_op1\(17),
      EX_Op2(0) => \^ex_op2\(17),
      EX_Result(0) => EX_Result(17),
      Is_Equal1_out => Is_Equal1_out,
      Reg1_Data(0) => Reg1_Data(17),
      \Using_FPGA.Native\ => \^op1\(2),
      \Using_FPGA.Native_0\ => \OpSelect_Bits[17].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_2\(1) => \^ex_op2\(16),
      \Using_FPGA.Native_2\(0) => \^ex_op2\(18),
      \Using_FPGA.Native_3\ => \^op1\(1),
      \Using_FPGA.The_Compare[0].sel_reg_6\ => \Using_FPGA.The_Compare[0].sel_reg_6\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[18].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_778\
     port map (
      Address(0) => Address(5),
      Clk => Clk,
      D_13 => D_13,
      EX_Op1(0) => \^ex_op1\(18),
      EX_Op2(0) => \^ex_op2\(18),
      EX_Result(0) => EX_Result(18),
      Reg1_Data(0) => Reg1_Data(18),
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native\ => \^op1\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_3\ => \OpSelect_Bits[13].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_4\ => \OpSelect_Bits[0].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_i_1__75\ => \^op1\(0),
      \Using_FPGA.Native_i_1__75_0\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_i_1__75_1\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_i_1__75_2\ => \OpSelect_Bits[17].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_i_1__75_3\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_3\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[19].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_779\
     port map (
      Address(0) => Address(4),
      Clk => Clk,
      D_12 => D_12,
      EX_Op1(0) => \^ex_op1\(19),
      EX_Op2(0) => \^ex_op2\(19),
      EX_Result(0) => EX_Result(19),
      I0 => I0,
      Reg1_Data(0) => Reg1_Data(19),
      \Using_FPGA.Native\ => \^op1\(0),
      \Using_FPGA.Native_0\ => \^op1\(1),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[17].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_2\ => \OpSelect_Bits[26].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_4\ => \OpSelect_Bits[8].Operand_Select_Bit_I_n_3\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[1].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_780\
     port map (
      Address(0) => Address(22),
      Clk => Clk,
      D_30 => D_30,
      EX_Op1(0) => \^ex_op1\(1),
      EX_Op2(0) => \^ex_op2\(1),
      EX_Result(0) => EX_Result(1),
      Reg1_Data(0) => Reg1_Data(1),
      \Using_FPGA.Native\ => \^op1\(17),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_13\,
      of_PipeRun => of_PipeRun,
      op1(4 downto 0) => \^op1\(16 downto 12),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[20].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_781\
     port map (
      Address(0) => Address(3),
      Clk => Clk,
      D_11 => D_11,
      EX_Op1(0) => \^ex_op1\(20),
      EX_Op2(0) => \^ex_op2\(20),
      EX_Result(0) => EX_Result(20),
      Reg1_Data(0) => Reg1_Data(20),
      \Using_FPGA.Native\ => \^using_fpga.native_8\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[21].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_782\
     port map (
      Address(0) => Address(2),
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(27 downto 5) => D(30 downto 8),
      D(4 downto 3) => D(6 downto 5),
      D(2 downto 0) => D(2 downto 0),
      D_10 => D_10,
      EX_Op1(0) => \^ex_op1\(21),
      EX_Op2(3) => \^ex_op2\(19),
      EX_Op2(2) => \^ex_op2\(20),
      EX_Op2(1) => \^ex_op2\(27),
      EX_Op2(0) => \^ex_op2\(28),
      EX_Result(0) => EX_Result(21),
      Reg1_Data(0) => Reg1_Data(21),
      S_5 => S_5,
      \Using_BitField.mem_mask0_reg[2]\ => \OpSelect_Bits[24].Operand_Select_Bit_I_n_5\,
      \Using_BitField.mem_mask1_reg[15]\ => \^ex_op2\(24),
      \Using_BitField.mem_mask1_reg[28]\ => \^ex_op2\(22),
      \Using_BitField.mem_mask1_reg[28]_0\ => \^ex_op2\(23),
      \Using_BitField.mem_mask1_reg[28]_1\ => \^ex_op2\(25),
      \Using_FPGA.Native\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_0\ => \^ex_op2\(21),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_16\(29),
      \Using_FPGA.Native_2\ => \^op1\(0),
      \Using_FPGA.Native_3\ => \^using_fpga.native_8\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[22].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_783\
     port map (
      Address(0) => Address(1),
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(3),
      D_9 => D_9,
      EX_Op1(0) => \^ex_op1\(22),
      EX_Op2(1) => \^ex_op2\(27),
      EX_Op2(0) => \^ex_op2\(28),
      EX_Result(0) => EX_Result(22),
      Is_Equal1_out => Is_Equal1_out,
      Is_Equal3_out => Is_Equal3_out,
      Reg1_Data(0) => Reg1_Data(22),
      \Using_BitField.mem_mask0_reg[21]\ => \OpSelect_Bits[25].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[28]\ => \^ex_op2\(29),
      \Using_BitField.mem_mask0_reg[28]_0\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_BitField.mem_mask0_reg[30]\ => \OpSelect_Bits[23].Operand_Select_Bit_I_n_7\,
      \Using_BitField.mem_mask1_reg[27]\ => \^ex_op2\(23),
      \Using_BitField.mem_mask1_reg[27]_0\ => \^ex_op2\(24),
      \Using_BitField.mem_mask1_reg[27]_1\ => \^ex_op2\(25),
      \Using_BitField.mem_mask1_reg[27]_2\ => \^ex_op2\(21),
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\ => \^ex_op2\(22),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_2\ => \OpSelect_Bits[22].Operand_Select_Bit_I_n_6\,
      \Using_FPGA.Native_3\(4 downto 2) => \Using_FPGA.Native_16\(11 downto 9),
      \Using_FPGA.Native_3\(1) => \Using_FPGA.Native_16\(3),
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_16\(1),
      \Using_FPGA.Native_4\ => \^op1\(10),
      \Using_FPGA.Native_5\ => \OpSelect_Bits[9].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_8\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_i_1__74\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_i_1__74_0\ => \OpSelect_Bits[30].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_i_1__74_1\ => \^shifted\,
      \Using_FPGA.Native_i_1__74_2\ => \Using_FPGA.Native_i_1__74\,
      \Using_FPGA.Native_i_3__8\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_i_3__8_0\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_i_3__8_1\ => \^op1\(0),
      \Using_FPGA.Native_i_3__8_2\ => \^op1\(1),
      \Using_FPGA.The_Compare[2].sel_reg_4\ => \Using_FPGA.The_Compare[2].sel_reg_4\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(2),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[23].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized8_784\
     port map (
      Address(0) => Address(0),
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(4),
      D_8 => D_8,
      EX_Op1(0) => \^ex_op1\(23),
      EX_Op2(1) => \^ex_op2\(27),
      EX_Op2(0) => \^ex_op2\(28),
      EX_Result(0) => EX_Result(23),
      Reg1_Data(0) => Reg1_Data(23),
      \Using_BitField.mem_mask0_reg[27]\ => \^ex_op2\(29),
      \Using_BitField.mem_mask0_reg[27]_0\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\,
      \Using_BitField.mem_mask0_reg[27]_1\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[27]_2\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_BitField.mem_mask0_reg[6]\ => \^ex_op2\(30),
      \Using_BitField.mem_mask1_reg[26]\ => \^ex_op2\(24),
      \Using_BitField.mem_mask1_reg[26]_0\ => \^ex_op2\(25),
      \Using_BitField.mem_mask1_reg[26]_1\ => \^ex_op2\(22),
      \Using_BitField.mem_mask1_reg[26]_2\ => \^ex_op2\(21),
      \Using_FPGA.Native\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_0\ => \^ex_op2\(23),
      \Using_FPGA.Native_1\(2) => \Using_FPGA.Native_16\(25),
      \Using_FPGA.Native_1\(1) => \Using_FPGA.Native_16\(4),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_16\(0),
      \Using_FPGA.Native_2\ => \OpSelect_Bits[23].Operand_Select_Bit_I_n_7\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[24].Operand_Select_Bit_I\: entity work.design_1_microblaze_1_1_Operand_Select_Bit
     port map (
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D(0) => D(7),
      D_7 => D_7,
      EX_Op1(0) => \^ex_op1\(24),
      EX_Op2(4) => \^ex_op2\(26),
      EX_Op2(3) => \^ex_op2\(27),
      EX_Op2(2) => \^ex_op2\(28),
      EX_Op2(1) => \^ex_op2\(29),
      EX_Op2(0) => \^ex_op2\(30),
      EX_Result(0) => EX_Result(24),
      I3_16 => I3_16,
      Reg1_Data(0) => Reg1_Data(24),
      \Using_BitField.mem_mask1_reg[23]\ => \^ex_op2\(25),
      \Using_BitField.mem_mask1_reg[23]_0\ => \^ex_op2\(23),
      \Using_BitField.mem_mask1_reg[23]_1\ => \^ex_op2\(22),
      \Using_BitField.mem_mask1_reg[23]_2\ => \^ex_op2\(21),
      \Using_FPGA.Native\ => \^shifted\,
      \Using_FPGA.Native_0\ => \^ex_op2\(24),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[24].Operand_Select_Bit_I_n_5\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_3\(1) => \Using_FPGA.Native_16\(13),
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_16\(5),
      \Using_FPGA.Native_4\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_5\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_28\,
      \Using_FPGA.The_Compare[0].sel_reg_9\ => \Using_FPGA.The_Compare[0].sel_reg_9\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[25].Operand_Select_Bit_I\: entity work.design_1_microblaze_1_1_Operand_Select_Bit_785
     port map (
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D_6 => D_6,
      EX_Op1(0) => \^ex_op1\(25),
      EX_Op2(2) => \^ex_op2\(27),
      EX_Op2(1) => \^ex_op2\(28),
      EX_Op2(0) => \^ex_op2\(30),
      EX_Result(0) => EX_Result(25),
      I3_15 => I3_15,
      Reg1_Data(0) => Reg1_Data(25),
      \Using_BitField.mem_mask0_reg[17]\ => \^ex_op2\(31),
      \Using_BitField.mem_mask0_reg[17]_0\ => \^ex_op2\(24),
      \Using_BitField.mem_mask0_reg[17]_1\ => \OpSelect_Bits[22].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[17]_2\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_BitField.mem_mask0_reg[29]\ => \^ex_op2\(21),
      \Using_BitField.mem_mask0_reg[29]_0\ => \^ex_op2\(22),
      \Using_BitField.mem_mask0_reg[29]_1\ => \OpSelect_Bits[29].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_0\ => \^ex_op2\(25),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[25].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_2\(1) => \Using_FPGA.Native_16\(14),
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_16\(2),
      \Using_FPGA.Native_3\ => \OpSelect_Bits[25].Operand_Select_Bit_I_n_6\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[26].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized6\
     port map (
      Clk => Clk,
      D_5 => D_5,
      EX_Op1(0) => \^ex_op1\(26),
      EX_Op2(0) => \^ex_op2\(26),
      EX_Result(0) => EX_Result(26),
      I3_14 => I3_14,
      ICache_Enabled => ICache_Enabled,
      Is_Equal1_out => Is_Equal1_out,
      Reg1_Data(0) => Reg1_Data(26),
      \Using_FPGA.Native\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_0\ => \OpSelect_Bits[26].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_i_1__76\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_i_1__76_0\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_i_1__76_1\ => \^shifted\,
      \Using_FPGA.Native_i_1__76_2\ => \Using_FPGA.Native_i_1__74\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[27].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized4\
     port map (
      BitField_Insert => BitField_Insert,
      Clk => Clk,
      D_4 => D_4,
      EX_Op1(0) => \^ex_op1\(27),
      EX_Op2(0) => \^ex_op2\(27),
      EX_Result(0) => EX_Result(27),
      I3_13 => I3_13,
      Reg1_Data(0) => Reg1_Data(27),
      S_8 => S_8,
      \Using_BitField.mem_mask0_reg[10]\ => \OpSelect_Bits[24].Operand_Select_Bit_I_n_5\,
      \Using_BitField.mem_mask0_reg[13]\ => \OpSelect_Bits[25].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[14]\(2) => \^ex_op2\(28),
      \Using_BitField.mem_mask0_reg[14]\(1) => \^ex_op2\(29),
      \Using_BitField.mem_mask0_reg[14]\(0) => \^ex_op2\(30),
      \Using_BitField.mem_mask0_reg[14]_0\ => \OpSelect_Bits[23].Operand_Select_Bit_I_n_7\,
      \Using_BitField.mem_mask0_reg[15]\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\,
      \Using_BitField.mem_mask0_reg[15]_0\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[1]\ => \OpSelect_Bits[25].Operand_Select_Bit_I_n_3\,
      \Using_BitField.mem_mask0_reg[1]_0\ => \^ex_op2\(24),
      \Using_BitField.mem_mask0_reg[1]_1\ => \OpSelect_Bits[22].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[3]\ => \^ex_op2\(23),
      \Using_BitField.mem_mask0_reg[4]\ => \^ex_op2\(22),
      \Using_BitField.mem_mask0_reg[5]\ => \^ex_op2\(21),
      \Using_BitField.mem_mask0_reg[7]\ => \^ex_op2\(25),
      \Using_BitField.mem_mask0_reg[9]\ => \^ex_op2\(31),
      \Using_FPGA.Native\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_0\(11) => \Using_FPGA.Native_16\(30),
      \Using_FPGA.Native_0\(10 downto 8) => \Using_FPGA.Native_16\(28 downto 26),
      \Using_FPGA.Native_0\(7) => \Using_FPGA.Native_16\(24),
      \Using_FPGA.Native_0\(6 downto 5) => \Using_FPGA.Native_16\(22 downto 21),
      \Using_FPGA.Native_0\(4 downto 0) => \Using_FPGA.Native_16\(19 downto 15),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_FPGA.Native_2\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_3\ => \^using_fpga.native_0\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[28].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized2\
     port map (
      BitField_Insert => BitField_Insert,
      \C_reg[23]\ => \C_reg[27]\,
      \C_reg[23]_0\ => \C_reg[23]\,
      \C_reg[23]_1\ => \^using_fpga.native_15\,
      Clk => Clk,
      D_3 => D_3,
      EX_Op1(0) => \^ex_op1\(28),
      EX_Op2(1) => \^ex_op2\(27),
      EX_Op2(0) => \^ex_op2\(29),
      EX_Result(0) => EX_Result(28),
      I3_12 => I3_12,
      Reg1_Data(0) => Reg1_Data(28),
      \Using_BitField.mem_mask0_reg[23]\ => \OpSelect_Bits[23].Operand_Select_Bit_I_n_7\,
      \Using_BitField.mem_mask0_reg[23]_0\ => \^ex_op2\(25),
      \Using_BitField.mem_mask0_reg[24]\ => \^ex_op2\(22),
      \Using_BitField.mem_mask0_reg[24]_0\ => \^ex_op2\(21),
      \Using_BitField.mem_mask0_reg[25]\ => \^ex_op2\(31),
      \Using_BitField.mem_mask0_reg[25]_0\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_BitField.mem_mask0_reg[25]_1\ => \OpSelect_Bits[24].Operand_Select_Bit_I_n_5\,
      \Using_FPGA.Native\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\(0) => \^ex_op2\(28),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_14\(5),
      \Using_FPGA.Native_3\(3) => \Using_FPGA.Native_16\(23),
      \Using_FPGA.Native_3\(2 downto 0) => \Using_FPGA.Native_16\(8 downto 6),
      \Using_FPGA.Native_4\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\,
      \Using_FPGA.Native_i_2__7\ => \Using_FPGA.Native_i_2__7\,
      \Using_FPGA.Native_i_2__7_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_i_2__7_1\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_i_2__7_2\ => \^using_fpga.native_3\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      void_bit => void_bit
    );
\OpSelect_Bits[29].Operand_Select_Bit_I\: entity work.design_1_microblaze_1_1_Operand_Select_Bit_786
     port map (
      BitField_Insert => BitField_Insert,
      \C_reg[28]\ => \C_reg[28]_0\,
      \C_reg[28]_0\(0) => \^ex_op2\(28),
      \C_reg[28]_1\ => \C_reg[28]\,
      \C_reg[28]_2\ => \^using_fpga.native_10\,
      Clk => Clk,
      D_2 => D_2,
      EX_Op1(0) => \^ex_op1\(29),
      EX_Op2(0) => \^ex_op2\(29),
      EX_Result(0) => EX_Result(29),
      I3_11 => I3_11,
      Reg1_Data(0) => Reg1_Data(29),
      \Using_BitField.mem_mask0_reg[19]\ => \^ex_op2\(23),
      \Using_BitField.mem_mask0_reg[19]_0\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\,
      \Using_BitField.mem_mask0_reg[19]_1\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_6\,
      \Using_BitField.mem_mask0_reg[19]_2\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_FPGA.Native\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_14\(3),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[29].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_2\ => \OpSelect_Bits[29].Operand_Select_Bit_I_n_5\,
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_16\(12),
      instr_ex(0) => instr_ex(0),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[2].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_787\
     port map (
      Address(0) => Address(21),
      Clk => Clk,
      D_29 => D_29,
      EX_Op1(0) => \^ex_op1\(2),
      EX_Op2(0) => \^ex_op2\(2),
      EX_Result(0) => EX_Result(2),
      Reg1_Data(0) => Reg1_Data(2),
      \Using_FPGA.Native\(0) => \^op1\(17),
      \Using_FPGA.Native_0\(1) => \^ex_op2\(0),
      \Using_FPGA.Native_0\(0) => \^ex_op2\(1),
      \Using_FPGA.Native_1\ => \^using_fpga.native_10\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Using_FPGA.The_Compare[0].sel_reg\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(16),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[30].Operand_Select_Bit_I\: entity work.design_1_microblaze_1_1_Operand_Select_Bit_788
     port map (
      A(1 downto 0) => A(1 downto 0),
      \C_reg[30]\ => \^ex_op2\(31),
      \C_reg[30]_0\ => \OpSelect_Bits[29].Operand_Select_Bit_I_n_5\,
      Clk => Clk,
      D_1 => D_1,
      EX_Op1(0) => \^ex_op1\(30),
      EX_Result(0) => EX_Result(30),
      I3_10 => I3_10,
      Op1_Logic => \^op1_logic\,
      Reg1_Data(0) => Reg1_Data(30),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\(0) => \^ex_op2\(30),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[30].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_14\(1),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_8\(0) => \^ex_op1\(31),
      \Using_FPGA.Native_i_3__8\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_i_3__8_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_i_3__8_1\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_i_3__8_2\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_i_3__8_3\ => \^using_fpga.native_4\,
      \Using_FPGA.The_Compare[2].sel_reg_7\ => \Using_FPGA.The_Compare[2].sel_reg_7\,
      msr_I(0) => msr_I(0),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      void_bit => void_bit
    );
\OpSelect_Bits[31].Operand_Select_Bit_I\: entity work.design_1_microblaze_1_1_Operand_Select_Bit_789
     port map (
      A(0) => A(0),
      BitField_Insert => BitField_Insert,
      \C_reg[27]\(2) => \^ex_op2\(28),
      \C_reg[27]\(1) => \^ex_op2\(29),
      \C_reg[27]\(0) => \^ex_op2\(30),
      \C_reg[27]_0\ => \C_reg[27]\,
      Clk => Clk,
      D_0 => D_0,
      EX_Op1(0) => \^ex_op1\(31),
      EX_Result(0) => EX_Result(31),
      I3 => I3,
      Op1_Logic => \^op1_logic\,
      Reg1_Data(0) => Reg1_Data(31),
      \Using_BitField.mem_mask0_reg[11]\ => \OpSelect_Bits[28].Operand_Select_Bit_I_n_9\,
      \Using_BitField.mem_mask0_reg[11]_0\ => \^ex_op2\(23),
      \Using_BitField.mem_mask0_reg[11]_1\ => \OpSelect_Bits[27].Operand_Select_Bit_I_n_16\,
      \Using_BitField.mem_mask0_reg[11]_2\ => \^ex_op2\(25),
      \Using_BitField.mem_mask0_reg[11]_3\ => \^ex_op2\(24),
      \Using_FPGA.Native\ => \^ex_op2\(31),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_14\(4),
      \Using_FPGA.Native_1\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_16\(20),
      \Using_FPGA.Native_3\ => \OpSelect_Bits[31].Operand_Select_Bit_I_n_6\,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset,
      void_bit => void_bit
    );
\OpSelect_Bits[3].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_790\
     port map (
      Address(0) => Address(20),
      Clk => Clk,
      D_28 => D_28,
      EX_Op1(0) => \^ex_op1\(3),
      EX_Op2(0) => \^ex_op2\(3),
      EX_Result(0) => EX_Result(3),
      Reg1_Data(0) => Reg1_Data(3),
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(15),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[4].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_791\
     port map (
      Address(0) => Address(19),
      Clk => Clk,
      D_27 => D_27,
      EX_Op1(0) => \^ex_op1\(4),
      EX_Op2(0) => \^ex_op2\(4),
      EX_Result(0) => EX_Result(4),
      Reg1_Data(0) => Reg1_Data(4),
      S_0 => S_0,
      \Using_FPGA.Native\(1) => \^op1\(15),
      \Using_FPGA.Native\(0) => \^op1\(13),
      \Using_FPGA.Native_0\(1) => \^ex_op2\(3),
      \Using_FPGA.Native_0\(0) => \^ex_op2\(5),
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(14),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[5].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_792\
     port map (
      Address(0) => Address(18),
      Clk => Clk,
      D_26 => D_26,
      EX_Op1(0) => \^ex_op1\(5),
      EX_Op2(0) => \^ex_op2\(5),
      EX_Result(0) => EX_Result(5),
      Reg1_Data(0) => Reg1_Data(5),
      \Using_FPGA.Native\(0) => \^op1\(13),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[6].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_793\
     port map (
      Address(0) => Address(17),
      Clk => Clk,
      D_25 => D_25,
      EX_Op1(0) => \^ex_op1\(6),
      EX_Op2(0) => \^ex_op2\(6),
      EX_Result(0) => EX_Result(6),
      Reg1_Data(0) => Reg1_Data(6),
      \Using_FPGA.Native\(0) => \^ex_op2\(7),
      \Using_FPGA.Native_0\(0) => \^op1\(11),
      \Using_FPGA.The_Compare[2].sel_reg\ => \Using_FPGA.The_Compare[2].sel_reg\,
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(12),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[7].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_794\
     port map (
      Address(0) => Address(16),
      Clk => Clk,
      D_24 => D_24,
      EX_Op1(0) => \^ex_op1\(7),
      EX_Op2(0) => \^ex_op2\(7),
      EX_Result(0) => EX_Result(7),
      Reg1_Data(0) => Reg1_Data(7),
      of_PipeRun => of_PipeRun,
      op1(0) => \^op1\(11),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[8].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_795\
     port map (
      Address(0) => Address(15),
      Clk => Clk,
      D_23 => D_23,
      EX_Op1(0) => \^ex_op1\(8),
      EX_Op2(0) => \^ex_op2\(8),
      EX_Result(0) => EX_Result(8),
      Is_Equal3_out => Is_Equal3_out,
      Reg1_Data(0) => Reg1_Data(8),
      \Using_FPGA.Native\ => \^op1\(10),
      \Using_FPGA.Native_0\ => \OpSelect_Bits[8].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_i_1__76\ => \OpSelect_Bits[0].Operand_Select_Bit_I_n_5\,
      \Using_FPGA.Native_i_1__76_0\ => \Using_FPGA.Native_i_1__76\,
      \Using_FPGA.Native_i_1__76_1\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_i_5__1\ => \^op1\(9),
      \Using_FPGA.Native_i_5__1_0\ => \^op1\(7),
      \Using_FPGA.Native_i_5__1_1\ => \^op1\(8),
      \Using_FPGA.Native_i_5__1_2\ => \Using_FPGA.Native_i_1__75\,
      of_PipeRun => of_PipeRun,
      op1(1 downto 0) => \^op1\(16 downto 15),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\OpSelect_Bits[9].Operand_Select_Bit_I\: entity work.\design_1_microblaze_1_1_Operand_Select_Bit__parameterized10_796\
     port map (
      Address(0) => Address(14),
      Clk => Clk,
      D_22 => D_22,
      EX_Op1(0) => \^ex_op1\(9),
      EX_Op2(0) => \^ex_op2\(9),
      EX_Result(0) => EX_Result(9),
      Is_Equal3_out => Is_Equal3_out,
      Reg1_Data(0) => Reg1_Data(9),
      \Using_FPGA.Native\ => \^op1\(9),
      \Using_FPGA.Native_0\ => \OpSelect_Bits[9].Operand_Select_Bit_I_n_3\,
      \Using_FPGA.Native_1\ => \OpSelect_Bits[9].Operand_Select_Bit_I_n_4\,
      \Using_FPGA.Native_i_4__3\ => \^op1\(10),
      of_PipeRun => of_PipeRun,
      op1(4 downto 0) => \^op1\(8 downto 4),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sync_reset => sync_reset
    );
\Size_17to32.imm_Reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(0),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(15),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(10),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(5),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(11),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(4),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(12),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(3),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(13),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(2),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(14),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(1),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(15),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(0),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(1),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(14),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(2),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(13),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(3),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(12),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(4),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(11),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(5),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(10),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(6),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(9),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(7),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(8),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(8),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(7),
      R => sync_reset
    );
\Size_17to32.imm_Reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => imm_Value(9),
      Q => \Size_17to32.imm_Reg_reg[0]_0\(6),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_PC_Module is
  port (
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    Instr_Addr : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC_VECTOR ( 13 downto 0 );
    I3 : out STD_LOGIC;
    Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    I3_0 : out STD_LOGIC;
    I3_1 : out STD_LOGIC;
    valid_Req_XX_i_4 : out STD_LOGIC;
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_15\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    DI : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_PC_Module : entity is "PC_Module";
end design_1_microblaze_1_1_PC_Module;

architecture STRUCTURE of design_1_microblaze_1_1_PC_Module is
  signal \All_Bits.Using_FPGA.PC_GEN[10].PC_Bit_I_n_2\ : STD_LOGIC;
  signal \All_Bits.Using_FPGA.PC_GEN[13].PC_Bit_I_n_2\ : STD_LOGIC;
  signal Carry_1 : STD_LOGIC;
  signal Carry_10 : STD_LOGIC;
  signal Carry_11 : STD_LOGIC;
  signal Carry_12 : STD_LOGIC;
  signal Carry_13 : STD_LOGIC;
  signal Carry_14 : STD_LOGIC;
  signal Carry_15 : STD_LOGIC;
  signal Carry_16 : STD_LOGIC;
  signal Carry_17 : STD_LOGIC;
  signal Carry_18 : STD_LOGIC;
  signal Carry_19 : STD_LOGIC;
  signal Carry_2 : STD_LOGIC;
  signal Carry_20 : STD_LOGIC;
  signal Carry_21 : STD_LOGIC;
  signal Carry_22 : STD_LOGIC;
  signal Carry_23 : STD_LOGIC;
  signal Carry_24 : STD_LOGIC;
  signal Carry_25 : STD_LOGIC;
  signal Carry_26 : STD_LOGIC;
  signal Carry_27 : STD_LOGIC;
  signal Carry_28 : STD_LOGIC;
  signal Carry_29 : STD_LOGIC;
  signal Carry_3 : STD_LOGIC;
  signal Carry_30 : STD_LOGIC;
  signal Carry_31 : STD_LOGIC;
  signal Carry_4 : STD_LOGIC;
  signal Carry_5 : STD_LOGIC;
  signal Carry_6 : STD_LOGIC;
  signal Carry_7 : STD_LOGIC;
  signal Carry_8 : STD_LOGIC;
  signal Carry_9 : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_10\ : STD_LOGIC;
  signal \^using_fpga.native_12\ : STD_LOGIC;
  signal \^using_fpga.native_13\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
begin
  Instr_Addr <= \^instr_addr\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_10\ <= \^using_fpga.native_10\;
  \Using_FPGA.Native_12\ <= \^using_fpga.native_12\;
  \Using_FPGA.Native_13\ <= \^using_fpga.native_13\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
\All_Bits.Using_FPGA.PC_GEN[0].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2\
     port map (
      Address(0) => Address(0),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^instr_addr\,
      LO => Carry_31,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(29),
      PC_EX_i(0) => PC_EX_i(0),
      PC_Write => PC_Write,
      Q(0) => Q(29),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(31),
      jump => jump,
      lopt => lopt_91,
      lopt_1 => lopt_92,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[10].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_553\
     port map (
      Address(0) => Address(10),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_22,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \Using_FPGA.Native_8\,
      LO => Carry_21,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(19),
      PC_EX_i(0) => PC_EX_i(10),
      PC_Write => PC_Write,
      Q(0) => Q(19),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(21),
      jump => jump,
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_61,
      lopt_3 => lopt_68,
      sync_reset => sync_reset,
      valid_Req_XX_i_2 => \^using_fpga.native\,
      valid_Req_XX_i_2_0 => \^using_fpga.native_6\,
      valid_Req_XX_i_2_1 => \^using_fpga.native_7\,
      valid_Req_XX_i_2_2 => \All_Bits.Using_FPGA.PC_GEN[13].PC_Bit_I_n_2\,
      valid_Req_XX_i_5 => \All_Bits.Using_FPGA.PC_GEN[10].PC_Bit_I_n_2\
    );
\All_Bits.Using_FPGA.PC_GEN[11].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_554\
     port map (
      Address(0) => Address(11),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_21,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_9\,
      LO => Carry_20,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(18),
      PC_EX_i(0) => PC_EX_i(11),
      PC_Write => PC_Write,
      Q(0) => Q(18),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(20),
      jump => jump,
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_10 => lopt_69,
      lopt_11 => lopt_70,
      lopt_2 => lopt_61,
      lopt_3 => lopt_62,
      lopt_4 => lopt_63,
      lopt_5 => lopt_64,
      lopt_6 => lopt_65,
      lopt_7 => lopt_66,
      lopt_8 => lopt_67,
      lopt_9 => lopt_68,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[12].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_555\
     port map (
      Address(0) => Address(12),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_20,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_10\,
      LO => Carry_19,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(17),
      PC_EX_i(0) => PC_EX_i(12),
      PC_Write => PC_Write,
      Q(0) => Q(17),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(19),
      jump => jump,
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_2 => lopt_55,
      lopt_3 => lopt_58,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[13].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_556\
     port map (
      Address(0) => Address(13),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_19,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \Using_FPGA.Native_11\,
      LO => Carry_18,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(16),
      PC_EX_i(0) => PC_EX_i(13),
      PC_Write => PC_Write,
      Q(0) => Q(16),
      \Using_FPGA.Native\ => \All_Bits.Using_FPGA.PC_GEN[13].PC_Bit_I_n_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(18),
      jump => jump,
      lopt => lopt_50,
      lopt_1 => lopt_51,
      lopt_2 => lopt_52,
      lopt_3 => lopt_57,
      sync_reset => sync_reset,
      valid_Req_XX_i_4 => \^using_fpga.native_0\,
      valid_Req_XX_i_4_0 => \^using_fpga.native_4\,
      valid_Req_XX_i_4_1 => \^using_fpga.native_9\
    );
\All_Bits.Using_FPGA.PC_GEN[14].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_557\
     port map (
      Address(0) => Address(14),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_18,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_12\,
      LO => Carry_17,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(15),
      PC_EX_i(0) => PC_EX_i(14),
      PC_Write => PC_Write,
      Q(0) => Q(15),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(17),
      jump => jump,
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_49,
      lopt_3 => lopt_56,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[15].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_558\
     port map (
      Address(0) => Address(15),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_17,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_13\,
      LO => Carry_16,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(14),
      PC_EX_i(0) => PC_EX_i(15),
      PC_Write => PC_Write,
      Q(0) => Q(14),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(16),
      jump => jump,
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_10 => lopt_57,
      lopt_11 => lopt_58,
      lopt_2 => lopt_49,
      lopt_3 => lopt_50,
      lopt_4 => lopt_51,
      lopt_5 => lopt_52,
      lopt_6 => lopt_53,
      lopt_7 => lopt_54,
      lopt_8 => lopt_55,
      lopt_9 => lopt_56,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[16].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_559\
     port map (
      Address(0) => Address(16),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_16,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_15,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(13),
      PC_EX_i(0) => PC_EX_i(16),
      PC_Write => PC_Write,
      Q(0) => Q(13),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(13),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(15),
      jump => jump,
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_43,
      lopt_3 => lopt_46,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[17].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_560\
     port map (
      Address(0) => Address(17),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_15,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_14,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(12),
      PC_EX_i(0) => PC_EX_i(17),
      PC_Write => PC_Write,
      Q(0) => Q(12),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(12),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(14),
      jump => jump,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      lopt_2 => lopt_40,
      lopt_3 => lopt_45,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[18].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_561\
     port map (
      Address(0) => Address(18),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_14,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_13,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(11),
      PC_EX_i(0) => PC_EX_i(18),
      PC_Write => PC_Write,
      Q(0) => Q(11),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(11),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(13),
      jump => jump,
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_37,
      lopt_3 => lopt_44,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[19].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_562\
     port map (
      Address(0) => Address(19),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_13,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_12,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(10),
      PC_EX_i(0) => PC_EX_i(19),
      PC_Write => PC_Write,
      Q(0) => Q(10),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(10),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(12),
      jump => jump,
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_10 => lopt_45,
      lopt_11 => lopt_46,
      lopt_2 => lopt_37,
      lopt_3 => lopt_38,
      lopt_4 => lopt_39,
      lopt_5 => lopt_40,
      lopt_6 => lopt_41,
      lopt_7 => lopt_42,
      lopt_8 => lopt_43,
      lopt_9 => lopt_44,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[1].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_563\
     port map (
      Address(0) => Address(1),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_31,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native\,
      LO => Carry_30,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(28),
      PC_EX_i(0) => PC_EX_i(1),
      PC_Write => PC_Write,
      Q(0) => Q(28),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(30),
      jump => jump,
      lopt => lopt_86,
      lopt_1 => lopt_87,
      lopt_2 => lopt_88,
      lopt_3 => lopt_90,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[20].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_564\
     port map (
      Address(0) => Address(20),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_12,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_11,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(9),
      PC_EX_i(0) => PC_EX_i(20),
      PC_Write => PC_Write,
      Q(0) => Q(9),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(9),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(11),
      jump => jump,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31,
      lopt_3 => lopt_34,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[21].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_565\
     port map (
      Address(0) => Address(21),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_11,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_10,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(8),
      PC_EX_i(0) => PC_EX_i(21),
      PC_Write => PC_Write,
      Q(0) => Q(8),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(8),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(10),
      jump => jump,
      lopt => lopt_26,
      lopt_1 => lopt_27,
      lopt_2 => lopt_28,
      lopt_3 => lopt_33,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[22].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_566\
     port map (
      Address(0) => Address(22),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_10,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_9,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(7),
      PC_EX_i(0) => PC_EX_i(22),
      PC_Write => PC_Write,
      Q(0) => Q(7),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(7),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(9),
      jump => jump,
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_2 => lopt_25,
      lopt_3 => lopt_32,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[23].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_567\
     port map (
      Address(0) => Address(23),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_9,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_8,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(6),
      PC_EX_i(0) => PC_EX_i(23),
      PC_Write => PC_Write,
      Q(0) => Q(6),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(6),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(8),
      jump => jump,
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_10 => lopt_33,
      lopt_11 => lopt_34,
      lopt_2 => lopt_25,
      lopt_3 => lopt_26,
      lopt_4 => lopt_27,
      lopt_5 => lopt_28,
      lopt_6 => lopt_29,
      lopt_7 => lopt_30,
      lopt_8 => lopt_31,
      lopt_9 => lopt_32,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[24].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_568\
     port map (
      Address(0) => Address(24),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_8,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_7,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(5),
      PC_EX_i(0) => PC_EX_i(24),
      PC_Write => PC_Write,
      Q(0) => Q(5),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(7),
      jump => jump,
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_2 => lopt_19,
      lopt_3 => lopt_22,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[25].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_569\
     port map (
      Address(0) => Address(25),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_7,
      Clk => Clk,
      D(0) => D(0),
      I3 => I3,
      IReady => IReady,
      LO => Carry_6,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(4),
      PC_EX_i(0) => PC_EX_i(25),
      PC_Write => PC_Write,
      Q(0) => Q(4),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(4),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(6),
      jump => jump,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      lopt_2 => lopt_16,
      lopt_3 => lopt_21,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[26].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_570\
     port map (
      Address(0) => Address(26),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_6,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_5,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(3),
      PC_EX_i(0) => PC_EX_i(26),
      PC_Write => PC_Write,
      Q(0) => Q(3),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(3),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(5),
      jump => jump,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_13,
      lopt_3 => lopt_20,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[27].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_571\
     port map (
      Address(0) => Address(27),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_5,
      Clk => Clk,
      D(0) => D(0),
      I3_0 => I3_0,
      IReady => IReady,
      LO => Carry_4,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(2),
      PC_EX_i(0) => PC_EX_i(27),
      PC_Write => PC_Write,
      Q(0) => Q(2),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(2),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(4),
      jump => jump,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_10 => lopt_21,
      lopt_11 => lopt_22,
      lopt_2 => lopt_13,
      lopt_3 => lopt_14,
      lopt_4 => lopt_15,
      lopt_5 => lopt_16,
      lopt_6 => lopt_17,
      lopt_7 => lopt_18,
      lopt_8 => lopt_19,
      lopt_9 => lopt_20,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[28].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_572\
     port map (
      Address(0) => Address(28),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_4,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      LO => Carry_3,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(1),
      PC_EX_i(0) => PC_EX_i(28),
      PC_Write => PC_Write,
      Q(0) => Q(1),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(3),
      jump => jump,
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_2 => lopt_7,
      lopt_3 => lopt_10,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[29].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_573\
     port map (
      Address(0) => Address(29),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_3,
      Clk => Clk,
      D(0) => D(0),
      DI => DI,
      IReady => IReady,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0),
      PC_EX_i(0) => PC_EX_i(29),
      PC_Write => PC_Write,
      Q(0) => Q(0),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_14\(0),
      \Using_FPGA.Native_0\ => Carry_2,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(2),
      jump => jump,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_9,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[2].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_574\
     port map (
      Address(0) => Address(2),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_30,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_0\,
      LO => Carry_29,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(27),
      PC_EX_i(0) => PC_EX_i(2),
      PC_Write => PC_Write,
      Q(0) => Q(27),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(29),
      jump => jump,
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_85,
      lopt_3 => lopt_89,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[30].PC_Bit_I\: entity work.design_1_microblaze_1_1_PC_Bit
     port map (
      Address(0) => Address(30),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_1,
      Clk => Clk,
      IReady => IReady,
      LO => Carry_2,
      PC_EX_i(0) => PC_EX_i(30),
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_15\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(1),
      jump => jump,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_8,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[31].PC_Bit_I\: entity work.design_1_microblaze_1_1_PC_Bit_575
     port map (
      Address(0) => Address(31),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      I3_1 => I3_1,
      IReady => IReady,
      LO => Carry_1,
      PC_EX_i(0) => PC_EX_i(31),
      PC_Write => PC_Write,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_15\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(0),
      jump => jump,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_9,
      lopt_11 => lopt_10,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => DI,
      lopt_5 => lopt_4,
      lopt_6 => lopt_5,
      lopt_7 => lopt_6,
      lopt_8 => lopt_7,
      lopt_9 => lopt_8,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[3].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_576\
     port map (
      Address(0) => Address(3),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_29,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_1\,
      LO => Carry_28,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(26),
      PC_EX_i(0) => PC_EX_i(3),
      PC_Write => PC_Write,
      Q(0) => Q(26),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(28),
      jump => jump,
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_85,
      lopt_3 => lopt_86,
      lopt_4 => lopt_87,
      lopt_5 => lopt_88,
      lopt_6 => lopt_89,
      lopt_7 => lopt_90,
      lopt_8 => lopt_91,
      lopt_9 => lopt_92,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[4].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_577\
     port map (
      Address(0) => Address(4),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_28,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_2\,
      LO => Carry_27,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(25),
      PC_EX_i(0) => PC_EX_i(4),
      PC_Write => PC_Write,
      Q(0) => Q(25),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(27),
      jump => jump,
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_2 => lopt_79,
      lopt_3 => lopt_82,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[5].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_578\
     port map (
      Address(0) => Address(5),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_27,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \Using_FPGA.Native_3\,
      LO => Carry_26,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(24),
      PC_EX_i(0) => PC_EX_i(5),
      PC_Write => PC_Write,
      Q(0) => Q(24),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(26),
      jump => jump,
      lopt => lopt_74,
      lopt_1 => lopt_75,
      lopt_2 => lopt_76,
      lopt_3 => lopt_81,
      sync_reset => sync_reset,
      valid_Req_XX_i_2 => \^instr_addr\,
      valid_Req_XX_i_2_0 => \^using_fpga.native_12\,
      valid_Req_XX_i_2_1 => \^using_fpga.native_1\,
      valid_Req_XX_i_4 => valid_Req_XX_i_4,
      valid_Req_XX_reg => \^using_fpga.native_13\,
      valid_Req_XX_reg_0 => \^using_fpga.native_5\,
      valid_Req_XX_reg_1 => \^using_fpga.native_10\,
      valid_Req_XX_reg_2 => \^using_fpga.native_2\,
      valid_Req_XX_reg_3 => \All_Bits.Using_FPGA.PC_GEN[10].PC_Bit_I_n_2\
    );
\All_Bits.Using_FPGA.PC_GEN[6].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_579\
     port map (
      Address(0) => Address(6),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_26,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_4\,
      LO => Carry_25,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(23),
      PC_EX_i(0) => PC_EX_i(6),
      PC_Write => PC_Write,
      Q(0) => Q(23),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(25),
      jump => jump,
      lopt => lopt_71,
      lopt_1 => lopt_72,
      lopt_2 => lopt_73,
      lopt_3 => lopt_80,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[7].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_580\
     port map (
      Address(0) => Address(7),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_25,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_5\,
      LO => Carry_24,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(22),
      PC_EX_i(0) => PC_EX_i(7),
      PC_Write => PC_Write,
      Q(0) => Q(22),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(24),
      jump => jump,
      lopt => lopt_71,
      lopt_1 => lopt_72,
      lopt_10 => lopt_81,
      lopt_11 => lopt_82,
      lopt_2 => lopt_73,
      lopt_3 => lopt_74,
      lopt_4 => lopt_75,
      lopt_5 => lopt_76,
      lopt_6 => lopt_77,
      lopt_7 => lopt_78,
      lopt_8 => lopt_79,
      lopt_9 => lopt_80,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[8].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_581\
     port map (
      Address(0) => Address(8),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_Out => Carry_24,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_6\,
      LO => Carry_23,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(21),
      PC_EX_i(0) => PC_EX_i(8),
      PC_Write => PC_Write,
      Q(0) => Q(21),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(23),
      jump => jump,
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_2 => lopt_67,
      lopt_3 => lopt_70,
      sync_reset => sync_reset
    );
\All_Bits.Using_FPGA.PC_GEN[9].PC_Bit_I\: entity work.\design_1_microblaze_1_1_PC_Bit__parameterized2_582\
     port map (
      Address(0) => Address(9),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Carry_In => Carry_22,
      Carry_Out => Carry_23,
      Clk => Clk,
      D(0) => D(0),
      IReady => IReady,
      Instr_Addr => \^using_fpga.native_7\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(20),
      PC_EX_i(0) => PC_EX_i(9),
      PC_Write => PC_Write,
      Q(0) => Q(20),
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \in\(0) => \in\(22),
      jump => jump,
      lopt => lopt_62,
      lopt_1 => lopt_63,
      lopt_2 => lopt_64,
      lopt_3 => lopt_69,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Register_File is
  port (
    Reg1_Data : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk_0 : out STD_LOGIC_VECTOR ( 7 downto 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 23 downto 0 );
    Clk : in STD_LOGIC;
    EX_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    Reg_Write : in STD_LOGIC;
    Write_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    imm_Value : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Register_File : entity is "Register_File";
end design_1_microblaze_1_1_Register_File;

architecture STRUCTURE of design_1_microblaze_1_1_Register_File is
begin
\Using_FPGA.Gen_RegFile[0].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(23),
      EX_Result(0) => EX_Result(0),
      Reg1_Data(0) => Reg1_Data(0),
      Reg2_Data(0) => Reg2_Data(0),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[10].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_459
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(13),
      EX_Result(0) => EX_Result(10),
      Reg1_Data(0) => Reg1_Data(10),
      Reg2_Data(0) => Reg2_Data(10),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[11].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_460
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(12),
      EX_Result(0) => EX_Result(11),
      Reg1_Data(0) => Reg1_Data(11),
      Reg2_Data(0) => Reg2_Data(11),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[12].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_461
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(11),
      EX_Result(0) => EX_Result(12),
      Reg1_Data(0) => Reg1_Data(12),
      Reg2_Data(0) => Reg2_Data(12),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[13].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_462
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(10),
      EX_Result(0) => EX_Result(13),
      Reg1_Data(0) => Reg1_Data(13),
      Reg2_Data(0) => Reg2_Data(13),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[14].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_463
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(9),
      EX_Result(0) => EX_Result(14),
      Reg1_Data(0) => Reg1_Data(14),
      Reg2_Data(0) => Reg2_Data(14),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[15].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_464
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(8),
      EX_Result(0) => EX_Result(15),
      Reg1_Data(0) => Reg1_Data(15),
      Reg2_Data(0) => Reg2_Data(15),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[16].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_465
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(7),
      EX_Result(0) => EX_Result(16),
      Reg1_Data(0) => Reg1_Data(16),
      Reg2_Data(0) => Reg2_Data(16),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[17].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_466
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(6),
      EX_Result(0) => EX_Result(17),
      Reg1_Data(0) => Reg1_Data(17),
      Reg2_Data(0) => Reg2_Data(17),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[18].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_467
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(5),
      EX_Result(0) => EX_Result(18),
      Reg1_Data(0) => Reg1_Data(18),
      Reg2_Data(0) => Reg2_Data(18),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[19].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_468
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(4),
      EX_Result(0) => EX_Result(19),
      Reg1_Data(0) => Reg1_Data(19),
      Reg2_Data(0) => Reg2_Data(19),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[1].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_469
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(22),
      EX_Result(0) => EX_Result(1),
      Reg1_Data(0) => Reg1_Data(1),
      Reg2_Data(0) => Reg2_Data(1),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[20].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_470
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(3),
      EX_Result(0) => EX_Result(20),
      Reg1_Data(0) => Reg1_Data(20),
      Reg2_Data(0) => Reg2_Data(20),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[21].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_471
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(2),
      EX_Result(0) => EX_Result(21),
      Reg1_Data(0) => Reg1_Data(21),
      Reg2_Data(0) => Reg2_Data(21),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[22].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_472
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(1),
      EX_Result(0) => EX_Result(22),
      Reg1_Data(0) => Reg1_Data(22),
      Reg2_Data(0) => Reg2_Data(22),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[23].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_473
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(0),
      EX_Result(0) => EX_Result(23),
      Reg1_Data(0) => Reg1_Data(23),
      Reg2_Data(0) => Reg2_Data(23),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[24].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_474
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(7),
      EX_Result(0) => EX_Result(24),
      Reg1_Data(0) => Reg1_Data(24),
      Reg2_Data(0) => Reg2_Data(24),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[25].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_475
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(6),
      EX_Result(0) => EX_Result(25),
      Reg1_Data(0) => Reg1_Data(25),
      Reg2_Data(0) => Reg2_Data(25),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[26].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_476
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(5),
      EX_Result(0) => EX_Result(26),
      Reg1_Data(0) => Reg1_Data(26),
      Reg2_Data(0) => Reg2_Data(26),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[27].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_477
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(4),
      EX_Result(0) => EX_Result(27),
      Reg1_Data(0) => Reg1_Data(27),
      Reg2_Data(0) => Reg2_Data(27),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[28].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_478
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(3),
      EX_Result(0) => EX_Result(28),
      Reg1_Data(0) => Reg1_Data(28),
      Reg2_Data(0) => Reg2_Data(28),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[29].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_479
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(2),
      EX_Result(0) => EX_Result(29),
      Reg1_Data(0) => Reg1_Data(29),
      Reg2_Data(0) => Reg2_Data(29),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[2].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_480
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(21),
      EX_Result(0) => EX_Result(2),
      Reg1_Data(0) => Reg1_Data(2),
      Reg2_Data(0) => Reg2_Data(2),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[30].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_481
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(1),
      EX_Result(0) => EX_Result(30),
      Reg1_Data(0) => Reg1_Data(30),
      Reg2_Data(0) => Reg2_Data(30),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[31].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_482
     port map (
      Clk => Clk,
      Clk_0(0) => Clk_0(0),
      EX_Result(0) => EX_Result(31),
      Reg1_Data(0) => Reg1_Data(31),
      Reg2_Data(0) => Reg2_Data(31),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[3].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_483
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(20),
      EX_Result(0) => EX_Result(3),
      Reg1_Data(0) => Reg1_Data(3),
      Reg2_Data(0) => Reg2_Data(3),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[4].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_484
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(19),
      EX_Result(0) => EX_Result(4),
      Reg1_Data(0) => Reg1_Data(4),
      Reg2_Data(0) => Reg2_Data(4),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[5].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_485
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(18),
      EX_Result(0) => EX_Result(5),
      Reg1_Data(0) => Reg1_Data(5),
      Reg2_Data(0) => Reg2_Data(5),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[6].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_486
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(17),
      EX_Result(0) => EX_Result(6),
      Reg1_Data(0) => Reg1_Data(6),
      Reg2_Data(0) => Reg2_Data(6),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[7].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_487
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(16),
      EX_Result(0) => EX_Result(7),
      Reg1_Data(0) => Reg1_Data(7),
      Reg2_Data(0) => Reg2_Data(7),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[8].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_488
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(15),
      EX_Result(0) => EX_Result(8),
      Reg1_Data(0) => Reg1_Data(8),
      Reg2_Data(0) => Reg2_Data(8),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
\Using_FPGA.Gen_RegFile[9].Register_File_Bit_I\: entity work.design_1_microblaze_1_1_Register_File_Bit_489
     port map (
      Clk => Clk,
      Data_Write(0) => Data_Write(14),
      EX_Result(0) => EX_Result(9),
      Reg1_Data(0) => Reg1_Data(9),
      Reg2_Data(0) => Reg2_Data(9),
      Reg_Write => Reg_Write,
      Write_Addr(0 to 4) => Write_Addr(0 to 4),
      imm_Value(4 downto 0) => imm_Value(4 downto 0),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Result_Mux is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    EX_Result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    msr_I : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC;
    PC_EX_i : in STD_LOGIC_VECTOR ( 4 downto 0 );
    ICache_Enabled : in STD_LOGIC;
    \data_rd_reg_reg[24]\ : in STD_LOGIC;
    Other_Result : in STD_LOGIC;
    mul_Result : in STD_LOGIC_VECTOR ( 0 to 31 );
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    shift_Logic_Result : in STD_LOGIC_VECTOR ( 5 downto 0 );
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    Shift_Logic_Res : in STD_LOGIC;
    data_Read_Mask : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    \Using_FPGA.Native_35\ : in STD_LOGIC;
    \Using_FPGA.Native_36\ : in STD_LOGIC;
    \Using_FPGA.Native_37\ : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    Barrel_Result : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    \Using_FPGA.Native_47\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Result_Mux : entity is "Result_Mux";
end design_1_microblaze_1_1_Result_Mux;

architecture STRUCTURE of design_1_microblaze_1_1_Result_Mux is
begin
\Result_Mux_Bits[0].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit
     port map (
      Barrel_Result(0) => Barrel_Result(7),
      Clk => Clk,
      EX_Result(0) => EX_Result(0),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(31),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_47\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(0),
      \in\(0) => \in\(31),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(0)
    );
\Result_Mux_Bits[10].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_335
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(10),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(21),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_35\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(10),
      \in\(0) => \in\(21),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(10)
    );
\Result_Mux_Bits[11].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_336
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(11),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(20),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_33\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(11),
      \in\(0) => \in\(20),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(11)
    );
\Result_Mux_Bits[12].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_337
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(12),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(19),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_31\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(12),
      \in\(0) => \in\(19),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(12)
    );
\Result_Mux_Bits[13].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_338
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(13),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(18),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_29\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(13),
      \in\(0) => \in\(18),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(13)
    );
\Result_Mux_Bits[14].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_339
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(14),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(17),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_27\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(14),
      \in\(0) => \in\(17),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(14)
    );
\Result_Mux_Bits[15].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_340
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(15),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(16),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(15),
      \in\(0) => \in\(16),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(15)
    );
\Result_Mux_Bits[16].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_341
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(16),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(15),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_23\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(16),
      \in\(0) => \in\(15),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(16)
    );
\Result_Mux_Bits[17].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_342
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(17),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(14),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_21\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(17),
      \in\(0) => \in\(14),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(17)
    );
\Result_Mux_Bits[18].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_343
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(18),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(13),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_19\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(18),
      \in\(0) => \in\(13),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(18)
    );
\Result_Mux_Bits[19].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_344
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(19),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(12),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(19),
      \in\(0) => \in\(12),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(19)
    );
\Result_Mux_Bits[1].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_345
     port map (
      Barrel_Result(0) => Barrel_Result(6),
      Clk => Clk,
      EX_Result(0) => EX_Result(1),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(30),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_46\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(1),
      \in\(0) => \in\(30),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(1)
    );
\Result_Mux_Bits[20].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_346
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(20),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(11),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_15\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(20),
      \in\(0) => \in\(11),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(20)
    );
\Result_Mux_Bits[21].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_347
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(21),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(10),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_13\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(21),
      \in\(0) => \in\(10),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(21)
    );
\Result_Mux_Bits[22].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_348
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(22),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(9),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_11\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(22),
      \in\(0) => \in\(9),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(22)
    );
\Result_Mux_Bits[23].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_349
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(23),
      Shift_Logic_Res => Shift_Logic_Res,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(8),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      data_Read_Mask(0) => data_Read_Mask(0),
      extend_Data_Read(0) => extend_Data_Read(23),
      \in\(0) => \in\(8),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(23)
    );
\Result_Mux_Bits[24].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_350
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(24),
      PC_EX_i(0) => PC_EX_i(4),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(4),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(7),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_7\(1),
      \data_rd_reg_reg[24]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[24]_0\ => \data_rd_reg_reg[24]\,
      \data_rd_reg_reg[24]_1\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0) => extend_Data_Read(24),
      \in\(0) => \in\(7),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(24),
      register_write => register_write
    );
\Result_Mux_Bits[25].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_351
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(25),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(6),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_7\(0),
      extend_Data_Read(0) => extend_Data_Read(25),
      \in\(0) => \in\(6),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(25)
    );
\Result_Mux_Bits[26].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_352
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(26),
      ICache_Enabled => ICache_Enabled,
      PC_EX_i(0) => PC_EX_i(3),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(3),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(5),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_5\,
      \data_rd_reg_reg[26]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[26]_0\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0) => extend_Data_Read(26),
      \in\(0) => \in\(5),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(26),
      register_write => register_write,
      shift_Logic_Result(0) => shift_Logic_Result(5)
    );
\Result_Mux_Bits[27].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_353
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(27),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(4),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      extend_Data_Read(0) => extend_Data_Read(27),
      \in\(0) => \in\(4),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(27),
      shift_Logic_Result(0) => shift_Logic_Result(4)
    );
\Result_Mux_Bits[28].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_354
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(28),
      PC_EX_i(0) => PC_EX_i(2),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(2),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(3),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_3\,
      \data_rd_reg_reg[28]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[28]_0\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0) => extend_Data_Read(28),
      \in\(0) => \in\(3),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      msr_I(0) => msr_I(2),
      mul_Result(0) => mul_Result(28),
      register_write => register_write,
      shift_Logic_Result(0) => shift_Logic_Result(3)
    );
\Result_Mux_Bits[29].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_355
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(29),
      PC_EX_i(0) => PC_EX_i(1),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(1),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(2),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      \data_rd_reg_reg[29]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[29]_0\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0) => extend_Data_Read(29),
      \in\(0) => \in\(2),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      msr_I(0) => msr_I(1),
      mul_Result(0) => mul_Result(29),
      register_write => register_write,
      shift_Logic_Result(0) => shift_Logic_Result(2)
    );
\Result_Mux_Bits[2].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_356
     port map (
      Barrel_Result(0) => Barrel_Result(5),
      Clk => Clk,
      EX_Result(0) => EX_Result(2),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(29),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_45\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(2),
      \in\(0) => \in\(29),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(2)
    );
\Result_Mux_Bits[30].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_357
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(30),
      PC_EX_i(0) => PC_EX_i(0),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(1),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[30]_0\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0) => extend_Data_Read(30),
      \in\(0) => \in\(1),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      msr_I(0) => msr_I(0),
      mul_Result(0) => mul_Result(30),
      register_write => register_write,
      shift_Logic_Result(0) => shift_Logic_Result(1)
    );
\Result_Mux_Bits[31].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_358
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(31),
      Other_Result => Other_Result,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(0),
      extend_Data_Read(0) => extend_Data_Read(31),
      \in\(0) => \in\(0),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(31),
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
\Result_Mux_Bits[3].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_359
     port map (
      Barrel_Result(0) => Barrel_Result(4),
      Clk => Clk,
      EX_Result(0) => EX_Result(3),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(28),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_44\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(3),
      \in\(0) => \in\(28),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(3)
    );
\Result_Mux_Bits[4].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_360
     port map (
      Barrel_Result(0) => Barrel_Result(3),
      Clk => Clk,
      EX_Result(0) => EX_Result(4),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(27),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_43\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(4),
      \in\(0) => \in\(27),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(4)
    );
\Result_Mux_Bits[5].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_361
     port map (
      Barrel_Result(0) => Barrel_Result(2),
      Clk => Clk,
      EX_Result(0) => EX_Result(5),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(26),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_42\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(5),
      \in\(0) => \in\(26),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(5)
    );
\Result_Mux_Bits[6].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_362
     port map (
      Barrel_Result(0) => Barrel_Result(1),
      Clk => Clk,
      EX_Result(0) => EX_Result(6),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(25),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_41\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(6),
      \in\(0) => \in\(25),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(6)
    );
\Result_Mux_Bits[7].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_363
     port map (
      Barrel_Result(0) => Barrel_Result(0),
      Clk => Clk,
      EX_Result(0) => EX_Result(7),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(24),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_40\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(7),
      \in\(0) => \in\(24),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(7)
    );
\Result_Mux_Bits[8].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_364
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(8),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(23),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_39\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(8),
      \in\(0) => \in\(23),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(8)
    );
\Result_Mux_Bits[9].Result_Mux_Bit_I\: entity work.design_1_microblaze_1_1_Result_Mux_Bit_365
     port map (
      Clk => Clk,
      EX_Result(0) => EX_Result(9),
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(22),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_37\,
      data_Read_Mask(0) => data_Read_Mask(1),
      extend_Data_Read(0) => extend_Data_Read(9),
      \in\(0) => \in\(22),
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      mul_Result(0) => mul_Result(9)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Shift_Logic_Module is
  port (
    shift_Logic_Result : out STD_LOGIC_VECTOR ( 5 downto 0 );
    Is_Equal : out STD_LOGIC;
    Is_Equal3_out : out STD_LOGIC;
    Is_Equal1_out : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Use_The_PCMP_instr.CLZ_Instr_reg\ : out STD_LOGIC;
    Shift_Logic_Res : out STD_LOGIC;
    Select_Logic_reg : out STD_LOGIC;
    Select_Logic_reg_0 : out STD_LOGIC;
    Select_Logic_reg_1 : out STD_LOGIC;
    Select_Logic_reg_2 : out STD_LOGIC;
    Select_Logic_reg_3 : out STD_LOGIC;
    Select_Logic_reg_4 : out STD_LOGIC;
    Select_Logic_reg_5 : out STD_LOGIC;
    Select_Logic_reg_6 : out STD_LOGIC;
    Select_Logic_reg_7 : out STD_LOGIC;
    Select_Logic_reg_8 : out STD_LOGIC;
    Select_Logic_reg_9 : out STD_LOGIC;
    Select_Logic_reg_10 : out STD_LOGIC;
    Select_Logic_reg_11 : out STD_LOGIC;
    Select_Logic_reg_12 : out STD_LOGIC;
    Select_Logic_reg_13 : out STD_LOGIC;
    Select_Logic_reg_14 : out STD_LOGIC;
    Select_Logic_reg_15 : out STD_LOGIC;
    Select_Logic_reg_16 : out STD_LOGIC;
    Select_Logic_reg_17 : out STD_LOGIC;
    Select_Logic_reg_18 : out STD_LOGIC;
    Select_Logic_reg_19 : out STD_LOGIC;
    Select_Logic_reg_20 : out STD_LOGIC;
    Select_Logic_reg_21 : out STD_LOGIC;
    Select_Logic_reg_22 : out STD_LOGIC;
    Select_Logic_reg_23 : out STD_LOGIC;
    Select_Logic_reg_24 : out STD_LOGIC;
    Select_Logic_reg_25 : out STD_LOGIC;
    I0 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_0\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_2\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_3\ : in STD_LOGIC;
    S_4 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_5\ : in STD_LOGIC;
    PCMP_Instr2_out : in STD_LOGIC;
    Enable_2 : in STD_LOGIC;
    \Using_FPGA.The_Compare[2].sel_reg_6\ : in STD_LOGIC;
    S_7 : in STD_LOGIC;
    \Using_FPGA.The_Compare[0].sel_reg_8\ : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    I3 : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__75\ : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    Op1_Logic : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    Sext : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    op1 : in STD_LOGIC_VECTOR ( 17 downto 0 );
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Shift_Logic_Module : entity is "Shift_Logic_Module";
end design_1_microblaze_1_1_Shift_Logic_Module;

architecture STRUCTURE of design_1_microblaze_1_1_Shift_Logic_Module is
  signal \^is_equal\ : STD_LOGIC;
  signal \^is_equal1_out\ : STD_LOGIC;
  signal \^is_equal3_out\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal byte_0 : STD_LOGIC;
  signal byte_0x_0 : STD_LOGIC;
  signal byte_0x_1 : STD_LOGIC;
  signal byte_0x_2 : STD_LOGIC;
  signal byte_0x_3 : STD_LOGIC;
  signal byte_1 : STD_LOGIC;
  signal byte_2 : STD_LOGIC;
  signal byte_3 : STD_LOGIC;
  signal res_00_0 : STD_LOGIC;
  signal res_00_1 : STD_LOGIC;
  signal res_00_2 : STD_LOGIC;
  signal res_10 : STD_LOGIC;
  signal res_11 : STD_LOGIC;
  signal res_1x : STD_LOGIC;
begin
  Is_Equal <= \^is_equal\;
  Is_Equal1_out <= \^is_equal1_out\;
  Is_Equal3_out <= \^is_equal3_out\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\Shift_Logic_Bits[0].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit
     port map (
      EX_Op2(0) => EX_Op2(0),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_25,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[10].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_185
     port map (
      EX_Op2(0) => EX_Op2(10),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_15,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(9 downto 8)
    );
\Shift_Logic_Bits[11].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_186
     port map (
      EX_Op2(0) => EX_Op2(11),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_14,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(8 downto 7)
    );
\Shift_Logic_Bits[12].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_187
     port map (
      EX_Op2(0) => EX_Op2(12),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_13,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(7 downto 6)
    );
\Shift_Logic_Bits[13].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_188
     port map (
      EX_Op2(0) => EX_Op2(13),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_12,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(6 downto 5)
    );
\Shift_Logic_Bits[14].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_189
     port map (
      EX_Op2(0) => EX_Op2(14),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_11,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(5 downto 4)
    );
\Shift_Logic_Bits[15].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_190
     port map (
      EX_Op2(0) => EX_Op2(15),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_10,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(4 downto 3)
    );
\Shift_Logic_Bits[16].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_191
     port map (
      EX_Op2(0) => EX_Op2(16),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_9,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_23\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(0) => op1(3)
    );
\Shift_Logic_Bits[17].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_192
     port map (
      EX_Op2(0) => EX_Op2(17),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_8,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_23\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(0) => op1(2)
    );
\Shift_Logic_Bits[18].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_193
     port map (
      EX_Op2(0) => EX_Op2(18),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_7,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(2 downto 1)
    );
\Shift_Logic_Bits[19].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_194
     port map (
      EX_Op2(0) => EX_Op2(19),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_6,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(1 downto 0)
    );
\Shift_Logic_Bits[1].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_195
     port map (
      EX_Op2(0) => EX_Op2(1),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_24,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(0) => op1(17)
    );
\Shift_Logic_Bits[20].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_196
     port map (
      EX_Op2(0) => EX_Op2(20),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_5,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_22\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(0) => op1(0)
    );
\Shift_Logic_Bits[21].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_197
     port map (
      EX_Op2(0) => EX_Op2(21),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_4,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_22\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[22].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_198
     port map (
      EX_Op2(0) => EX_Op2(22),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_3,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_21\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[23].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_199
     port map (
      EX_Op2(0) => EX_Op2(23),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_2,
      Sext => Sext,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_20\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[24].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_200
     port map (
      EX_Op2(0) => EX_Op2(24),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_1,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_19\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[25].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_201
     port map (
      EX_Op2(0) => EX_Op2(25),
      Op1_Logic => Op1_Logic,
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_0,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[26].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_202
     port map (
      EX_Op2(0) => EX_Op2(26),
      Op1_Logic => Op1_Logic,
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \^is_equal3_out\,
      \Using_FPGA.Native_2\ => \^is_equal1_out\,
      \Using_FPGA.Native_3\ => \^using_fpga.native\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_18\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      shift_Logic_Result(0) => shift_Logic_Result(5)
    );
\Shift_Logic_Bits[27].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_203
     port map (
      EX_Op2(0) => EX_Op2(27),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \^is_equal1_out\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_3\ => \^is_equal3_out\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_18\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      shift_Logic_Result(0) => shift_Logic_Result(4)
    );
\Shift_Logic_Bits[28].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_204
     port map (
      EX_Op2(0) => EX_Op2(28),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \^is_equal1_out\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\ => \^is_equal3_out\,
      \Using_FPGA.Native_3\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_17\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      shift_Logic_Result(0) => shift_Logic_Result(3)
    );
\Shift_Logic_Bits[29].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_205
     port map (
      EX_Op2(0) => EX_Op2(29),
      Op1_Shift => Op1_Shift,
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[2].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_206
     port map (
      EX_Op2(0) => EX_Op2(2),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_23,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(17 downto 16)
    );
\Shift_Logic_Bits[30].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_207
     port map (
      EX_Op2(0) => EX_Op2(30),
      Select_Logic => Select_Logic,
      Shift_Logic_Res => Shift_Logic_Res,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[31].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_208
     port map (
      EX_Op2(0) => EX_Op2(31),
      Select_Logic => Select_Logic,
      Shift_Oper => Shift_Oper,
      Shifted => Shifted,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_i_1__74\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_i_1__74_0\ => \^is_equal\,
      \Using_FPGA.Native_i_1__74_1\ => \Using_FPGA.Native_i_1__74\,
      \Using_FPGA.Native_i_1__74_2\ => \Using_FPGA.Native_i_1__74_0\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0)
    );
\Shift_Logic_Bits[3].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_209
     port map (
      EX_Op2(0) => EX_Op2(3),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_22,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(16 downto 15)
    );
\Shift_Logic_Bits[4].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_210
     port map (
      EX_Op2(0) => EX_Op2(4),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_21,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(15 downto 14)
    );
\Shift_Logic_Bits[5].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_211
     port map (
      EX_Op2(0) => EX_Op2(5),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_20,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(14 downto 13)
    );
\Shift_Logic_Bits[6].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_212
     port map (
      EX_Op2(0) => EX_Op2(6),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_19,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(13 downto 12)
    );
\Shift_Logic_Bits[7].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_213
     port map (
      EX_Op2(0) => EX_Op2(7),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_18,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(12 downto 11)
    );
\Shift_Logic_Bits[8].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_214
     port map (
      EX_Op2(0) => EX_Op2(8),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_17,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(11 downto 10)
    );
\Shift_Logic_Bits[9].Shift_Logic_Bit_I\: entity work.design_1_microblaze_1_1_Shift_Logic_Bit_215
     port map (
      EX_Op2(0) => EX_Op2(9),
      Select_Logic => Select_Logic,
      Select_Logic_reg => Select_Logic_reg_16,
      Shift_Oper => Shift_Oper,
      \Using_FPGA.Native\ => \Using_FPGA.Native_24\,
      instr_ex(1 downto 0) => instr_ex(1 downto 0),
      op1(1 downto 0) => op1(10 downto 9)
    );
\Use_PCMP_instr.No_PCMP_Long.MUXF5_pcmp1x\: entity work.design_1_microblaze_1_1_MB_MUXF7
     port map (
      instr_ex(0) => instr_ex(0),
      res_10 => res_10,
      res_11 => res_11,
      res_1x => res_1x
    );
\Use_PCMP_instr.No_PCMP_Long.pcmp_00_lut_0\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized19\
     port map (
      byte_0x_0 => byte_0x_0,
      byte_0x_1 => byte_0x_1,
      byte_0x_2 => byte_0x_2,
      byte_0x_3 => byte_0x_3,
      res_00_2 => res_00_2
    );
\Use_PCMP_instr.No_PCMP_Long.pcmp_00_lut_1\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized21\
     port map (
      byte_0x_0 => byte_0x_0,
      byte_0x_1 => byte_0x_1,
      byte_0x_2 => byte_0x_2,
      byte_0x_3 => byte_0x_3,
      res_00_1 => res_00_1
    );
\Use_PCMP_instr.No_PCMP_Long.pcmp_00_lut_2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized23\
     port map (
      byte_0x_0 => byte_0x_0,
      byte_0x_1 => byte_0x_1,
      byte_0x_2 => byte_0x_2,
      byte_0x_3 => byte_0x_3,
      res_00_0 => res_00_0
    );
\Use_PCMP_instr.No_PCMP_Long.pcmp_10_lut\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized7_216\
     port map (
      byte_0 => byte_0,
      byte_1 => byte_1,
      byte_2 => byte_2,
      byte_3 => byte_3,
      res_10 => res_10
    );
\Use_PCMP_instr.No_PCMP_Long.pcmp_11_lut\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized25\
     port map (
      byte_0 => byte_0,
      byte_1 => byte_1,
      byte_2 => byte_2,
      byte_3 => byte_3,
      res_11 => res_11
    );
\Use_PCMP_instr.No_PCMP_Long.shift_logic_result_i_lut_2\: entity work.\design_1_microblaze_1_1_MB_LUT4__parameterized27\
     port map (
      I3 => I3,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      res_00_0 => res_00_0,
      res_1x => res_1x,
      shift_Logic_Result(0) => shift_Logic_Result(0)
    );
\Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte\: entity work.design_1_microblaze_1_1_carry_equal
     port map (
      S => S,
      \Use_The_PCMP_instr.CLZ_Instr_reg\ => \Use_The_PCMP_instr.CLZ_Instr_reg\,
      \Using_FPGA.Native\ => \^is_equal\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_1__75\,
      \Using_FPGA.Native_i_1__75_0\ => \^is_equal3_out\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg\ => \Using_FPGA.The_Compare[2].sel_reg\,
      byte_0x_3 => byte_0x_3,
      byte_3 => byte_3,
      clz_instr => clz_instr
    );
\Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte\: entity work.design_1_microblaze_1_1_carry_equal_217
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \^is_equal3_out\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_7\,
      \Using_FPGA.The_Compare[0].sel_reg_2\ => \Using_FPGA.The_Compare[0].sel_reg_2\,
      \Using_FPGA.The_Compare[2].sel_reg_0\ => \Using_FPGA.The_Compare[2].sel_reg_0\,
      byte_0x_2 => byte_0x_2,
      byte_2 => byte_2
    );
\Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte\: entity work.design_1_microblaze_1_1_carry_equal_218
     port map (
      S_4 => S_4,
      \Using_FPGA.Native\ => \^is_equal1_out\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      \Using_FPGA.The_Compare[0].sel_reg_5\ => \Using_FPGA.The_Compare[0].sel_reg_5\,
      \Using_FPGA.The_Compare[2].sel_reg_3\ => \Using_FPGA.The_Compare[2].sel_reg_3\,
      byte_0x_1 => byte_0x_1,
      byte_1 => byte_1
    );
\Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte\: entity work.design_1_microblaze_1_1_carry_equal_219
     port map (
      Enable_2 => Enable_2,
      Op1_Logic => Op1_Logic,
      PCMP_Instr2_out => PCMP_Instr2_out,
      S_7 => S_7,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_i_6__4\ => \^is_equal1_out\,
      \Using_FPGA.Native_i_6__4_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.The_Compare[0].sel_reg_8\ => \Using_FPGA.The_Compare[0].sel_reg_8\,
      \Using_FPGA.The_Compare[2].sel_reg_6\ => \Using_FPGA.The_Compare[2].sel_reg_6\,
      byte_0 => byte_0,
      byte_0x_0 => byte_0x_0
    );
\Use_PCMP_instr.shift_logic_result_i_lut_0\: entity work.design_1_microblaze_1_1_MB_LUT2
     port map (
      I0 => I0,
      res_00_2 => res_00_2,
      shift_Logic_Result(0) => shift_Logic_Result(2)
    );
\Use_PCMP_instr.shift_logic_result_i_lut_1\: entity work.design_1_microblaze_1_1_MB_LUT2_220
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      res_00_1 => res_00_1,
      shift_Logic_Result(0) => shift_Logic_Result(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_cache_valid_bit_detect is
  port (
    word_is_valid : out STD_LOGIC;
    Trace_ICache_Rdy_reg : in STD_LOGIC;
    Carry_OUT : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_cache_valid_bit_detect : entity is "cache_valid_bit_detect";
end design_1_microblaze_1_1_cache_valid_bit_detect;

architecture STRUCTURE of design_1_microblaze_1_1_cache_valid_bit_detect is
begin
\Valid_Check_With_4word_Cacheline.lut6_valid_check_carry_and\: entity work.design_1_microblaze_1_1_carry_and
     port map (
      Carry_OUT => Carry_OUT,
      Trace_ICache_Rdy_reg => Trace_ICache_Rdy_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      word_is_valid => word_is_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \design_1_microblaze_1_1_cache_valid_bit_detect__parameterized1\ is
  port (
    Trace_Cache_Hit0 : out STD_LOGIC;
    Carry_Out : out STD_LOGIC;
    Valid_Req_1st_Cycle : in STD_LOGIC;
    tag_ok_without_parity : in STD_LOGIC;
    DOADO : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \design_1_microblaze_1_1_cache_valid_bit_detect__parameterized1\ : entity is "cache_valid_bit_detect";
end \design_1_microblaze_1_1_cache_valid_bit_detect__parameterized1\;

architecture STRUCTURE of \design_1_microblaze_1_1_cache_valid_bit_detect__parameterized1\ is
  signal \/i__n_0\ : STD_LOGIC;
begin
  lopt_2 <= \/i__n_0\;
\/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => DOADO(0),
      I1 => DOADO(2),
      I2 => Q(0),
      I3 => DOADO(1),
      I4 => Q(1),
      I5 => DOADO(3),
      O => \/i__n_0\
    );
\Valid_Check_With_4word_Cacheline.lut6_valid_check_carry_and\: entity work.design_1_microblaze_1_1_carry_and_21
     port map (
      Carry_Out => Carry_Out,
      Trace_Cache_Hit0 => Trace_Cache_Hit0,
      Trace_Cache_Hit_reg => \/i__n_0\,
      Valid_Req_1st_Cycle => Valid_Req_1st_Cycle,
      lopt => lopt,
      lopt_1 => lopt_1,
      tag_ok_without_parity => tag_ok_without_parity
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_mul_unit is
  port (
    mul_Result : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    EX_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    EX_Op1 : in STD_LOGIC_VECTOR ( 0 to 31 );
    ex_not_mul_op : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_mul_unit : entity is "mul_unit";
end design_1_microblaze_1_1_mul_unit;

architecture STRUCTURE of design_1_microblaze_1_1_mul_unit is
  signal mem_bd_p : STD_LOGIC_VECTOR ( 31 to 47 );
  signal mem_bd_pout : STD_LOGIC_VECTOR ( 0 to 47 );
  signal wb_ad_pout : STD_LOGIC_VECTOR ( 0 to 47 );
begin
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(31),
      Q => mul_Result(15),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(32),
      Q => mul_Result(16),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(33),
      Q => mul_Result(17),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(34),
      Q => mul_Result(18),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(35),
      Q => mul_Result(19),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(36),
      Q => mul_Result(20),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(37),
      Q => mul_Result(21),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(38),
      Q => mul_Result(22),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(39),
      Q => mul_Result(23),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(40),
      Q => mul_Result(24),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(41),
      Q => mul_Result(25),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(42),
      Q => mul_Result(26),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(43),
      Q => mul_Result(27),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(44),
      Q => mul_Result(28),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(45),
      Q => mul_Result(29),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(46),
      Q => mul_Result(30),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_bd_p(47),
      Q => mul_Result(31),
      R => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2\: entity work.\design_1_microblaze_1_1_dsp_module__parameterized1\
     port map (
      Clk => Clk,
      EX_Op1(14) => EX_Op1(0),
      EX_Op1(13) => EX_Op1(1),
      EX_Op1(12) => EX_Op1(2),
      EX_Op1(11) => EX_Op1(3),
      EX_Op1(10) => EX_Op1(4),
      EX_Op1(9) => EX_Op1(5),
      EX_Op1(8) => EX_Op1(6),
      EX_Op1(7) => EX_Op1(7),
      EX_Op1(6) => EX_Op1(8),
      EX_Op1(5) => EX_Op1(9),
      EX_Op1(4) => EX_Op1(10),
      EX_Op1(3) => EX_Op1(11),
      EX_Op1(2) => EX_Op1(12),
      EX_Op1(1) => EX_Op1(13),
      EX_Op1(0) => EX_Op1(14),
      EX_Op2(16) => EX_Op2(15),
      EX_Op2(15) => EX_Op2(16),
      EX_Op2(14) => EX_Op2(17),
      EX_Op2(13) => EX_Op2(18),
      EX_Op2(12) => EX_Op2(19),
      EX_Op2(11) => EX_Op2(20),
      EX_Op2(10) => EX_Op2(21),
      EX_Op2(9) => EX_Op2(22),
      EX_Op2(8) => EX_Op2(23),
      EX_Op2(7) => EX_Op2(24),
      EX_Op2(6) => EX_Op2(25),
      EX_Op2(5) => EX_Op2(26),
      EX_Op2(4) => EX_Op2(27),
      EX_Op2(3) => EX_Op2(28),
      EX_Op2(2) => EX_Op2(29),
      EX_Op2(1) => EX_Op2(30),
      EX_Op2(0) => EX_Op2(31),
      PCOUT(47) => wb_ad_pout(0),
      PCOUT(46) => wb_ad_pout(1),
      PCOUT(45) => wb_ad_pout(2),
      PCOUT(44) => wb_ad_pout(3),
      PCOUT(43) => wb_ad_pout(4),
      PCOUT(42) => wb_ad_pout(5),
      PCOUT(41) => wb_ad_pout(6),
      PCOUT(40) => wb_ad_pout(7),
      PCOUT(39) => wb_ad_pout(8),
      PCOUT(38) => wb_ad_pout(9),
      PCOUT(37) => wb_ad_pout(10),
      PCOUT(36) => wb_ad_pout(11),
      PCOUT(35) => wb_ad_pout(12),
      PCOUT(34) => wb_ad_pout(13),
      PCOUT(33) => wb_ad_pout(14),
      PCOUT(32) => wb_ad_pout(15),
      PCOUT(31) => wb_ad_pout(16),
      PCOUT(30) => wb_ad_pout(17),
      PCOUT(29) => wb_ad_pout(18),
      PCOUT(28) => wb_ad_pout(19),
      PCOUT(27) => wb_ad_pout(20),
      PCOUT(26) => wb_ad_pout(21),
      PCOUT(25) => wb_ad_pout(22),
      PCOUT(24) => wb_ad_pout(23),
      PCOUT(23) => wb_ad_pout(24),
      PCOUT(22) => wb_ad_pout(25),
      PCOUT(21) => wb_ad_pout(26),
      PCOUT(20) => wb_ad_pout(27),
      PCOUT(19) => wb_ad_pout(28),
      PCOUT(18) => wb_ad_pout(29),
      PCOUT(17) => wb_ad_pout(30),
      PCOUT(16) => wb_ad_pout(31),
      PCOUT(15) => wb_ad_pout(32),
      PCOUT(14) => wb_ad_pout(33),
      PCOUT(13) => wb_ad_pout(34),
      PCOUT(12) => wb_ad_pout(35),
      PCOUT(11) => wb_ad_pout(36),
      PCOUT(10) => wb_ad_pout(37),
      PCOUT(9) => wb_ad_pout(38),
      PCOUT(8) => wb_ad_pout(39),
      PCOUT(7) => wb_ad_pout(40),
      PCOUT(6) => wb_ad_pout(41),
      PCOUT(5) => wb_ad_pout(42),
      PCOUT(4) => wb_ad_pout(43),
      PCOUT(3) => wb_ad_pout(44),
      PCOUT(2) => wb_ad_pout(45),
      PCOUT(1) => wb_ad_pout(46),
      PCOUT(0) => wb_ad_pout(47),
      \Using_FPGA.DSP48E1_I1\(47) => mem_bd_pout(0),
      \Using_FPGA.DSP48E1_I1\(46) => mem_bd_pout(1),
      \Using_FPGA.DSP48E1_I1\(45) => mem_bd_pout(2),
      \Using_FPGA.DSP48E1_I1\(44) => mem_bd_pout(3),
      \Using_FPGA.DSP48E1_I1\(43) => mem_bd_pout(4),
      \Using_FPGA.DSP48E1_I1\(42) => mem_bd_pout(5),
      \Using_FPGA.DSP48E1_I1\(41) => mem_bd_pout(6),
      \Using_FPGA.DSP48E1_I1\(40) => mem_bd_pout(7),
      \Using_FPGA.DSP48E1_I1\(39) => mem_bd_pout(8),
      \Using_FPGA.DSP48E1_I1\(38) => mem_bd_pout(9),
      \Using_FPGA.DSP48E1_I1\(37) => mem_bd_pout(10),
      \Using_FPGA.DSP48E1_I1\(36) => mem_bd_pout(11),
      \Using_FPGA.DSP48E1_I1\(35) => mem_bd_pout(12),
      \Using_FPGA.DSP48E1_I1\(34) => mem_bd_pout(13),
      \Using_FPGA.DSP48E1_I1\(33) => mem_bd_pout(14),
      \Using_FPGA.DSP48E1_I1\(32) => mem_bd_pout(15),
      \Using_FPGA.DSP48E1_I1\(31) => mem_bd_pout(16),
      \Using_FPGA.DSP48E1_I1\(30) => mem_bd_pout(17),
      \Using_FPGA.DSP48E1_I1\(29) => mem_bd_pout(18),
      \Using_FPGA.DSP48E1_I1\(28) => mem_bd_pout(19),
      \Using_FPGA.DSP48E1_I1\(27) => mem_bd_pout(20),
      \Using_FPGA.DSP48E1_I1\(26) => mem_bd_pout(21),
      \Using_FPGA.DSP48E1_I1\(25) => mem_bd_pout(22),
      \Using_FPGA.DSP48E1_I1\(24) => mem_bd_pout(23),
      \Using_FPGA.DSP48E1_I1\(23) => mem_bd_pout(24),
      \Using_FPGA.DSP48E1_I1\(22) => mem_bd_pout(25),
      \Using_FPGA.DSP48E1_I1\(21) => mem_bd_pout(26),
      \Using_FPGA.DSP48E1_I1\(20) => mem_bd_pout(27),
      \Using_FPGA.DSP48E1_I1\(19) => mem_bd_pout(28),
      \Using_FPGA.DSP48E1_I1\(18) => mem_bd_pout(29),
      \Using_FPGA.DSP48E1_I1\(17) => mem_bd_pout(30),
      \Using_FPGA.DSP48E1_I1\(16) => mem_bd_pout(31),
      \Using_FPGA.DSP48E1_I1\(15) => mem_bd_pout(32),
      \Using_FPGA.DSP48E1_I1\(14) => mem_bd_pout(33),
      \Using_FPGA.DSP48E1_I1\(13) => mem_bd_pout(34),
      \Using_FPGA.DSP48E1_I1\(12) => mem_bd_pout(35),
      \Using_FPGA.DSP48E1_I1\(11) => mem_bd_pout(36),
      \Using_FPGA.DSP48E1_I1\(10) => mem_bd_pout(37),
      \Using_FPGA.DSP48E1_I1\(9) => mem_bd_pout(38),
      \Using_FPGA.DSP48E1_I1\(8) => mem_bd_pout(39),
      \Using_FPGA.DSP48E1_I1\(7) => mem_bd_pout(40),
      \Using_FPGA.DSP48E1_I1\(6) => mem_bd_pout(41),
      \Using_FPGA.DSP48E1_I1\(5) => mem_bd_pout(42),
      \Using_FPGA.DSP48E1_I1\(4) => mem_bd_pout(43),
      \Using_FPGA.DSP48E1_I1\(3) => mem_bd_pout(44),
      \Using_FPGA.DSP48E1_I1\(2) => mem_bd_pout(45),
      \Using_FPGA.DSP48E1_I1\(1) => mem_bd_pout(46),
      \Using_FPGA.DSP48E1_I1\(0) => mem_bd_pout(47),
      ex_not_mul_op => ex_not_mul_op
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3\: entity work.\design_1_microblaze_1_1_dsp_module__parameterized3\
     port map (
      Clk => Clk,
      EX_Op1(16) => EX_Op1(15),
      EX_Op1(15) => EX_Op1(16),
      EX_Op1(14) => EX_Op1(17),
      EX_Op1(13) => EX_Op1(18),
      EX_Op1(12) => EX_Op1(19),
      EX_Op1(11) => EX_Op1(20),
      EX_Op1(10) => EX_Op1(21),
      EX_Op1(9) => EX_Op1(22),
      EX_Op1(8) => EX_Op1(23),
      EX_Op1(7) => EX_Op1(24),
      EX_Op1(6) => EX_Op1(25),
      EX_Op1(5) => EX_Op1(26),
      EX_Op1(4) => EX_Op1(27),
      EX_Op1(3) => EX_Op1(28),
      EX_Op1(2) => EX_Op1(29),
      EX_Op1(1) => EX_Op1(30),
      EX_Op1(0) => EX_Op1(31),
      EX_Op2(14) => EX_Op2(0),
      EX_Op2(13) => EX_Op2(1),
      EX_Op2(12) => EX_Op2(2),
      EX_Op2(11) => EX_Op2(3),
      EX_Op2(10) => EX_Op2(4),
      EX_Op2(9) => EX_Op2(5),
      EX_Op2(8) => EX_Op2(6),
      EX_Op2(7) => EX_Op2(7),
      EX_Op2(6) => EX_Op2(8),
      EX_Op2(5) => EX_Op2(9),
      EX_Op2(4) => EX_Op2(10),
      EX_Op2(3) => EX_Op2(11),
      EX_Op2(2) => EX_Op2(12),
      EX_Op2(1) => EX_Op2(13),
      EX_Op2(0) => EX_Op2(14),
      PCOUT(47) => wb_ad_pout(0),
      PCOUT(46) => wb_ad_pout(1),
      PCOUT(45) => wb_ad_pout(2),
      PCOUT(44) => wb_ad_pout(3),
      PCOUT(43) => wb_ad_pout(4),
      PCOUT(42) => wb_ad_pout(5),
      PCOUT(41) => wb_ad_pout(6),
      PCOUT(40) => wb_ad_pout(7),
      PCOUT(39) => wb_ad_pout(8),
      PCOUT(38) => wb_ad_pout(9),
      PCOUT(37) => wb_ad_pout(10),
      PCOUT(36) => wb_ad_pout(11),
      PCOUT(35) => wb_ad_pout(12),
      PCOUT(34) => wb_ad_pout(13),
      PCOUT(33) => wb_ad_pout(14),
      PCOUT(32) => wb_ad_pout(15),
      PCOUT(31) => wb_ad_pout(16),
      PCOUT(30) => wb_ad_pout(17),
      PCOUT(29) => wb_ad_pout(18),
      PCOUT(28) => wb_ad_pout(19),
      PCOUT(27) => wb_ad_pout(20),
      PCOUT(26) => wb_ad_pout(21),
      PCOUT(25) => wb_ad_pout(22),
      PCOUT(24) => wb_ad_pout(23),
      PCOUT(23) => wb_ad_pout(24),
      PCOUT(22) => wb_ad_pout(25),
      PCOUT(21) => wb_ad_pout(26),
      PCOUT(20) => wb_ad_pout(27),
      PCOUT(19) => wb_ad_pout(28),
      PCOUT(18) => wb_ad_pout(29),
      PCOUT(17) => wb_ad_pout(30),
      PCOUT(16) => wb_ad_pout(31),
      PCOUT(15) => wb_ad_pout(32),
      PCOUT(14) => wb_ad_pout(33),
      PCOUT(13) => wb_ad_pout(34),
      PCOUT(12) => wb_ad_pout(35),
      PCOUT(11) => wb_ad_pout(36),
      PCOUT(10) => wb_ad_pout(37),
      PCOUT(9) => wb_ad_pout(38),
      PCOUT(8) => wb_ad_pout(39),
      PCOUT(7) => wb_ad_pout(40),
      PCOUT(6) => wb_ad_pout(41),
      PCOUT(5) => wb_ad_pout(42),
      PCOUT(4) => wb_ad_pout(43),
      PCOUT(3) => wb_ad_pout(44),
      PCOUT(2) => wb_ad_pout(45),
      PCOUT(1) => wb_ad_pout(46),
      PCOUT(0) => wb_ad_pout(47),
      ex_not_mul_op => ex_not_mul_op,
      mul_Result(14) => mul_Result(0),
      mul_Result(13) => mul_Result(1),
      mul_Result(12) => mul_Result(2),
      mul_Result(11) => mul_Result(3),
      mul_Result(10) => mul_Result(4),
      mul_Result(9) => mul_Result(5),
      mul_Result(8) => mul_Result(6),
      mul_Result(7) => mul_Result(7),
      mul_Result(6) => mul_Result(8),
      mul_Result(5) => mul_Result(9),
      mul_Result(4) => mul_Result(10),
      mul_Result(3) => mul_Result(11),
      mul_Result(2) => mul_Result(12),
      mul_Result(1) => mul_Result(13),
      mul_Result(0) => mul_Result(14)
    );
\Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1\: entity work.design_1_microblaze_1_1_dsp_module
     port map (
      Clk => Clk,
      EX_Op1(16) => EX_Op1(15),
      EX_Op1(15) => EX_Op1(16),
      EX_Op1(14) => EX_Op1(17),
      EX_Op1(13) => EX_Op1(18),
      EX_Op1(12) => EX_Op1(19),
      EX_Op1(11) => EX_Op1(20),
      EX_Op1(10) => EX_Op1(21),
      EX_Op1(9) => EX_Op1(22),
      EX_Op1(8) => EX_Op1(23),
      EX_Op1(7) => EX_Op1(24),
      EX_Op1(6) => EX_Op1(25),
      EX_Op1(5) => EX_Op1(26),
      EX_Op1(4) => EX_Op1(27),
      EX_Op1(3) => EX_Op1(28),
      EX_Op1(2) => EX_Op1(29),
      EX_Op1(1) => EX_Op1(30),
      EX_Op1(0) => EX_Op1(31),
      EX_Op2(16) => EX_Op2(15),
      EX_Op2(15) => EX_Op2(16),
      EX_Op2(14) => EX_Op2(17),
      EX_Op2(13) => EX_Op2(18),
      EX_Op2(12) => EX_Op2(19),
      EX_Op2(11) => EX_Op2(20),
      EX_Op2(10) => EX_Op2(21),
      EX_Op2(9) => EX_Op2(22),
      EX_Op2(8) => EX_Op2(23),
      EX_Op2(7) => EX_Op2(24),
      EX_Op2(6) => EX_Op2(25),
      EX_Op2(5) => EX_Op2(26),
      EX_Op2(4) => EX_Op2(27),
      EX_Op2(3) => EX_Op2(28),
      EX_Op2(2) => EX_Op2(29),
      EX_Op2(1) => EX_Op2(30),
      EX_Op2(0) => EX_Op2(31),
      P(16) => mem_bd_p(31),
      P(15) => mem_bd_p(32),
      P(14) => mem_bd_p(33),
      P(13) => mem_bd_p(34),
      P(12) => mem_bd_p(35),
      P(11) => mem_bd_p(36),
      P(10) => mem_bd_p(37),
      P(9) => mem_bd_p(38),
      P(8) => mem_bd_p(39),
      P(7) => mem_bd_p(40),
      P(6) => mem_bd_p(41),
      P(5) => mem_bd_p(42),
      P(4) => mem_bd_p(43),
      P(3) => mem_bd_p(44),
      P(2) => mem_bd_p(45),
      P(1) => mem_bd_p(46),
      P(0) => mem_bd_p(47),
      \Using_FPGA.DSP48E1_I1\(47) => mem_bd_pout(0),
      \Using_FPGA.DSP48E1_I1\(46) => mem_bd_pout(1),
      \Using_FPGA.DSP48E1_I1\(45) => mem_bd_pout(2),
      \Using_FPGA.DSP48E1_I1\(44) => mem_bd_pout(3),
      \Using_FPGA.DSP48E1_I1\(43) => mem_bd_pout(4),
      \Using_FPGA.DSP48E1_I1\(42) => mem_bd_pout(5),
      \Using_FPGA.DSP48E1_I1\(41) => mem_bd_pout(6),
      \Using_FPGA.DSP48E1_I1\(40) => mem_bd_pout(7),
      \Using_FPGA.DSP48E1_I1\(39) => mem_bd_pout(8),
      \Using_FPGA.DSP48E1_I1\(38) => mem_bd_pout(9),
      \Using_FPGA.DSP48E1_I1\(37) => mem_bd_pout(10),
      \Using_FPGA.DSP48E1_I1\(36) => mem_bd_pout(11),
      \Using_FPGA.DSP48E1_I1\(35) => mem_bd_pout(12),
      \Using_FPGA.DSP48E1_I1\(34) => mem_bd_pout(13),
      \Using_FPGA.DSP48E1_I1\(33) => mem_bd_pout(14),
      \Using_FPGA.DSP48E1_I1\(32) => mem_bd_pout(15),
      \Using_FPGA.DSP48E1_I1\(31) => mem_bd_pout(16),
      \Using_FPGA.DSP48E1_I1\(30) => mem_bd_pout(17),
      \Using_FPGA.DSP48E1_I1\(29) => mem_bd_pout(18),
      \Using_FPGA.DSP48E1_I1\(28) => mem_bd_pout(19),
      \Using_FPGA.DSP48E1_I1\(27) => mem_bd_pout(20),
      \Using_FPGA.DSP48E1_I1\(26) => mem_bd_pout(21),
      \Using_FPGA.DSP48E1_I1\(25) => mem_bd_pout(22),
      \Using_FPGA.DSP48E1_I1\(24) => mem_bd_pout(23),
      \Using_FPGA.DSP48E1_I1\(23) => mem_bd_pout(24),
      \Using_FPGA.DSP48E1_I1\(22) => mem_bd_pout(25),
      \Using_FPGA.DSP48E1_I1\(21) => mem_bd_pout(26),
      \Using_FPGA.DSP48E1_I1\(20) => mem_bd_pout(27),
      \Using_FPGA.DSP48E1_I1\(19) => mem_bd_pout(28),
      \Using_FPGA.DSP48E1_I1\(18) => mem_bd_pout(29),
      \Using_FPGA.DSP48E1_I1\(17) => mem_bd_pout(30),
      \Using_FPGA.DSP48E1_I1\(16) => mem_bd_pout(31),
      \Using_FPGA.DSP48E1_I1\(15) => mem_bd_pout(32),
      \Using_FPGA.DSP48E1_I1\(14) => mem_bd_pout(33),
      \Using_FPGA.DSP48E1_I1\(13) => mem_bd_pout(34),
      \Using_FPGA.DSP48E1_I1\(12) => mem_bd_pout(35),
      \Using_FPGA.DSP48E1_I1\(11) => mem_bd_pout(36),
      \Using_FPGA.DSP48E1_I1\(10) => mem_bd_pout(37),
      \Using_FPGA.DSP48E1_I1\(9) => mem_bd_pout(38),
      \Using_FPGA.DSP48E1_I1\(8) => mem_bd_pout(39),
      \Using_FPGA.DSP48E1_I1\(7) => mem_bd_pout(40),
      \Using_FPGA.DSP48E1_I1\(6) => mem_bd_pout(41),
      \Using_FPGA.DSP48E1_I1\(5) => mem_bd_pout(42),
      \Using_FPGA.DSP48E1_I1\(4) => mem_bd_pout(43),
      \Using_FPGA.DSP48E1_I1\(3) => mem_bd_pout(44),
      \Using_FPGA.DSP48E1_I1\(2) => mem_bd_pout(45),
      \Using_FPGA.DSP48E1_I1\(1) => mem_bd_pout(46),
      \Using_FPGA.DSP48E1_I1\(0) => mem_bd_pout(47)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_DCache is
  port (
    Valid_Dcache_Access : out STD_LOGIC;
    incoming_data_valid : out STD_LOGIC;
    DOADO : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Write_Done : out STD_LOGIC;
    complete_dready : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\ : out STD_LOGIC;
    Write_Resp_Received : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\ : out STD_LOGIC_VECTOR ( 107 downto 0 );
    dcache_read_idle : out STD_LOGIC;
    write_access_reg_0 : out STD_LOGIC;
    valid_cache_hit : out STD_LOGIC;
    read_access_reg_0 : out STD_LOGIC;
    \Using_New_CacheInterface_for_AXI.update_idle_1_reg_0\ : out STD_LOGIC;
    \Using_AXI.Use_AXI_Write.write_resp_received_i_reg\ : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    WEBWE : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S : in STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Valid_Req_1st_Cycle0 : in STD_LOGIC;
    Trace_Cache_Rdy_reg_0 : in STD_LOGIC;
    write_access_reg_1 : in STD_LOGIC;
    Write_Strobe_i_reg_0 : in STD_LOGIC;
    \No_XX_Accesses4.valid_cache_hit_reg_0\ : in STD_LOGIC;
    read_access_reg_1 : in STD_LOGIC;
    Valid_Req0 : in STD_LOGIC;
    valid_req_XX_reg_0 : in STD_LOGIC_VECTOR ( 4 downto 0 );
    load_Store_i : in STD_LOGIC;
    Pause_Ack_reg : in STD_LOGIC;
    of_Pause : in STD_LOGIC;
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_RVALID : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_DCache : entity is "DCache";
end design_1_microblaze_1_1_DCache;

architecture STRUCTURE of design_1_microblaze_1_1_DCache is
  signal ADDRB : STD_LOGIC_VECTOR ( 0 to 7 );
  signal CacheLine_Addr : STD_LOGIC_VECTOR ( 0 to 19 );
  signal CacheLine_Cnt : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal DATA_INB : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \Data_Addr_1_reg_n_0_[28]\ : STD_LOGIC;
  signal \Data_Addr_1_reg_n_0_[29]\ : STD_LOGIC;
  signal Read_Req : STD_LOGIC;
  signal Read_Req_Granted : STD_LOGIC;
  signal S_0 : STD_LOGIC;
  signal Trace_Cache_Hit0 : STD_LOGIC;
  signal Trace_Cache_Read0 : STD_LOGIC;
  signal Update_Idle_Safe : STD_LOGIC;
  signal \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\ : STD_LOGIC_VECTOR ( 107 downto 0 );
  signal \Using_FPGA_FSL_2.DReady_MUXCY_n_1\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_109\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_133\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_134\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_135\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_136\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_137\ : STD_LOGIC;
  signal \Using_New_CacheInterface_for_AXI.write_data_done_reg_n_0\ : STD_LOGIC;
  signal Valid_Data_Bits : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^valid_dcache_access\ : STD_LOGIC;
  signal Valid_Req_1st_Cycle : STD_LOGIC;
  signal WEA : STD_LOGIC_VECTOR ( 0 to 3 );
  signal Word_Is_Valid : STD_LOGIC;
  signal Write_Cacheline_conflict : STD_LOGIC;
  signal Write_Cacheline_conflict1 : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_i_1_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_i_2_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_i_3_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_i_4_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_n_1\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_n_2\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__0_n_3\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__1_i_1_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__1_i_2_n_0\ : STD_LOGIC;
  signal \Write_Cacheline_conflict1_carry__1_n_3\ : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_i_1_n_0 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_i_2_n_0 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_i_3_n_0 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_i_4_n_0 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_n_0 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_n_1 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_n_2 : STD_LOGIC;
  signal Write_Cacheline_conflict1_carry_n_3 : STD_LOGIC;
  signal \^write_done\ : STD_LOGIC;
  signal Write_Strobe_i : STD_LOGIC;
  signal cache_hit : STD_LOGIC;
  signal \^dcache_read_idle\ : STD_LOGIC;
  signal \^incoming_data_valid\ : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal new_tag_addr : STD_LOGIC_VECTOR ( 0 to 7 );
  signal new_write_cmd_allowed : STD_LOGIC;
  signal p_1_in : STD_LOGIC_VECTOR ( 11 downto 8 );
  signal \p_1_in__0\ : STD_LOGIC_VECTOR ( 27 downto 0 );
  signal \^read_access_reg_0\ : STD_LOGIC;
  signal read_data_cnt : STD_LOGIC_VECTOR ( 0 to 1 );
  signal read_req_done : STD_LOGIC;
  signal tag_hit_comparator_n_6 : STD_LOGIC;
  signal tag_hit_comparator_n_7 : STD_LOGIC;
  signal tag_ok_without_parity : STD_LOGIC;
  signal valid_Bits : STD_LOGIC_VECTOR ( 0 to 3 );
  signal valid_Bits_1 : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^valid_cache_hit\ : STD_LOGIC;
  signal \^write_access_reg_0\ : STD_LOGIC;
  signal write_data_done : STD_LOGIC;
  signal write_req : STD_LOGIC;
  signal write_req0 : STD_LOGIC;
  signal write_req_done_hold : STD_LOGIC;
  signal write_req_drop : STD_LOGIC;
  signal NLW_Write_Cacheline_conflict1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Write_Cacheline_conflict1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Write_Cacheline_conflict1_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Write_Cacheline_conflict1_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
begin
  \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\(107 downto 0) <= \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(107 downto 0);
  Valid_Dcache_Access <= \^valid_dcache_access\;
  Write_Done <= \^write_done\;
  dcache_read_idle <= \^dcache_read_idle\;
  incoming_data_valid <= \^incoming_data_valid\;
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
  read_access_reg_0 <= \^read_access_reg_0\;
  valid_cache_hit <= \^valid_cache_hit\;
  write_access_reg_0 <= \^write_access_reg_0\;
\CacheLine_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(27),
      Q => CacheLine_Addr(0),
      R => sync_reset
    );
\CacheLine_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(17),
      Q => CacheLine_Addr(10),
      R => sync_reset
    );
\CacheLine_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(16),
      Q => CacheLine_Addr(11),
      R => sync_reset
    );
\CacheLine_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(15),
      Q => CacheLine_Addr(12),
      R => sync_reset
    );
\CacheLine_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(14),
      Q => CacheLine_Addr(13),
      R => sync_reset
    );
\CacheLine_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(13),
      Q => CacheLine_Addr(14),
      R => sync_reset
    );
\CacheLine_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(12),
      Q => CacheLine_Addr(15),
      R => sync_reset
    );
\CacheLine_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => p_1_in(11),
      Q => CacheLine_Addr(16),
      R => sync_reset
    );
\CacheLine_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => p_1_in(10),
      Q => CacheLine_Addr(17),
      R => sync_reset
    );
\CacheLine_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => p_1_in(9),
      Q => CacheLine_Addr(18),
      R => sync_reset
    );
\CacheLine_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => p_1_in(8),
      Q => CacheLine_Addr(19),
      R => sync_reset
    );
\CacheLine_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(26),
      Q => CacheLine_Addr(1),
      R => sync_reset
    );
\CacheLine_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(7),
      Q => new_tag_addr(0),
      R => sync_reset
    );
\CacheLine_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(6),
      Q => new_tag_addr(1),
      R => sync_reset
    );
\CacheLine_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(5),
      Q => new_tag_addr(2),
      R => sync_reset
    );
\CacheLine_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(4),
      Q => new_tag_addr(3),
      R => sync_reset
    );
\CacheLine_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(3),
      Q => new_tag_addr(4),
      R => sync_reset
    );
\CacheLine_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(2),
      Q => new_tag_addr(5),
      R => sync_reset
    );
\CacheLine_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(1),
      Q => new_tag_addr(6),
      R => sync_reset
    );
\CacheLine_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(0),
      Q => new_tag_addr(7),
      R => sync_reset
    );
\CacheLine_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(25),
      Q => CacheLine_Addr(2),
      R => sync_reset
    );
\CacheLine_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(24),
      Q => CacheLine_Addr(3),
      R => sync_reset
    );
\CacheLine_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(23),
      Q => CacheLine_Addr(4),
      R => sync_reset
    );
\CacheLine_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(22),
      Q => CacheLine_Addr(5),
      R => sync_reset
    );
\CacheLine_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(21),
      Q => CacheLine_Addr(6),
      R => sync_reset
    );
\CacheLine_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(20),
      Q => CacheLine_Addr(7),
      R => sync_reset
    );
\CacheLine_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(19),
      Q => CacheLine_Addr(8),
      R => sync_reset
    );
\CacheLine_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Update_Idle_Safe,
      D => \p_1_in__0\(18),
      Q => CacheLine_Addr(9),
      R => sync_reset
    );
\CacheLine_Cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_136\,
      Q => CacheLine_Cnt(0),
      R => sync_reset
    );
\CacheLine_Cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_137\,
      Q => CacheLine_Cnt(1),
      R => sync_reset
    );
\Data_Addr_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(31),
      Q => \p_1_in__0\(27),
      R => sync_reset
    );
\Data_Addr_1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(21),
      Q => \p_1_in__0\(17),
      R => sync_reset
    );
\Data_Addr_1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(20),
      Q => \p_1_in__0\(16),
      R => sync_reset
    );
\Data_Addr_1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(19),
      Q => \p_1_in__0\(15),
      R => sync_reset
    );
\Data_Addr_1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(18),
      Q => \p_1_in__0\(14),
      R => sync_reset
    );
\Data_Addr_1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(17),
      Q => \p_1_in__0\(13),
      R => sync_reset
    );
\Data_Addr_1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(16),
      Q => \p_1_in__0\(12),
      R => sync_reset
    );
\Data_Addr_1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(15),
      Q => p_1_in(11),
      R => sync_reset
    );
\Data_Addr_1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(14),
      Q => p_1_in(10),
      R => sync_reset
    );
\Data_Addr_1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(13),
      Q => p_1_in(9),
      R => sync_reset
    );
\Data_Addr_1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(12),
      Q => p_1_in(8),
      R => sync_reset
    );
\Data_Addr_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(30),
      Q => \p_1_in__0\(26),
      R => sync_reset
    );
\Data_Addr_1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(11),
      Q => \p_1_in__0\(7),
      R => sync_reset
    );
\Data_Addr_1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(10),
      Q => \p_1_in__0\(6),
      R => sync_reset
    );
\Data_Addr_1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(9),
      Q => \p_1_in__0\(5),
      R => sync_reset
    );
\Data_Addr_1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(8),
      Q => \p_1_in__0\(4),
      R => sync_reset
    );
\Data_Addr_1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(7),
      Q => \p_1_in__0\(3),
      R => sync_reset
    );
\Data_Addr_1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(6),
      Q => \p_1_in__0\(2),
      R => sync_reset
    );
\Data_Addr_1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(5),
      Q => \p_1_in__0\(1),
      R => sync_reset
    );
\Data_Addr_1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(4),
      Q => \p_1_in__0\(0),
      R => sync_reset
    );
\Data_Addr_1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(3),
      Q => \Data_Addr_1_reg_n_0_[28]\,
      R => sync_reset
    );
\Data_Addr_1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(2),
      Q => \Data_Addr_1_reg_n_0_[29]\,
      R => sync_reset
    );
\Data_Addr_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(29),
      Q => \p_1_in__0\(25),
      R => sync_reset
    );
\Data_Addr_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(28),
      Q => \p_1_in__0\(24),
      R => sync_reset
    );
\Data_Addr_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(27),
      Q => \p_1_in__0\(23),
      R => sync_reset
    );
\Data_Addr_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(26),
      Q => \p_1_in__0\(22),
      R => sync_reset
    );
\Data_Addr_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(25),
      Q => \p_1_in__0\(21),
      R => sync_reset
    );
\Data_Addr_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(24),
      Q => \p_1_in__0\(20),
      R => sync_reset
    );
\Data_Addr_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(23),
      Q => \p_1_in__0\(19),
      R => sync_reset
    );
\Data_Addr_1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \in\(22),
      Q => \p_1_in__0\(18),
      R => sync_reset
    );
Data_Memory: entity work.\design_1_microblaze_1_1_RAM_Module__parameterized5\
     port map (
      ADDRBWRADDR(9) => new_tag_addr(0),
      ADDRBWRADDR(8) => new_tag_addr(1),
      ADDRBWRADDR(7) => new_tag_addr(2),
      ADDRBWRADDR(6) => new_tag_addr(3),
      ADDRBWRADDR(5) => new_tag_addr(4),
      ADDRBWRADDR(4) => new_tag_addr(5),
      ADDRBWRADDR(3) => new_tag_addr(6),
      ADDRBWRADDR(2) => new_tag_addr(7),
      ADDRBWRADDR(1) => read_data_cnt(0),
      ADDRBWRADDR(0) => read_data_cnt(1),
      Clk => Clk,
      D(31 downto 0) => D(31 downto 0),
      DOADO(31 downto 0) => DOADO(31 downto 0),
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      WEA(3) => WEA(0),
      WEA(2) => WEA(1),
      WEA(1) => WEA(2),
      WEA(0) => WEA(3),
      WEBWE(0) => \^incoming_data_valid\,
      \in\(9 downto 0) => \in\(11 downto 2)
    );
\No_XX_Accesses4.valid_cache_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \No_XX_Accesses4.valid_cache_hit_reg_0\,
      Q => \^valid_cache_hit\,
      R => sync_reset
    );
Tag_Memory: entity work.\design_1_microblaze_1_1_RAM_Module__parameterized3\
     port map (
      ADDRBWRADDR(7) => ADDRB(0),
      ADDRBWRADDR(6) => ADDRB(1),
      ADDRBWRADDR(5) => ADDRB(2),
      ADDRBWRADDR(4) => ADDRB(3),
      ADDRBWRADDR(3) => ADDRB(4),
      ADDRBWRADDR(2) => ADDRB(5),
      ADDRBWRADDR(1) => ADDRB(6),
      ADDRBWRADDR(0) => ADDRB(7),
      Clk => Clk,
      \Comp_Carry_Chain[1].carry_sel_reg\ => \Comp_Carry_Chain[1].carry_sel_reg\,
      DIBDI(8) => DATA_INB(0),
      DIBDI(7) => DATA_INB(1),
      DIBDI(6) => DATA_INB(2),
      DIBDI(5) => DATA_INB(3),
      DIBDI(4) => \^incoming_data_valid\,
      DIBDI(3) => CacheLine_Addr(16),
      DIBDI(2) => CacheLine_Addr(17),
      DIBDI(1) => CacheLine_Addr(18),
      DIBDI(0) => CacheLine_Addr(19),
      DOADO(3) => Valid_Data_Bits(0),
      DOADO(2) => Valid_Data_Bits(1),
      DOADO(1) => Valid_Data_Bits(2),
      DOADO(0) => Valid_Data_Bits(3),
      Q(3 downto 0) => p_1_in(11 downto 8),
      S => S_0,
      WEBWE(0) => WEBWE(0),
      \in\(7 downto 0) => \in\(11 downto 4)
    );
Trace_Cache_Hit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Trace_Cache_Hit0,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(2),
      R => sync_reset
    );
Trace_Cache_Rdy_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Trace_Cache_Rdy_reg_0,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(1),
      R => sync_reset
    );
Trace_Cache_Read_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^write_access_reg_0\,
      O => Trace_Cache_Read0
    );
Trace_Cache_Read_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Trace_Cache_Read0,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(0),
      R => sync_reset
    );
Trace_Cache_Req_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Valid_Req_1st_Cycle,
      Q => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(3),
      R => sync_reset
    );
\Using_FPGA_FSL_2.Cache_hit_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_9
     port map (
      Carry_Out => Word_Is_Valid,
      \Using_FPGA.Native_0\ => \^read_access_reg_0\,
      Write_Done => \^write_done\,
      cache_hit => cache_hit,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => S,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      sync_reset => sync_reset,
      valid_cache_hit => \^valid_cache_hit\,
      write_data_done => write_data_done
    );
\Using_FPGA_FSL_2.DReady_MUXCY\: entity work.design_1_microblaze_1_1_MB_MUXCY_10
     port map (
      S => S,
      Valid_Req0 => Valid_Req0,
      cache_hit => cache_hit,
      complete_dready => complete_dready,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      sync_reset => sync_reset,
      valid_req_XX_reg => \Using_FPGA_FSL_2.DReady_MUXCY_n_1\,
      valid_req_XX_reg_0(0) => valid_req_XX_reg_0(4),
      valid_req_XX_reg_1 => \^valid_dcache_access\
    );
\Using_FPGA_FSL_2.cache_valid_bit_detect_I1\: entity work.\design_1_microblaze_1_1_cache_valid_bit_detect__parameterized1\
     port map (
      Carry_Out => Word_Is_Valid,
      DOADO(3) => Valid_Data_Bits(0),
      DOADO(2) => Valid_Data_Bits(1),
      DOADO(1) => Valid_Data_Bits(2),
      DOADO(0) => Valid_Data_Bits(3),
      Q(1) => \Data_Addr_1_reg_n_0_[28]\,
      Q(0) => \Data_Addr_1_reg_n_0_[29]\,
      Trace_Cache_Hit0 => Trace_Cache_Hit0,
      Valid_Req_1st_Cycle => Valid_Req_1st_Cycle,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      tag_ok_without_parity => tag_ok_without_parity
    );
\Using_New_CacheInterface_for_AXI.Cache_Interface_I1\: entity work.\design_1_microblaze_1_1_Cache_Interface__parameterized1\
     port map (
      ADDRBWRADDR(7) => ADDRB(0),
      ADDRBWRADDR(6) => ADDRB(1),
      ADDRBWRADDR(5) => ADDRB(2),
      ADDRBWRADDR(4) => ADDRB(3),
      ADDRBWRADDR(3) => ADDRB(4),
      ADDRBWRADDR(2) => ADDRB(5),
      ADDRBWRADDR(1) => ADDRB(6),
      ADDRBWRADDR(0) => ADDRB(7),
      CO(0) => Write_Cacheline_conflict1,
      CacheLine_Cnt(0 to 1) => CacheLine_Cnt(0 to 1),
      \CacheLine_Cnt_reg[0]\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_135\,
      \CacheLine_Cnt_reg[1]\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_136\,
      Clk => Clk,
      D(3) => valid_Bits(0),
      D(2) => valid_Bits(1),
      D(1) => valid_Bits(2),
      D(0) => valid_Bits(3),
      DIBDI(4) => DATA_INB(0),
      DIBDI(3) => DATA_INB(1),
      DIBDI(2) => DATA_INB(2),
      DIBDI(1) => DATA_INB(3),
      DIBDI(0) => \^incoming_data_valid\,
      \LOCKSTEP_Out_reg[2185]\(31 downto 0) => D(31 downto 0),
      \LOCKSTEP_Out_reg[2697]\(3 downto 0) => valid_req_XX_reg_0(3 downto 0),
      M_AXI_DC_ARREADY => M_AXI_DC_ARREADY,
      M_AXI_DC_AWREADY => M_AXI_DC_AWREADY,
      M_AXI_DC_BVALID => M_AXI_DC_BVALID,
      M_AXI_DC_RLAST => M_AXI_DC_RLAST,
      M_AXI_DC_RVALID => M_AXI_DC_RVALID,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      Pause_Ack_reg => Pause_Ack_reg,
      Q(7) => new_tag_addr(0),
      Q(6) => new_tag_addr(1),
      Q(5) => new_tag_addr(2),
      Q(4) => new_tag_addr(3),
      Q(3) => new_tag_addr(4),
      Q(2) => new_tag_addr(5),
      Q(1) => new_tag_addr(6),
      Q(0) => new_tag_addr(7),
      Read_Req => Read_Req,
      Read_Req_Granted => Read_Req_Granted,
      SR(0) => Update_Idle_Safe,
      \Using_AXI.M_AXI_ARBURST_reg[1]_0\ => tag_hit_comparator_n_6,
      \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]_0\(103 downto 0) => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(107 downto 4),
      \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg_0\ => \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\,
      \Using_AXI.Use_AXI_Write.write_resp_received_i_reg_0\ => \Using_AXI.Use_AXI_Write.write_resp_received_i_reg\,
      \Using_AXI.Use_Read_Data_Active.first_word_reg_0\(1) => read_data_cnt(0),
      \Using_AXI.Use_Read_Data_Active.first_word_reg_0\(0) => read_data_cnt(1),
      \Using_AXI.r_read_fifo_addr_reg[0]_0\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_137\,
      \Using_FPGA.Native\(7 downto 0) => \Using_FPGA.Native\(7 downto 0),
      \Using_FPGA.Native_0\(3) => valid_Bits_1(0),
      \Using_FPGA.Native_0\(2) => valid_Bits_1(1),
      \Using_FPGA.Native_0\(1) => valid_Bits_1(2),
      \Using_FPGA.Native_0\(0) => valid_Bits_1(3),
      \Using_New_CacheInterface_for_AXI.update_idle_1_reg\ => \Using_New_CacheInterface_for_AXI.update_idle_1_reg_0\,
      \Using_New_CacheInterface_for_AXI.write_data_done_reg\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_134\,
      \Using_New_CacheInterface_for_AXI.write_data_done_reg_0\ => \Using_New_CacheInterface_for_AXI.write_data_done_reg_n_0\,
      \Using_New_CacheInterface_for_AXI.write_data_done_reg_1\ => \^valid_dcache_access\,
      \Using_New_CacheInterface_for_AXI.write_req_done_hold_reg\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_109\,
      \Using_New_CacheInterface_for_AXI.write_req_drop_reg\ => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_133\,
      Write_Cacheline_conflict => Write_Cacheline_conflict,
      Write_Done => \^write_done\,
      Write_Resp_Received => Write_Resp_Received,
      Write_Strobe_i => Write_Strobe_i,
      cache_hit => cache_hit,
      dcache_read_idle => \^dcache_read_idle\,
      \in\(31 downto 0) => \in\(31 downto 0),
      load_Store_i => load_Store_i,
      new_write_cmd_allowed => new_write_cmd_allowed,
      of_Pause => of_Pause,
      sync_reset => sync_reset,
      write_req => write_req,
      write_req0 => write_req0,
      write_req_done_hold => write_req_done_hold,
      write_req_drop => write_req_drop
    );
\Using_New_CacheInterface_for_AXI.read_req_done_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => tag_hit_comparator_n_7,
      Q => read_req_done,
      R => '0'
    );
\Using_New_CacheInterface_for_AXI.update_idle_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Update_Idle_Safe,
      Q => \^dcache_read_idle\,
      R => sync_reset
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^incoming_data_valid\,
      D => valid_Bits(0),
      Q => valid_Bits_1(0),
      R => Update_Idle_Safe
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^incoming_data_valid\,
      D => valid_Bits(1),
      Q => valid_Bits_1(1),
      R => Update_Idle_Safe
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^incoming_data_valid\,
      D => valid_Bits(2),
      Q => valid_Bits_1(2),
      R => Update_Idle_Safe
    );
\Using_New_CacheInterface_for_AXI.valid_Bits_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^incoming_data_valid\,
      D => valid_Bits(3),
      Q => valid_Bits_1(3),
      R => Update_Idle_Safe
    );
\Using_New_CacheInterface_for_AXI.write_data_done_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_134\,
      Q => \Using_New_CacheInterface_for_AXI.write_data_done_reg_n_0\,
      R => '0'
    );
\Using_New_CacheInterface_for_AXI.write_req_done_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_109\,
      Q => write_req_done_hold,
      R => '0'
    );
\Using_New_CacheInterface_for_AXI.write_req_drop_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_133\,
      Q => write_req_drop,
      R => '0'
    );
\Using_New_CacheInterface_for_AXI.write_req_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_req0,
      Q => write_req,
      R => sync_reset
    );
Valid_Req_1st_Cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Valid_Req_1st_Cycle0,
      Q => Valid_Req_1st_Cycle,
      R => sync_reset
    );
Write_Cacheline_conflict1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => Write_Cacheline_conflict1_carry_n_0,
      CO(2) => Write_Cacheline_conflict1_carry_n_1,
      CO(1) => Write_Cacheline_conflict1_carry_n_2,
      CO(0) => Write_Cacheline_conflict1_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_Write_Cacheline_conflict1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => Write_Cacheline_conflict1_carry_i_1_n_0,
      S(2) => Write_Cacheline_conflict1_carry_i_2_n_0,
      S(1) => Write_Cacheline_conflict1_carry_i_3_n_0,
      S(0) => Write_Cacheline_conflict1_carry_i_4_n_0
    );
\Write_Cacheline_conflict1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => Write_Cacheline_conflict1_carry_n_0,
      CO(3) => \Write_Cacheline_conflict1_carry__0_n_0\,
      CO(2) => \Write_Cacheline_conflict1_carry__0_n_1\,
      CO(1) => \Write_Cacheline_conflict1_carry__0_n_2\,
      CO(0) => \Write_Cacheline_conflict1_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_Write_Cacheline_conflict1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3) => \Write_Cacheline_conflict1_carry__0_i_1_n_0\,
      S(2) => \Write_Cacheline_conflict1_carry__0_i_2_n_0\,
      S(1) => \Write_Cacheline_conflict1_carry__0_i_3_n_0\,
      S(0) => \Write_Cacheline_conflict1_carry__0_i_4_n_0\
    );
\Write_Cacheline_conflict1_carry__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(21),
      I1 => CacheLine_Addr(6),
      I2 => \p_1_in__0\(22),
      I3 => CacheLine_Addr(5),
      I4 => CacheLine_Addr(4),
      I5 => \p_1_in__0\(23),
      O => \Write_Cacheline_conflict1_carry__0_i_1_n_0\
    );
\Write_Cacheline_conflict1_carry__0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(18),
      I1 => CacheLine_Addr(9),
      I2 => \p_1_in__0\(19),
      I3 => CacheLine_Addr(8),
      I4 => CacheLine_Addr(7),
      I5 => \p_1_in__0\(20),
      O => \Write_Cacheline_conflict1_carry__0_i_2_n_0\
    );
\Write_Cacheline_conflict1_carry__0_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(15),
      I1 => CacheLine_Addr(12),
      I2 => \p_1_in__0\(16),
      I3 => CacheLine_Addr(11),
      I4 => CacheLine_Addr(10),
      I5 => \p_1_in__0\(17),
      O => \Write_Cacheline_conflict1_carry__0_i_3_n_0\
    );
\Write_Cacheline_conflict1_carry__0_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(12),
      I1 => CacheLine_Addr(15),
      I2 => \p_1_in__0\(13),
      I3 => CacheLine_Addr(14),
      I4 => CacheLine_Addr(13),
      I5 => \p_1_in__0\(14),
      O => \Write_Cacheline_conflict1_carry__0_i_4_n_0\
    );
\Write_Cacheline_conflict1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \Write_Cacheline_conflict1_carry__0_n_0\,
      CO(3 downto 2) => \NLW_Write_Cacheline_conflict1_carry__1_CO_UNCONNECTED\(3 downto 2),
      CO(1) => Write_Cacheline_conflict1,
      CO(0) => \Write_Cacheline_conflict1_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_Write_Cacheline_conflict1_carry__1_O_UNCONNECTED\(3 downto 0),
      S(3 downto 2) => B"00",
      S(1) => \Write_Cacheline_conflict1_carry__1_i_1_n_0\,
      S(0) => \Write_Cacheline_conflict1_carry__1_i_2_n_0\
    );
\Write_Cacheline_conflict1_carry__1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => CacheLine_Addr(0),
      I1 => \p_1_in__0\(27),
      O => \Write_Cacheline_conflict1_carry__1_i_1_n_0\
    );
\Write_Cacheline_conflict1_carry__1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(25),
      I1 => CacheLine_Addr(2),
      I2 => \p_1_in__0\(24),
      I3 => CacheLine_Addr(3),
      I4 => CacheLine_Addr(1),
      I5 => \p_1_in__0\(26),
      O => \Write_Cacheline_conflict1_carry__1_i_2_n_0\
    );
Write_Cacheline_conflict1_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => p_1_in(10),
      I1 => CacheLine_Addr(17),
      I2 => p_1_in(9),
      I3 => CacheLine_Addr(18),
      I4 => CacheLine_Addr(16),
      I5 => p_1_in(11),
      O => Write_Cacheline_conflict1_carry_i_1_n_0
    );
Write_Cacheline_conflict1_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(7),
      I1 => new_tag_addr(0),
      I2 => \p_1_in__0\(6),
      I3 => new_tag_addr(1),
      I4 => CacheLine_Addr(19),
      I5 => p_1_in(8),
      O => Write_Cacheline_conflict1_carry_i_2_n_0
    );
Write_Cacheline_conflict1_carry_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(5),
      I1 => new_tag_addr(2),
      I2 => \p_1_in__0\(3),
      I3 => new_tag_addr(4),
      I4 => new_tag_addr(3),
      I5 => \p_1_in__0\(4),
      O => Write_Cacheline_conflict1_carry_i_3_n_0
    );
Write_Cacheline_conflict1_carry_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \p_1_in__0\(1),
      I1 => new_tag_addr(6),
      I2 => \p_1_in__0\(0),
      I3 => new_tag_addr(7),
      I4 => new_tag_addr(5),
      I5 => \p_1_in__0\(2),
      O => Write_Cacheline_conflict1_carry_i_4_n_0
    );
Write_Cacheline_conflict_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_New_CacheInterface_for_AXI.Cache_Interface_I1_n_135\,
      Q => Write_Cacheline_conflict,
      R => '0'
    );
Write_Strobe_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Write_Strobe_i_reg_0,
      Q => Write_Strobe_i,
      R => '0'
    );
read_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_access_reg_1,
      Q => \^read_access_reg_0\,
      R => sync_reset
    );
tag_hit_comparator: entity work.design_1_microblaze_1_1_comparator_11
     port map (
      \Comp_Carry_Chain[1].carry_sel_reg\ => \Comp_Carry_Chain[1].carry_sel_reg\,
      Read_Req => Read_Req,
      Read_Req_Granted => Read_Req_Granted,
      S => S_0,
      \Use_Async_Reset.sync_reset_reg\ => tag_hit_comparator_n_6,
      \Using_AXI.M_AXI_ARBURST_reg[1]\ => \^valid_dcache_access\,
      \Using_AXI.M_AXI_ARBURST_reg[1]_0\(0) => \^using_axi.use_axi_write.aw_read_fifo_addr_reg[3]\(6),
      \Using_FPGA.Native\(3 downto 0) => valid_req_XX_reg_0(3 downto 0),
      \Using_New_CacheInterface_for_AXI.read_req_done_reg\ => tag_hit_comparator_n_7,
      WEA(3) => WEA(0),
      WEA(2) => WEA(1),
      WEA(1) => WEA(2),
      WEA(0) => WEA(3),
      Write_Cacheline_conflict => Write_Cacheline_conflict,
      Write_Strobe_i => Write_Strobe_i,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      new_write_cmd_allowed => new_write_cmd_allowed,
      read_req_done => read_req_done,
      sync_reset => sync_reset,
      tag_ok_without_parity => tag_ok_without_parity,
      write_data_done => write_data_done,
      write_req => write_req,
      write_req_done_hold => write_req_done_hold
    );
valid_req_XX_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_FSL_2.DReady_MUXCY_n_1\,
      Q => \^valid_dcache_access\,
      R => '0'
    );
write_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_access_reg_1,
      Q => \^write_access_reg_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Data_Flow is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 13 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_Result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    DCache_Enabled : out STD_LOGIC;
    ICache_Enabled : out STD_LOGIC;
    msr_I : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    Instr_Addr : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC_VECTOR ( 13 downto 0 );
    valid_Req_XX_i_4 : out STD_LOGIC;
    Valid_Req0 : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_22\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_23\ : out STD_LOGIC_VECTOR ( 41 downto 0 );
    PC_EX_i : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Size_17to32.imm_Reg_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    LO : out STD_LOGIC;
    Shift_Logic_Res : out STD_LOGIC;
    Select_Logic_reg : out STD_LOGIC;
    Reg_zero : out STD_LOGIC;
    Data_Write : out STD_LOGIC_VECTOR ( 23 downto 0 );
    Reg2_Data : out STD_LOGIC_VECTOR ( 0 to 31 );
    sync_reset : in STD_LOGIC;
    of_PipeRun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    res_Forward1 : in STD_LOGIC;
    opsel1_SPR : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    D_3 : in STD_LOGIC;
    D_4 : in STD_LOGIC;
    D_5 : in STD_LOGIC;
    D_6 : in STD_LOGIC;
    D_7 : in STD_LOGIC;
    D_8 : in STD_LOGIC;
    D_9 : in STD_LOGIC;
    D_10 : in STD_LOGIC;
    D_11 : in STD_LOGIC;
    D_12 : in STD_LOGIC;
    D_13 : in STD_LOGIC;
    D_14 : in STD_LOGIC;
    D_15 : in STD_LOGIC;
    D_16 : in STD_LOGIC;
    D_17 : in STD_LOGIC;
    D_18 : in STD_LOGIC;
    D_19 : in STD_LOGIC;
    D_20 : in STD_LOGIC;
    D_21 : in STD_LOGIC;
    D_22 : in STD_LOGIC;
    D_23 : in STD_LOGIC;
    D_24 : in STD_LOGIC;
    D_25 : in STD_LOGIC;
    D_26 : in STD_LOGIC;
    D_27 : in STD_LOGIC;
    D_28 : in STD_LOGIC;
    D_29 : in STD_LOGIC;
    D_30 : in STD_LOGIC;
    D_31 : in STD_LOGIC;
    carry_In : in STD_LOGIC;
    Unsigned_Op : in STD_LOGIC;
    alu_Op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_24\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    PCMP_Instr2_out : in STD_LOGIC;
    Enable_2 : in STD_LOGIC;
    instr_ex : in STD_LOGIC_VECTOR ( 6 downto 0 );
    I3 : in STD_LOGIC;
    MSR_Rst : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    \Using_FPGA.Native_35\ : in STD_LOGIC;
    \Using_FPGA.Native_36\ : in STD_LOGIC;
    \C_reg[28]\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 8 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    void_bit : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \Using_FPGA.Native_37\ : in STD_LOGIC;
    \Using_FPGA.Native_i_5__1\ : in STD_LOGIC;
    compare_Instr : in STD_LOGIC;
    sext16 : in STD_LOGIC;
    sext8 : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__74\ : in STD_LOGIC;
    clz_instr : in STD_LOGIC;
    BitField_Extract : in STD_LOGIC;
    BitField_Insert : in STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    register_write : in STD_LOGIC;
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    imm_Value : in STD_LOGIC_VECTOR ( 0 to 15 );
    Shift_Oper : in STD_LOGIC;
    Select_Logic : in STD_LOGIC;
    Op1_Shift : in STD_LOGIC;
    Sext : in STD_LOGIC;
    Shifted : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    extend_Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    data_Read_Mask : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Reg_Test_Equal : in STD_LOGIC;
    reg_Test_Equal_N : in STD_LOGIC;
    jump : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Buffer_Addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    PC_Write : in STD_LOGIC;
    Reg_Write : in STD_LOGIC;
    \Using_BitField.mem_Rd_reg[9]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    reg1_Addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ex_not_mul_op : in STD_LOGIC;
    DI : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Data_Flow : entity is "Data_Flow";
end design_1_microblaze_1_1_Data_Flow;

architecture STRUCTURE of design_1_microblaze_1_1_Data_Flow is
  signal A : STD_LOGIC_VECTOR ( 30 to 31 );
  signal \^address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal Barrel_Result : STD_LOGIC_VECTOR ( 0 to 7 );
  signal Barrel_Result0 : STD_LOGIC;
  signal Barrel_Result012_out : STD_LOGIC;
  signal Barrel_Result015_out : STD_LOGIC;
  signal Barrel_Result018_out : STD_LOGIC;
  signal Barrel_Result021_out : STD_LOGIC;
  signal Barrel_Result024_out : STD_LOGIC;
  signal Barrel_Result027_out : STD_LOGIC;
  signal Barrel_Result030_out : STD_LOGIC;
  signal Barrel_Result033_out : STD_LOGIC;
  signal Barrel_Result036_out : STD_LOGIC;
  signal Barrel_Result039_out : STD_LOGIC;
  signal Barrel_Result03_out : STD_LOGIC;
  signal Barrel_Result042_out : STD_LOGIC;
  signal Barrel_Result045_out : STD_LOGIC;
  signal Barrel_Result048_out : STD_LOGIC;
  signal Barrel_Result051_out : STD_LOGIC;
  signal Barrel_Result054_out : STD_LOGIC;
  signal Barrel_Result057_out : STD_LOGIC;
  signal Barrel_Result060_out : STD_LOGIC;
  signal Barrel_Result063_out : STD_LOGIC;
  signal Barrel_Result066_out : STD_LOGIC;
  signal Barrel_Result069_out : STD_LOGIC;
  signal Barrel_Result06_out : STD_LOGIC;
  signal Barrel_Result09_out : STD_LOGIC;
  signal \^dcache_enabled\ : STD_LOGIC;
  signal \^data_write\ : STD_LOGIC_VECTOR ( 23 downto 0 );
  signal I0 : STD_LOGIC;
  signal \^icache_enabled\ : STD_LOGIC;
  signal Is_Equal : STD_LOGIC;
  signal Is_Equal1_out : STD_LOGIC;
  signal Is_Equal3_out : STD_LOGIC;
  signal \OpSelect_Bits[0].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[24].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[25].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[26].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[27].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[28].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[29].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[30].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal \OpSelect_Bits[31].Operand_Select_Bit_I/I3\ : STD_LOGIC;
  signal Operand_Select_I_n_10 : STD_LOGIC;
  signal Operand_Select_I_n_100 : STD_LOGIC;
  signal Operand_Select_I_n_102 : STD_LOGIC;
  signal Operand_Select_I_n_103 : STD_LOGIC;
  signal Operand_Select_I_n_104 : STD_LOGIC;
  signal Operand_Select_I_n_105 : STD_LOGIC;
  signal Operand_Select_I_n_106 : STD_LOGIC;
  signal Operand_Select_I_n_107 : STD_LOGIC;
  signal Operand_Select_I_n_108 : STD_LOGIC;
  signal Operand_Select_I_n_109 : STD_LOGIC;
  signal Operand_Select_I_n_11 : STD_LOGIC;
  signal Operand_Select_I_n_110 : STD_LOGIC;
  signal Operand_Select_I_n_111 : STD_LOGIC;
  signal Operand_Select_I_n_112 : STD_LOGIC;
  signal Operand_Select_I_n_113 : STD_LOGIC;
  signal Operand_Select_I_n_114 : STD_LOGIC;
  signal Operand_Select_I_n_115 : STD_LOGIC;
  signal Operand_Select_I_n_116 : STD_LOGIC;
  signal Operand_Select_I_n_117 : STD_LOGIC;
  signal Operand_Select_I_n_118 : STD_LOGIC;
  signal Operand_Select_I_n_119 : STD_LOGIC;
  signal Operand_Select_I_n_12 : STD_LOGIC;
  signal Operand_Select_I_n_120 : STD_LOGIC;
  signal Operand_Select_I_n_121 : STD_LOGIC;
  signal Operand_Select_I_n_122 : STD_LOGIC;
  signal Operand_Select_I_n_123 : STD_LOGIC;
  signal Operand_Select_I_n_124 : STD_LOGIC;
  signal Operand_Select_I_n_125 : STD_LOGIC;
  signal Operand_Select_I_n_126 : STD_LOGIC;
  signal Operand_Select_I_n_127 : STD_LOGIC;
  signal Operand_Select_I_n_128 : STD_LOGIC;
  signal Operand_Select_I_n_129 : STD_LOGIC;
  signal Operand_Select_I_n_13 : STD_LOGIC;
  signal Operand_Select_I_n_130 : STD_LOGIC;
  signal Operand_Select_I_n_131 : STD_LOGIC;
  signal Operand_Select_I_n_132 : STD_LOGIC;
  signal Operand_Select_I_n_14 : STD_LOGIC;
  signal Operand_Select_I_n_144 : STD_LOGIC;
  signal Operand_Select_I_n_145 : STD_LOGIC;
  signal Operand_Select_I_n_146 : STD_LOGIC;
  signal Operand_Select_I_n_147 : STD_LOGIC;
  signal Operand_Select_I_n_148 : STD_LOGIC;
  signal Operand_Select_I_n_149 : STD_LOGIC;
  signal Operand_Select_I_n_15 : STD_LOGIC;
  signal Operand_Select_I_n_150 : STD_LOGIC;
  signal Operand_Select_I_n_151 : STD_LOGIC;
  signal Operand_Select_I_n_16 : STD_LOGIC;
  signal Operand_Select_I_n_168 : STD_LOGIC;
  signal Operand_Select_I_n_169 : STD_LOGIC;
  signal Operand_Select_I_n_17 : STD_LOGIC;
  signal Operand_Select_I_n_170 : STD_LOGIC;
  signal Operand_Select_I_n_171 : STD_LOGIC;
  signal Operand_Select_I_n_172 : STD_LOGIC;
  signal Operand_Select_I_n_173 : STD_LOGIC;
  signal Operand_Select_I_n_174 : STD_LOGIC;
  signal Operand_Select_I_n_175 : STD_LOGIC;
  signal Operand_Select_I_n_176 : STD_LOGIC;
  signal Operand_Select_I_n_177 : STD_LOGIC;
  signal Operand_Select_I_n_178 : STD_LOGIC;
  signal Operand_Select_I_n_179 : STD_LOGIC;
  signal Operand_Select_I_n_18 : STD_LOGIC;
  signal Operand_Select_I_n_180 : STD_LOGIC;
  signal Operand_Select_I_n_181 : STD_LOGIC;
  signal Operand_Select_I_n_182 : STD_LOGIC;
  signal Operand_Select_I_n_183 : STD_LOGIC;
  signal Operand_Select_I_n_184 : STD_LOGIC;
  signal Operand_Select_I_n_185 : STD_LOGIC;
  signal Operand_Select_I_n_186 : STD_LOGIC;
  signal Operand_Select_I_n_187 : STD_LOGIC;
  signal Operand_Select_I_n_19 : STD_LOGIC;
  signal Operand_Select_I_n_2 : STD_LOGIC;
  signal Operand_Select_I_n_20 : STD_LOGIC;
  signal Operand_Select_I_n_21 : STD_LOGIC;
  signal Operand_Select_I_n_22 : STD_LOGIC;
  signal Operand_Select_I_n_23 : STD_LOGIC;
  signal Operand_Select_I_n_24 : STD_LOGIC;
  signal Operand_Select_I_n_25 : STD_LOGIC;
  signal Operand_Select_I_n_26 : STD_LOGIC;
  signal Operand_Select_I_n_27 : STD_LOGIC;
  signal Operand_Select_I_n_28 : STD_LOGIC;
  signal Operand_Select_I_n_29 : STD_LOGIC;
  signal Operand_Select_I_n_3 : STD_LOGIC;
  signal Operand_Select_I_n_30 : STD_LOGIC;
  signal Operand_Select_I_n_31 : STD_LOGIC;
  signal Operand_Select_I_n_32 : STD_LOGIC;
  signal Operand_Select_I_n_4 : STD_LOGIC;
  signal Operand_Select_I_n_5 : STD_LOGIC;
  signal Operand_Select_I_n_6 : STD_LOGIC;
  signal Operand_Select_I_n_7 : STD_LOGIC;
  signal Operand_Select_I_n_8 : STD_LOGIC;
  signal Operand_Select_I_n_9 : STD_LOGIC;
  signal Operand_Select_I_n_98 : STD_LOGIC;
  signal Operand_Select_I_n_99 : STD_LOGIC;
  signal \^pc_ex_i\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal Shift_Logic_Module_I_n_10 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_11 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_12 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_13 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_41 : STD_LOGIC;
  signal Shift_Logic_Module_I_n_9 : STD_LOGIC;
  signal Shift_Logic_Res0_out : STD_LOGIC;
  signal Shift_Logic_Res10_out : STD_LOGIC;
  signal Shift_Logic_Res11_out : STD_LOGIC;
  signal Shift_Logic_Res12_out : STD_LOGIC;
  signal Shift_Logic_Res13_out : STD_LOGIC;
  signal Shift_Logic_Res14_out : STD_LOGIC;
  signal Shift_Logic_Res15_out : STD_LOGIC;
  signal Shift_Logic_Res17_out : STD_LOGIC;
  signal Shift_Logic_Res18_out : STD_LOGIC;
  signal Shift_Logic_Res19_out : STD_LOGIC;
  signal Shift_Logic_Res1_out : STD_LOGIC;
  signal Shift_Logic_Res20_out : STD_LOGIC;
  signal Shift_Logic_Res21_out : STD_LOGIC;
  signal Shift_Logic_Res22_out : STD_LOGIC;
  signal Shift_Logic_Res23_out : STD_LOGIC;
  signal Shift_Logic_Res2_out : STD_LOGIC;
  signal Shift_Logic_Res30_out : STD_LOGIC;
  signal Shift_Logic_Res31_out : STD_LOGIC;
  signal Shift_Logic_Res3_out : STD_LOGIC;
  signal Shift_Logic_Res4_out : STD_LOGIC;
  signal Shift_Logic_Res5_out : STD_LOGIC;
  signal Shift_Logic_Res6_out : STD_LOGIC;
  signal Shift_Logic_Res7_out : STD_LOGIC;
  signal Shift_Logic_Res8_out : STD_LOGIC;
  signal Shift_Logic_Res9_out : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/S\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/S\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/S\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/S\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\ : STD_LOGIC;
  signal \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\ : STD_LOGIC;
  signal \Using_Barrel_Shifter.barrel_shift_I_n_26\ : STD_LOGIC;
  signal \Using_Barrel_Shifter.barrel_shift_I_n_27\ : STD_LOGIC;
  signal \Using_Barrel_Shifter.barrel_shift_I_n_28\ : STD_LOGIC;
  signal \Using_Barrel_Shifter.barrel_shift_I_n_29\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^ex_result\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^in\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^msr_i\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal mul_Result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal op1 : STD_LOGIC_VECTOR ( 1 to 19 );
  signal op2_C : STD_LOGIC_VECTOR ( 0 to 27 );
  signal p_31_out : STD_LOGIC_VECTOR ( 30 downto 15 );
  signal reg1_Data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal shift_Logic_Result : STD_LOGIC_VECTOR ( 26 to 31 );
begin
  Address(0 to 31) <= \^address\(0 to 31);
  DCache_Enabled <= \^dcache_enabled\;
  Data_Write(23 downto 0) <= \^data_write\(23 downto 0);
  ICache_Enabled <= \^icache_enabled\;
  PC_EX_i(0 to 31) <= \^pc_ex_i\(0 to 31);
  \Using_FPGA.Native\(13 downto 0) <= \^using_fpga.native\(13 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\(1 downto 0) <= \^using_fpga.native_4\(1 downto 0);
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  ex_Result(0 to 31) <= \^ex_result\(0 to 31);
  \in\(31 downto 0) <= \^in\(31 downto 0);
  msr_I(2 downto 0) <= \^msr_i\(2 downto 0);
ALU_I: entity work.design_1_microblaze_1_1_ALU
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[10]\ => \^using_fpga.native\(10),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[11]\ => \^using_fpga.native\(11),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[15]\ => \^using_fpga.native\(12),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[2]\ => \^using_fpga.native\(2),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]\ => Operand_Select_I_n_183,
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[3]\ => \^using_fpga.native\(3),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[4]\ => \^using_fpga.native\(4),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[5]\ => \^using_fpga.native\(5),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[6]\ => \^using_fpga.native\(6),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[7]\ => \^using_fpga.native\(7),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[8]\ => \^using_fpga.native\(8),
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[9]\ => \^using_fpga.native\(9),
      EX_Op1 => \^using_fpga.native\(0),
      EX_Op2(5 downto 4) => \^using_fpga.native_4\(1 downto 0),
      EX_Op2(3) => \^using_fpga.native_3\,
      EX_Op2(2) => \^using_fpga.native_2\,
      EX_Op2(1) => \^using_fpga.native_1\,
      EX_Op2(0) => \^using_fpga.native_0\,
      LO => LO,
      O => \^in\(25),
      S => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      Shifted => \^using_fpga.native\(13),
      Unsigned_Op => Unsigned_Op,
      \Using_FPGA.Native\ => \^in\(18),
      \Using_FPGA.Native_0\ => \^in\(21),
      \Using_FPGA.Native_1\ => \^in\(16),
      \Using_FPGA.Native_10\ => \^in\(23),
      \Using_FPGA.Native_11\ => \^in\(17),
      \Using_FPGA.Native_12\ => \^in\(27),
      \Using_FPGA.Native_13\ => \^in\(26),
      \Using_FPGA.Native_2\ => \^in\(31),
      \Using_FPGA.Native_3\ => \^in\(24),
      \Using_FPGA.Native_4\ => \^in\(29),
      \Using_FPGA.Native_5\ => \^in\(20),
      \Using_FPGA.Native_6\ => \^in\(28),
      \Using_FPGA.Native_7\ => \^in\(30),
      \Using_FPGA.Native_8\ => \^in\(19),
      \Using_FPGA.Native_9\ => \^in\(22),
      \Using_FPGA.Native_I2\ => \^using_fpga.native\(1),
      Valid_Req0 => Valid_Req0,
      Valid_Req_1st_Cycle_i_2 => \^dcache_enabled\,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      carry_In => carry_In,
      \in\(15 downto 0) => \^in\(15 downto 0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      op1(17) => op1(1),
      op1(16) => op1(2),
      op1(15) => op1(3),
      op1(14) => op1(4),
      op1(13) => op1(5),
      op1(12) => op1(6),
      op1(11) => op1(7),
      op1(10) => op1(8),
      op1(9) => op1(9),
      op1(8) => op1(10),
      op1(7) => op1(11),
      op1(6) => op1(12),
      op1(5) => op1(13),
      op1(4) => op1(14),
      op1(3) => op1(15),
      op1(2) => op1(17),
      op1(1) => op1(18),
      op1(0) => op1(19),
      op2_C(25) => op2_C(0),
      op2_C(24) => op2_C(1),
      op2_C(23) => op2_C(2),
      op2_C(22) => op2_C(3),
      op2_C(21) => op2_C(4),
      op2_C(20) => op2_C(5),
      op2_C(19) => op2_C(6),
      op2_C(18) => op2_C(7),
      op2_C(17) => op2_C(8),
      op2_C(16) => op2_C(9),
      op2_C(15) => op2_C(10),
      op2_C(14) => op2_C(11),
      op2_C(13) => op2_C(12),
      op2_C(12) => op2_C(13),
      op2_C(11) => op2_C(14),
      op2_C(10) => op2_C(15),
      op2_C(9) => op2_C(16),
      op2_C(8) => op2_C(17),
      op2_C(7) => op2_C(18),
      op2_C(6) => op2_C(19),
      op2_C(5) => op2_C(20),
      op2_C(4) => op2_C(21),
      op2_C(3) => op2_C(22),
      op2_C(2) => op2_C(23),
      op2_C(1) => op2_C(25),
      op2_C(0) => op2_C(27)
    );
MSR_Reg_I: entity work.design_1_microblaze_1_1_MSR_Reg
     port map (
      Address(5) => \^address\(0),
      Address(4) => \^address\(24),
      Address(3) => \^address\(26),
      Address(2) => \^address\(28),
      Address(1) => \^address\(29),
      Address(0) => \^address\(30),
      Clk => Clk,
      I3 => \OpSelect_Bits[0].Operand_Select_Bit_I/I3\,
      I3_0 => \OpSelect_Bits[24].Operand_Select_Bit_I/I3\,
      I3_1 => \OpSelect_Bits[26].Operand_Select_Bit_I/I3\,
      I3_2 => \OpSelect_Bits[28].Operand_Select_Bit_I/I3\,
      I3_3 => \OpSelect_Bits[29].Operand_Select_Bit_I/I3\,
      I3_4 => \OpSelect_Bits[30].Operand_Select_Bit_I/I3\,
      MSR_Rst => MSR_Rst,
      \Using_FPGA.Native\ => \^dcache_enabled\,
      \Using_FPGA.Native_0\ => \^icache_enabled\,
      \Using_FPGA.Native_1\ => Operand_Select_I_n_184,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_3\ => Operand_Select_I_n_185,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_9\ => Operand_Select_I_n_186,
      msr_I(2 downto 0) => \^msr_i\(2 downto 0)
    );
Operand_Select_I: entity work.design_1_microblaze_1_1_Operand_Select
     port map (
      A(1) => A(30),
      A(0) => A(31),
      Address(22) => \^address\(1),
      Address(21) => \^address\(2),
      Address(20) => \^address\(3),
      Address(19) => \^address\(4),
      Address(18) => \^address\(5),
      Address(17) => \^address\(6),
      Address(16) => \^address\(7),
      Address(15) => \^address\(8),
      Address(14) => \^address\(9),
      Address(13) => \^address\(10),
      Address(12) => \^address\(11),
      Address(11) => \^address\(12),
      Address(10) => \^address\(13),
      Address(9) => \^address\(14),
      Address(8) => \^address\(15),
      Address(7) => \^address\(16),
      Address(6) => \^address\(17),
      Address(5) => \^address\(18),
      Address(4) => \^address\(19),
      Address(3) => \^address\(20),
      Address(2) => \^address\(21),
      Address(1) => \^address\(22),
      Address(0) => \^address\(23),
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      \C_reg[23]\ => \Using_Barrel_Shifter.barrel_shift_I_n_27\,
      \C_reg[27]\ => \Using_Barrel_Shifter.barrel_shift_I_n_28\,
      \C_reg[28]\ => \C_reg[28]\,
      \C_reg[28]_0\ => \Using_Barrel_Shifter.barrel_shift_I_n_29\,
      \C_reg[29]\ => \Using_Barrel_Shifter.barrel_shift_I_n_26\,
      Clk => Clk,
      D(30) => Operand_Select_I_n_102,
      D(29) => Operand_Select_I_n_103,
      D(28) => Operand_Select_I_n_104,
      D(27) => Operand_Select_I_n_105,
      D(26) => Operand_Select_I_n_106,
      D(25) => Operand_Select_I_n_107,
      D(24) => Operand_Select_I_n_108,
      D(23) => Operand_Select_I_n_109,
      D(22) => Operand_Select_I_n_110,
      D(21) => Operand_Select_I_n_111,
      D(20) => Operand_Select_I_n_112,
      D(19) => Operand_Select_I_n_113,
      D(18) => Operand_Select_I_n_114,
      D(17) => Operand_Select_I_n_115,
      D(16) => Operand_Select_I_n_116,
      D(15) => Operand_Select_I_n_117,
      D(14) => Operand_Select_I_n_118,
      D(13) => Operand_Select_I_n_119,
      D(12) => Operand_Select_I_n_120,
      D(11) => Operand_Select_I_n_121,
      D(10) => Operand_Select_I_n_122,
      D(9) => Operand_Select_I_n_123,
      D(8) => Operand_Select_I_n_124,
      D(7) => Operand_Select_I_n_125,
      D(6) => Operand_Select_I_n_126,
      D(5) => Operand_Select_I_n_127,
      D(4) => Operand_Select_I_n_128,
      D(3) => Operand_Select_I_n_129,
      D(2) => Operand_Select_I_n_130,
      D(1) => Operand_Select_I_n_131,
      D(0) => Operand_Select_I_n_132,
      D_0 => D_0,
      D_1 => D_1,
      D_10 => D_10,
      D_11 => D_11,
      D_12 => D_12,
      D_13 => D_13,
      D_14 => D_14,
      D_15 => D_15,
      D_16 => D_16,
      D_17 => D_17,
      D_18 => D_18,
      D_19 => D_19,
      D_2 => D_2,
      D_20 => D_20,
      D_21 => D_21,
      D_22 => D_22,
      D_23 => D_23,
      D_24 => D_24,
      D_25 => D_25,
      D_26 => D_26,
      D_27 => D_27,
      D_28 => D_28,
      D_29 => D_29,
      D_3 => D_3,
      D_30 => D_30,
      D_31 => D_31,
      D_4 => D_4,
      D_5 => D_5,
      D_6 => D_6,
      D_7 => D_7,
      D_8 => D_8,
      D_9 => D_9,
      E(0) => E(0),
      EX_Op1(0) => \^using_fpga.native_5\,
      EX_Op1(1) => Operand_Select_I_n_2,
      EX_Op1(2) => Operand_Select_I_n_3,
      EX_Op1(3) => Operand_Select_I_n_4,
      EX_Op1(4) => Operand_Select_I_n_5,
      EX_Op1(5) => Operand_Select_I_n_6,
      EX_Op1(6) => Operand_Select_I_n_7,
      EX_Op1(7) => Operand_Select_I_n_8,
      EX_Op1(8) => Operand_Select_I_n_9,
      EX_Op1(9) => Operand_Select_I_n_10,
      EX_Op1(10) => Operand_Select_I_n_11,
      EX_Op1(11) => Operand_Select_I_n_12,
      EX_Op1(12) => Operand_Select_I_n_13,
      EX_Op1(13) => Operand_Select_I_n_14,
      EX_Op1(14) => Operand_Select_I_n_15,
      EX_Op1(15) => Operand_Select_I_n_16,
      EX_Op1(16) => Operand_Select_I_n_17,
      EX_Op1(17) => Operand_Select_I_n_18,
      EX_Op1(18) => Operand_Select_I_n_19,
      EX_Op1(19) => Operand_Select_I_n_20,
      EX_Op1(20) => Operand_Select_I_n_21,
      EX_Op1(21) => Operand_Select_I_n_22,
      EX_Op1(22) => Operand_Select_I_n_23,
      EX_Op1(23) => Operand_Select_I_n_24,
      EX_Op1(24) => Operand_Select_I_n_25,
      EX_Op1(25) => Operand_Select_I_n_26,
      EX_Op1(26) => Operand_Select_I_n_27,
      EX_Op1(27) => Operand_Select_I_n_28,
      EX_Op1(28) => Operand_Select_I_n_29,
      EX_Op1(29) => Operand_Select_I_n_30,
      EX_Op1(30) => Operand_Select_I_n_31,
      EX_Op1(31) => Operand_Select_I_n_32,
      EX_Op2(0 to 23) => op2_C(0 to 23),
      EX_Op2(24) => \^using_fpga.native_4\(1),
      EX_Op2(25) => op2_C(25),
      EX_Op2(26) => \^using_fpga.native_4\(0),
      EX_Op2(27) => op2_C(27),
      EX_Op2(28) => \^using_fpga.native_3\,
      EX_Op2(29) => \^using_fpga.native_2\,
      EX_Op2(30) => \^using_fpga.native_1\,
      EX_Op2(31) => \^using_fpga.native_0\,
      EX_Result(0 to 31) => \^ex_result\(0 to 31),
      I0 => I0,
      I3 => \OpSelect_Bits[31].Operand_Select_Bit_I/I3\,
      I3_10 => \OpSelect_Bits[30].Operand_Select_Bit_I/I3\,
      I3_11 => \OpSelect_Bits[29].Operand_Select_Bit_I/I3\,
      I3_12 => \OpSelect_Bits[28].Operand_Select_Bit_I/I3\,
      I3_13 => \OpSelect_Bits[27].Operand_Select_Bit_I/I3\,
      I3_14 => \OpSelect_Bits[26].Operand_Select_Bit_I/I3\,
      I3_15 => \OpSelect_Bits[25].Operand_Select_Bit_I/I3\,
      I3_16 => \OpSelect_Bits[24].Operand_Select_Bit_I/I3\,
      I3_17 => \OpSelect_Bits[0].Operand_Select_Bit_I/I3\,
      ICache_Enabled => \^icache_enabled\,
      Is_Equal => Is_Equal,
      Is_Equal1_out => Is_Equal1_out,
      Is_Equal3_out => Is_Equal3_out,
      Op1_Logic => \^using_fpga.native\(0),
      Reg1_Data(0 to 31) => reg1_Data(0 to 31),
      S => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      S_0 => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/S\,
      S_2 => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/S\,
      S_5 => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/S\,
      S_8 => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/S\,
      Sext => Operand_Select_I_n_98,
      Shift_Logic_Res => Shift_Logic_Res31_out,
      Shifted => \^using_fpga.native\(7),
      \Size_17to32.imm_Reg_reg[0]_0\(15 downto 0) => \Size_17to32.imm_Reg_reg[0]\(15 downto 0),
      \Using_FPGA.Native\ => \^using_fpga.native\(1),
      \Using_FPGA.Native_0\ => \^using_fpga.native\(2),
      \Using_FPGA.Native_1\ => \^using_fpga.native\(3),
      \Using_FPGA.Native_10\ => \^using_fpga.native\(13),
      \Using_FPGA.Native_11\ => Operand_Select_I_n_99,
      \Using_FPGA.Native_12\ => Operand_Select_I_n_100,
      \Using_FPGA.Native_13\ => Operand_Select_I_n_144,
      \Using_FPGA.Native_14\(5) => Operand_Select_I_n_145,
      \Using_FPGA.Native_14\(4) => Operand_Select_I_n_146,
      \Using_FPGA.Native_14\(3) => Operand_Select_I_n_147,
      \Using_FPGA.Native_14\(2) => Operand_Select_I_n_148,
      \Using_FPGA.Native_14\(1) => Operand_Select_I_n_149,
      \Using_FPGA.Native_14\(0) => Operand_Select_I_n_150,
      \Using_FPGA.Native_15\ => Operand_Select_I_n_151,
      \Using_FPGA.Native_16\(30 downto 15) => p_31_out(30 downto 15),
      \Using_FPGA.Native_16\(14) => Operand_Select_I_n_168,
      \Using_FPGA.Native_16\(13) => Operand_Select_I_n_169,
      \Using_FPGA.Native_16\(12) => Operand_Select_I_n_170,
      \Using_FPGA.Native_16\(11) => Operand_Select_I_n_171,
      \Using_FPGA.Native_16\(10) => Operand_Select_I_n_172,
      \Using_FPGA.Native_16\(9) => Operand_Select_I_n_173,
      \Using_FPGA.Native_16\(8) => Operand_Select_I_n_174,
      \Using_FPGA.Native_16\(7) => Operand_Select_I_n_175,
      \Using_FPGA.Native_16\(6) => Operand_Select_I_n_176,
      \Using_FPGA.Native_16\(5) => Operand_Select_I_n_177,
      \Using_FPGA.Native_16\(4) => Operand_Select_I_n_178,
      \Using_FPGA.Native_16\(3) => Operand_Select_I_n_179,
      \Using_FPGA.Native_16\(2) => Operand_Select_I_n_180,
      \Using_FPGA.Native_16\(1) => Operand_Select_I_n_181,
      \Using_FPGA.Native_16\(0) => Operand_Select_I_n_182,
      \Using_FPGA.Native_17\ => Operand_Select_I_n_183,
      \Using_FPGA.Native_18\ => Operand_Select_I_n_184,
      \Using_FPGA.Native_19\ => Operand_Select_I_n_185,
      \Using_FPGA.Native_2\ => \^using_fpga.native\(4),
      \Using_FPGA.Native_20\ => Operand_Select_I_n_186,
      \Using_FPGA.Native_21\ => Operand_Select_I_n_187,
      \Using_FPGA.Native_22\ => Shift_Logic_Module_I_n_10,
      \Using_FPGA.Native_23\ => Shift_Logic_Module_I_n_13,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_26\ => \^dcache_enabled\,
      \Using_FPGA.Native_27\ => \Using_FPGA.Native_40\,
      \Using_FPGA.Native_28\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_3\ => \^using_fpga.native\(5),
      \Using_FPGA.Native_4\ => \^using_fpga.native\(6),
      \Using_FPGA.Native_5\ => \^using_fpga.native\(8),
      \Using_FPGA.Native_6\ => \^using_fpga.native\(9),
      \Using_FPGA.Native_7\ => \^using_fpga.native\(10),
      \Using_FPGA.Native_8\ => \^using_fpga.native\(11),
      \Using_FPGA.Native_9\ => \^using_fpga.native\(12),
      \Using_FPGA.Native_i_1__74\ => Shift_Logic_Module_I_n_9,
      \Using_FPGA.Native_i_1__75\ => Shift_Logic_Module_I_n_11,
      \Using_FPGA.Native_i_1__76\ => Shift_Logic_Res30_out,
      \Using_FPGA.Native_i_2__7\ => Shift_Logic_Module_I_n_12,
      \Using_FPGA.Native_i_5__1\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_3\ => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_6\ => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_9\ => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg\ => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_1\ => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_4\ => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_7\ => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      clz_instr => clz_instr,
      compare_Instr => compare_Instr,
      imm_Value(0 to 15) => imm_Value(0 to 15),
      instr_ex(0) => instr_ex(0),
      msr_I(0) => \^msr_i\(0),
      of_PipeRun => of_PipeRun,
      op1(17) => op1(1),
      op1(16) => op1(2),
      op1(15) => op1(3),
      op1(14) => op1(4),
      op1(13) => op1(5),
      op1(12) => op1(6),
      op1(11) => op1(7),
      op1(10) => op1(8),
      op1(9) => op1(9),
      op1(8) => op1(10),
      op1(7) => op1(11),
      op1(6) => op1(12),
      op1(5) => op1(13),
      op1(4) => op1(14),
      op1(3) => op1(15),
      op1(2) => op1(17),
      op1(1) => op1(18),
      op1(0) => op1(19),
      opsel1_SPR => opsel1_SPR,
      res_Forward1 => res_Forward1,
      sext16 => sext16,
      sext8 => sext8,
      sync_reset => sync_reset,
      void_bit => void_bit
    );
PC_Module_I: entity work.design_1_microblaze_1_1_PC_Module
     port map (
      Address(0 to 31) => \^address\(0 to 31),
      Buffer_Addr(2 downto 0) => Buffer_Addr(2 downto 0),
      Clk => Clk,
      D(0) => D(8),
      DI => DI,
      I3 => \OpSelect_Bits[25].Operand_Select_Bit_I/I3\,
      I3_0 => \OpSelect_Bits[27].Operand_Select_Bit_I/I3\,
      I3_1 => \OpSelect_Bits[31].Operand_Select_Bit_I/I3\,
      IReady => IReady,
      Instr_Addr => Instr_Addr,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(29 downto 0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(29 downto 0),
      PC_EX_i(0 to 31) => \^pc_ex_i\(0 to 31),
      PC_Write => PC_Write,
      Q(29 downto 0) => Q(29 downto 0),
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_14\(13 downto 0) => \Using_FPGA.Native_21\(13 downto 0),
      \Using_FPGA.Native_15\(1 downto 0) => \Using_FPGA.Native_23\(41 downto 40),
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_16\,
      \in\(31 downto 0) => \^in\(31 downto 0),
      jump => jump,
      sync_reset => sync_reset,
      valid_Req_XX_i_4 => valid_Req_XX_i_4
    );
Register_File_I: entity work.design_1_microblaze_1_1_Register_File
     port map (
      Clk => Clk,
      Clk_0(7 downto 0) => \Using_FPGA.Native_23\(39 downto 32),
      Data_Write(23 downto 0) => \^data_write\(23 downto 0),
      EX_Result(0 to 31) => \^ex_result\(0 to 31),
      Reg1_Data(0 to 31) => reg1_Data(0 to 31),
      Reg2_Data(0 to 31) => Reg2_Data(0 to 31),
      Reg_Write => Reg_Write,
      Write_Addr(0) => instr_ex(2),
      Write_Addr(1) => instr_ex(1),
      Write_Addr(2) => \Using_BitField.mem_Rd_reg[9]\(2),
      Write_Addr(3) => \Using_BitField.mem_Rd_reg[9]\(1),
      Write_Addr(4) => \Using_BitField.mem_Rd_reg[9]\(0),
      imm_Value(4) => imm_Value(0),
      imm_Value(3) => imm_Value(1),
      imm_Value(2) => imm_Value(2),
      imm_Value(1) => imm_Value(3),
      imm_Value(0) => imm_Value(4),
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4)
    );
Result_Mux_I: entity work.design_1_microblaze_1_1_Result_Mux
     port map (
      Barrel_Result(7) => Barrel_Result(0),
      Barrel_Result(6) => Barrel_Result(1),
      Barrel_Result(5) => Barrel_Result(2),
      Barrel_Result(4) => Barrel_Result(3),
      Barrel_Result(3) => Barrel_Result(4),
      Barrel_Result(2) => Barrel_Result(5),
      Barrel_Result(1) => Barrel_Result(6),
      Barrel_Result(0) => Barrel_Result(7),
      Clk => Clk,
      EX_Result(0 to 31) => \^ex_result\(0 to 31),
      ICache_Enabled => \^icache_enabled\,
      Other_Result => Barrel_Result0,
      PC_EX_i(4) => \^pc_ex_i\(24),
      PC_EX_i(3) => \^pc_ex_i\(26),
      PC_EX_i(2) => \^pc_ex_i\(28),
      PC_EX_i(1) => \^pc_ex_i\(29),
      PC_EX_i(0) => \^pc_ex_i\(30),
      Shift_Logic_Res => Shift_Logic_Res23_out,
      \Using_FPGA.Native\(4 downto 0) => \Using_FPGA.Native_22\(4 downto 0),
      \Using_FPGA.Native_0\(31 downto 0) => \Using_FPGA.Native_23\(31 downto 0),
      \Using_FPGA.Native_1\ => Barrel_Result03_out,
      \Using_FPGA.Native_10\ => Barrel_Result027_out,
      \Using_FPGA.Native_11\ => Shift_Logic_Res22_out,
      \Using_FPGA.Native_12\ => Barrel_Result030_out,
      \Using_FPGA.Native_13\ => Shift_Logic_Res21_out,
      \Using_FPGA.Native_14\ => Barrel_Result033_out,
      \Using_FPGA.Native_15\ => Shift_Logic_Res20_out,
      \Using_FPGA.Native_16\ => Barrel_Result036_out,
      \Using_FPGA.Native_17\ => Shift_Logic_Res19_out,
      \Using_FPGA.Native_18\ => Barrel_Result039_out,
      \Using_FPGA.Native_19\ => Shift_Logic_Res18_out,
      \Using_FPGA.Native_2\ => Barrel_Result06_out,
      \Using_FPGA.Native_20\ => Barrel_Result042_out,
      \Using_FPGA.Native_21\ => Shift_Logic_Res17_out,
      \Using_FPGA.Native_22\ => Barrel_Result045_out,
      \Using_FPGA.Native_23\ => Shift_Logic_Res15_out,
      \Using_FPGA.Native_24\ => Barrel_Result048_out,
      \Using_FPGA.Native_25\ => Shift_Logic_Res14_out,
      \Using_FPGA.Native_26\ => Barrel_Result051_out,
      \Using_FPGA.Native_27\ => Shift_Logic_Res13_out,
      \Using_FPGA.Native_28\ => Barrel_Result054_out,
      \Using_FPGA.Native_29\ => Shift_Logic_Res12_out,
      \Using_FPGA.Native_3\ => Barrel_Result09_out,
      \Using_FPGA.Native_30\ => Barrel_Result057_out,
      \Using_FPGA.Native_31\ => Shift_Logic_Res11_out,
      \Using_FPGA.Native_32\ => Barrel_Result060_out,
      \Using_FPGA.Native_33\ => Shift_Logic_Res10_out,
      \Using_FPGA.Native_34\ => Barrel_Result063_out,
      \Using_FPGA.Native_35\ => Shift_Logic_Res9_out,
      \Using_FPGA.Native_36\ => Barrel_Result066_out,
      \Using_FPGA.Native_37\ => Shift_Logic_Res8_out,
      \Using_FPGA.Native_38\ => Barrel_Result069_out,
      \Using_FPGA.Native_39\ => Shift_Logic_Res7_out,
      \Using_FPGA.Native_4\ => Barrel_Result012_out,
      \Using_FPGA.Native_40\ => Shift_Logic_Res6_out,
      \Using_FPGA.Native_41\ => Shift_Logic_Res5_out,
      \Using_FPGA.Native_42\ => Shift_Logic_Res4_out,
      \Using_FPGA.Native_43\ => Shift_Logic_Res3_out,
      \Using_FPGA.Native_44\ => Shift_Logic_Res2_out,
      \Using_FPGA.Native_45\ => Shift_Logic_Res1_out,
      \Using_FPGA.Native_46\ => Shift_Logic_Res0_out,
      \Using_FPGA.Native_47\ => Shift_Logic_Module_I_n_41,
      \Using_FPGA.Native_5\ => Barrel_Result015_out,
      \Using_FPGA.Native_6\ => Barrel_Result018_out,
      \Using_FPGA.Native_7\(1 downto 0) => \Using_FPGA.Native_24\(1 downto 0),
      \Using_FPGA.Native_8\ => Barrel_Result021_out,
      \Using_FPGA.Native_9\ => Barrel_Result024_out,
      data_Read_Mask(1 downto 0) => data_Read_Mask(1 downto 0),
      \data_rd_reg_reg[24]\ => \^dcache_enabled\,
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[30]_0\ => \data_rd_reg_reg[30]_0\,
      extend_Data_Read(0 to 31) => extend_Data_Read(0 to 31),
      \in\(31 downto 0) => \^in\(31 downto 0),
      instr_ex(1 downto 0) => instr_ex(6 downto 5),
      msr_I(2 downto 0) => \^msr_i\(2 downto 0),
      mul_Result(0 to 31) => mul_Result(0 to 31),
      register_write => register_write,
      shift_Logic_Result(5) => shift_Logic_Result(26),
      shift_Logic_Result(4) => shift_Logic_Result(27),
      shift_Logic_Result(3) => shift_Logic_Result(28),
      shift_Logic_Result(2) => shift_Logic_Result(29),
      shift_Logic_Result(1) => shift_Logic_Result(30),
      shift_Logic_Result(0) => shift_Logic_Result(31)
    );
Shift_Logic_Module_I: entity work.design_1_microblaze_1_1_Shift_Logic_Module
     port map (
      EX_Op2(0 to 23) => op2_C(0 to 23),
      EX_Op2(24) => \^using_fpga.native_4\(1),
      EX_Op2(25) => op2_C(25),
      EX_Op2(26) => \^using_fpga.native_4\(0),
      EX_Op2(27) => op2_C(27),
      EX_Op2(28) => \^using_fpga.native_3\,
      EX_Op2(29) => \^using_fpga.native_2\,
      EX_Op2(30) => \^using_fpga.native_1\,
      EX_Op2(31) => \^using_fpga.native_0\,
      Enable_2 => Enable_2,
      I0 => I0,
      I3 => I3,
      Is_Equal => Is_Equal,
      Is_Equal1_out => Is_Equal1_out,
      Is_Equal3_out => Is_Equal3_out,
      Op1_Logic => \^using_fpga.native\(6),
      Op1_Shift => Op1_Shift,
      PCMP_Instr2_out => PCMP_Instr2_out,
      S => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/S\,
      S_1 => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/S\,
      S_4 => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/S\,
      S_7 => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/S\,
      Select_Logic => Select_Logic,
      Select_Logic_reg => Shift_Logic_Res30_out,
      Select_Logic_reg_0 => Shift_Logic_Res,
      Select_Logic_reg_1 => Select_Logic_reg,
      Select_Logic_reg_10 => Shift_Logic_Res14_out,
      Select_Logic_reg_11 => Shift_Logic_Res13_out,
      Select_Logic_reg_12 => Shift_Logic_Res12_out,
      Select_Logic_reg_13 => Shift_Logic_Res11_out,
      Select_Logic_reg_14 => Shift_Logic_Res10_out,
      Select_Logic_reg_15 => Shift_Logic_Res9_out,
      Select_Logic_reg_16 => Shift_Logic_Res8_out,
      Select_Logic_reg_17 => Shift_Logic_Res7_out,
      Select_Logic_reg_18 => Shift_Logic_Res6_out,
      Select_Logic_reg_19 => Shift_Logic_Res5_out,
      Select_Logic_reg_2 => Shift_Logic_Res23_out,
      Select_Logic_reg_20 => Shift_Logic_Res4_out,
      Select_Logic_reg_21 => Shift_Logic_Res3_out,
      Select_Logic_reg_22 => Shift_Logic_Res2_out,
      Select_Logic_reg_23 => Shift_Logic_Res1_out,
      Select_Logic_reg_24 => Shift_Logic_Res0_out,
      Select_Logic_reg_25 => Shift_Logic_Module_I_n_41,
      Select_Logic_reg_3 => Shift_Logic_Res22_out,
      Select_Logic_reg_4 => Shift_Logic_Res21_out,
      Select_Logic_reg_5 => Shift_Logic_Res20_out,
      Select_Logic_reg_6 => Shift_Logic_Res19_out,
      Select_Logic_reg_7 => Shift_Logic_Res18_out,
      Select_Logic_reg_8 => Shift_Logic_Res17_out,
      Select_Logic_reg_9 => Shift_Logic_Res15_out,
      Sext => Sext,
      Shift_Logic_Res => Shift_Logic_Res31_out,
      Shift_Oper => Shift_Oper,
      Shifted => \^using_fpga.native\(13),
      \Use_The_PCMP_instr.CLZ_Instr_reg\ => Shift_Logic_Module_I_n_13,
      \Using_FPGA.Native\ => Shift_Logic_Module_I_n_9,
      \Using_FPGA.Native_0\ => Shift_Logic_Module_I_n_10,
      \Using_FPGA.Native_1\ => Shift_Logic_Module_I_n_11,
      \Using_FPGA.Native_10\ => Operand_Select_I_n_99,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_12\ => \^using_fpga.native\(7),
      \Using_FPGA.Native_13\ => \^using_fpga.native\(0),
      \Using_FPGA.Native_14\ => \^using_fpga.native\(1),
      \Using_FPGA.Native_15\ => \^using_fpga.native\(2),
      \Using_FPGA.Native_16\ => \^using_fpga.native\(3),
      \Using_FPGA.Native_17\ => \^using_fpga.native\(4),
      \Using_FPGA.Native_18\ => \^using_fpga.native\(5),
      \Using_FPGA.Native_19\ => \^using_fpga.native\(8),
      \Using_FPGA.Native_2\ => Shift_Logic_Module_I_n_12,
      \Using_FPGA.Native_20\ => \^using_fpga.native\(9),
      \Using_FPGA.Native_21\ => \^using_fpga.native\(10),
      \Using_FPGA.Native_22\ => \^using_fpga.native\(11),
      \Using_FPGA.Native_23\ => \^using_fpga.native\(12),
      \Using_FPGA.Native_24\ => Operand_Select_I_n_98,
      \Using_FPGA.Native_25\ => Shifted,
      \Using_FPGA.Native_26\ => \Using_FPGA.Native_42\,
      \Using_FPGA.Native_3\ => Operand_Select_I_n_100,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_i_1__74\ => \Using_FPGA.Native_i_1__74\,
      \Using_FPGA.Native_i_1__74_0\ => Operand_Select_I_n_144,
      \Using_FPGA.Native_i_1__75\ => \Using_FPGA.Native_i_5__1\,
      \Using_FPGA.The_Compare[0].sel_reg\ => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_2\ => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_5\ => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[0].sel_reg_8\ => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[0].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg\ => \Use_PCMP_instr.carry_equal_byte_gen[0].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_0\ => \Use_PCMP_instr.carry_equal_byte_gen[1].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_3\ => \Use_PCMP_instr.carry_equal_byte_gen[2].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      \Using_FPGA.The_Compare[2].sel_reg_6\ => \Use_PCMP_instr.carry_equal_byte_gen[3].carry_equal_byte/Using_FPGA.The_Compare[2].sel_reg\,
      clz_instr => clz_instr,
      instr_ex(1 downto 0) => instr_ex(4 downto 3),
      op1(17) => op1(1),
      op1(16) => op1(2),
      op1(15) => op1(3),
      op1(14) => op1(4),
      op1(13) => op1(5),
      op1(12) => op1(6),
      op1(11) => op1(7),
      op1(10) => op1(8),
      op1(9) => op1(9),
      op1(8) => op1(10),
      op1(7) => op1(11),
      op1(6) => op1(12),
      op1(5) => op1(13),
      op1(4) => op1(14),
      op1(3) => op1(15),
      op1(2) => op1(17),
      op1(1) => op1(18),
      op1(0) => op1(19),
      shift_Logic_Result(5) => shift_Logic_Result(26),
      shift_Logic_Result(4) => shift_Logic_Result(27),
      shift_Logic_Result(3) => shift_Logic_Result(28),
      shift_Logic_Result(2) => shift_Logic_Result(29),
      shift_Logic_Result(1) => shift_Logic_Result(30),
      shift_Logic_Result(0) => shift_Logic_Result(31)
    );
\Using_Barrel_Shifter.barrel_shift_I\: entity work.design_1_microblaze_1_1_barrel_shift
     port map (
      Barrel_Result(7) => Barrel_Result(0),
      Barrel_Result(6) => Barrel_Result(1),
      Barrel_Result(5) => Barrel_Result(2),
      Barrel_Result(4) => Barrel_Result(3),
      Barrel_Result(3) => Barrel_Result(4),
      Barrel_Result(2) => Barrel_Result(5),
      Barrel_Result(1) => Barrel_Result(6),
      Barrel_Result(0) => Barrel_Result(7),
      \C[12]_i_2\ => \^using_fpga.native\(4),
      \C[12]_i_2_0\ => \^using_fpga.native\(11),
      \C[13]_i_2\ => \^using_fpga.native\(3),
      \C[13]_i_2_0\ => \^using_fpga.native\(5),
      \C[13]_i_2_1\ => \^using_fpga.native\(10),
      \C[14]_i_2\ => \^using_fpga.native\(2),
      \C[7]_i_2\ => \^using_fpga.native\(6),
      \C[7]_i_2_0\ => \^using_fpga.native\(9),
      \C[8]_i_2\ => \^using_fpga.native\(8),
      \C_reg[19]_0\ => Operand_Select_I_n_151,
      \C_reg[23]_0\(5) => Operand_Select_I_n_145,
      \C_reg[23]_0\(4) => Operand_Select_I_n_146,
      \C_reg[23]_0\(3) => Operand_Select_I_n_147,
      \C_reg[23]_0\(2) => Operand_Select_I_n_148,
      \C_reg[23]_0\(1) => Operand_Select_I_n_149,
      \C_reg[23]_0\(0) => Operand_Select_I_n_150,
      \C_reg[27]_0\ => \^using_fpga.native\(13),
      \C_reg[27]_1\ => \^using_fpga.native\(12),
      \C_reg[27]_2\ => \C_reg[28]\,
      \C_reg[30]_0\ => \^using_fpga.native\(1),
      Clk => Clk,
      D(7 downto 0) => D(7 downto 0),
      Data_Write(23 downto 0) => \^data_write\(23 downto 0),
      EX_Op2(4) => op2_C(27),
      EX_Op2(3) => \^using_fpga.native_3\,
      EX_Op2(2) => \^using_fpga.native_2\,
      EX_Op2(1) => \^using_fpga.native_1\,
      EX_Op2(0) => \^using_fpga.native_0\,
      Op1_Logic => \^using_fpga.native\(0),
      Other_Result => Barrel_Result0,
      SR(0) => SR(0),
      Shifted => \^using_fpga.native\(7),
      \Using_BitField.mem_Rd_reg[10]_0\ => Barrel_Result063_out,
      \Using_BitField.mem_Rd_reg[11]_0\ => Barrel_Result060_out,
      \Using_BitField.mem_Rd_reg[12]_0\ => Barrel_Result057_out,
      \Using_BitField.mem_Rd_reg[13]_0\ => Barrel_Result054_out,
      \Using_BitField.mem_Rd_reg[14]_0\ => Barrel_Result051_out,
      \Using_BitField.mem_Rd_reg[15]_0\ => Barrel_Result048_out,
      \Using_BitField.mem_Rd_reg[16]_0\ => Barrel_Result045_out,
      \Using_BitField.mem_Rd_reg[17]_0\ => Barrel_Result042_out,
      \Using_BitField.mem_Rd_reg[18]_0\ => Barrel_Result039_out,
      \Using_BitField.mem_Rd_reg[19]_0\ => Barrel_Result036_out,
      \Using_BitField.mem_Rd_reg[20]_0\ => Barrel_Result033_out,
      \Using_BitField.mem_Rd_reg[21]_0\ => Barrel_Result030_out,
      \Using_BitField.mem_Rd_reg[22]_0\ => Barrel_Result027_out,
      \Using_BitField.mem_Rd_reg[23]_0\ => Barrel_Result024_out,
      \Using_BitField.mem_Rd_reg[8]_0\ => Barrel_Result069_out,
      \Using_BitField.mem_Rd_reg[9]_0\ => Barrel_Result066_out,
      \Using_BitField.mem_mask0_reg[0]_0\(31) => BitField_Insert,
      \Using_BitField.mem_mask0_reg[0]_0\(30 downto 15) => p_31_out(30 downto 15),
      \Using_BitField.mem_mask0_reg[0]_0\(14) => Operand_Select_I_n_168,
      \Using_BitField.mem_mask0_reg[0]_0\(13) => Operand_Select_I_n_169,
      \Using_BitField.mem_mask0_reg[0]_0\(12) => Operand_Select_I_n_170,
      \Using_BitField.mem_mask0_reg[0]_0\(11) => Operand_Select_I_n_171,
      \Using_BitField.mem_mask0_reg[0]_0\(10) => Operand_Select_I_n_172,
      \Using_BitField.mem_mask0_reg[0]_0\(9) => Operand_Select_I_n_173,
      \Using_BitField.mem_mask0_reg[0]_0\(8) => Operand_Select_I_n_174,
      \Using_BitField.mem_mask0_reg[0]_0\(7) => Operand_Select_I_n_175,
      \Using_BitField.mem_mask0_reg[0]_0\(6) => Operand_Select_I_n_176,
      \Using_BitField.mem_mask0_reg[0]_0\(5) => Operand_Select_I_n_177,
      \Using_BitField.mem_mask0_reg[0]_0\(4) => Operand_Select_I_n_178,
      \Using_BitField.mem_mask0_reg[0]_0\(3) => Operand_Select_I_n_179,
      \Using_BitField.mem_mask0_reg[0]_0\(2) => Operand_Select_I_n_180,
      \Using_BitField.mem_mask0_reg[0]_0\(1) => Operand_Select_I_n_181,
      \Using_BitField.mem_mask0_reg[0]_0\(0) => Operand_Select_I_n_182,
      \Using_BitField.mem_mask1_reg[0]_0\(30) => Operand_Select_I_n_102,
      \Using_BitField.mem_mask1_reg[0]_0\(29) => Operand_Select_I_n_103,
      \Using_BitField.mem_mask1_reg[0]_0\(28) => Operand_Select_I_n_104,
      \Using_BitField.mem_mask1_reg[0]_0\(27) => Operand_Select_I_n_105,
      \Using_BitField.mem_mask1_reg[0]_0\(26) => Operand_Select_I_n_106,
      \Using_BitField.mem_mask1_reg[0]_0\(25) => Operand_Select_I_n_107,
      \Using_BitField.mem_mask1_reg[0]_0\(24) => Operand_Select_I_n_108,
      \Using_BitField.mem_mask1_reg[0]_0\(23) => Operand_Select_I_n_109,
      \Using_BitField.mem_mask1_reg[0]_0\(22) => Operand_Select_I_n_110,
      \Using_BitField.mem_mask1_reg[0]_0\(21) => Operand_Select_I_n_111,
      \Using_BitField.mem_mask1_reg[0]_0\(20) => Operand_Select_I_n_112,
      \Using_BitField.mem_mask1_reg[0]_0\(19) => Operand_Select_I_n_113,
      \Using_BitField.mem_mask1_reg[0]_0\(18) => Operand_Select_I_n_114,
      \Using_BitField.mem_mask1_reg[0]_0\(17) => Operand_Select_I_n_115,
      \Using_BitField.mem_mask1_reg[0]_0\(16) => Operand_Select_I_n_116,
      \Using_BitField.mem_mask1_reg[0]_0\(15) => Operand_Select_I_n_117,
      \Using_BitField.mem_mask1_reg[0]_0\(14) => Operand_Select_I_n_118,
      \Using_BitField.mem_mask1_reg[0]_0\(13) => Operand_Select_I_n_119,
      \Using_BitField.mem_mask1_reg[0]_0\(12) => Operand_Select_I_n_120,
      \Using_BitField.mem_mask1_reg[0]_0\(11) => Operand_Select_I_n_121,
      \Using_BitField.mem_mask1_reg[0]_0\(10) => Operand_Select_I_n_122,
      \Using_BitField.mem_mask1_reg[0]_0\(9) => Operand_Select_I_n_123,
      \Using_BitField.mem_mask1_reg[0]_0\(8) => Operand_Select_I_n_124,
      \Using_BitField.mem_mask1_reg[0]_0\(7) => Operand_Select_I_n_125,
      \Using_BitField.mem_mask1_reg[0]_0\(6) => Operand_Select_I_n_126,
      \Using_BitField.mem_mask1_reg[0]_0\(5) => Operand_Select_I_n_127,
      \Using_BitField.mem_mask1_reg[0]_0\(4) => Operand_Select_I_n_128,
      \Using_BitField.mem_mask1_reg[0]_0\(3) => Operand_Select_I_n_129,
      \Using_BitField.mem_mask1_reg[0]_0\(2) => Operand_Select_I_n_130,
      \Using_BitField.mem_mask1_reg[0]_0\(1) => Operand_Select_I_n_131,
      \Using_BitField.mem_mask1_reg[0]_0\(0) => Operand_Select_I_n_132,
      \Using_FPGA.Native\(1) => A(30),
      \Using_FPGA.Native\(0) => A(31),
      \Using_FPGA.Native_0\ => \Using_Barrel_Shifter.barrel_shift_I_n_26\,
      \Using_FPGA.Native_1\ => \Using_Barrel_Shifter.barrel_shift_I_n_27\,
      \Using_FPGA.Native_2\ => \Using_Barrel_Shifter.barrel_shift_I_n_28\,
      \Using_FPGA.Native_3\ => \Using_Barrel_Shifter.barrel_shift_I_n_29\,
      in0 => in0,
      op1(17) => op1(1),
      op1(16) => op1(2),
      op1(15) => op1(3),
      op1(14) => op1(4),
      op1(13) => op1(5),
      op1(12) => op1(6),
      op1(11) => op1(7),
      op1(10) => op1(8),
      op1(9) => op1(9),
      op1(8) => op1(10),
      op1(7) => op1(11),
      op1(6) => op1(12),
      op1(5) => op1(13),
      op1(4) => op1(14),
      op1(3) => op1(15),
      op1(2) => op1(17),
      op1(1) => op1(18),
      op1(0) => op1(19),
      \trace_data_write_value_i_reg[24]\ => Barrel_Result021_out,
      \trace_data_write_value_i_reg[25]\ => Barrel_Result018_out,
      \trace_data_write_value_i_reg[26]\ => Barrel_Result015_out,
      \trace_data_write_value_i_reg[27]\ => Barrel_Result012_out,
      \trace_data_write_value_i_reg[28]\ => Barrel_Result09_out,
      \trace_data_write_value_i_reg[29]\ => Barrel_Result06_out,
      \trace_data_write_value_i_reg[30]\ => Barrel_Result03_out,
      void_bit => void_bit
    );
Zero_Detect_I: entity work.design_1_microblaze_1_1_Zero_Detect
     port map (
      EX_Op1(29) => \^using_fpga.native_5\,
      EX_Op1(28) => Operand_Select_I_n_2,
      EX_Op1(27) => Operand_Select_I_n_3,
      EX_Op1(26) => Operand_Select_I_n_4,
      EX_Op1(25) => Operand_Select_I_n_5,
      EX_Op1(24) => Operand_Select_I_n_6,
      EX_Op1(23) => Operand_Select_I_n_7,
      EX_Op1(22) => Operand_Select_I_n_8,
      EX_Op1(21) => Operand_Select_I_n_9,
      EX_Op1(20) => Operand_Select_I_n_10,
      EX_Op1(19) => Operand_Select_I_n_11,
      EX_Op1(18) => Operand_Select_I_n_12,
      EX_Op1(17) => Operand_Select_I_n_13,
      EX_Op1(16) => Operand_Select_I_n_14,
      EX_Op1(15) => Operand_Select_I_n_15,
      EX_Op1(14) => Operand_Select_I_n_16,
      EX_Op1(13) => Operand_Select_I_n_17,
      EX_Op1(12) => Operand_Select_I_n_18,
      EX_Op1(11) => Operand_Select_I_n_19,
      EX_Op1(10) => Operand_Select_I_n_20,
      EX_Op1(9) => Operand_Select_I_n_21,
      EX_Op1(8) => Operand_Select_I_n_22,
      EX_Op1(7) => Operand_Select_I_n_23,
      EX_Op1(6) => Operand_Select_I_n_24,
      EX_Op1(5) => Operand_Select_I_n_25,
      EX_Op1(4) => Operand_Select_I_n_26,
      EX_Op1(3) => Operand_Select_I_n_27,
      EX_Op1(2) => Operand_Select_I_n_28,
      EX_Op1(1) => Operand_Select_I_n_29,
      EX_Op1(0) => Operand_Select_I_n_30,
      Reg_Test_Equal => Reg_Test_Equal,
      Reg_zero => Reg_zero,
      \Using_FPGA.Native\ => Operand_Select_I_n_187,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      reg_Test_Equal_N => reg_Test_Equal_N
    );
mul_unit_I: entity work.design_1_microblaze_1_1_mul_unit
     port map (
      Clk => Clk,
      EX_Op1(0) => \^using_fpga.native_5\,
      EX_Op1(1) => Operand_Select_I_n_2,
      EX_Op1(2) => Operand_Select_I_n_3,
      EX_Op1(3) => Operand_Select_I_n_4,
      EX_Op1(4) => Operand_Select_I_n_5,
      EX_Op1(5) => Operand_Select_I_n_6,
      EX_Op1(6) => Operand_Select_I_n_7,
      EX_Op1(7) => Operand_Select_I_n_8,
      EX_Op1(8) => Operand_Select_I_n_9,
      EX_Op1(9) => Operand_Select_I_n_10,
      EX_Op1(10) => Operand_Select_I_n_11,
      EX_Op1(11) => Operand_Select_I_n_12,
      EX_Op1(12) => Operand_Select_I_n_13,
      EX_Op1(13) => Operand_Select_I_n_14,
      EX_Op1(14) => Operand_Select_I_n_15,
      EX_Op1(15) => Operand_Select_I_n_16,
      EX_Op1(16) => Operand_Select_I_n_17,
      EX_Op1(17) => Operand_Select_I_n_18,
      EX_Op1(18) => Operand_Select_I_n_19,
      EX_Op1(19) => Operand_Select_I_n_20,
      EX_Op1(20) => Operand_Select_I_n_21,
      EX_Op1(21) => Operand_Select_I_n_22,
      EX_Op1(22) => Operand_Select_I_n_23,
      EX_Op1(23) => Operand_Select_I_n_24,
      EX_Op1(24) => Operand_Select_I_n_25,
      EX_Op1(25) => Operand_Select_I_n_26,
      EX_Op1(26) => Operand_Select_I_n_27,
      EX_Op1(27) => Operand_Select_I_n_28,
      EX_Op1(28) => Operand_Select_I_n_29,
      EX_Op1(29) => Operand_Select_I_n_30,
      EX_Op1(30) => Operand_Select_I_n_31,
      EX_Op1(31) => Operand_Select_I_n_32,
      EX_Op2(0 to 23) => op2_C(0 to 23),
      EX_Op2(24) => \^using_fpga.native_4\(1),
      EX_Op2(25) => op2_C(25),
      EX_Op2(26) => \^using_fpga.native_4\(0),
      EX_Op2(27) => op2_C(27),
      EX_Op2(28) => \^using_fpga.native_3\,
      EX_Op2(29) => \^using_fpga.native_2\,
      EX_Op2(30) => \^using_fpga.native_1\,
      EX_Op2(31) => \^using_fpga.native_0\,
      ex_not_mul_op => ex_not_mul_op,
      mul_Result(0 to 31) => mul_Result(0 to 31)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_Icache is
  port (
    icache_ready : out STD_LOGIC;
    \Using_AXI.M_AXI_ARADDR_I_reg[31]\ : out STD_LOGIC_VECTOR ( 37 downto 0 );
    \Using_AXI.r_read_fifo_addr_reg[0]\ : out STD_LOGIC;
    \FSM_sequential_cache_state_reg[1]_0\ : out STD_LOGIC;
    \Using_AXI.r_read_fifo_addr_reg[1]\ : out STD_LOGIC;
    mux_Instr_Read : out STD_LOGIC_VECTOR ( 0 to 31 );
    Q : out STD_LOGIC_VECTOR ( 29 downto 0 );
    iFetch_In_Progress_reg : out STD_LOGIC;
    Clk : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 29 downto 0 );
    sync_reset : in STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    valid_Req_XX_reg_0 : in STD_LOGIC;
    ex_Valid : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Write_ICache_I : in STD_LOGIC;
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    \instr_EX_i_reg[0]\ : in STD_LOGIC;
    \instr_EX_i_reg[1]\ : in STD_LOGIC;
    \instr_EX_i_reg[2]\ : in STD_LOGIC;
    \instr_EX_i_reg[3]\ : in STD_LOGIC;
    \instr_EX_i_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[5]\ : in STD_LOGIC;
    \instr_EX_i_reg[6]\ : in STD_LOGIC;
    \instr_EX_i_reg[7]\ : in STD_LOGIC;
    \write_Addr_I_reg[2]\ : in STD_LOGIC;
    \write_Addr_I_reg[3]\ : in STD_LOGIC;
    \write_Addr_I_reg[4]\ : in STD_LOGIC;
    \instr_EX_i_reg[11]\ : in STD_LOGIC;
    \instr_EX_i_reg[12]\ : in STD_LOGIC;
    \instr_EX_i_reg[13]\ : in STD_LOGIC;
    \instr_EX_i_reg[14]\ : in STD_LOGIC;
    \instr_EX_i_reg[15]\ : in STD_LOGIC;
    \instr_EX_i_reg[16]\ : in STD_LOGIC;
    \instr_EX_i_reg[17]\ : in STD_LOGIC;
    \instr_EX_i_reg[18]\ : in STD_LOGIC;
    \instr_EX_i_reg[19]\ : in STD_LOGIC;
    \instr_EX_i_reg[20]\ : in STD_LOGIC;
    \instr_EX_i_reg[21]\ : in STD_LOGIC;
    \instr_EX_i_reg[22]\ : in STD_LOGIC;
    \instr_EX_i_reg[23]\ : in STD_LOGIC;
    \instr_EX_i_reg[24]\ : in STD_LOGIC;
    \instr_EX_i_reg[25]\ : in STD_LOGIC;
    \instr_EX_i_reg[26]\ : in STD_LOGIC;
    \instr_EX_i_reg[27]\ : in STD_LOGIC;
    \instr_EX_i_reg[28]\ : in STD_LOGIC;
    \instr_EX_i_reg[29]\ : in STD_LOGIC;
    Unsigned_Op_reg : in STD_LOGIC;
    \instr_EX_i_reg[31]\ : in STD_LOGIC;
    iFetch_In_Progress : in STD_LOGIC;
    \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_Icache : entity is "Icache";
end design_1_microblaze_1_1_Icache;

architecture STRUCTURE of design_1_microblaze_1_1_Icache is
  signal A : STD_LOGIC_VECTOR ( 0 to 4 );
  signal ADDRB : STD_LOGIC_VECTOR ( 0 to 7 );
  signal \A__0\ : STD_LOGIC;
  signal B : STD_LOGIC_VECTOR ( 1 to 4 );
  signal Cache_Interface_I1_n_34 : STD_LOGIC;
  signal Cache_Interface_I1_n_35 : STD_LOGIC;
  signal Cache_Interface_I1_n_44 : STD_LOGIC;
  signal Cache_Interface_I1_n_56 : STD_LOGIC;
  signal Cache_Interface_I1_n_64 : STD_LOGIC;
  signal Cache_Interface_I1_n_65 : STD_LOGIC;
  signal Cache_Interface_I1_n_66 : STD_LOGIC;
  signal Cache_Interface_I1_n_67 : STD_LOGIC;
  signal Cache_Interface_I1_n_68 : STD_LOGIC;
  signal DATA_INB : STD_LOGIC_VECTOR ( 0 to 3 );
  signal ENB1_out : STD_LOGIC;
  signal \^fsm_sequential_cache_state_reg[1]_0\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[0]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[10]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[11]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[12]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[13]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[14]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[15]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[20]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[21]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[22]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[23]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[24]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[25]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[26]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[27]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[2]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[5]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[7]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Not_Using_TLBS.instr_Addr_1_reg_n_0_[9]\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 29 downto 0 );
  signal Tag_RAM_Module_n_5 : STD_LOGIC;
  signal Trace_ICache_Hit0 : STD_LOGIC;
  signal \Use_XX_Accesses.xx_wait_for_data_reg_n_0\ : STD_LOGIC;
  signal \Using_FPGA_FSL_1.tag_hit_comparator_n_3\ : STD_LOGIC;
  signal \Using_XX_Access_Part2.carry_or_I1_n_1\ : STD_LOGIC;
  signal \Using_XX_Access_Part2.carry_or_I1_n_2\ : STD_LOGIC;
  signal addr_Tag_Bits : STD_LOGIC_VECTOR ( 0 to 3 );
  signal addr_Tag_Bits_next : STD_LOGIC_VECTOR ( 0 to 3 );
  signal cache_req_raw : STD_LOGIC;
  signal \cache_state__0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal cacheline_cnt : STD_LOGIC_VECTOR ( 0 to 1 );
  signal icache_miss_hold : STD_LOGIC;
  signal \^icache_ready\ : STD_LOGIC;
  signal incoming_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal new_data_addr : STD_LOGIC_VECTOR ( 0 to 9 );
  signal p_0_in : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal p_32_out : STD_LOGIC;
  signal read_data_stall : STD_LOGIC;
  signal read_stream_valid : STD_LOGIC;
  signal read_stream_valid_reg_n_0 : STD_LOGIC;
  signal read_victim_valid : STD_LOGIC;
  signal read_victim_valid_reg_n_0 : STD_LOGIC;
  signal \req_Addr_reg_n_0_[20]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[21]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[22]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[23]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[24]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[25]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[26]\ : STD_LOGIC;
  signal \req_Addr_reg_n_0_[27]\ : STD_LOGIC;
  signal tag_ok_without_parity : STD_LOGIC;
  signal update_idle : STD_LOGIC;
  signal valid_Bits : STD_LOGIC_VECTOR ( 0 to 3 );
  signal valid_Bits_1 : STD_LOGIC_VECTOR ( 0 to 3 );
  signal valid_Req : STD_LOGIC;
  signal valid_Req_XX_reg_n_0 : STD_LOGIC;
  signal valid_addr_strobe_q : STD_LOGIC;
  signal valid_req_1st : STD_LOGIC;
  signal word_is_valid : STD_LOGIC;
  signal xx_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal xx_wait_for_data_postponed : STD_LOGIC;
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_cache_state_reg[0]\ : label is "victim_wait_on_idle:011,handle_victim_hit:100,read_from_stream:010,stream_wait_on_idle:001,idle:000,dvm_sync_msg_done:1001,wait_for_wic_to_update_cache:0111,wait_for_dvm_msg_done:1000,wait_for_dvm_msg_granted:0110,wait_for_dvm_msg_started:0101";
  attribute FSM_ENCODED_STATES of \FSM_sequential_cache_state_reg[1]\ : label is "victim_wait_on_idle:011,handle_victim_hit:100,read_from_stream:010,stream_wait_on_idle:001,idle:000,dvm_sync_msg_done:1001,wait_for_wic_to_update_cache:0111,wait_for_dvm_msg_done:1000,wait_for_dvm_msg_granted:0110,wait_for_dvm_msg_started:0101";
  attribute FSM_ENCODED_STATES of \FSM_sequential_cache_state_reg[2]\ : label is "victim_wait_on_idle:011,handle_victim_hit:100,read_from_stream:010,stream_wait_on_idle:001,idle:000,dvm_sync_msg_done:1001,wait_for_wic_to_update_cache:0111,wait_for_dvm_msg_done:1000,wait_for_dvm_msg_granted:0110,wait_for_dvm_msg_started:0101";
begin
  \FSM_sequential_cache_state_reg[1]_0\ <= \^fsm_sequential_cache_state_reg[1]_0\;
  Q(29 downto 0) <= \^q\(29 downto 0);
  \^lopt_3\ <= lopt_1;
  \^lopt_4\ <= lopt_2;
  \^lopt_6\ <= lopt_4;
  \^lopt_7\ <= lopt_5;
  \^lopt_9\ <= lopt_7;
  icache_ready <= \^icache_ready\;
  lopt <= \^lopt_2\;
  lopt_10 <= lopt_8;
  lopt_3 <= \^lopt_5\;
  lopt_6 <= \^lopt_8\;
  lopt_9 <= lopt_11;
Cache_Interface_I1: entity work.design_1_microblaze_1_1_Cache_Interface
     port map (
      ADDRBWRADDR(7) => ADDRB(0),
      ADDRBWRADDR(6) => ADDRB(1),
      ADDRBWRADDR(5) => ADDRB(2),
      ADDRBWRADDR(4) => ADDRB(3),
      ADDRBWRADDR(3) => ADDRB(4),
      ADDRBWRADDR(2) => ADDRB(5),
      ADDRBWRADDR(1) => ADDRB(6),
      ADDRBWRADDR(0) => ADDRB(7),
      Carry_OUT => tag_ok_without_parity,
      Clk => Clk,
      D(3) => valid_Bits(0),
      D(2) => valid_Bits(1),
      D(1) => valid_Bits(2),
      D(0) => valid_Bits(3),
      DIBDI(4) => DATA_INB(0),
      DIBDI(3) => DATA_INB(1),
      DIBDI(2) => DATA_INB(2),
      DIBDI(1) => DATA_INB(3),
      DIBDI(0) => Cache_Interface_I1_n_44,
      E(0) => p_32_out,
      ENB1_out => ENB1_out,
      \FSM_sequential_cache_state_reg[1]\ => Cache_Interface_I1_n_64,
      \FSM_sequential_cache_state_reg[2]\ => Cache_Interface_I1_n_65,
      \FSM_sequential_cache_state_reg[2]_0\ => Cache_Interface_I1_n_66,
      M_AXI_IC_ARREADY => M_AXI_IC_ARREADY,
      M_AXI_IC_RLAST => M_AXI_IC_RLAST,
      M_AXI_IC_RVALID => M_AXI_IC_RVALID,
      Q(29) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[0]\,
      Q(28) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[1]\,
      Q(27) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[2]\,
      Q(26) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[3]\,
      Q(25) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[4]\,
      Q(24) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[5]\,
      Q(23) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[6]\,
      Q(22) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[7]\,
      Q(21) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[8]\,
      Q(20) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[9]\,
      Q(19) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[10]\,
      Q(18) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[11]\,
      Q(17) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[12]\,
      Q(16) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[13]\,
      Q(15) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[14]\,
      Q(14) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[15]\,
      Q(13) => B(1),
      Q(12) => B(2),
      Q(11) => B(3),
      Q(10) => B(4),
      Q(9) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[20]\,
      Q(8) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[21]\,
      Q(7) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[22]\,
      Q(6) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[23]\,
      Q(5) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[24]\,
      Q(4) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[25]\,
      Q(3) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[26]\,
      Q(2) => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[27]\,
      Q(1 downto 0) => p_0_in(1 downto 0),
      \Use_XX_Accesses.xx_wait_for_data_reg\ => Cache_Interface_I1_n_34,
      \Use_XX_Accesses.xx_wait_for_data_reg_0\ => \Use_XX_Accesses.xx_wait_for_data_reg_n_0\,
      \Using_AXI.M_AXI_ARADDR_I_reg[31]_0\(33 downto 0) => \Using_AXI.M_AXI_ARADDR_I_reg[31]\(37 downto 4),
      \Using_AXI.M_AXI_ARCACHE_reg[3]_0\ => valid_Req_XX_reg_n_0,
      \Using_AXI.Use_Read_Data_Active.axi_cacheline_cnt_reg[1]_0\ => Cache_Interface_I1_n_35,
      \Using_AXI.r_read_fifo_addr_reg[0]_0\ => \Using_AXI.r_read_fifo_addr_reg[0]\,
      \Using_AXI.r_read_fifo_addr_reg[1]_0\ => \Using_AXI.r_read_fifo_addr_reg[1]\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \^fsm_sequential_cache_state_reg[1]_0\,
      \Using_FPGA.Native_1\(3) => valid_Bits_1(0),
      \Using_FPGA.Native_1\(2) => valid_Bits_1(1),
      \Using_FPGA.Native_1\(1) => valid_Bits_1(2),
      \Using_FPGA.Native_1\(0) => valid_Bits_1(3),
      \Using_FPGA.Native_2\(7 downto 0) => \Using_FPGA.Native_0\(7 downto 0),
      \Using_FPGA.Native_3\(7) => new_data_addr(0),
      \Using_FPGA.Native_3\(6) => new_data_addr(1),
      \Using_FPGA.Native_3\(5) => new_data_addr(2),
      \Using_FPGA.Native_3\(4) => new_data_addr(3),
      \Using_FPGA.Native_3\(3) => new_data_addr(4),
      \Using_FPGA.Native_3\(2) => new_data_addr(5),
      \Using_FPGA.Native_3\(1) => new_data_addr(6),
      \Using_FPGA.Native_3\(0) => new_data_addr(7),
      \Using_FPGA.Native_4\ => read_victim_valid_reg_n_0,
      \Using_FPGA.Native_5\ => read_stream_valid_reg_n_0,
      Write_ICache_I => Write_ICache_I,
      cache_req_raw => cache_req_raw,
      \cache_state__0\(2 downto 0) => \cache_state__0\(2 downto 0),
      cacheline_cnt(0 to 1) => cacheline_cnt(0 to 1),
      \cacheline_cnt_reg[1]\ => Cache_Interface_I1_n_67,
      \cacheline_cnt_reg[1]_0\ => Cache_Interface_I1_n_68,
      ex_Valid => ex_Valid,
      iFetch_In_Progress => iFetch_In_Progress,
      iFetch_In_Progress_reg => iFetch_In_Progress_reg,
      icache_miss_hold => icache_miss_hold,
      icache_miss_hold_reg => Cache_Interface_I1_n_56,
      new_data_addr(1) => new_data_addr(8),
      new_data_addr(0) => new_data_addr(9),
      read_data_stall => read_data_stall,
      read_stream_valid => read_stream_valid,
      read_victim_valid => read_victim_valid,
      sync_reset => sync_reset,
      update_idle => update_idle,
      valid_Req => valid_Req,
      valid_addr_strobe_q => valid_addr_strobe_q,
      xx_wait_for_data_postponed => xx_wait_for_data_postponed
    );
Data_RAM_Module: entity work.\design_1_microblaze_1_1_RAM_Module__parameterized1\
     port map (
      ADDRBWRADDR(9) => new_data_addr(0),
      ADDRBWRADDR(8) => new_data_addr(1),
      ADDRBWRADDR(7) => new_data_addr(2),
      ADDRBWRADDR(6) => new_data_addr(3),
      ADDRBWRADDR(5) => new_data_addr(4),
      ADDRBWRADDR(4) => new_data_addr(5),
      ADDRBWRADDR(3) => new_data_addr(6),
      ADDRBWRADDR(2) => new_data_addr(7),
      ADDRBWRADDR(1) => new_data_addr(8),
      ADDRBWRADDR(0) => new_data_addr(9),
      \A__0\ => \A__0\,
      Clk => Clk,
      D(9 downto 0) => D(9 downto 0),
      E(0) => Cache_Interface_I1_n_44,
      IReady => IReady,
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      \M_AXI_IC_RDATA[31]\(31) => incoming_data(0),
      \M_AXI_IC_RDATA[31]\(30) => incoming_data(1),
      \M_AXI_IC_RDATA[31]\(29) => incoming_data(2),
      \M_AXI_IC_RDATA[31]\(28) => incoming_data(3),
      \M_AXI_IC_RDATA[31]\(27) => incoming_data(4),
      \M_AXI_IC_RDATA[31]\(26) => incoming_data(5),
      \M_AXI_IC_RDATA[31]\(25) => incoming_data(6),
      \M_AXI_IC_RDATA[31]\(24) => incoming_data(7),
      \M_AXI_IC_RDATA[31]\(23) => incoming_data(8),
      \M_AXI_IC_RDATA[31]\(22) => incoming_data(9),
      \M_AXI_IC_RDATA[31]\(21) => incoming_data(10),
      \M_AXI_IC_RDATA[31]\(20) => incoming_data(11),
      \M_AXI_IC_RDATA[31]\(19) => incoming_data(12),
      \M_AXI_IC_RDATA[31]\(18) => incoming_data(13),
      \M_AXI_IC_RDATA[31]\(17) => incoming_data(14),
      \M_AXI_IC_RDATA[31]\(16) => incoming_data(15),
      \M_AXI_IC_RDATA[31]\(15) => incoming_data(16),
      \M_AXI_IC_RDATA[31]\(14) => incoming_data(17),
      \M_AXI_IC_RDATA[31]\(13) => incoming_data(18),
      \M_AXI_IC_RDATA[31]\(12) => incoming_data(19),
      \M_AXI_IC_RDATA[31]\(11) => incoming_data(20),
      \M_AXI_IC_RDATA[31]\(10) => incoming_data(21),
      \M_AXI_IC_RDATA[31]\(9) => incoming_data(22),
      \M_AXI_IC_RDATA[31]\(8) => incoming_data(23),
      \M_AXI_IC_RDATA[31]\(7) => incoming_data(24),
      \M_AXI_IC_RDATA[31]\(6) => incoming_data(25),
      \M_AXI_IC_RDATA[31]\(5) => incoming_data(26),
      \M_AXI_IC_RDATA[31]\(4) => incoming_data(27),
      \M_AXI_IC_RDATA[31]\(3) => incoming_data(28),
      \M_AXI_IC_RDATA[31]\(2) => incoming_data(29),
      \M_AXI_IC_RDATA[31]\(1) => incoming_data(30),
      \M_AXI_IC_RDATA[31]\(0) => incoming_data(31),
      Q(31) => xx_data(0),
      Q(30) => xx_data(1),
      Q(29) => xx_data(2),
      Q(28) => xx_data(3),
      Q(27) => xx_data(4),
      Q(26) => xx_data(5),
      Q(25) => xx_data(6),
      Q(24) => xx_data(7),
      Q(23) => xx_data(8),
      Q(22) => xx_data(9),
      Q(21) => xx_data(10),
      Q(20) => xx_data(11),
      Q(19) => xx_data(12),
      Q(18) => xx_data(13),
      Q(17) => xx_data(14),
      Q(16) => xx_data(15),
      Q(15) => xx_data(16),
      Q(14) => xx_data(17),
      Q(13) => xx_data(18),
      Q(12) => xx_data(19),
      Q(11) => xx_data(20),
      Q(10) => xx_data(21),
      Q(9) => xx_data(22),
      Q(8) => xx_data(23),
      Q(7) => xx_data(24),
      Q(6) => xx_data(25),
      Q(5) => xx_data(26),
      Q(4) => xx_data(27),
      Q(3) => xx_data(28),
      Q(2) => xx_data(29),
      Q(1) => xx_data(30),
      Q(0) => xx_data(31),
      Unsigned_Op_reg => Unsigned_Op_reg,
      \Using_FPGA.Native\ => read_stream_valid_reg_n_0,
      \Using_FPGA.Native_0\ => read_victim_valid_reg_n_0,
      \instr_EX_i_reg[0]\ => \instr_EX_i_reg[0]\,
      \instr_EX_i_reg[11]\ => \instr_EX_i_reg[11]\,
      \instr_EX_i_reg[12]\ => \instr_EX_i_reg[12]\,
      \instr_EX_i_reg[13]\ => \instr_EX_i_reg[13]\,
      \instr_EX_i_reg[14]\ => \instr_EX_i_reg[14]\,
      \instr_EX_i_reg[15]\ => \instr_EX_i_reg[15]\,
      \instr_EX_i_reg[16]\ => \instr_EX_i_reg[16]\,
      \instr_EX_i_reg[17]\ => \instr_EX_i_reg[17]\,
      \instr_EX_i_reg[18]\ => \instr_EX_i_reg[18]\,
      \instr_EX_i_reg[19]\ => \instr_EX_i_reg[19]\,
      \instr_EX_i_reg[1]\ => \instr_EX_i_reg[1]\,
      \instr_EX_i_reg[20]\ => \instr_EX_i_reg[20]\,
      \instr_EX_i_reg[21]\ => \instr_EX_i_reg[21]\,
      \instr_EX_i_reg[22]\ => \instr_EX_i_reg[22]\,
      \instr_EX_i_reg[23]\ => \instr_EX_i_reg[23]\,
      \instr_EX_i_reg[24]\ => \instr_EX_i_reg[24]\,
      \instr_EX_i_reg[25]\ => \instr_EX_i_reg[25]\,
      \instr_EX_i_reg[26]\ => \instr_EX_i_reg[26]\,
      \instr_EX_i_reg[27]\ => \instr_EX_i_reg[27]\,
      \instr_EX_i_reg[28]\ => \instr_EX_i_reg[28]\,
      \instr_EX_i_reg[29]\ => \instr_EX_i_reg[29]\,
      \instr_EX_i_reg[2]\ => \instr_EX_i_reg[2]\,
      \instr_EX_i_reg[31]\ => \instr_EX_i_reg[31]\,
      \instr_EX_i_reg[3]\ => \instr_EX_i_reg[3]\,
      \instr_EX_i_reg[4]\ => \instr_EX_i_reg[4]\,
      \instr_EX_i_reg[5]\ => \instr_EX_i_reg[5]\,
      \instr_EX_i_reg[6]\ => \instr_EX_i_reg[6]\,
      \instr_EX_i_reg[7]\ => \instr_EX_i_reg[7]\,
      mux_Instr_Read(0 to 31) => mux_Instr_Read(0 to 31),
      \write_Addr_I_reg[2]\ => \write_Addr_I_reg[2]\,
      \write_Addr_I_reg[3]\ => \write_Addr_I_reg[3]\,
      \write_Addr_I_reg[4]\ => \write_Addr_I_reg[4]\
    );
\FSM_sequential_cache_state_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_66,
      Q => \cache_state__0\(0),
      R => sync_reset
    );
\FSM_sequential_cache_state_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_65,
      Q => \cache_state__0\(1),
      R => sync_reset
    );
\FSM_sequential_cache_state_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_64,
      Q => \cache_state__0\(2),
      R => sync_reset
    );
M_AXI_IC_RREADY_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_data_stall,
      O => \Using_AXI.M_AXI_ARADDR_I_reg[31]\(3)
    );
\Not_Using_TLBS.instr_Addr_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(29),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[0]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(19),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[10]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(18),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[11]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(17),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[12]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(16),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[13]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(15),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[14]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(14),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[15]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(13),
      Q => B(1),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(12),
      Q => B(2),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(11),
      Q => B(3),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(10),
      Q => B(4),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(28),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[1]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(9),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[20]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(8),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[21]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(7),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[22]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(6),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[23]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(5),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[24]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(4),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[25]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(3),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[26]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(2),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[27]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(1),
      Q => p_0_in(1),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(0),
      Q => p_0_in(0),
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(27),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[2]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(26),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[3]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(25),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[4]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(24),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[5]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(23),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[6]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(22),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[7]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(21),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[8]\,
      R => sync_reset
    );
\Not_Using_TLBS.instr_Addr_1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(20),
      Q => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[9]\,
      R => sync_reset
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(29),
      Q => \^q\(29),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(19),
      Q => \^q\(19),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(18),
      Q => \^q\(18),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(17),
      Q => \^q\(17),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(16),
      Q => \^q\(16),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(15),
      Q => \^q\(15),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(14),
      Q => \^q\(14),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(13),
      Q => \^q\(13),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(12),
      Q => \^q\(12),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(11),
      Q => \^q\(11),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(10),
      Q => \^q\(10),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(28),
      Q => \^q\(28),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(9),
      Q => \^q\(9),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(8),
      Q => \^q\(8),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(7),
      Q => \^q\(7),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(6),
      Q => \^q\(6),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(5),
      Q => \^q\(5),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(4),
      Q => \^q\(4),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(3),
      Q => \^q\(3),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(2),
      Q => \^q\(2),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(1),
      Q => \^q\(1),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(0),
      Q => \^q\(0),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(27),
      Q => \^q\(27),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(26),
      Q => \^q\(26),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(25),
      Q => \^q\(25),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(24),
      Q => \^q\(24),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(23),
      Q => \^q\(23),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(22),
      Q => \^q\(22),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(21),
      Q => \^q\(21),
      R => '0'
    );
\Not_Using_TLBS.last_Valid_Instr_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(20),
      Q => \^q\(20),
      R => '0'
    );
Pause_Ack_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \cache_state__0\(1),
      I1 => \cache_state__0\(2),
      I2 => \cache_state__0\(0),
      O => \^fsm_sequential_cache_state_reg[1]_0\
    );
Tag_RAM_Module: entity work.design_1_microblaze_1_1_RAM_Module
     port map (
      ADDRBWRADDR(7) => ADDRB(0),
      ADDRBWRADDR(6) => ADDRB(1),
      ADDRBWRADDR(5) => ADDRB(2),
      ADDRBWRADDR(4) => ADDRB(3),
      ADDRBWRADDR(3) => ADDRB(4),
      ADDRBWRADDR(2) => ADDRB(5),
      ADDRBWRADDR(1) => ADDRB(6),
      ADDRBWRADDR(0) => ADDRB(7),
      Clk => Clk,
      D(7 downto 0) => D(9 downto 2),
      DIBDI(8) => DATA_INB(0),
      DIBDI(7) => DATA_INB(1),
      DIBDI(6) => DATA_INB(2),
      DIBDI(5) => DATA_INB(3),
      DIBDI(4) => Cache_Interface_I1_n_44,
      DIBDI(3) => addr_Tag_Bits(0),
      DIBDI(2) => addr_Tag_Bits(1),
      DIBDI(1) => addr_Tag_Bits(2),
      DIBDI(0) => addr_Tag_Bits(3),
      DOADO(4) => A(0),
      DOADO(3) => A(1),
      DOADO(2) => A(2),
      DOADO(1) => A(3),
      DOADO(0) => A(4),
      ENB1_out => ENB1_out,
      Q(1 downto 0) => \^q\(1 downto 0),
      \Using_FPGA.Native\ => Tag_RAM_Module_n_5
    );
Trace_ICache_Hit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Trace_ICache_Hit0,
      Q => \Using_AXI.M_AXI_ARADDR_I_reg[31]\(1),
      R => sync_reset
    );
Trace_ICache_Rdy_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^icache_ready\,
      Q => \Using_AXI.M_AXI_ARADDR_I_reg[31]\(0),
      R => sync_reset
    );
Trace_ICache_Req_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => valid_addr_strobe_q,
      I1 => valid_Req,
      O => valid_req_1st
    );
Trace_ICache_Req_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => valid_req_1st,
      Q => \Using_AXI.M_AXI_ARADDR_I_reg[31]\(2),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(0),
      Q => xx_data(0),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(10),
      Q => xx_data(10),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(11),
      Q => xx_data(11),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(12),
      Q => xx_data(12),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(13),
      Q => xx_data(13),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(14),
      Q => xx_data(14),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(15),
      Q => xx_data(15),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(16),
      Q => xx_data(16),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(17),
      Q => xx_data(17),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(18),
      Q => xx_data(18),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(19),
      Q => xx_data(19),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(1),
      Q => xx_data(1),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(20),
      Q => xx_data(20),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(21),
      Q => xx_data(21),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(22),
      Q => xx_data(22),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(23),
      Q => xx_data(23),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(24),
      Q => xx_data(24),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(25),
      Q => xx_data(25),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(26),
      Q => xx_data(26),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(27),
      Q => xx_data(27),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(28),
      Q => xx_data(28),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(29),
      Q => xx_data(29),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(2),
      Q => xx_data(2),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(30),
      Q => xx_data(30),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(31),
      Q => xx_data(31),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(3),
      Q => xx_data(3),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(4),
      Q => xx_data(4),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(5),
      Q => xx_data(5),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(6),
      Q => xx_data(6),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(7),
      Q => xx_data(7),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(8),
      Q => xx_data(8),
      R => sync_reset
    );
\Use_XX_Accesses.xx_data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_32_out,
      D => incoming_data(9),
      Q => xx_data(9),
      R => sync_reset
    );
\Use_XX_Accesses.xx_valid_data_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_32_out,
      Q => \A__0\,
      R => sync_reset
    );
\Use_XX_Accesses.xx_wait_for_data_postponed_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_FSL_1.tag_hit_comparator_n_3\,
      Q => xx_wait_for_data_postponed,
      R => sync_reset
    );
\Use_XX_Accesses.xx_wait_for_data_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_34,
      Q => \Use_XX_Accesses.xx_wait_for_data_reg_n_0\,
      R => '0'
    );
\Using_FPGA_FSL_1.tag_hit_comparator\: entity work.design_1_microblaze_1_1_comparator
     port map (
      Carry_OUT => tag_ok_without_parity,
      DOADO(4) => A(0),
      DOADO(3) => A(1),
      DOADO(2) => A(2),
      DOADO(1) => A(3),
      DOADO(0) => A(4),
      E(0) => cache_req_raw,
      Q(3) => B(1),
      Q(2) => B(2),
      Q(1) => B(3),
      Q(0) => B(4),
      Trace_ICache_Hit0 => Trace_ICache_Hit0,
      \Use_XX_Accesses.xx_wait_for_data_postponed_reg\ => Cache_Interface_I1_n_35,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => Tag_RAM_Module_n_5,
      \req_Addr_reg[27]\ => valid_Req_XX_reg_n_0,
      valid_Req => valid_Req,
      valid_Req_reg => \Using_FPGA_FSL_1.tag_hit_comparator_n_3\,
      valid_addr_strobe_q => valid_addr_strobe_q,
      xx_wait_for_data_postponed => xx_wait_for_data_postponed
    );
\Using_XX_Access_Part2.carry_or_I1\: entity work.design_1_microblaze_1_1_carry_or_2
     port map (
      \A__0\ => \A__0\,
      \Use_XX_Accesses.xx_valid_data_reg\ => \^icache_ready\,
      \Using_FPGA.Native\ => \Using_XX_Access_Part2.carry_or_I1_n_1\,
      lopt => \^lopt_2\,
      lopt_1 => \^lopt_3\,
      lopt_2 => \^lopt_4\,
      lopt_3 => \^lopt_5\,
      lopt_4 => \^lopt_6\,
      lopt_5 => \^lopt_7\,
      lopt_6 => \^lopt_8\,
      lopt_7 => \^lopt_9\,
      lopt_8 => lopt_10,
      lopt_9 => lopt_11,
      sync_reset => sync_reset,
      valid_Req => valid_Req,
      valid_Req_XX_reg => \Using_XX_Access_Part2.carry_or_I1_n_2\,
      valid_Req_XX_reg_0 => valid_Req_XX_reg_0,
      valid_Req_XX_reg_1(0) => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      valid_Req_XX_reg_2 => valid_Req_XX_reg_n_0,
      valid_Req_reg(0) => valid_Req_reg_0(0),
      word_is_valid => word_is_valid
    );
\addr_Tag_Bits_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => addr_Tag_Bits_next(0),
      Q => addr_Tag_Bits(0),
      R => '0'
    );
\addr_Tag_Bits_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => addr_Tag_Bits_next(1),
      Q => addr_Tag_Bits(1),
      R => '0'
    );
\addr_Tag_Bits_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => addr_Tag_Bits_next(2),
      Q => addr_Tag_Bits(2),
      R => '0'
    );
\addr_Tag_Bits_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => addr_Tag_Bits_next(3),
      Q => addr_Tag_Bits(3),
      R => '0'
    );
cache_valid_bit_detect_I1: entity work.design_1_microblaze_1_1_cache_valid_bit_detect
     port map (
      Carry_OUT => tag_ok_without_parity,
      Trace_ICache_Rdy_reg => Tag_RAM_Module_n_5,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      word_is_valid => word_is_valid
    );
\cacheline_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_67,
      Q => cacheline_cnt(0),
      R => sync_reset
    );
\cacheline_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_68,
      Q => cacheline_cnt(1),
      R => sync_reset
    );
icache_miss_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Cache_Interface_I1_n_56,
      Q => icache_miss_hold,
      R => '0'
    );
\new_tag_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[20]\,
      Q => new_data_addr(0),
      R => '0'
    );
\new_tag_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[21]\,
      Q => new_data_addr(1),
      R => '0'
    );
\new_tag_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[22]\,
      Q => new_data_addr(2),
      R => '0'
    );
\new_tag_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[23]\,
      Q => new_data_addr(3),
      R => '0'
    );
\new_tag_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[24]\,
      Q => new_data_addr(4),
      R => '0'
    );
\new_tag_addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[25]\,
      Q => new_data_addr(5),
      R => '0'
    );
\new_tag_addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[26]\,
      Q => new_data_addr(6),
      R => '0'
    );
\new_tag_addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => update_idle,
      D => \req_Addr_reg_n_0_[27]\,
      Q => new_data_addr(7),
      R => '0'
    );
read_data_stall_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_victim_valid_reg_n_0,
      Q => read_data_stall,
      R => sync_reset
    );
read_stream_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_stream_valid,
      Q => read_stream_valid_reg_n_0,
      R => sync_reset
    );
read_victim_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_victim_valid,
      Q => read_victim_valid_reg_n_0,
      R => sync_reset
    );
\req_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => B(1),
      Q => addr_Tag_Bits_next(0),
      R => sync_reset
    );
\req_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => B(2),
      Q => addr_Tag_Bits_next(1),
      R => sync_reset
    );
\req_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => B(3),
      Q => addr_Tag_Bits_next(2),
      R => sync_reset
    );
\req_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => B(4),
      Q => addr_Tag_Bits_next(3),
      R => sync_reset
    );
\req_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[20]\,
      Q => \req_Addr_reg_n_0_[20]\,
      R => sync_reset
    );
\req_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[21]\,
      Q => \req_Addr_reg_n_0_[21]\,
      R => sync_reset
    );
\req_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[22]\,
      Q => \req_Addr_reg_n_0_[22]\,
      R => sync_reset
    );
\req_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[23]\,
      Q => \req_Addr_reg_n_0_[23]\,
      R => sync_reset
    );
\req_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[24]\,
      Q => \req_Addr_reg_n_0_[24]\,
      R => sync_reset
    );
\req_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[25]\,
      Q => \req_Addr_reg_n_0_[25]\,
      R => sync_reset
    );
\req_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[26]\,
      Q => \req_Addr_reg_n_0_[26]\,
      R => sync_reset
    );
\req_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => cache_req_raw,
      D => \Not_Using_TLBS.instr_Addr_1_reg_n_0_[27]\,
      Q => \req_Addr_reg_n_0_[27]\,
      R => sync_reset
    );
\valid_Bits_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Cache_Interface_I1_n_44,
      D => valid_Bits(0),
      Q => valid_Bits_1(0),
      R => update_idle
    );
\valid_Bits_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Cache_Interface_I1_n_44,
      D => valid_Bits(1),
      Q => valid_Bits_1(1),
      R => update_idle
    );
\valid_Bits_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Cache_Interface_I1_n_44,
      D => valid_Bits(2),
      Q => valid_Bits_1(2),
      R => update_idle
    );
\valid_Bits_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Cache_Interface_I1_n_44,
      D => valid_Bits(3),
      Q => valid_Bits_1(3),
      R => update_idle
    );
valid_Req_XX_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_XX_Access_Part2.carry_or_I1_n_2\,
      Q => valid_Req_XX_reg_n_0,
      R => '0'
    );
valid_Req_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_XX_Access_Part2.carry_or_I1_n_1\,
      Q => valid_Req,
      R => '0'
    );
valid_addr_strobe_q_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0),
      Q => valid_addr_strobe_q,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MicroBlaze_Area is
  port (
    D : out STD_LOGIC_VECTOR ( 505 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 37 downto 0 );
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_1 : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Shift : in STD_LOGIC;
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_TDI : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MicroBlaze_Area : entity is "MicroBlaze_Area";
end design_1_microblaze_1_1_MicroBlaze_Area;

architecture STRUCTURE of design_1_microblaze_1_1_MicroBlaze_Area is
  signal ADDRA : STD_LOGIC_VECTOR ( 0 to 7 );
  signal BitField_Extract : STD_LOGIC;
  signal BitField_Insert : STD_LOGIC;
  signal Byte_Doublet_Handle_I_n_31 : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 505 downto 0 );
  signal DCache_Enabled : STD_LOGIC;
  signal Data_Flow_I_n_100 : STD_LOGIC;
  signal Data_Flow_I_n_101 : STD_LOGIC;
  signal Data_Flow_I_n_102 : STD_LOGIC;
  signal Data_Flow_I_n_103 : STD_LOGIC;
  signal Data_Flow_I_n_104 : STD_LOGIC;
  signal Data_Flow_I_n_105 : STD_LOGIC;
  signal Data_Flow_I_n_106 : STD_LOGIC;
  signal Data_Flow_I_n_107 : STD_LOGIC;
  signal Data_Flow_I_n_108 : STD_LOGIC;
  signal Data_Flow_I_n_109 : STD_LOGIC;
  signal Data_Flow_I_n_118 : STD_LOGIC;
  signal Data_Flow_I_n_119 : STD_LOGIC;
  signal Data_Flow_I_n_14 : STD_LOGIC;
  signal Data_Flow_I_n_150 : STD_LOGIC;
  signal Data_Flow_I_n_184 : STD_LOGIC;
  signal Data_Flow_I_n_185 : STD_LOGIC;
  signal Data_Flow_I_n_186 : STD_LOGIC;
  signal Data_Flow_I_n_187 : STD_LOGIC;
  signal Data_Flow_I_n_188 : STD_LOGIC;
  signal Data_Flow_I_n_263 : STD_LOGIC;
  signal Data_Flow_I_n_264 : STD_LOGIC;
  signal Data_Flow_I_n_265 : STD_LOGIC;
  signal Data_Flow_I_n_266 : STD_LOGIC;
  signal Data_Flow_I_n_267 : STD_LOGIC;
  signal Data_Flow_I_n_268 : STD_LOGIC;
  signal Data_Flow_I_n_269 : STD_LOGIC;
  signal Data_Flow_I_n_270 : STD_LOGIC;
  signal Data_Flow_I_n_271 : STD_LOGIC;
  signal Data_Flow_I_n_272 : STD_LOGIC;
  signal Data_Flow_I_n_273 : STD_LOGIC;
  signal Data_Flow_I_n_274 : STD_LOGIC;
  signal Data_Flow_I_n_275 : STD_LOGIC;
  signal Data_Flow_I_n_276 : STD_LOGIC;
  signal Data_Flow_I_n_277 : STD_LOGIC;
  signal Data_Flow_I_n_47 : STD_LOGIC;
  signal Data_Flow_I_n_48 : STD_LOGIC;
  signal Data_Flow_I_n_49 : STD_LOGIC;
  signal Data_Flow_I_n_84 : STD_LOGIC;
  signal Data_Flow_I_n_90 : STD_LOGIC;
  signal Data_Flow_I_n_91 : STD_LOGIC;
  signal Data_Flow_I_n_92 : STD_LOGIC;
  signal Data_Flow_I_n_93 : STD_LOGIC;
  signal Data_Flow_I_n_94 : STD_LOGIC;
  signal Data_Flow_I_n_95 : STD_LOGIC;
  signal Data_Flow_I_n_96 : STD_LOGIC;
  signal Data_Flow_I_n_97 : STD_LOGIC;
  signal Data_Flow_I_n_98 : STD_LOGIC;
  signal Data_Flow_I_n_99 : STD_LOGIC;
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Decode_I_n_102 : STD_LOGIC;
  signal Decode_I_n_103 : STD_LOGIC;
  signal Decode_I_n_104 : STD_LOGIC;
  signal Decode_I_n_106 : STD_LOGIC;
  signal Decode_I_n_107 : STD_LOGIC;
  signal Decode_I_n_110 : STD_LOGIC;
  signal Decode_I_n_112 : STD_LOGIC;
  signal Decode_I_n_113 : STD_LOGIC;
  signal Decode_I_n_116 : STD_LOGIC;
  signal Decode_I_n_119 : STD_LOGIC;
  signal Decode_I_n_120 : STD_LOGIC;
  signal Decode_I_n_121 : STD_LOGIC;
  signal Decode_I_n_122 : STD_LOGIC;
  signal Decode_I_n_123 : STD_LOGIC;
  signal Decode_I_n_160 : STD_LOGIC;
  signal Decode_I_n_166 : STD_LOGIC;
  signal Decode_I_n_167 : STD_LOGIC;
  signal Decode_I_n_168 : STD_LOGIC;
  signal Decode_I_n_172 : STD_LOGIC;
  signal Decode_I_n_173 : STD_LOGIC;
  signal Decode_I_n_174 : STD_LOGIC;
  signal Decode_I_n_175 : STD_LOGIC;
  signal Decode_I_n_176 : STD_LOGIC;
  signal Decode_I_n_177 : STD_LOGIC;
  signal Decode_I_n_178 : STD_LOGIC;
  signal Decode_I_n_179 : STD_LOGIC;
  signal Decode_I_n_180 : STD_LOGIC;
  signal Decode_I_n_181 : STD_LOGIC;
  signal Decode_I_n_182 : STD_LOGIC;
  signal Decode_I_n_183 : STD_LOGIC;
  signal Decode_I_n_184 : STD_LOGIC;
  signal Decode_I_n_185 : STD_LOGIC;
  signal Decode_I_n_99 : STD_LOGIC;
  signal ICache_Enabled : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_40\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_52\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_53\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_54\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_58\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_59\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_60\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_61\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_62\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_63\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_64\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_65\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_66\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_67\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_68\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_69\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_70\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_71\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_72\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_73\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_74\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_75\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_76\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_77\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_78\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_79\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_80\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_81\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_82\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_83\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_84\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_85\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_86\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_87\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_88\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_89\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_90\ : STD_LOGIC;
  signal \Implement_Debug_Logic.Master_Core.Debug_Area_n_91\ : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 37 downto 0 );
  signal \MSR_Reg_I/MSR_Rst\ : STD_LOGIC;
  signal Not_Barrel_Op : STD_LOGIC;
  signal O : STD_LOGIC;
  signal \Operand_Select_I/Imm_Reg\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\ : STD_LOGIC;
  signal PCMP_Instr2_out : STD_LOGIC;
  signal PC_EX_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal PC_OF : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \Result_Mux_I/data_Read_Mask\ : STD_LOGIC_VECTOR ( 0 to 16 );
  signal S : STD_LOGIC;
  signal S80_out : STD_LOGIC;
  signal S_0 : STD_LOGIC;
  signal \Shift_Logic_Module_I/Enable_2\ : STD_LOGIC;
  signal \Shift_Logic_Module_I/I3\ : STD_LOGIC;
  signal \Shift_Logic_Module_I/Shift_Logic_Res24_out\ : STD_LOGIC;
  signal \Shift_Logic_Module_I/Shift_Logic_Res26_out\ : STD_LOGIC;
  signal \Shift_Logic_Module_I/Shifted\ : STD_LOGIC;
  signal \^sleep\ : STD_LOGIC;
  signal Sleep_Decode : STD_LOGIC;
  signal Sleep_Out : STD_LOGIC;
  signal Unsigned_Op : STD_LOGIC;
  signal \Using_Barrel_Shifter.barrel_shift_I/void_bit\ : STD_LOGIC;
  signal \Using_DCache.Using_WriteThrough.DCache_I1_n_147\ : STD_LOGIC;
  signal \Using_DCache.Using_WriteThrough.DCache_I1_n_149\ : STD_LOGIC;
  signal \Using_DCache.Using_WriteThrough.DCache_I1_n_150\ : STD_LOGIC;
  signal \Using_DCache.Using_WriteThrough.DCache_I1_n_151\ : STD_LOGIC;
  signal \Using_Ext_Databus.DAXI_Interface_I1_n_104\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_ICache.ICache_I1_n_104\ : STD_LOGIC;
  signal \Using_ICache.ICache_I1_n_39\ : STD_LOGIC;
  signal \Using_ICache.ICache_I1_n_40\ : STD_LOGIC;
  signal \Using_ICache.ICache_I1_n_41\ : STD_LOGIC;
  signal Valid_Dcache_Access : STD_LOGIC;
  signal Valid_Instr_i : STD_LOGIC;
  signal Valid_Req0 : STD_LOGIC;
  signal Valid_Req_1st_Cycle0 : STD_LOGIC;
  signal WEB : STD_LOGIC;
  signal Write_Done : STD_LOGIC;
  signal Write_ICache_I : STD_LOGIC;
  signal Write_Resp_Received : STD_LOGIC;
  signal alu_Carry_32 : STD_LOGIC;
  signal alu_Op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal branch_with_delay : STD_LOGIC;
  signal buffer_Addr : STD_LOGIC_VECTOR ( 1 to 3 );
  signal carry_In : STD_LOGIC;
  signal clz_instr : STD_LOGIC;
  signal compare_Instr : STD_LOGIC;
  signal complete_dready : STD_LOGIC;
  signal complete_iready : STD_LOGIC;
  signal data_read_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dbg_brki_hit : STD_LOGIC;
  signal dbg_clean_stop : STD_LOGIC;
  signal dcache_read_idle : STD_LOGIC;
  signal delay_slot_instr : STD_LOGIC;
  signal ex_Result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ex_Valid : STD_LOGIC;
  signal ex_not_mul_op : STD_LOGIC;
  signal extend_Data_Read : STD_LOGIC_VECTOR ( 0 to 31 );
  signal force_stop_cmd_hold : STD_LOGIC;
  signal force_stop_cmd_i : STD_LOGIC;
  signal has_inhibit_EX : STD_LOGIC;
  signal iFetch_In_Progress : STD_LOGIC;
  signal icache_ready : STD_LOGIC;
  signal imm_Instr : STD_LOGIC;
  signal imm_Value : STD_LOGIC_VECTOR ( 0 to 15 );
  signal inHibit_EX : STD_LOGIC;
  signal incoming_data_valid : STD_LOGIC;
  signal instr_ex : STD_LOGIC_VECTOR ( 0 to 31 );
  signal isbyte : STD_LOGIC;
  signal isdoublet : STD_LOGIC;
  signal jump : STD_LOGIC;
  signal last_Valid_Instr_Addr : STD_LOGIC_VECTOR ( 28 to 29 );
  signal \last_Valid_Instr_Addr__0\ : STD_LOGIC_VECTOR ( 0 to 27 );
  signal load_Store_i : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal mem_Strobe : STD_LOGIC;
  signal mem_access : STD_LOGIC;
  signal msr_I : STD_LOGIC_VECTOR ( 28 to 30 );
  signal mux_Instr_Read : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_Pause : STD_LOGIC;
  signal of_PipeRun : STD_LOGIC;
  signal op1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal op2_C : STD_LOGIC_VECTOR ( 24 to 26 );
  signal opsel1_SPR : STD_LOGIC;
  signal p_2_out : STD_LOGIC;
  signal pc_Incr : STD_LOGIC;
  signal pc_Write : STD_LOGIC;
  signal raw_Data_Addr : STD_LOGIC_VECTOR ( 30 to 31 );
  signal raw_Data_Write : STD_LOGIC_VECTOR ( 0 to 23 );
  signal reg1_Addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal reg2_Data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal reg_Test_Equal : STD_LOGIC;
  signal reg_Test_Equal_N : STD_LOGIC;
  signal reg_Write_I : STD_LOGIC;
  signal reg_Write_dbg : STD_LOGIC;
  signal \^reg_write_i\ : STD_LOGIC;
  signal reg_zero : STD_LOGIC;
  signal register_write : STD_LOGIC;
  signal res_Forward1 : STD_LOGIC;
  signal select_Logic : STD_LOGIC;
  signal sext16 : STD_LOGIC;
  signal sext8 : STD_LOGIC;
  signal shift_Logic_Result : STD_LOGIC_VECTOR ( 24 to 25 );
  signal sign_Extend : STD_LOGIC;
  signal trace_reg_write_novalid : STD_LOGIC;
  signal use_Imm_Reg : STD_LOGIC;
  signal valid_Fetch : STD_LOGIC;
  signal valid_cache_hit : STD_LOGIC;
  signal write_Addr : STD_LOGIC_VECTOR ( 2 to 4 );
begin
  D(505 downto 0) <= \^d\(505 downto 0);
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
  LOCKSTEP_Master_Out(37 downto 0) <= \^lockstep_master_out\(37 downto 0);
  Sleep <= \^sleep\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
Byte_Doublet_Handle_I: entity work.design_1_microblaze_1_1_Byte_Doublet_Handle
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]\ => Data_Flow_I_n_14,
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[0]_0\ => Data_Flow_I_n_47,
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(0 to 23) => raw_Data_Write(0 to 23),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(24) => \^d\(414),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(25) => \^d\(413),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(26) => \^d\(412),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(27) => \^d\(411),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(28) => \^d\(410),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(29) => \^d\(409),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(30) => \^d\(408),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[23]\(31) => \^d\(407),
      D(25 downto 0) => \^d\(440 downto 415),
      O => O,
      byte_i_reg => Byte_Doublet_Handle_I_n_31,
      \in\(3 downto 0) => \^d\(403 downto 400),
      isbyte => isbyte,
      isdoublet => isdoublet,
      op1(1) => op1(30),
      op1(0) => op1(31)
    );
Data_Flow_I: entity work.design_1_microblaze_1_1_Data_Flow
     port map (
      Address(0 to 31) => PC_OF(0 to 31),
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Buffer_Addr(2) => buffer_Addr(1),
      Buffer_Addr(1) => buffer_Addr(2),
      Buffer_Addr(0) => buffer_Addr(3),
      \C_reg[28]\ => Decode_I_n_185,
      Clk => Clk,
      D(8) => \^d\(503),
      D(7 downto 0) => \^d\(22 downto 15),
      DCache_Enabled => DCache_Enabled,
      DI => pc_Incr,
      D_0 => \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\,
      D_1 => \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\,
      D_10 => \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\,
      D_11 => \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\,
      D_12 => \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\,
      D_13 => \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\,
      D_14 => \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\,
      D_15 => \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\,
      D_16 => \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\,
      D_17 => \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\,
      D_18 => \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\,
      D_19 => \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\,
      D_2 => \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\,
      D_20 => \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\,
      D_21 => \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\,
      D_22 => \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\,
      D_23 => \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\,
      D_24 => \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\,
      D_25 => \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\,
      D_26 => \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\,
      D_27 => \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\,
      D_28 => \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\,
      D_29 => \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\,
      D_3 => \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\,
      D_30 => \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\,
      D_31 => \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\,
      D_4 => \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\,
      D_5 => \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\,
      D_6 => \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\,
      D_7 => \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\,
      D_8 => \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\,
      D_9 => \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\,
      Data_Write(23) => raw_Data_Write(0),
      Data_Write(22) => raw_Data_Write(1),
      Data_Write(21) => raw_Data_Write(2),
      Data_Write(20) => raw_Data_Write(3),
      Data_Write(19) => raw_Data_Write(4),
      Data_Write(18) => raw_Data_Write(5),
      Data_Write(17) => raw_Data_Write(6),
      Data_Write(16) => raw_Data_Write(7),
      Data_Write(15) => raw_Data_Write(8),
      Data_Write(14) => raw_Data_Write(9),
      Data_Write(13) => raw_Data_Write(10),
      Data_Write(12) => raw_Data_Write(11),
      Data_Write(11) => raw_Data_Write(12),
      Data_Write(10) => raw_Data_Write(13),
      Data_Write(9) => raw_Data_Write(14),
      Data_Write(8) => raw_Data_Write(15),
      Data_Write(7) => raw_Data_Write(16),
      Data_Write(6) => raw_Data_Write(17),
      Data_Write(5) => raw_Data_Write(18),
      Data_Write(4) => raw_Data_Write(19),
      Data_Write(3) => raw_Data_Write(20),
      Data_Write(2) => raw_Data_Write(21),
      Data_Write(1) => raw_Data_Write(22),
      Data_Write(0) => raw_Data_Write(23),
      E(0) => imm_Instr,
      Enable_2 => \Shift_Logic_Module_I/Enable_2\,
      I3 => \Shift_Logic_Module_I/I3\,
      ICache_Enabled => ICache_Enabled,
      IReady => valid_Fetch,
      Instr_Addr => \^d\(502),
      LO => alu_Carry_32,
      MSR_Rst => \MSR_Reg_I/MSR_Rst\,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(29) => Data_Flow_I_n_90,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(28) => Data_Flow_I_n_91,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(27) => Data_Flow_I_n_92,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(26) => Data_Flow_I_n_93,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(25) => Data_Flow_I_n_94,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(24) => Data_Flow_I_n_95,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(23) => Data_Flow_I_n_96,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(22) => Data_Flow_I_n_97,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(21) => Data_Flow_I_n_98,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(20) => Data_Flow_I_n_99,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(19) => Data_Flow_I_n_100,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(18) => Data_Flow_I_n_101,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(17) => Data_Flow_I_n_102,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(16) => Data_Flow_I_n_103,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(15) => Data_Flow_I_n_104,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(14) => Data_Flow_I_n_105,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(13) => Data_Flow_I_n_106,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(12) => Data_Flow_I_n_107,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(11) => Data_Flow_I_n_108,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(10) => Data_Flow_I_n_109,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(9) => ADDRA(0),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(8) => ADDRA(1),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(7) => ADDRA(2),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(6) => ADDRA(3),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(5) => ADDRA(4),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(4) => ADDRA(5),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(3) => ADDRA(6),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(2) => ADDRA(7),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(1) => Data_Flow_I_n_118,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]\(0) => Data_Flow_I_n_119,
      Op1_Shift => Decode_I_n_106,
      PCMP_Instr2_out => PCMP_Instr2_out,
      PC_EX_i(0 to 31) => PC_EX_i(0 to 31),
      PC_Write => pc_Write,
      Q(29) => \last_Valid_Instr_Addr__0\(0),
      Q(28) => \last_Valid_Instr_Addr__0\(1),
      Q(27) => \last_Valid_Instr_Addr__0\(2),
      Q(26) => \last_Valid_Instr_Addr__0\(3),
      Q(25) => \last_Valid_Instr_Addr__0\(4),
      Q(24) => \last_Valid_Instr_Addr__0\(5),
      Q(23) => \last_Valid_Instr_Addr__0\(6),
      Q(22) => \last_Valid_Instr_Addr__0\(7),
      Q(21) => \last_Valid_Instr_Addr__0\(8),
      Q(20) => \last_Valid_Instr_Addr__0\(9),
      Q(19) => \last_Valid_Instr_Addr__0\(10),
      Q(18) => \last_Valid_Instr_Addr__0\(11),
      Q(17) => \last_Valid_Instr_Addr__0\(12),
      Q(16) => \last_Valid_Instr_Addr__0\(13),
      Q(15) => \last_Valid_Instr_Addr__0\(14),
      Q(14) => \last_Valid_Instr_Addr__0\(15),
      Q(13) => \last_Valid_Instr_Addr__0\(16),
      Q(12) => \last_Valid_Instr_Addr__0\(17),
      Q(11) => \last_Valid_Instr_Addr__0\(18),
      Q(10) => \last_Valid_Instr_Addr__0\(19),
      Q(9) => \last_Valid_Instr_Addr__0\(20),
      Q(8) => \last_Valid_Instr_Addr__0\(21),
      Q(7) => \last_Valid_Instr_Addr__0\(22),
      Q(6) => \last_Valid_Instr_Addr__0\(23),
      Q(5) => \last_Valid_Instr_Addr__0\(24),
      Q(4) => \last_Valid_Instr_Addr__0\(25),
      Q(3) => \last_Valid_Instr_Addr__0\(26),
      Q(2) => \last_Valid_Instr_Addr__0\(27),
      Q(1) => last_Valid_Instr_Addr(28),
      Q(0) => last_Valid_Instr_Addr(29),
      Reg2_Data(0 to 31) => reg2_Data(0 to 31),
      Reg_Test_Equal => reg_Test_Equal,
      Reg_Write => \^reg_write_i\,
      Reg_zero => reg_zero,
      SR(0) => \Implement_Debug_Logic.Master_Core.Debug_Area_n_54\,
      Select_Logic => select_Logic,
      Select_Logic_reg => \Shift_Logic_Module_I/Shift_Logic_Res24_out\,
      Sext => \Implement_Debug_Logic.Master_Core.Debug_Area_n_90\,
      Shift_Logic_Res => \Shift_Logic_Module_I/Shift_Logic_Res26_out\,
      Shift_Oper => sign_Extend,
      Shifted => \Shift_Logic_Module_I/Shifted\,
      \Size_17to32.imm_Reg_reg[0]\(15) => Data_Flow_I_n_263,
      \Size_17to32.imm_Reg_reg[0]\(14) => Data_Flow_I_n_264,
      \Size_17to32.imm_Reg_reg[0]\(13) => Data_Flow_I_n_265,
      \Size_17to32.imm_Reg_reg[0]\(12) => Data_Flow_I_n_266,
      \Size_17to32.imm_Reg_reg[0]\(11) => Data_Flow_I_n_267,
      \Size_17to32.imm_Reg_reg[0]\(10) => Data_Flow_I_n_268,
      \Size_17to32.imm_Reg_reg[0]\(9) => Data_Flow_I_n_269,
      \Size_17to32.imm_Reg_reg[0]\(8) => Data_Flow_I_n_270,
      \Size_17to32.imm_Reg_reg[0]\(7) => Data_Flow_I_n_271,
      \Size_17to32.imm_Reg_reg[0]\(6) => Data_Flow_I_n_272,
      \Size_17to32.imm_Reg_reg[0]\(5) => Data_Flow_I_n_273,
      \Size_17to32.imm_Reg_reg[0]\(4) => Data_Flow_I_n_274,
      \Size_17to32.imm_Reg_reg[0]\(3) => Data_Flow_I_n_275,
      \Size_17to32.imm_Reg_reg[0]\(2) => Data_Flow_I_n_276,
      \Size_17to32.imm_Reg_reg[0]\(1) => Data_Flow_I_n_277,
      \Size_17to32.imm_Reg_reg[0]\(0) => \Operand_Select_I/Imm_Reg\,
      Unsigned_Op => Unsigned_Op,
      \Using_BitField.mem_Rd_reg[9]\(2) => write_Addr(2),
      \Using_BitField.mem_Rd_reg[9]\(1) => write_Addr(3),
      \Using_BitField.mem_Rd_reg[9]\(0) => write_Addr(4),
      \Using_FPGA.Native\(13) => op1(0),
      \Using_FPGA.Native\(12) => op1(16),
      \Using_FPGA.Native\(11) => op1(20),
      \Using_FPGA.Native\(10) => op1(21),
      \Using_FPGA.Native\(9) => op1(22),
      \Using_FPGA.Native\(8) => op1(23),
      \Using_FPGA.Native\(7) => op1(24),
      \Using_FPGA.Native\(6) => op1(25),
      \Using_FPGA.Native\(5) => op1(26),
      \Using_FPGA.Native\(4) => op1(27),
      \Using_FPGA.Native\(3) => op1(28),
      \Using_FPGA.Native\(2) => op1(29),
      \Using_FPGA.Native\(1) => op1(30),
      \Using_FPGA.Native\(0) => op1(31),
      \Using_FPGA.Native_0\ => Data_Flow_I_n_14,
      \Using_FPGA.Native_1\ => Data_Flow_I_n_47,
      \Using_FPGA.Native_10\ => \^d\(497),
      \Using_FPGA.Native_11\ => \^d\(496),
      \Using_FPGA.Native_12\ => \^d\(495),
      \Using_FPGA.Native_13\ => \^d\(494),
      \Using_FPGA.Native_14\ => \^d\(493),
      \Using_FPGA.Native_15\ => \^d\(492),
      \Using_FPGA.Native_16\ => \^d\(491),
      \Using_FPGA.Native_17\ => \^d\(490),
      \Using_FPGA.Native_18\ => \^d\(489),
      \Using_FPGA.Native_19\ => \^d\(488),
      \Using_FPGA.Native_2\ => Data_Flow_I_n_48,
      \Using_FPGA.Native_20\ => \^d\(487),
      \Using_FPGA.Native_21\(13 downto 0) => \^d\(486 downto 473),
      \Using_FPGA.Native_22\(4) => Data_Flow_I_n_184,
      \Using_FPGA.Native_22\(3) => Data_Flow_I_n_185,
      \Using_FPGA.Native_22\(2) => Data_Flow_I_n_186,
      \Using_FPGA.Native_22\(1) => Data_Flow_I_n_187,
      \Using_FPGA.Native_22\(0) => Data_Flow_I_n_188,
      \Using_FPGA.Native_23\(41 downto 40) => \^d\(472 downto 471),
      \Using_FPGA.Native_23\(39 downto 32) => \^d\(414 downto 407),
      \Using_FPGA.Native_23\(31 downto 0) => \^d\(112 downto 81),
      \Using_FPGA.Native_24\(1) => shift_Logic_Result(24),
      \Using_FPGA.Native_24\(0) => shift_Logic_Result(25),
      \Using_FPGA.Native_25\ => Decode_I_n_172,
      \Using_FPGA.Native_26\ => Decode_I_n_173,
      \Using_FPGA.Native_27\ => Decode_I_n_174,
      \Using_FPGA.Native_28\ => Decode_I_n_175,
      \Using_FPGA.Native_29\ => Decode_I_n_176,
      \Using_FPGA.Native_3\ => Data_Flow_I_n_49,
      \Using_FPGA.Native_30\ => Decode_I_n_177,
      \Using_FPGA.Native_31\ => Decode_I_n_104,
      \Using_FPGA.Native_32\ => Decode_I_n_102,
      \Using_FPGA.Native_33\ => Decode_I_n_178,
      \Using_FPGA.Native_34\ => Decode_I_n_112,
      \Using_FPGA.Native_35\ => Decode_I_n_180,
      \Using_FPGA.Native_36\ => Decode_I_n_103,
      \Using_FPGA.Native_37\ => Decode_I_n_119,
      \Using_FPGA.Native_38\ => Decode_I_n_160,
      \Using_FPGA.Native_39\ => Decode_I_n_179,
      \Using_FPGA.Native_4\(1) => op2_C(24),
      \Using_FPGA.Native_4\(0) => op2_C(26),
      \Using_FPGA.Native_40\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_52\,
      \Using_FPGA.Native_41\ => Decode_I_n_99,
      \Using_FPGA.Native_42\ => Decode_I_n_107,
      \Using_FPGA.Native_43\ => Decode_I_n_168,
      \Using_FPGA.Native_5\ => Data_Flow_I_n_84,
      \Using_FPGA.Native_6\ => \^d\(501),
      \Using_FPGA.Native_7\ => \^d\(500),
      \Using_FPGA.Native_8\ => \^d\(499),
      \Using_FPGA.Native_9\ => \^d\(498),
      \Using_FPGA.Native_i_1__74\ => Decode_I_n_166,
      \Using_FPGA.Native_i_5__1\ => \^using_fpga.native_0\,
      Valid_Req0 => Valid_Req0,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      carry_In => carry_In,
      clz_instr => clz_instr,
      compare_Instr => compare_Instr,
      data_Read_Mask(1) => \Result_Mux_I/data_Read_Mask\(0),
      data_Read_Mask(0) => \Result_Mux_I/data_Read_Mask\(16),
      \data_rd_reg_reg[30]\ => \^lockstep_master_out\(34),
      \data_rd_reg_reg[30]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_40\,
      ex_Result(0 to 31) => ex_Result(0 to 31),
      ex_not_mul_op => ex_not_mul_op,
      extend_Data_Read(0 to 31) => extend_Data_Read(0 to 31),
      imm_Value(0 to 15) => imm_Value(0 to 15),
      \in\(31 downto 2) => \^d\(470 downto 441),
      \in\(1) => raw_Data_Addr(30),
      \in\(0) => raw_Data_Addr(31),
      in0 => Decode_I_n_167,
      instr_ex(6) => instr_ex(0),
      instr_ex(5) => instr_ex(1),
      instr_ex(4) => instr_ex(4),
      instr_ex(3) => instr_ex(5),
      instr_ex(2) => instr_ex(6),
      instr_ex(1) => instr_ex(7),
      instr_ex(0) => instr_ex(22),
      jump => jump,
      lopt => lopt,
      lopt_1 => op1(31),
      lopt_2 => lopt_1,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => lopt_4,
      lopt_6 => lopt_5,
      lopt_7 => lopt_6,
      lopt_8 => lopt_7,
      msr_I(2) => msr_I(28),
      msr_I(1) => msr_I(29),
      msr_I(0) => msr_I(30),
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg_Test_Equal_N => reg_Test_Equal_N,
      register_write => register_write,
      res_Forward1 => res_Forward1,
      sext16 => sext16,
      sext8 => sext8,
      sync_reset => sync_reset,
      valid_Req_XX_i_4 => Data_Flow_I_n_150,
      void_bit => \Using_Barrel_Shifter.barrel_shift_I/void_bit\
    );
Decode_I: entity work.design_1_microblaze_1_1_Decode
     port map (
      \Area_Debug_Control.dbg_brki_hit_reg\ => Decode_I_n_120,
      BitField_Extract => BitField_Extract,
      BitField_Insert => BitField_Insert,
      Buffer_Addr(2) => buffer_Addr(1),
      Buffer_Addr(1) => buffer_Addr(2),
      Buffer_Addr(0) => buffer_Addr(3),
      Clk => Clk,
      D(6 downto 5) => \^d\(504 downto 503),
      D(4 downto 2) => \^d\(406 downto 404),
      D(1) => \^d\(156),
      D(0) => \^d\(123),
      DI => pc_Incr,
      D_0 => \Operand_Select_I/OpSelect_Bits[31].Operand_Select_Bit_I/D\,
      D_1 => \Operand_Select_I/OpSelect_Bits[30].Operand_Select_Bit_I/D\,
      D_10 => \Operand_Select_I/OpSelect_Bits[21].Operand_Select_Bit_I/D\,
      D_11 => \Operand_Select_I/OpSelect_Bits[20].Operand_Select_Bit_I/D\,
      D_12 => \Operand_Select_I/OpSelect_Bits[19].Operand_Select_Bit_I/D\,
      D_13 => \Operand_Select_I/OpSelect_Bits[18].Operand_Select_Bit_I/D\,
      D_14 => \Operand_Select_I/OpSelect_Bits[17].Operand_Select_Bit_I/D\,
      D_15 => \Operand_Select_I/OpSelect_Bits[16].Operand_Select_Bit_I/D\,
      D_16 => \Operand_Select_I/OpSelect_Bits[15].Operand_Select_Bit_I/D\,
      D_17 => \Operand_Select_I/OpSelect_Bits[14].Operand_Select_Bit_I/D\,
      D_18 => \Operand_Select_I/OpSelect_Bits[13].Operand_Select_Bit_I/D\,
      D_19 => \Operand_Select_I/OpSelect_Bits[12].Operand_Select_Bit_I/D\,
      D_2 => \Operand_Select_I/OpSelect_Bits[29].Operand_Select_Bit_I/D\,
      D_20 => \Operand_Select_I/OpSelect_Bits[11].Operand_Select_Bit_I/D\,
      D_21 => \Operand_Select_I/OpSelect_Bits[10].Operand_Select_Bit_I/D\,
      D_22 => \Operand_Select_I/OpSelect_Bits[9].Operand_Select_Bit_I/D\,
      D_23 => \Operand_Select_I/OpSelect_Bits[8].Operand_Select_Bit_I/D\,
      D_24 => \Operand_Select_I/OpSelect_Bits[7].Operand_Select_Bit_I/D\,
      D_25 => \Operand_Select_I/OpSelect_Bits[6].Operand_Select_Bit_I/D\,
      D_26 => \Operand_Select_I/OpSelect_Bits[5].Operand_Select_Bit_I/D\,
      D_27 => \Operand_Select_I/OpSelect_Bits[4].Operand_Select_Bit_I/D\,
      D_28 => \Operand_Select_I/OpSelect_Bits[3].Operand_Select_Bit_I/D\,
      D_29 => \Operand_Select_I/OpSelect_Bits[2].Operand_Select_Bit_I/D\,
      D_3 => \Operand_Select_I/OpSelect_Bits[28].Operand_Select_Bit_I/D\,
      D_30 => \Operand_Select_I/OpSelect_Bits[1].Operand_Select_Bit_I/D\,
      D_31 => \Operand_Select_I/OpSelect_Bits[0].Operand_Select_Bit_I/D\,
      D_4 => \Operand_Select_I/OpSelect_Bits[27].Operand_Select_Bit_I/D\,
      D_5 => \Operand_Select_I/OpSelect_Bits[26].Operand_Select_Bit_I/D\,
      D_6 => \Operand_Select_I/OpSelect_Bits[25].Operand_Select_Bit_I/D\,
      D_7 => \Operand_Select_I/OpSelect_Bits[24].Operand_Select_Bit_I/D\,
      D_8 => \Operand_Select_I/OpSelect_Bits[23].Operand_Select_Bit_I/D\,
      D_9 => \Operand_Select_I/OpSelect_Bits[22].Operand_Select_Bit_I/D\,
      E(0) => imm_Instr,
      Enable_2 => \Shift_Logic_Module_I/Enable_2\,
      Hibernate => Hibernate,
      I3 => \Shift_Logic_Module_I/I3\,
      IReady => valid_Fetch,
      LO => alu_Carry_32,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(37),
      MSR_Rst => \MSR_Reg_I/MSR_Rst\,
      \No_XX_Accesses4.valid_cache_hit_reg\(2) => DCache_Enabled,
      \No_XX_Accesses4.valid_cache_hit_reg\(1) => msr_I(28),
      \No_XX_Accesses4.valid_cache_hit_reg\(0) => msr_I(29),
      Not_Barrel_Op => Not_Barrel_Op,
      Op1_Shift => Decode_I_n_106,
      PCMP_Instr2_out => PCMP_Instr2_out,
      PC_Write => pc_Write,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Pause_Ack_reg_0 => \Using_DCache.Using_WriteThrough.DCache_I1_n_150\,
      Q(0) => \Implement_Debug_Logic.Master_Core.Debug_Area_n_91\,
      Reg2_Data(0 to 31) => reg2_Data(0 to 31),
      Reg_Test_Equal => reg_Test_Equal,
      Reg_zero => reg_zero,
      S80_out => S80_out,
      Select_Logic => select_Logic,
      \Serial_Dbg_Intf.control_reg_reg[8]\ => Decode_I_n_121,
      Shift_Logic_Res => \Shift_Logic_Module_I/Shift_Logic_Res26_out\,
      Shift_Oper => sign_Extend,
      Shifted => \Shift_Logic_Module_I/Shifted\,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Suspend => Suspend,
      Unsigned_Op => Unsigned_Op,
      \Use_Async_Reset.sync_reset_reg\ => Decode_I_n_112,
      \Use_The_PCMP_instr.CLZ_Instr_reg_0\(1) => shift_Logic_Result(24),
      \Use_The_PCMP_instr.CLZ_Instr_reg_0\(0) => shift_Logic_Result(25),
      \Use_The_PCMP_instr.CLZ_Instr_reg_1\ => Decode_I_n_166,
      \Use_The_PCMP_instr.PCMP_Instr_reg_0\ => Decode_I_n_160,
      \Use_The_PCMP_instr.PCMP_Instr_reg_1\ => Decode_I_n_172,
      \Use_The_PCMP_instr.PCMP_Instr_reg_2\ => Decode_I_n_174,
      \Use_The_PCMP_instr.PCMP_Instr_reg_3\ => Decode_I_n_176,
      \Using_Barrel_Shifter.BitField_Extract_reg_0\ => Decode_I_n_185,
      \Using_FPGA.Native\ => Decode_I_n_102,
      \Using_FPGA.Native_0\ => Decode_I_n_103,
      \Using_FPGA.Native_1\ => Decode_I_n_104,
      \Using_FPGA.Native_10\ => Decode_I_n_177,
      \Using_FPGA.Native_11\ => Decode_I_n_178,
      \Using_FPGA.Native_12\ => Decode_I_n_180,
      \Using_FPGA.Native_13\ => Decode_I_n_181,
      \Using_FPGA.Native_14\ => Decode_I_n_184,
      \Using_FPGA.Native_15\ => Data_Flow_I_n_84,
      \Using_FPGA.Native_16\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_17\ => Data_Flow_I_n_49,
      \Using_FPGA.Native_18\ => Data_Flow_I_n_47,
      \Using_FPGA.Native_19\(1) => op2_C(24),
      \Using_FPGA.Native_19\(0) => op2_C(26),
      \Using_FPGA.Native_2\ => Decode_I_n_107,
      \Using_FPGA.Native_20\ => Data_Flow_I_n_48,
      \Using_FPGA.Native_21\ => \Shift_Logic_Module_I/Shift_Logic_Res24_out\,
      \Using_FPGA.Native_22\(15) => Data_Flow_I_n_263,
      \Using_FPGA.Native_22\(14) => Data_Flow_I_n_264,
      \Using_FPGA.Native_22\(13) => Data_Flow_I_n_265,
      \Using_FPGA.Native_22\(12) => Data_Flow_I_n_266,
      \Using_FPGA.Native_22\(11) => Data_Flow_I_n_267,
      \Using_FPGA.Native_22\(10) => Data_Flow_I_n_268,
      \Using_FPGA.Native_22\(9) => Data_Flow_I_n_269,
      \Using_FPGA.Native_22\(8) => Data_Flow_I_n_270,
      \Using_FPGA.Native_22\(7) => Data_Flow_I_n_271,
      \Using_FPGA.Native_22\(6) => Data_Flow_I_n_272,
      \Using_FPGA.Native_22\(5) => Data_Flow_I_n_273,
      \Using_FPGA.Native_22\(4) => Data_Flow_I_n_274,
      \Using_FPGA.Native_22\(3) => Data_Flow_I_n_275,
      \Using_FPGA.Native_22\(2) => Data_Flow_I_n_276,
      \Using_FPGA.Native_22\(1) => Data_Flow_I_n_277,
      \Using_FPGA.Native_22\(0) => \Operand_Select_I/Imm_Reg\,
      \Using_FPGA.Native_3\(0) => mem_Strobe,
      \Using_FPGA.Native_4\ => Decode_I_n_119,
      \Using_FPGA.Native_5\ => Decode_I_n_122,
      \Using_FPGA.Native_6\ => Decode_I_n_123,
      \Using_FPGA.Native_7\ => Decode_I_n_168,
      \Using_FPGA.Native_8\ => Decode_I_n_173,
      \Using_FPGA.Native_9\ => Decode_I_n_175,
      \Using_LWX_SWX_instr.reservation_reg_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_52\,
      \Using_MSR_Instr.MSRclr_Instr_i_reg_0\ => Decode_I_n_179,
      Valid_Instr_i => Valid_Instr_i,
      Valid_Req0 => Valid_Req0,
      Valid_Req_1st_Cycle0 => Valid_Req_1st_Cycle0,
      WEBWE(0) => WEB,
      Write_Done => Write_Done,
      Write_ICache_I => Write_ICache_I,
      Write_Resp_Received => Write_Resp_Received,
      alu_Op(0 to 1) => alu_Op(0 to 1),
      branch_with_delay => branch_with_delay,
      carry_In => carry_In,
      clz_instr => clz_instr,
      compare_Instr => compare_Instr,
      complete_dready => complete_dready,
      complete_iready => complete_iready,
      d_AS_I_reg_0 => Decode_I_n_113,
      d_AS_I_reg_1 => Decode_I_n_182,
      data_Read_Mask(1) => \Result_Mux_I/data_Read_Mask\(0),
      data_Read_Mask(0) => \Result_Mux_I/data_Read_Mask\(16),
      dbg_brki_hit => dbg_brki_hit,
      dbg_clean_stop => dbg_clean_stop,
      dcache_read_idle => dcache_read_idle,
      delay_slot_instr_reg => \^lockstep_master_out\(34),
      ex_Result(0 to 31) => ex_Result(0 to 31),
      ex_Valid => ex_Valid,
      ex_not_mul_op => ex_not_mul_op,
      force_stop_cmd_hold => force_stop_cmd_hold,
      force_stop_cmd_i => force_stop_cmd_i,
      has_inhibit_EX => has_inhibit_EX,
      hibernate_i_reg_0 => \Using_ICache.ICache_I1_n_104\,
      iFetch_In_Progress => iFetch_In_Progress,
      iFetch_In_Progress_reg_0 => \Implement_Debug_Logic.Master_Core.Debug_Area_n_53\,
      imm_Value(0 to 15) => imm_Value(0 to 15),
      in0 => Decode_I_n_167,
      inHibit_EX => inHibit_EX,
      inHibit_EX_reg_0 => Decode_I_n_116,
      incoming_data_valid => incoming_data_valid,
      instr_ex(27) => instr_ex(0),
      instr_ex(26) => instr_ex(1),
      instr_ex(25) => instr_ex(2),
      instr_ex(24) => instr_ex(3),
      instr_ex(23) => instr_ex(4),
      instr_ex(22) => instr_ex(5),
      instr_ex(21) => instr_ex(6),
      instr_ex(20) => instr_ex(7),
      instr_ex(19) => instr_ex(11),
      instr_ex(18) => instr_ex(12),
      instr_ex(17) => instr_ex(13),
      instr_ex(16) => instr_ex(14),
      instr_ex(15) => instr_ex(15),
      instr_ex(14) => instr_ex(16),
      instr_ex(13) => instr_ex(17),
      instr_ex(12) => instr_ex(18),
      instr_ex(11) => instr_ex(19),
      instr_ex(10) => instr_ex(20),
      instr_ex(9) => instr_ex(21),
      instr_ex(8) => instr_ex(22),
      instr_ex(7) => instr_ex(23),
      instr_ex(6) => instr_ex(24),
      instr_ex(5) => instr_ex(25),
      instr_ex(4) => instr_ex(26),
      instr_ex(3) => instr_ex(27),
      instr_ex(2) => instr_ex(28),
      instr_ex(1) => instr_ex(29),
      instr_ex(0) => instr_ex(31),
      isbyte => isbyte,
      isdoublet => isdoublet,
      jump => jump,
      load_Store_i => load_Store_i,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_12,
      lopt_11 => lopt_13,
      lopt_12 => lopt_14,
      lopt_13 => lopt_15,
      lopt_14 => lopt_16,
      lopt_15 => lopt_17,
      lopt_16 => lopt_18,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_10,
      lopt_9 => lopt_11,
      mbar_first_reg_0 => \Using_DCache.Using_WriteThrough.DCache_I1_n_151\,
      mbar_first_reg_1 => \Using_ICache.ICache_I1_n_40\,
      mbar_first_reg_2 => \Using_ICache.ICache_I1_n_41\,
      mem_access => mem_access,
      mtsmsr_write_i_reg_0 => Decode_I_n_99,
      mux_Instr_Read(0 to 31) => mux_Instr_Read(0 to 31),
      of_Pause => of_Pause,
      of_PipeRun => of_PipeRun,
      opsel1_SPR => opsel1_SPR,
      p_2_out => p_2_out,
      read_access_reg => \Using_DCache.Using_WriteThrough.DCache_I1_n_149\,
      reg1_Addr(0 to 4) => reg1_Addr(0 to 4),
      reg_Test_Equal_N => reg_Test_Equal_N,
      reg_Write_I => reg_Write_I,
      reg_Write_dbg => reg_Write_dbg,
      res_Forward1 => res_Forward1,
      reset_delay_reg_0 => Decode_I_n_110,
      sext16 => sext16,
      sext8 => sext8,
      sync_reset => sync_reset,
      trace_reg_write_novalid => trace_reg_write_novalid,
      use_Imm_Reg => use_Imm_Reg,
      using_Imm_reg_0 => \^using_fpga.native\,
      valid_cache_hit => valid_cache_hit,
      void_bit => \Using_Barrel_Shifter.barrel_shift_I/void_bit\,
      \void_bit16_reg[15]\(5) => op1(0),
      \void_bit16_reg[15]\(4) => op1(16),
      \void_bit16_reg[15]\(3) => op1(24),
      \void_bit16_reg[15]\(2) => op1(28),
      \void_bit16_reg[15]\(1) => op1(29),
      \void_bit16_reg[15]\(0) => op1(31),
      wakeup_i(0 to 1) => wakeup_i(0 to 1),
      wic_first_reg_0 => \Using_ICache.ICache_I1_n_39\,
      \write_Addr_I_reg[2]_0\(2) => write_Addr(2),
      \write_Addr_I_reg[2]_0\(1) => write_Addr(3),
      \write_Addr_I_reg[2]_0\(0) => write_Addr(4),
      write_access_reg => \Using_DCache.Using_WriteThrough.DCache_I1_n_147\,
      writing_reg_0 => Decode_I_n_183
    );
\Implement_Debug_Logic.Master_Core.Debug_Area\: entity work.design_1_microblaze_1_1_Debug
     port map (
      Address(0 to 31) => PC_OF(0 to 31),
      \Area_Debug_Control.dbg_brki_hit_reg_0\ => Decode_I_n_120,
      \Area_Debug_Control.mb_halted_i_reg_0\(0) => \^d\(505),
      \Area_Debug_Control.normal_stop_cmd_hold_reg_0\ => Decode_I_n_116,
      Clk => Clk,
      D(0) => delay_slot_instr,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_1_sp_1 => Dbg_Reg_En_1_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_0,
      Dbg_TDO_1 => Dbg_TDO_1,
      Dbg_TDO_2 => Dbg_TDO_2,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(36 downto 0) => \^lockstep_master_out\(36 downto 0),
      Not_Barrel_Op => Not_Barrel_Op,
      PC_EX_i(26) => PC_EX_i(0),
      PC_EX_i(25) => PC_EX_i(1),
      PC_EX_i(24) => PC_EX_i(2),
      PC_EX_i(23) => PC_EX_i(3),
      PC_EX_i(22) => PC_EX_i(4),
      PC_EX_i(21) => PC_EX_i(5),
      PC_EX_i(20) => PC_EX_i(6),
      PC_EX_i(19) => PC_EX_i(7),
      PC_EX_i(18) => PC_EX_i(8),
      PC_EX_i(17) => PC_EX_i(9),
      PC_EX_i(16) => PC_EX_i(10),
      PC_EX_i(15) => PC_EX_i(11),
      PC_EX_i(14) => PC_EX_i(12),
      PC_EX_i(13) => PC_EX_i(13),
      PC_EX_i(12) => PC_EX_i(14),
      PC_EX_i(11) => PC_EX_i(15),
      PC_EX_i(10) => PC_EX_i(16),
      PC_EX_i(9) => PC_EX_i(17),
      PC_EX_i(8) => PC_EX_i(18),
      PC_EX_i(7) => PC_EX_i(19),
      PC_EX_i(6) => PC_EX_i(20),
      PC_EX_i(5) => PC_EX_i(21),
      PC_EX_i(4) => PC_EX_i(22),
      PC_EX_i(3) => PC_EX_i(23),
      PC_EX_i(2) => PC_EX_i(25),
      PC_EX_i(1) => PC_EX_i(27),
      PC_EX_i(0) => PC_EX_i(31),
      Pause => Pause,
      Q(0) => \Implement_Debug_Logic.Master_Core.Debug_Area_n_91\,
      Reg_Write => \^reg_write_i\,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      S => S,
      S80_out => S80_out,
      SR(0) => \Implement_Debug_Logic.Master_Core.Debug_Area_n_54\,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_89\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_79\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_78\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_77\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_76\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_75\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_74\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_73\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_72\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_71\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_70\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_88\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_69\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_68\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_67\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_66\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_65\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_64\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_63\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_62\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_61\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_60\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_87\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_59\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_58\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_86\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_85\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_84\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_83\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_82\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_81\,
      \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]_0\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_80\,
      \Serial_Dbg_Intf.status_reg_reg[22]_0\(0) => mem_Strobe,
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(28) => \^d\(504),
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(27) => \^d\(156),
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(26 downto 3) => \^d\(112 downto 89),
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(2) => \^d\(87),
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(1) => \^d\(85),
      \Serial_Dbg_Intf.status_reg_reg[25]_0\(0) => \^d\(81),
      Sext => \Implement_Debug_Logic.Master_Core.Debug_Area_n_90\,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Status_Reg_En => Status_Reg_En,
      \Use_Async_Reset.sync_reset_reg\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_53\,
      \Using_BitField.mem_Rd_reg[9]\ => Decode_I_n_110,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_52\,
      \Using_FPGA.Native_2\ => Decode_I_n_123,
      \Using_FPGA.Native_3\ => Decode_I_n_122,
      \Using_FPGA.Native_4\ => Decode_I_n_121,
      \Using_FPGA.Native_5\(0) => op1(24),
      Valid_Instr_i => Valid_Instr_i,
      branch_with_delay => branch_with_delay,
      \data_rd_reg_reg[24]_0\(4) => Data_Flow_I_n_184,
      \data_rd_reg_reg[24]_0\(3) => Data_Flow_I_n_185,
      \data_rd_reg_reg[24]_0\(2) => Data_Flow_I_n_186,
      \data_rd_reg_reg[24]_0\(1) => Data_Flow_I_n_187,
      \data_rd_reg_reg[24]_0\(0) => Data_Flow_I_n_188,
      dbg_brki_hit => dbg_brki_hit,
      dbg_clean_stop => dbg_clean_stop,
      delay_slot_instr_reg_0 => Decode_I_n_168,
      ex_Valid => ex_Valid,
      force_stop_cmd_hold => force_stop_cmd_hold,
      force_stop_cmd_i => force_stop_cmd_i,
      has_inhibit_EX => has_inhibit_EX,
      inHibit_EX => inHibit_EX,
      jump => jump,
      of_Pause => of_Pause,
      of_PipeRun => of_PipeRun,
      p_2_out => p_2_out,
      read_register_MSR_1_reg_0 => \Implement_Debug_Logic.Master_Core.Debug_Area_n_40\,
      reg_Write_dbg => reg_Write_dbg,
      register_write => register_write,
      sext8 => sext8,
      sync_reset => sync_reset,
      use_Imm_Reg => use_Imm_Reg,
      wakeup_i(0 to 1) => wakeup_i(0 to 1)
    );
\Using_DCache.Using_WriteThrough.DCache_I1\: entity work.design_1_microblaze_1_1_DCache
     port map (
      Clk => Clk,
      D(31 downto 0) => \^d\(438 downto 407),
      DOADO(31) => data_read_i(0),
      DOADO(30) => data_read_i(1),
      DOADO(29) => data_read_i(2),
      DOADO(28) => data_read_i(3),
      DOADO(27) => data_read_i(4),
      DOADO(26) => data_read_i(5),
      DOADO(25) => data_read_i(6),
      DOADO(24) => data_read_i(7),
      DOADO(23) => data_read_i(8),
      DOADO(22) => data_read_i(9),
      DOADO(21) => data_read_i(10),
      DOADO(20) => data_read_i(11),
      DOADO(19) => data_read_i(12),
      DOADO(18) => data_read_i(13),
      DOADO(17) => data_read_i(14),
      DOADO(16) => data_read_i(15),
      DOADO(15) => data_read_i(16),
      DOADO(14) => data_read_i(17),
      DOADO(13) => data_read_i(18),
      DOADO(12) => data_read_i(19),
      DOADO(11) => data_read_i(20),
      DOADO(10) => data_read_i(21),
      DOADO(9) => data_read_i(22),
      DOADO(8) => data_read_i(23),
      DOADO(7) => data_read_i(24),
      DOADO(6) => data_read_i(25),
      DOADO(5) => data_read_i(26),
      DOADO(4) => data_read_i(27),
      DOADO(3) => data_read_i(28),
      DOADO(2) => data_read_i(29),
      DOADO(1) => data_read_i(30),
      DOADO(0) => data_read_i(31),
      M_AXI_DC_ARREADY => M_AXI_DC_ARREADY,
      M_AXI_DC_AWREADY => M_AXI_DC_AWREADY,
      M_AXI_DC_BVALID => M_AXI_DC_BVALID,
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      M_AXI_DC_RLAST => M_AXI_DC_RLAST,
      M_AXI_DC_RVALID => M_AXI_DC_RVALID,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      \No_XX_Accesses4.valid_cache_hit_reg_0\ => Decode_I_n_184,
      Pause_Ack_reg => \^using_fpga.native_0\,
      S => S_0,
      Trace_Cache_Rdy_reg_0 => \Using_Ext_Databus.DAXI_Interface_I1_n_104\,
      \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\(107 downto 38) => \^d\(293 downto 224),
      \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\(37 downto 4) => \^d\(222 downto 189),
      \Using_AXI.Use_AXI_Write.aw_read_fifo_addr_reg[3]\(3 downto 0) => \^d\(7 downto 4),
      \Using_AXI.Use_AXI_Write.aw_w_fifo_exist_reg\ => \^d\(223),
      \Using_AXI.Use_AXI_Write.write_resp_received_i_reg\ => \Using_DCache.Using_WriteThrough.DCache_I1_n_151\,
      \Using_FPGA.Native\(7) => op1(20),
      \Using_FPGA.Native\(6) => op1(21),
      \Using_FPGA.Native\(5) => op1(22),
      \Using_FPGA.Native\(4) => op1(23),
      \Using_FPGA.Native\(3) => op1(24),
      \Using_FPGA.Native\(2) => op1(25),
      \Using_FPGA.Native\(1) => op1(26),
      \Using_FPGA.Native\(0) => op1(27),
      \Using_New_CacheInterface_for_AXI.update_idle_1_reg_0\ => \Using_DCache.Using_WriteThrough.DCache_I1_n_150\,
      Valid_Dcache_Access => Valid_Dcache_Access,
      Valid_Req0 => Valid_Req0,
      Valid_Req_1st_Cycle0 => Valid_Req_1st_Cycle0,
      WEBWE(0) => WEB,
      Write_Done => Write_Done,
      Write_Resp_Received => Write_Resp_Received,
      Write_Strobe_i_reg_0 => Decode_I_n_113,
      complete_dready => complete_dready,
      dcache_read_idle => dcache_read_idle,
      \in\(31 downto 2) => \^d\(470 downto 441),
      \in\(1) => raw_Data_Addr(30),
      \in\(0) => raw_Data_Addr(31),
      incoming_data_valid => incoming_data_valid,
      load_Store_i => load_Store_i,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      lopt_2 => lopt_18,
      of_Pause => of_Pause,
      read_access_reg_0 => \Using_DCache.Using_WriteThrough.DCache_I1_n_149\,
      read_access_reg_1 => Decode_I_n_183,
      sync_reset => sync_reset,
      valid_cache_hit => valid_cache_hit,
      valid_req_XX_reg_0(4) => \^d\(406),
      valid_req_XX_reg_0(3 downto 0) => \^d\(403 downto 400),
      write_access_reg_0 => \Using_DCache.Using_WriteThrough.DCache_I1_n_147\,
      write_access_reg_1 => Decode_I_n_182
    );
\Using_Ext_Databus.DAXI_Interface_I1\: entity work.design_1_microblaze_1_1_DAXI_interface
     port map (
      \Add_Output_DFFs.M_AXI_DP_AWADDR_reg[31]_0\(31 downto 0) => \^d\(470 downto 439),
      \Add_Output_DFFs.M_AXI_DP_WDATA_i_reg[31]_0\(31 downto 0) => \^d\(438 downto 407),
      \Add_Output_DFFs.M_AXI_DP_WSTRB_i_reg[3]_0\(3 downto 0) => \^d\(403 downto 400),
      Clk => Clk,
      D(70 downto 0) => \^d\(399 downto 329),
      DOADO(31) => data_read_i(0),
      DOADO(30) => data_read_i(1),
      DOADO(29) => data_read_i(2),
      DOADO(28) => data_read_i(3),
      DOADO(27) => data_read_i(4),
      DOADO(26) => data_read_i(5),
      DOADO(25) => data_read_i(6),
      DOADO(24) => data_read_i(7),
      DOADO(23) => data_read_i(8),
      DOADO(22) => data_read_i(9),
      DOADO(21) => data_read_i(10),
      DOADO(20) => data_read_i(11),
      DOADO(19) => data_read_i(12),
      DOADO(18) => data_read_i(13),
      DOADO(17) => data_read_i(14),
      DOADO(16) => data_read_i(15),
      DOADO(15) => data_read_i(16),
      DOADO(14) => data_read_i(17),
      DOADO(13) => data_read_i(18),
      DOADO(12) => data_read_i(19),
      DOADO(11) => data_read_i(20),
      DOADO(10) => data_read_i(21),
      DOADO(9) => data_read_i(22),
      DOADO(8) => data_read_i(23),
      DOADO(7) => data_read_i(24),
      DOADO(6) => data_read_i(25),
      DOADO(5) => data_read_i(26),
      DOADO(4) => data_read_i(27),
      DOADO(3) => data_read_i(28),
      DOADO(2) => data_read_i(29),
      DOADO(1) => data_read_i(30),
      DOADO(0) => data_read_i(31),
      DReady => DReady,
      DReady_0 => \Using_Ext_Databus.DAXI_Interface_I1_n_104\,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(37),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWVALID_i_reg_0(0) => \^d\(404),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      O => O,
      S => S_0,
      \Using_FPGA.Native\ => Byte_Doublet_Handle_I_n_31,
      Valid_Dcache_Access => Valid_Dcache_Access,
      complete_dready => complete_dready,
      extend_Data_Read(0 to 31) => extend_Data_Read(0 to 31),
      mem_access => mem_access,
      sync_reset => sync_reset
    );
\Using_Ext_Databus.mem_access_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Decode_I_n_181,
      Q => mem_access,
      R => sync_reset
    );
\Using_ICache.ICache_I1\: entity work.design_1_microblaze_1_1_Icache
     port map (
      Clk => Clk,
      D(29) => Data_Flow_I_n_90,
      D(28) => Data_Flow_I_n_91,
      D(27) => Data_Flow_I_n_92,
      D(26) => Data_Flow_I_n_93,
      D(25) => Data_Flow_I_n_94,
      D(24) => Data_Flow_I_n_95,
      D(23) => Data_Flow_I_n_96,
      D(22) => Data_Flow_I_n_97,
      D(21) => Data_Flow_I_n_98,
      D(20) => Data_Flow_I_n_99,
      D(19) => Data_Flow_I_n_100,
      D(18) => Data_Flow_I_n_101,
      D(17) => Data_Flow_I_n_102,
      D(16) => Data_Flow_I_n_103,
      D(15) => Data_Flow_I_n_104,
      D(14) => Data_Flow_I_n_105,
      D(13) => Data_Flow_I_n_106,
      D(12) => Data_Flow_I_n_107,
      D(11) => Data_Flow_I_n_108,
      D(10) => Data_Flow_I_n_109,
      D(9) => ADDRA(0),
      D(8) => ADDRA(1),
      D(7) => ADDRA(2),
      D(6) => ADDRA(3),
      D(5) => ADDRA(4),
      D(4) => ADDRA(5),
      D(3) => ADDRA(6),
      D(2) => ADDRA(7),
      D(1) => Data_Flow_I_n_118,
      D(0) => Data_Flow_I_n_119,
      \FSM_sequential_cache_state_reg[1]_0\ => \Using_ICache.ICache_I1_n_40\,
      IReady => IReady,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(35),
      M_AXI_IC_ARREADY => M_AXI_IC_ARREADY,
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      M_AXI_IC_RLAST => M_AXI_IC_RLAST,
      M_AXI_IC_RVALID => M_AXI_IC_RVALID,
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_0\(0) => \^d\(503),
      \Not_Using_TLBS.last_Valid_Instr_Addr_reg[0]_1\(29 downto 0) => \^d\(502 downto 473),
      Q(29) => \last_Valid_Instr_Addr__0\(0),
      Q(28) => \last_Valid_Instr_Addr__0\(1),
      Q(27) => \last_Valid_Instr_Addr__0\(2),
      Q(26) => \last_Valid_Instr_Addr__0\(3),
      Q(25) => \last_Valid_Instr_Addr__0\(4),
      Q(24) => \last_Valid_Instr_Addr__0\(5),
      Q(23) => \last_Valid_Instr_Addr__0\(6),
      Q(22) => \last_Valid_Instr_Addr__0\(7),
      Q(21) => \last_Valid_Instr_Addr__0\(8),
      Q(20) => \last_Valid_Instr_Addr__0\(9),
      Q(19) => \last_Valid_Instr_Addr__0\(10),
      Q(18) => \last_Valid_Instr_Addr__0\(11),
      Q(17) => \last_Valid_Instr_Addr__0\(12),
      Q(16) => \last_Valid_Instr_Addr__0\(13),
      Q(15) => \last_Valid_Instr_Addr__0\(14),
      Q(14) => \last_Valid_Instr_Addr__0\(15),
      Q(13) => \last_Valid_Instr_Addr__0\(16),
      Q(12) => \last_Valid_Instr_Addr__0\(17),
      Q(11) => \last_Valid_Instr_Addr__0\(18),
      Q(10) => \last_Valid_Instr_Addr__0\(19),
      Q(9) => \last_Valid_Instr_Addr__0\(20),
      Q(8) => \last_Valid_Instr_Addr__0\(21),
      Q(7) => \last_Valid_Instr_Addr__0\(22),
      Q(6) => \last_Valid_Instr_Addr__0\(23),
      Q(5) => \last_Valid_Instr_Addr__0\(24),
      Q(4) => \last_Valid_Instr_Addr__0\(25),
      Q(3) => \last_Valid_Instr_Addr__0\(26),
      Q(2) => \last_Valid_Instr_Addr__0\(27),
      Q(1) => last_Valid_Instr_Addr(28),
      Q(0) => last_Valid_Instr_Addr(29),
      Unsigned_Op_reg => \Implement_Debug_Logic.Master_Core.Debug_Area_n_59\,
      \Using_AXI.M_AXI_ARADDR_I_reg[31]\(37 downto 3) => \^d\(328 downto 294),
      \Using_AXI.M_AXI_ARADDR_I_reg[31]\(2 downto 0) => \^d\(3 downto 1),
      \Using_AXI.r_read_fifo_addr_reg[0]\ => \Using_ICache.ICache_I1_n_39\,
      \Using_AXI.r_read_fifo_addr_reg[1]\ => \Using_ICache.ICache_I1_n_41\,
      \Using_FPGA.Native\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_0\(7) => op1(20),
      \Using_FPGA.Native_0\(6) => op1(21),
      \Using_FPGA.Native_0\(5) => op1(22),
      \Using_FPGA.Native_0\(4) => op1(23),
      \Using_FPGA.Native_0\(3) => op1(24),
      \Using_FPGA.Native_0\(2) => op1(25),
      \Using_FPGA.Native_0\(1) => op1(26),
      \Using_FPGA.Native_0\(0) => op1(27),
      Write_ICache_I => Write_ICache_I,
      ex_Valid => ex_Valid,
      iFetch_In_Progress => iFetch_In_Progress,
      iFetch_In_Progress_reg => \Using_ICache.ICache_I1_n_104\,
      icache_ready => icache_ready,
      \instr_EX_i_reg[0]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_89\,
      \instr_EX_i_reg[11]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_78\,
      \instr_EX_i_reg[12]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_77\,
      \instr_EX_i_reg[13]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_76\,
      \instr_EX_i_reg[14]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_75\,
      \instr_EX_i_reg[15]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_74\,
      \instr_EX_i_reg[16]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_73\,
      \instr_EX_i_reg[17]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_72\,
      \instr_EX_i_reg[18]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_71\,
      \instr_EX_i_reg[19]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_70\,
      \instr_EX_i_reg[1]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_88\,
      \instr_EX_i_reg[20]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_69\,
      \instr_EX_i_reg[21]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_68\,
      \instr_EX_i_reg[22]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_67\,
      \instr_EX_i_reg[23]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_66\,
      \instr_EX_i_reg[24]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_65\,
      \instr_EX_i_reg[25]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_64\,
      \instr_EX_i_reg[26]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_63\,
      \instr_EX_i_reg[27]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_62\,
      \instr_EX_i_reg[28]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_61\,
      \instr_EX_i_reg[29]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_60\,
      \instr_EX_i_reg[2]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_87\,
      \instr_EX_i_reg[31]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_58\,
      \instr_EX_i_reg[3]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_86\,
      \instr_EX_i_reg[4]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_85\,
      \instr_EX_i_reg[5]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_84\,
      \instr_EX_i_reg[6]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_83\,
      \instr_EX_i_reg[7]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_82\,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => S,
      lopt_3 => lopt_10,
      lopt_4 => lopt_11,
      lopt_5 => lopt_12,
      lopt_6 => lopt_13,
      lopt_7 => of_PipeRun,
      lopt_8 => lopt_14,
      lopt_9 => lopt_15,
      mux_Instr_Read(0 to 31) => mux_Instr_Read(0 to 31),
      sync_reset => sync_reset,
      valid_Req_XX_reg_0 => Data_Flow_I_n_150,
      valid_Req_reg_0(0) => ICache_Enabled,
      \write_Addr_I_reg[2]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_81\,
      \write_Addr_I_reg[3]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_80\,
      \write_Addr_I_reg[4]\ => \Implement_Debug_Logic.Master_Core.Debug_Area_n_79\
    );
\Using_ICache.combined_carry_or_I\: entity work.design_1_microblaze_1_1_carry_or
     port map (
      S => S,
      complete_iready => complete_iready,
      icache_ready => icache_ready,
      lopt => lopt_8,
      lopt_1 => lopt_9
    );
trace_data_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_Strobe,
      Q => \^d\(10),
      R => '0'
    );
\trace_data_address_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(470),
      Q => \^d\(78),
      R => '0'
    );
\trace_data_address_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(460),
      Q => \^d\(68),
      R => '0'
    );
\trace_data_address_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(459),
      Q => \^d\(67),
      R => '0'
    );
\trace_data_address_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(458),
      Q => \^d\(66),
      R => '0'
    );
\trace_data_address_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(457),
      Q => \^d\(65),
      R => '0'
    );
\trace_data_address_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(456),
      Q => \^d\(64),
      R => '0'
    );
\trace_data_address_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(455),
      Q => \^d\(63),
      R => '0'
    );
\trace_data_address_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(454),
      Q => \^d\(62),
      R => '0'
    );
\trace_data_address_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(453),
      Q => \^d\(61),
      R => '0'
    );
\trace_data_address_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(452),
      Q => \^d\(60),
      R => '0'
    );
\trace_data_address_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(451),
      Q => \^d\(59),
      R => '0'
    );
\trace_data_address_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(469),
      Q => \^d\(77),
      R => '0'
    );
\trace_data_address_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(450),
      Q => \^d\(58),
      R => '0'
    );
\trace_data_address_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(449),
      Q => \^d\(57),
      R => '0'
    );
\trace_data_address_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(448),
      Q => \^d\(56),
      R => '0'
    );
\trace_data_address_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(447),
      Q => \^d\(55),
      R => '0'
    );
\trace_data_address_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(446),
      Q => \^d\(54),
      R => '0'
    );
\trace_data_address_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(445),
      Q => \^d\(53),
      R => '0'
    );
\trace_data_address_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(444),
      Q => \^d\(52),
      R => '0'
    );
\trace_data_address_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(443),
      Q => \^d\(51),
      R => '0'
    );
\trace_data_address_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(442),
      Q => \^d\(50),
      R => '0'
    );
\trace_data_address_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(441),
      Q => \^d\(49),
      R => '0'
    );
\trace_data_address_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(468),
      Q => \^d\(76),
      R => '0'
    );
\trace_data_address_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(440),
      Q => \^d\(48),
      R => '0'
    );
\trace_data_address_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(439),
      Q => \^d\(47),
      R => '0'
    );
\trace_data_address_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(467),
      Q => \^d\(75),
      R => '0'
    );
\trace_data_address_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(466),
      Q => \^d\(74),
      R => '0'
    );
\trace_data_address_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(465),
      Q => \^d\(73),
      R => '0'
    );
\trace_data_address_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(464),
      Q => \^d\(72),
      R => '0'
    );
\trace_data_address_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(463),
      Q => \^d\(71),
      R => '0'
    );
\trace_data_address_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(462),
      Q => \^d\(70),
      R => '0'
    );
\trace_data_address_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(461),
      Q => \^d\(69),
      R => '0'
    );
\trace_data_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(403),
      Q => \^d\(14),
      R => '0'
    );
\trace_data_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(402),
      Q => \^d\(13),
      R => '0'
    );
\trace_data_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(401),
      Q => \^d\(12),
      R => '0'
    );
\trace_data_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(400),
      Q => \^d\(11),
      R => '0'
    );
trace_data_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(405),
      Q => \^d\(9),
      R => '0'
    );
trace_data_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(404),
      Q => \^d\(8),
      R => '0'
    );
\trace_data_write_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(438),
      Q => \^d\(46),
      R => '0'
    );
\trace_data_write_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(428),
      Q => \^d\(36),
      R => '0'
    );
\trace_data_write_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(427),
      Q => \^d\(35),
      R => '0'
    );
\trace_data_write_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(426),
      Q => \^d\(34),
      R => '0'
    );
\trace_data_write_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(425),
      Q => \^d\(33),
      R => '0'
    );
\trace_data_write_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(424),
      Q => \^d\(32),
      R => '0'
    );
\trace_data_write_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(423),
      Q => \^d\(31),
      R => '0'
    );
\trace_data_write_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(422),
      Q => \^d\(30),
      R => '0'
    );
\trace_data_write_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(421),
      Q => \^d\(29),
      R => '0'
    );
\trace_data_write_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(420),
      Q => \^d\(28),
      R => '0'
    );
\trace_data_write_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(419),
      Q => \^d\(27),
      R => '0'
    );
\trace_data_write_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(437),
      Q => \^d\(45),
      R => '0'
    );
\trace_data_write_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(418),
      Q => \^d\(26),
      R => '0'
    );
\trace_data_write_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(417),
      Q => \^d\(25),
      R => '0'
    );
\trace_data_write_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(416),
      Q => \^d\(24),
      R => '0'
    );
\trace_data_write_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(415),
      Q => \^d\(23),
      R => '0'
    );
\trace_data_write_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(414),
      Q => \^d\(22),
      R => '0'
    );
\trace_data_write_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(413),
      Q => \^d\(21),
      R => '0'
    );
\trace_data_write_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(412),
      Q => \^d\(20),
      R => '0'
    );
\trace_data_write_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(411),
      Q => \^d\(19),
      R => '0'
    );
\trace_data_write_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(410),
      Q => \^d\(18),
      R => '0'
    );
\trace_data_write_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(409),
      Q => \^d\(17),
      R => '0'
    );
\trace_data_write_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(436),
      Q => \^d\(44),
      R => '0'
    );
\trace_data_write_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(408),
      Q => \^d\(16),
      R => '0'
    );
\trace_data_write_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(407),
      Q => \^d\(15),
      R => '0'
    );
\trace_data_write_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(435),
      Q => \^d\(43),
      R => '0'
    );
\trace_data_write_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(434),
      Q => \^d\(42),
      R => '0'
    );
\trace_data_write_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(433),
      Q => \^d\(41),
      R => '0'
    );
\trace_data_write_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(432),
      Q => \^d\(40),
      R => '0'
    );
\trace_data_write_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(431),
      Q => \^d\(39),
      R => '0'
    );
\trace_data_write_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(430),
      Q => \^d\(38),
      R => '0'
    );
\trace_data_write_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(429),
      Q => \^d\(37),
      R => '0'
    );
trace_delay_slot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => delay_slot_instr,
      Q => \^d\(79),
      R => '0'
    );
\trace_instruction_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(0),
      Q => \^d\(188),
      R => '0'
    );
\trace_instruction_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(4),
      Q => \^d\(178),
      R => '0'
    );
\trace_instruction_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(11),
      Q => \^d\(177),
      R => '0'
    );
\trace_instruction_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(12),
      Q => \^d\(176),
      R => '0'
    );
\trace_instruction_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(13),
      Q => \^d\(175),
      R => '0'
    );
\trace_instruction_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(14),
      Q => \^d\(174),
      R => '0'
    );
\trace_instruction_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(15),
      Q => \^d\(173),
      R => '0'
    );
\trace_instruction_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(16),
      Q => \^d\(172),
      R => '0'
    );
\trace_instruction_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(17),
      Q => \^d\(171),
      R => '0'
    );
\trace_instruction_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(18),
      Q => \^d\(170),
      R => '0'
    );
\trace_instruction_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(19),
      Q => \^d\(169),
      R => '0'
    );
\trace_instruction_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(1),
      Q => \^d\(187),
      R => '0'
    );
\trace_instruction_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(20),
      Q => \^d\(168),
      R => '0'
    );
\trace_instruction_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(21),
      Q => \^d\(167),
      R => '0'
    );
\trace_instruction_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(22),
      Q => \^d\(166),
      R => '0'
    );
\trace_instruction_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(23),
      Q => \^d\(165),
      R => '0'
    );
\trace_instruction_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(24),
      Q => \^d\(164),
      R => '0'
    );
\trace_instruction_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(25),
      Q => \^d\(163),
      R => '0'
    );
\trace_instruction_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(26),
      Q => \^d\(162),
      R => '0'
    );
\trace_instruction_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(27),
      Q => \^d\(161),
      R => '0'
    );
\trace_instruction_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(28),
      Q => \^d\(160),
      R => '0'
    );
\trace_instruction_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(29),
      Q => \^d\(159),
      R => '0'
    );
\trace_instruction_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(2),
      Q => \^d\(186),
      R => '0'
    );
\trace_instruction_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Unsigned_Op,
      Q => \^d\(158),
      R => '0'
    );
\trace_instruction_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(31),
      Q => \^d\(157),
      R => '0'
    );
\trace_instruction_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(3),
      Q => \^d\(185),
      R => '0'
    );
\trace_instruction_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(4),
      Q => \^d\(184),
      R => '0'
    );
\trace_instruction_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(5),
      Q => \^d\(183),
      R => '0'
    );
\trace_instruction_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(6),
      Q => \^d\(182),
      R => '0'
    );
\trace_instruction_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(7),
      Q => \^d\(181),
      R => '0'
    );
\trace_instruction_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(2),
      Q => \^d\(180),
      R => '0'
    );
\trace_instruction_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(3),
      Q => \^d\(179),
      R => '0'
    );
trace_jump_taken_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump,
      Q => \^d\(80),
      R => '0'
    );
\trace_msr_reg_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => msr_I(28),
      Q => \^d\(115),
      R => '0'
    );
\trace_msr_reg_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => msr_I(29),
      Q => \^d\(114),
      R => '0'
    );
\trace_msr_reg_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => msr_I(30),
      Q => \^d\(113),
      R => '0'
    );
\trace_msr_reg_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => DCache_Enabled,
      Q => \^d\(117),
      R => '0'
    );
\trace_msr_reg_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ICache_Enabled,
      Q => \^d\(116),
      R => '0'
    );
trace_of_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_PipeRun,
      Q => \^d\(0),
      R => '0'
    );
\trace_pc_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(0),
      Q => \^d\(155),
      R => '0'
    );
\trace_pc_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(10),
      Q => \^d\(145),
      R => '0'
    );
\trace_pc_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(11),
      Q => \^d\(144),
      R => '0'
    );
\trace_pc_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(12),
      Q => \^d\(143),
      R => '0'
    );
\trace_pc_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(13),
      Q => \^d\(142),
      R => '0'
    );
\trace_pc_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(14),
      Q => \^d\(141),
      R => '0'
    );
\trace_pc_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(15),
      Q => \^d\(140),
      R => '0'
    );
\trace_pc_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(16),
      Q => \^d\(139),
      R => '0'
    );
\trace_pc_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(17),
      Q => \^d\(138),
      R => '0'
    );
\trace_pc_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(18),
      Q => \^d\(137),
      R => '0'
    );
\trace_pc_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(19),
      Q => \^d\(136),
      R => '0'
    );
\trace_pc_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(1),
      Q => \^d\(154),
      R => '0'
    );
\trace_pc_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(20),
      Q => \^d\(135),
      R => '0'
    );
\trace_pc_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(21),
      Q => \^d\(134),
      R => '0'
    );
\trace_pc_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(22),
      Q => \^d\(133),
      R => '0'
    );
\trace_pc_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(23),
      Q => \^d\(132),
      R => '0'
    );
\trace_pc_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(24),
      Q => \^d\(131),
      R => '0'
    );
\trace_pc_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(25),
      Q => \^d\(130),
      R => '0'
    );
\trace_pc_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(26),
      Q => \^d\(129),
      R => '0'
    );
\trace_pc_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(27),
      Q => \^d\(128),
      R => '0'
    );
\trace_pc_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(28),
      Q => \^d\(127),
      R => '0'
    );
\trace_pc_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(29),
      Q => \^d\(126),
      R => '0'
    );
\trace_pc_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(2),
      Q => \^d\(153),
      R => '0'
    );
\trace_pc_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(30),
      Q => \^d\(125),
      R => '0'
    );
\trace_pc_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(31),
      Q => \^d\(124),
      R => '0'
    );
\trace_pc_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(3),
      Q => \^d\(152),
      R => '0'
    );
\trace_pc_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(4),
      Q => \^d\(151),
      R => '0'
    );
\trace_pc_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(5),
      Q => \^d\(150),
      R => '0'
    );
\trace_pc_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(6),
      Q => \^d\(149),
      R => '0'
    );
\trace_pc_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(7),
      Q => \^d\(148),
      R => '0'
    );
\trace_pc_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(8),
      Q => \^d\(147),
      R => '0'
    );
\trace_pc_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PC_EX_i(9),
      Q => \^d\(146),
      R => '0'
    );
\trace_reg_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(6),
      Q => \^d\(122),
      R => '0'
    );
\trace_reg_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => instr_ex(7),
      Q => \^d\(121),
      R => '0'
    );
\trace_reg_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(2),
      Q => \^d\(120),
      R => '0'
    );
\trace_reg_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(3),
      Q => \^d\(119),
      R => '0'
    );
\trace_reg_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => write_Addr(4),
      Q => \^d\(118),
      R => '0'
    );
trace_reg_write_novalid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => reg_Write_I,
      Q => trace_reg_write_novalid,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MicroBlaze_Core is
  port (
    D : out STD_LOGIC_VECTOR ( 505 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 37 downto 0 );
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WREADY : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_1 : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Shift : in STD_LOGIC;
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_TDI : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MicroBlaze_Core : entity is "MicroBlaze_Core";
end design_1_microblaze_1_1_MicroBlaze_Core;

architecture STRUCTURE of design_1_microblaze_1_1_MicroBlaze_Core is
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Synced : STD_LOGIC;
  signal \reset_temp__0\ : STD_LOGIC;
  signal sync_reset : STD_LOGIC;
  signal wakeup_i : STD_LOGIC_VECTOR ( 0 to 1 );
begin
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
\Area.Core\: entity work.design_1_microblaze_1_1_MicroBlaze_Area
     port map (
      Clk => Clk,
      D(505 downto 0) => D(505 downto 0),
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_1_sp_1 => Dbg_Reg_En_1_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_0,
      Dbg_TDO_1 => Dbg_TDO_1,
      Dbg_TDO_2 => Dbg_TDO_2,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      Hibernate => Hibernate,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(37 downto 0) => LOCKSTEP_Master_Out(37 downto 0),
      M_AXI_DC_ARREADY => M_AXI_DC_ARREADY,
      M_AXI_DC_AWREADY => M_AXI_DC_AWREADY,
      M_AXI_DC_BVALID => M_AXI_DC_BVALID,
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      M_AXI_DC_RLAST => M_AXI_DC_RLAST,
      M_AXI_DC_RVALID => M_AXI_DC_RVALID,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_IC_ARREADY => M_AXI_IC_ARREADY,
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      M_AXI_IC_RLAST => M_AXI_IC_RLAST,
      M_AXI_IC_RVALID => M_AXI_IC_RVALID,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Status_Reg_En => Status_Reg_En,
      Suspend => Suspend,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      sync_reset => sync_reset,
      wakeup_i(0 to 1) => wakeup_i(0 to 1)
    );
Reset_DFF: entity work.design_1_microblaze_1_1_mb_sync_bit
     port map (
      Clk => Clk,
      \out\(0) => Synced,
      reset_temp => \reset_temp__0\
    );
\Use_Async_Reset.sync_reset_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Synced,
      Q => sync_reset,
      R => '0'
    );
\Using_Async_Wakeup_0.Wakeup_DFF\: entity work.design_1_microblaze_1_1_mb_sync_bit_0
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      Wakeup(0) => Wakeup(0),
      \out\(0) => wakeup_i(0)
    );
\Using_Async_Wakeup_1.Wakeup_DFF\: entity work.design_1_microblaze_1_1_mb_sync_bit_1
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      Wakeup(0) => Wakeup(1),
      \out\(0) => wakeup_i(1)
    );
reset_temp: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Reset,
      I1 => Mb_Reset,
      I2 => Debug_Rst,
      O => \reset_temp__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1_MicroBlaze is
  port (
    RAM_To : in STD_LOGIC_VECTOR ( 255 downto 0 );
    RAM_From : out STD_LOGIC_VECTOR ( 255 downto 0 );
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Non_Secure : in STD_LOGIC_VECTOR ( 0 to 3 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Ext_BRK : in STD_LOGIC;
    Ext_NM_BRK : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Dbg_Continue : out STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Intr : out STD_LOGIC;
    MB_Halted : out STD_LOGIC;
    MB_Error : out STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Wakeup : out STD_LOGIC;
    LOCKSTEP_Slave_In : in STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    M_AXI_IP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_AWLOCK : out STD_LOGIC;
    M_AXI_IP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWVALID : out STD_LOGIC;
    M_AXI_IP_AWREADY : in STD_LOGIC;
    M_AXI_IP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_WLAST : out STD_LOGIC;
    M_AXI_IP_WVALID : out STD_LOGIC;
    M_AXI_IP_WREADY : in STD_LOGIC;
    M_AXI_IP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_BVALID : in STD_LOGIC;
    M_AXI_IP_BREADY : out STD_LOGIC;
    M_AXI_IP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_ARLOCK : out STD_LOGIC;
    M_AXI_IP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARVALID : out STD_LOGIC;
    M_AXI_IP_ARREADY : in STD_LOGIC;
    M_AXI_IP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_RLAST : in STD_LOGIC;
    M_AXI_IP_RVALID : in STD_LOGIC;
    M_AXI_IP_RREADY : out STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_AWLOCK : out STD_LOGIC;
    M_AXI_DP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WLAST : out STD_LOGIC;
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_ARLOCK : out STD_LOGIC;
    M_AXI_DP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RLAST : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trace_Clk : in STD_LOGIC;
    Dbg_Trace_Data : out STD_LOGIC_VECTOR ( 0 to 35 );
    Dbg_Trace_Ready : in STD_LOGIC;
    Dbg_Trace_Valid : out STD_LOGIC;
    Dbg_AWADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_AWVALID : in STD_LOGIC;
    Dbg_AWREADY : out STD_LOGIC;
    Dbg_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_WVALID : in STD_LOGIC;
    Dbg_WREADY : out STD_LOGIC;
    Dbg_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_BVALID : out STD_LOGIC;
    Dbg_BREADY : in STD_LOGIC;
    Dbg_ARADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_ARVALID : in STD_LOGIC;
    Dbg_ARREADY : out STD_LOGIC;
    Dbg_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_RVALID : out STD_LOGIC;
    Dbg_RREADY : in STD_LOGIC;
    DEBUG_ACLK : in STD_LOGIC;
    DEBUG_ARESETN : in STD_LOGIC;
    Trace_Instruction : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Valid_Instr : out STD_LOGIC;
    Trace_PC : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Reg_Write : out STD_LOGIC;
    Trace_Reg_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_MSR_Reg : out STD_LOGIC_VECTOR ( 0 to 14 );
    Trace_PID_Reg : out STD_LOGIC_VECTOR ( 0 to 7 );
    Trace_New_Reg_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Exception_Taken : out STD_LOGIC;
    Trace_Exception_Kind : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_Jump_Taken : out STD_LOGIC;
    Trace_Delay_Slot : out STD_LOGIC;
    Trace_Data_Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Write_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    Trace_Data_Access : out STD_LOGIC;
    Trace_Data_Read : out STD_LOGIC;
    Trace_Data_Write : out STD_LOGIC;
    Trace_DCache_Req : out STD_LOGIC;
    Trace_DCache_Hit : out STD_LOGIC;
    Trace_DCache_Rdy : out STD_LOGIC;
    Trace_DCache_Read : out STD_LOGIC;
    Trace_ICache_Req : out STD_LOGIC;
    Trace_ICache_Hit : out STD_LOGIC;
    Trace_ICache_Rdy : out STD_LOGIC;
    Trace_OF_PipeRun : out STD_LOGIC;
    Trace_EX_PipeRun : out STD_LOGIC;
    Trace_MEM_PipeRun : out STD_LOGIC;
    Trace_MB_Halted : out STD_LOGIC;
    Trace_Jump_Hit : out STD_LOGIC;
    M0_AXIS_TLAST : out STD_LOGIC;
    M0_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M0_AXIS_TVALID : out STD_LOGIC;
    M0_AXIS_TREADY : in STD_LOGIC;
    M1_AXIS_TLAST : out STD_LOGIC;
    M1_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M1_AXIS_TVALID : out STD_LOGIC;
    M1_AXIS_TREADY : in STD_LOGIC;
    M2_AXIS_TLAST : out STD_LOGIC;
    M2_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M2_AXIS_TVALID : out STD_LOGIC;
    M2_AXIS_TREADY : in STD_LOGIC;
    M3_AXIS_TLAST : out STD_LOGIC;
    M3_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M3_AXIS_TVALID : out STD_LOGIC;
    M3_AXIS_TREADY : in STD_LOGIC;
    M4_AXIS_TLAST : out STD_LOGIC;
    M4_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M4_AXIS_TVALID : out STD_LOGIC;
    M4_AXIS_TREADY : in STD_LOGIC;
    M5_AXIS_TLAST : out STD_LOGIC;
    M5_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M5_AXIS_TVALID : out STD_LOGIC;
    M5_AXIS_TREADY : in STD_LOGIC;
    M6_AXIS_TLAST : out STD_LOGIC;
    M6_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M6_AXIS_TVALID : out STD_LOGIC;
    M6_AXIS_TREADY : in STD_LOGIC;
    M7_AXIS_TLAST : out STD_LOGIC;
    M7_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M7_AXIS_TVALID : out STD_LOGIC;
    M7_AXIS_TREADY : in STD_LOGIC;
    M8_AXIS_TLAST : out STD_LOGIC;
    M8_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M8_AXIS_TVALID : out STD_LOGIC;
    M8_AXIS_TREADY : in STD_LOGIC;
    M9_AXIS_TLAST : out STD_LOGIC;
    M9_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M9_AXIS_TVALID : out STD_LOGIC;
    M9_AXIS_TREADY : in STD_LOGIC;
    M10_AXIS_TLAST : out STD_LOGIC;
    M10_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M10_AXIS_TVALID : out STD_LOGIC;
    M10_AXIS_TREADY : in STD_LOGIC;
    M11_AXIS_TLAST : out STD_LOGIC;
    M11_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M11_AXIS_TVALID : out STD_LOGIC;
    M11_AXIS_TREADY : in STD_LOGIC;
    M12_AXIS_TLAST : out STD_LOGIC;
    M12_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M12_AXIS_TVALID : out STD_LOGIC;
    M12_AXIS_TREADY : in STD_LOGIC;
    M13_AXIS_TLAST : out STD_LOGIC;
    M13_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M13_AXIS_TVALID : out STD_LOGIC;
    M13_AXIS_TREADY : in STD_LOGIC;
    M14_AXIS_TLAST : out STD_LOGIC;
    M14_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M14_AXIS_TVALID : out STD_LOGIC;
    M14_AXIS_TREADY : in STD_LOGIC;
    M15_AXIS_TLAST : out STD_LOGIC;
    M15_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M15_AXIS_TVALID : out STD_LOGIC;
    M15_AXIS_TREADY : in STD_LOGIC;
    S0_AXIS_TLAST : in STD_LOGIC;
    S0_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S0_AXIS_TVALID : in STD_LOGIC;
    S0_AXIS_TREADY : out STD_LOGIC;
    S1_AXIS_TLAST : in STD_LOGIC;
    S1_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S1_AXIS_TVALID : in STD_LOGIC;
    S1_AXIS_TREADY : out STD_LOGIC;
    S2_AXIS_TLAST : in STD_LOGIC;
    S2_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S2_AXIS_TVALID : in STD_LOGIC;
    S2_AXIS_TREADY : out STD_LOGIC;
    S3_AXIS_TLAST : in STD_LOGIC;
    S3_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S3_AXIS_TVALID : in STD_LOGIC;
    S3_AXIS_TREADY : out STD_LOGIC;
    S4_AXIS_TLAST : in STD_LOGIC;
    S4_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S4_AXIS_TVALID : in STD_LOGIC;
    S4_AXIS_TREADY : out STD_LOGIC;
    S5_AXIS_TLAST : in STD_LOGIC;
    S5_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S5_AXIS_TVALID : in STD_LOGIC;
    S5_AXIS_TREADY : out STD_LOGIC;
    S6_AXIS_TLAST : in STD_LOGIC;
    S6_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S6_AXIS_TVALID : in STD_LOGIC;
    S6_AXIS_TREADY : out STD_LOGIC;
    S7_AXIS_TLAST : in STD_LOGIC;
    S7_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S7_AXIS_TVALID : in STD_LOGIC;
    S7_AXIS_TREADY : out STD_LOGIC;
    S8_AXIS_TLAST : in STD_LOGIC;
    S8_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S8_AXIS_TVALID : in STD_LOGIC;
    S8_AXIS_TREADY : out STD_LOGIC;
    S9_AXIS_TLAST : in STD_LOGIC;
    S9_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S9_AXIS_TVALID : in STD_LOGIC;
    S9_AXIS_TREADY : out STD_LOGIC;
    S10_AXIS_TLAST : in STD_LOGIC;
    S10_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S10_AXIS_TVALID : in STD_LOGIC;
    S10_AXIS_TREADY : out STD_LOGIC;
    S11_AXIS_TLAST : in STD_LOGIC;
    S11_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S11_AXIS_TVALID : in STD_LOGIC;
    S11_AXIS_TREADY : out STD_LOGIC;
    S12_AXIS_TLAST : in STD_LOGIC;
    S12_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S12_AXIS_TVALID : in STD_LOGIC;
    S12_AXIS_TREADY : out STD_LOGIC;
    S13_AXIS_TLAST : in STD_LOGIC;
    S13_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S13_AXIS_TVALID : in STD_LOGIC;
    S13_AXIS_TREADY : out STD_LOGIC;
    S14_AXIS_TLAST : in STD_LOGIC;
    S14_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S14_AXIS_TVALID : in STD_LOGIC;
    S14_AXIS_TREADY : out STD_LOGIC;
    S15_AXIS_TLAST : in STD_LOGIC;
    S15_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S15_AXIS_TVALID : in STD_LOGIC;
    S15_AXIS_TREADY : out STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_WACK : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_IC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RACK : out STD_LOGIC;
    M_AXI_IC_ACVALID : in STD_LOGIC;
    M_AXI_IC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ACREADY : out STD_LOGIC;
    M_AXI_IC_CRVALID : out STD_LOGIC;
    M_AXI_IC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_CRREADY : in STD_LOGIC;
    M_AXI_IC_CDVALID : out STD_LOGIC;
    M_AXI_IC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_CDLAST : out STD_LOGIC;
    M_AXI_IC_CDREADY : in STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_WACK : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC;
    M_AXI_DC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RACK : out STD_LOGIC;
    M_AXI_DC_ACVALID : in STD_LOGIC;
    M_AXI_DC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ACREADY : out STD_LOGIC;
    M_AXI_DC_CRVALID : out STD_LOGIC;
    M_AXI_DC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_CRREADY : in STD_LOGIC;
    M_AXI_DC_CDVALID : out STD_LOGIC;
    M_AXI_DC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_CDLAST : out STD_LOGIC;
    M_AXI_DC_CDREADY : in STD_LOGIC
  );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of design_1_microblaze_1_1_MicroBlaze : entity is 4;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of design_1_microblaze_1_1_MicroBlaze : entity is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of design_1_microblaze_1_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 4096;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of design_1_microblaze_1_1_MicroBlaze : entity is 4;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of design_1_microblaze_1_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001000011010000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 4096;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of design_1_microblaze_1_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001000011010000001111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of design_1_microblaze_1_1_MicroBlaze : entity is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of design_1_microblaze_1_1_MicroBlaze : entity is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of design_1_microblaze_1_1_MicroBlaze : entity is "zynq";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of design_1_microblaze_1_1_MicroBlaze : entity is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of design_1_microblaze_1_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001000011010000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of design_1_microblaze_1_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001000011010000001111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of design_1_microblaze_1_1_MicroBlaze : entity is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of design_1_microblaze_1_1_MicroBlaze : entity is "design_1_microblaze_1_1";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of design_1_microblaze_1_1_MicroBlaze : entity is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of design_1_microblaze_1_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of design_1_microblaze_1_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of design_1_microblaze_1_1_MicroBlaze : entity is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_PVR : integer;
  attribute C_PVR of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of design_1_microblaze_1_1_MicroBlaze : entity is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of design_1_microblaze_1_1_MicroBlaze : entity is 32;
  attribute C_SCO : integer;
  attribute C_SCO of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of design_1_microblaze_1_1_MicroBlaze : entity is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of design_1_microblaze_1_1_MicroBlaze : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of design_1_microblaze_1_1_MicroBlaze : entity is "MicroBlaze";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of design_1_microblaze_1_1_MicroBlaze : entity is "yes";
end design_1_microblaze_1_1_MicroBlaze;

architecture STRUCTURE of design_1_microblaze_1_1_MicroBlaze is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Status_Reg_En\ : STD_LOGIC;
  signal \^byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^d_as\ : STD_LOGIC;
  signal \^data_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^data_write\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^dbg_continue\ : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_13_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_14_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_15_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^debug_rst\ : STD_LOGIC;
  signal \^ifetch\ : STD_LOGIC;
  signal \^i_as\ : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 1 to 46 );
  signal \^lockstep_out\ : STD_LOGIC_VECTOR ( 2 to 3228 );
  signal \^mb_halted\ : STD_LOGIC;
  signal \^m_axi_dc_araddr\ : STD_LOGIC_VECTOR ( 31 downto 2 );
  signal \^m_axi_dc_arburst\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^m_axi_dc_arcache\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^m_axi_dc_arlen\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_axi_dc_arvalid\ : STD_LOGIC;
  signal \^m_axi_dc_awaddr\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dc_awvalid\ : STD_LOGIC;
  signal \^m_axi_dc_wdata\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dc_wlast\ : STD_LOGIC;
  signal \^m_axi_dc_wstrb\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_dc_wvalid\ : STD_LOGIC;
  signal \^m_axi_dp_arvalid\ : STD_LOGIC;
  signal \^m_axi_dp_awaddr\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_awvalid\ : STD_LOGIC;
  signal \^m_axi_dp_wdata\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_wstrb\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_dp_wvalid\ : STD_LOGIC;
  signal \^m_axi_ic_araddr\ : STD_LOGIC_VECTOR ( 31 downto 2 );
  signal \^m_axi_ic_arburst\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^m_axi_ic_arcache\ : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \^m_axi_ic_arlen\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_axi_ic_arvalid\ : STD_LOGIC;
  signal \^m_axi_ic_rready\ : STD_LOGIC;
  signal MicroBlaze_Core_I_n_555 : STD_LOGIC;
  signal \^read_strobe\ : STD_LOGIC;
  signal \^trace_dcache_hit\ : STD_LOGIC;
  signal \^trace_dcache_rdy\ : STD_LOGIC;
  signal \^trace_dcache_read\ : STD_LOGIC;
  signal \^trace_dcache_req\ : STD_LOGIC;
  signal \^trace_data_access\ : STD_LOGIC;
  signal \^trace_data_address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^trace_data_read\ : STD_LOGIC;
  signal \^trace_data_write\ : STD_LOGIC;
  signal \^trace_data_write_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_delay_slot\ : STD_LOGIC;
  signal \^trace_icache_hit\ : STD_LOGIC;
  signal \^trace_icache_rdy\ : STD_LOGIC;
  signal \^trace_icache_req\ : STD_LOGIC;
  signal \^trace_instruction\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_jump_taken\ : STD_LOGIC;
  signal \^trace_msr_reg\ : STD_LOGIC_VECTOR ( 7 to 13 );
  signal \^trace_new_reg_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_of_piperun\ : STD_LOGIC;
  signal \^trace_pc\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_reg_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_reg_write\ : STD_LOGIC;
  signal \^trace_valid_instr\ : STD_LOGIC;
  signal \^write_strobe\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_15 : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_5 : label is "soft_lutpair85";
  attribute mark_debug : string;
  attribute mark_debug of Trace_DCache_Hit : signal is "false";
  attribute mark_debug of Trace_DCache_Rdy : signal is "false";
  attribute mark_debug of Trace_DCache_Read : signal is "false";
  attribute mark_debug of Trace_DCache_Req : signal is "false";
  attribute mark_debug of Trace_Data_Access : signal is "false";
  attribute mark_debug of Trace_Data_Read : signal is "false";
  attribute mark_debug of Trace_Data_Write : signal is "false";
  attribute mark_debug of Trace_Delay_Slot : signal is "false";
  attribute mark_debug of Trace_EX_PipeRun : signal is "false";
  attribute mark_debug of Trace_Exception_Taken : signal is "false";
  attribute mark_debug of Trace_ICache_Hit : signal is "false";
  attribute mark_debug of Trace_ICache_Rdy : signal is "false";
  attribute mark_debug of Trace_ICache_Req : signal is "false";
  attribute mark_debug of Trace_Jump_Hit : signal is "false";
  attribute mark_debug of Trace_Jump_Taken : signal is "false";
  attribute mark_debug of Trace_MB_Halted : signal is "false";
  attribute mark_debug of Trace_MEM_PipeRun : signal is "false";
  attribute mark_debug of Trace_OF_PipeRun : signal is "false";
  attribute mark_debug of Trace_Reg_Write : signal is "false";
  attribute mark_debug of Trace_Valid_Instr : signal is "false";
  attribute mark_debug of Trace_Data_Address : signal is "false";
  attribute mark_debug of Trace_Data_Byte_Enable : signal is "false";
  attribute mark_debug of Trace_Data_Write_Value : signal is "false";
  attribute mark_debug of Trace_Exception_Kind : signal is "false";
  attribute mark_debug of Trace_Instruction : signal is "false";
  attribute mark_debug of Trace_MSR_Reg : signal is "false";
  attribute mark_debug of Trace_New_Reg_Value : signal is "false";
  attribute mark_debug of Trace_PC : signal is "false";
  attribute mark_debug of Trace_PID_Reg : signal is "false";
  attribute mark_debug of Trace_Reg_Addr : signal is "false";
begin
  Byte_Enable(0 to 3) <= \^byte_enable\(0 to 3);
  D_AS <= \^d_as\;
  Data_Addr(0 to 31) <= \^data_addr\(0 to 31);
  Data_Write(0 to 31) <= \^data_write\(0 to 31);
  Dbg_ARREADY <= \<const0>\;
  Dbg_AWREADY <= \<const0>\;
  Dbg_BRESP(1) <= \<const0>\;
  Dbg_BRESP(0) <= \<const0>\;
  Dbg_BVALID <= \<const0>\;
  Dbg_Continue <= \^dbg_continue\;
  Dbg_Intr <= \<const0>\;
  Dbg_RDATA(31) <= \<const0>\;
  Dbg_RDATA(30) <= \<const0>\;
  Dbg_RDATA(29) <= \<const0>\;
  Dbg_RDATA(28) <= \<const0>\;
  Dbg_RDATA(27) <= \<const0>\;
  Dbg_RDATA(26) <= \<const0>\;
  Dbg_RDATA(25) <= \<const0>\;
  Dbg_RDATA(24) <= \<const0>\;
  Dbg_RDATA(23) <= \<const0>\;
  Dbg_RDATA(22) <= \<const0>\;
  Dbg_RDATA(21) <= \<const0>\;
  Dbg_RDATA(20) <= \<const0>\;
  Dbg_RDATA(19) <= \<const0>\;
  Dbg_RDATA(18) <= \<const0>\;
  Dbg_RDATA(17) <= \<const0>\;
  Dbg_RDATA(16) <= \<const0>\;
  Dbg_RDATA(15) <= \<const0>\;
  Dbg_RDATA(14) <= \<const0>\;
  Dbg_RDATA(13) <= \<const0>\;
  Dbg_RDATA(12) <= \<const0>\;
  Dbg_RDATA(11) <= \<const0>\;
  Dbg_RDATA(10) <= \<const0>\;
  Dbg_RDATA(9) <= \<const0>\;
  Dbg_RDATA(8) <= \<const0>\;
  Dbg_RDATA(7) <= \<const0>\;
  Dbg_RDATA(6) <= \<const0>\;
  Dbg_RDATA(5) <= \<const0>\;
  Dbg_RDATA(4) <= \<const0>\;
  Dbg_RDATA(3) <= \<const0>\;
  Dbg_RDATA(2) <= \<const0>\;
  Dbg_RDATA(1) <= \<const0>\;
  Dbg_RDATA(0) <= \<const0>\;
  Dbg_RRESP(1) <= \<const0>\;
  Dbg_RRESP(0) <= \<const0>\;
  Dbg_RVALID <= \<const0>\;
  Dbg_Trace_Data(0) <= \<const0>\;
  Dbg_Trace_Data(1) <= \<const0>\;
  Dbg_Trace_Data(2) <= \<const0>\;
  Dbg_Trace_Data(3) <= \<const0>\;
  Dbg_Trace_Data(4) <= \<const0>\;
  Dbg_Trace_Data(5) <= \<const0>\;
  Dbg_Trace_Data(6) <= \<const0>\;
  Dbg_Trace_Data(7) <= \<const0>\;
  Dbg_Trace_Data(8) <= \<const0>\;
  Dbg_Trace_Data(9) <= \<const0>\;
  Dbg_Trace_Data(10) <= \<const0>\;
  Dbg_Trace_Data(11) <= \<const0>\;
  Dbg_Trace_Data(12) <= \<const0>\;
  Dbg_Trace_Data(13) <= \<const0>\;
  Dbg_Trace_Data(14) <= \<const0>\;
  Dbg_Trace_Data(15) <= \<const0>\;
  Dbg_Trace_Data(16) <= \<const0>\;
  Dbg_Trace_Data(17) <= \<const0>\;
  Dbg_Trace_Data(18) <= \<const0>\;
  Dbg_Trace_Data(19) <= \<const0>\;
  Dbg_Trace_Data(20) <= \<const0>\;
  Dbg_Trace_Data(21) <= \<const0>\;
  Dbg_Trace_Data(22) <= \<const0>\;
  Dbg_Trace_Data(23) <= \<const0>\;
  Dbg_Trace_Data(24) <= \<const0>\;
  Dbg_Trace_Data(25) <= \<const0>\;
  Dbg_Trace_Data(26) <= \<const0>\;
  Dbg_Trace_Data(27) <= \<const0>\;
  Dbg_Trace_Data(28) <= \<const0>\;
  Dbg_Trace_Data(29) <= \<const0>\;
  Dbg_Trace_Data(30) <= \<const0>\;
  Dbg_Trace_Data(31) <= \<const0>\;
  Dbg_Trace_Data(32) <= \<const0>\;
  Dbg_Trace_Data(33) <= \<const0>\;
  Dbg_Trace_Data(34) <= \<const0>\;
  Dbg_Trace_Data(35) <= \<const0>\;
  Dbg_Trace_Valid <= \<const0>\;
  Dbg_Trig_Ack_Out(0 to 1) <= \^dbg_trig_ack_out\(0 to 1);
  Dbg_Trig_Ack_Out(2) <= \<const0>\;
  Dbg_Trig_Ack_Out(3) <= \<const0>\;
  Dbg_Trig_Ack_Out(4) <= \<const0>\;
  Dbg_Trig_Ack_Out(5) <= \<const0>\;
  Dbg_Trig_Ack_Out(6) <= \<const0>\;
  Dbg_Trig_Ack_Out(7) <= \<const0>\;
  Dbg_Trig_In(0 to 1) <= \^dbg_trig_in\(0 to 1);
  Dbg_Trig_In(2) <= \<const0>\;
  Dbg_Trig_In(3) <= \<const0>\;
  Dbg_Trig_In(4) <= \<const0>\;
  Dbg_Trig_In(5) <= \<const0>\;
  Dbg_Trig_In(6) <= \<const0>\;
  Dbg_Trig_In(7) <= \<const0>\;
  Dbg_WREADY <= \<const0>\;
  Dbg_Wakeup <= \^lockstep_master_out\(11);
  IFetch <= \^ifetch\;
  I_AS <= \^i_as\;
  Instr_Addr(0 to 31) <= \^instr_addr\(0 to 31);
  Interrupt_Ack(0) <= \<const0>\;
  Interrupt_Ack(1) <= \<const0>\;
  LOCKSTEP_Master_Out(0) <= \<const0>\;
  LOCKSTEP_Master_Out(1 to 5) <= \^lockstep_master_out\(1 to 5);
  LOCKSTEP_Master_Out(6) <= \<const0>\;
  LOCKSTEP_Master_Out(7) <= \<const0>\;
  LOCKSTEP_Master_Out(8) <= \<const0>\;
  LOCKSTEP_Master_Out(9) <= \^lockstep_master_out\(9);
  LOCKSTEP_Master_Out(10) <= \^mb_halted\;
  LOCKSTEP_Master_Out(11) <= \^lockstep_master_out\(11);
  LOCKSTEP_Master_Out(12) <= \^dbg_continue\;
  LOCKSTEP_Master_Out(13) <= \<const0>\;
  LOCKSTEP_Master_Out(14) <= \^debug_rst\;
  LOCKSTEP_Master_Out(15 to 46) <= \^lockstep_master_out\(15 to 46);
  LOCKSTEP_Master_Out(47) <= \<const0>\;
  LOCKSTEP_Master_Out(48) <= \<const0>\;
  LOCKSTEP_Master_Out(49) <= \<const0>\;
  LOCKSTEP_Master_Out(50) <= \<const0>\;
  LOCKSTEP_Master_Out(51) <= \<const0>\;
  LOCKSTEP_Master_Out(52) <= \<const0>\;
  LOCKSTEP_Master_Out(53) <= \<const0>\;
  LOCKSTEP_Master_Out(54) <= \<const0>\;
  LOCKSTEP_Master_Out(55) <= \<const0>\;
  LOCKSTEP_Master_Out(56) <= \<const0>\;
  LOCKSTEP_Master_Out(57) <= \<const0>\;
  LOCKSTEP_Master_Out(58) <= \<const0>\;
  LOCKSTEP_Master_Out(59) <= \<const0>\;
  LOCKSTEP_Master_Out(60) <= \<const0>\;
  LOCKSTEP_Master_Out(61) <= \<const0>\;
  LOCKSTEP_Master_Out(62) <= \<const0>\;
  LOCKSTEP_Master_Out(63) <= \<const0>\;
  LOCKSTEP_Master_Out(64) <= \<const0>\;
  LOCKSTEP_Master_Out(65) <= \<const0>\;
  LOCKSTEP_Master_Out(66) <= \<const0>\;
  LOCKSTEP_Master_Out(67) <= \<const0>\;
  LOCKSTEP_Master_Out(68) <= \<const0>\;
  LOCKSTEP_Master_Out(69) <= \<const0>\;
  LOCKSTEP_Master_Out(70) <= \<const0>\;
  LOCKSTEP_Master_Out(71) <= \<const0>\;
  LOCKSTEP_Master_Out(72) <= \<const0>\;
  LOCKSTEP_Master_Out(73) <= \<const0>\;
  LOCKSTEP_Master_Out(74) <= \<const0>\;
  LOCKSTEP_Master_Out(75) <= \<const0>\;
  LOCKSTEP_Master_Out(76) <= \<const0>\;
  LOCKSTEP_Master_Out(77) <= \<const0>\;
  LOCKSTEP_Master_Out(78) <= \<const0>\;
  LOCKSTEP_Master_Out(79) <= \<const0>\;
  LOCKSTEP_Master_Out(80) <= \<const0>\;
  LOCKSTEP_Master_Out(81) <= \<const0>\;
  LOCKSTEP_Master_Out(82) <= \<const0>\;
  LOCKSTEP_Master_Out(83) <= \<const0>\;
  LOCKSTEP_Master_Out(84) <= \<const0>\;
  LOCKSTEP_Master_Out(85) <= \<const0>\;
  LOCKSTEP_Master_Out(86) <= \<const0>\;
  LOCKSTEP_Master_Out(87) <= \<const0>\;
  LOCKSTEP_Master_Out(88) <= \<const0>\;
  LOCKSTEP_Master_Out(89) <= \<const0>\;
  LOCKSTEP_Master_Out(90) <= \<const0>\;
  LOCKSTEP_Master_Out(91) <= \<const0>\;
  LOCKSTEP_Master_Out(92) <= \<const0>\;
  LOCKSTEP_Master_Out(93) <= \<const0>\;
  LOCKSTEP_Master_Out(94) <= \<const0>\;
  LOCKSTEP_Master_Out(95) <= \<const0>\;
  LOCKSTEP_Master_Out(96) <= \<const0>\;
  LOCKSTEP_Master_Out(97) <= \<const0>\;
  LOCKSTEP_Master_Out(98) <= \<const0>\;
  LOCKSTEP_Master_Out(99) <= \<const0>\;
  LOCKSTEP_Master_Out(100) <= \<const0>\;
  LOCKSTEP_Master_Out(101) <= \<const0>\;
  LOCKSTEP_Master_Out(102) <= \<const0>\;
  LOCKSTEP_Master_Out(103) <= \<const0>\;
  LOCKSTEP_Master_Out(104) <= \<const0>\;
  LOCKSTEP_Master_Out(105) <= \<const0>\;
  LOCKSTEP_Master_Out(106) <= \<const0>\;
  LOCKSTEP_Master_Out(107) <= \<const0>\;
  LOCKSTEP_Master_Out(108) <= \<const0>\;
  LOCKSTEP_Master_Out(109) <= \<const0>\;
  LOCKSTEP_Master_Out(110) <= \<const0>\;
  LOCKSTEP_Master_Out(111) <= \<const0>\;
  LOCKSTEP_Master_Out(112) <= \<const0>\;
  LOCKSTEP_Master_Out(113) <= \<const0>\;
  LOCKSTEP_Master_Out(114) <= \<const0>\;
  LOCKSTEP_Master_Out(115) <= \<const0>\;
  LOCKSTEP_Master_Out(116) <= \<const0>\;
  LOCKSTEP_Master_Out(117) <= \<const0>\;
  LOCKSTEP_Master_Out(118) <= \<const0>\;
  LOCKSTEP_Master_Out(119) <= \<const0>\;
  LOCKSTEP_Master_Out(120) <= \<const0>\;
  LOCKSTEP_Master_Out(121) <= \<const0>\;
  LOCKSTEP_Master_Out(122) <= \<const0>\;
  LOCKSTEP_Master_Out(123) <= \<const0>\;
  LOCKSTEP_Master_Out(124) <= \<const0>\;
  LOCKSTEP_Master_Out(125) <= \<const0>\;
  LOCKSTEP_Master_Out(126) <= \<const0>\;
  LOCKSTEP_Master_Out(127) <= \<const0>\;
  LOCKSTEP_Master_Out(128) <= \<const0>\;
  LOCKSTEP_Master_Out(129) <= \<const0>\;
  LOCKSTEP_Master_Out(130) <= \<const0>\;
  LOCKSTEP_Master_Out(131) <= \<const0>\;
  LOCKSTEP_Master_Out(132) <= \<const0>\;
  LOCKSTEP_Master_Out(133) <= \<const0>\;
  LOCKSTEP_Master_Out(134) <= \<const0>\;
  LOCKSTEP_Master_Out(135) <= \<const0>\;
  LOCKSTEP_Master_Out(136) <= \<const0>\;
  LOCKSTEP_Master_Out(137) <= \<const0>\;
  LOCKSTEP_Master_Out(138) <= \<const0>\;
  LOCKSTEP_Master_Out(139) <= \<const0>\;
  LOCKSTEP_Master_Out(140) <= \<const0>\;
  LOCKSTEP_Master_Out(141) <= \<const0>\;
  LOCKSTEP_Master_Out(142) <= \<const0>\;
  LOCKSTEP_Master_Out(143) <= \<const0>\;
  LOCKSTEP_Master_Out(144) <= \<const0>\;
  LOCKSTEP_Master_Out(145) <= \<const0>\;
  LOCKSTEP_Master_Out(146) <= \<const0>\;
  LOCKSTEP_Master_Out(147) <= \<const0>\;
  LOCKSTEP_Master_Out(148) <= \<const0>\;
  LOCKSTEP_Master_Out(149) <= \<const0>\;
  LOCKSTEP_Master_Out(150) <= \<const0>\;
  LOCKSTEP_Master_Out(151) <= \<const0>\;
  LOCKSTEP_Master_Out(152) <= \<const0>\;
  LOCKSTEP_Master_Out(153) <= \<const0>\;
  LOCKSTEP_Master_Out(154) <= \<const0>\;
  LOCKSTEP_Master_Out(155) <= \<const0>\;
  LOCKSTEP_Master_Out(156) <= \<const0>\;
  LOCKSTEP_Master_Out(157) <= \<const0>\;
  LOCKSTEP_Master_Out(158) <= \<const0>\;
  LOCKSTEP_Master_Out(159) <= \<const0>\;
  LOCKSTEP_Master_Out(160) <= \<const0>\;
  LOCKSTEP_Master_Out(161) <= \<const0>\;
  LOCKSTEP_Master_Out(162) <= \<const0>\;
  LOCKSTEP_Master_Out(163) <= \<const0>\;
  LOCKSTEP_Master_Out(164) <= \<const0>\;
  LOCKSTEP_Master_Out(165) <= \<const0>\;
  LOCKSTEP_Master_Out(166) <= \<const0>\;
  LOCKSTEP_Master_Out(167) <= \<const0>\;
  LOCKSTEP_Master_Out(168) <= \<const0>\;
  LOCKSTEP_Master_Out(169) <= \<const0>\;
  LOCKSTEP_Master_Out(170) <= \<const0>\;
  LOCKSTEP_Master_Out(171) <= \<const0>\;
  LOCKSTEP_Master_Out(172) <= \<const0>\;
  LOCKSTEP_Master_Out(173) <= \<const0>\;
  LOCKSTEP_Master_Out(174) <= \<const0>\;
  LOCKSTEP_Master_Out(175) <= \<const0>\;
  LOCKSTEP_Master_Out(176) <= \<const0>\;
  LOCKSTEP_Master_Out(177) <= \<const0>\;
  LOCKSTEP_Master_Out(178) <= \<const0>\;
  LOCKSTEP_Master_Out(179) <= \<const0>\;
  LOCKSTEP_Master_Out(180) <= \<const0>\;
  LOCKSTEP_Master_Out(181) <= \<const0>\;
  LOCKSTEP_Master_Out(182) <= \<const0>\;
  LOCKSTEP_Master_Out(183) <= \<const0>\;
  LOCKSTEP_Master_Out(184) <= \<const0>\;
  LOCKSTEP_Master_Out(185) <= \<const0>\;
  LOCKSTEP_Master_Out(186) <= \<const0>\;
  LOCKSTEP_Master_Out(187) <= \<const0>\;
  LOCKSTEP_Master_Out(188) <= \<const0>\;
  LOCKSTEP_Master_Out(189) <= \<const0>\;
  LOCKSTEP_Master_Out(190) <= \<const0>\;
  LOCKSTEP_Master_Out(191) <= \<const0>\;
  LOCKSTEP_Master_Out(192) <= \<const0>\;
  LOCKSTEP_Master_Out(193) <= \<const0>\;
  LOCKSTEP_Master_Out(194) <= \<const0>\;
  LOCKSTEP_Master_Out(195) <= \<const0>\;
  LOCKSTEP_Master_Out(196) <= \<const0>\;
  LOCKSTEP_Master_Out(197) <= \<const0>\;
  LOCKSTEP_Master_Out(198) <= \<const0>\;
  LOCKSTEP_Master_Out(199) <= \<const0>\;
  LOCKSTEP_Master_Out(200) <= \<const0>\;
  LOCKSTEP_Master_Out(201) <= \<const0>\;
  LOCKSTEP_Master_Out(202) <= \<const0>\;
  LOCKSTEP_Master_Out(203) <= \<const0>\;
  LOCKSTEP_Master_Out(204) <= \<const0>\;
  LOCKSTEP_Master_Out(205) <= \<const0>\;
  LOCKSTEP_Master_Out(206) <= \<const0>\;
  LOCKSTEP_Master_Out(207) <= \<const0>\;
  LOCKSTEP_Master_Out(208) <= \<const0>\;
  LOCKSTEP_Master_Out(209) <= \<const0>\;
  LOCKSTEP_Master_Out(210) <= \<const0>\;
  LOCKSTEP_Master_Out(211) <= \<const0>\;
  LOCKSTEP_Master_Out(212) <= \<const0>\;
  LOCKSTEP_Master_Out(213) <= \<const0>\;
  LOCKSTEP_Master_Out(214) <= \<const0>\;
  LOCKSTEP_Master_Out(215) <= \<const0>\;
  LOCKSTEP_Master_Out(216) <= \<const0>\;
  LOCKSTEP_Master_Out(217) <= \<const0>\;
  LOCKSTEP_Master_Out(218) <= \<const0>\;
  LOCKSTEP_Master_Out(219) <= \<const0>\;
  LOCKSTEP_Master_Out(220) <= \<const0>\;
  LOCKSTEP_Master_Out(221) <= \<const0>\;
  LOCKSTEP_Master_Out(222) <= \<const0>\;
  LOCKSTEP_Master_Out(223) <= \<const0>\;
  LOCKSTEP_Master_Out(224) <= \<const0>\;
  LOCKSTEP_Master_Out(225) <= \<const0>\;
  LOCKSTEP_Master_Out(226) <= \<const0>\;
  LOCKSTEP_Master_Out(227) <= \<const0>\;
  LOCKSTEP_Master_Out(228) <= \<const0>\;
  LOCKSTEP_Master_Out(229) <= \<const0>\;
  LOCKSTEP_Master_Out(230) <= \<const0>\;
  LOCKSTEP_Master_Out(231) <= \<const0>\;
  LOCKSTEP_Master_Out(232) <= \<const0>\;
  LOCKSTEP_Master_Out(233) <= \<const0>\;
  LOCKSTEP_Master_Out(234) <= \<const0>\;
  LOCKSTEP_Master_Out(235) <= \<const0>\;
  LOCKSTEP_Master_Out(236) <= \<const0>\;
  LOCKSTEP_Master_Out(237) <= \<const0>\;
  LOCKSTEP_Master_Out(238) <= \<const0>\;
  LOCKSTEP_Master_Out(239) <= \<const0>\;
  LOCKSTEP_Master_Out(240) <= \<const0>\;
  LOCKSTEP_Master_Out(241) <= \<const0>\;
  LOCKSTEP_Master_Out(242) <= \<const0>\;
  LOCKSTEP_Master_Out(243) <= \<const0>\;
  LOCKSTEP_Master_Out(244) <= \<const0>\;
  LOCKSTEP_Master_Out(245) <= \<const0>\;
  LOCKSTEP_Master_Out(246) <= \<const0>\;
  LOCKSTEP_Master_Out(247) <= \<const0>\;
  LOCKSTEP_Master_Out(248) <= \<const0>\;
  LOCKSTEP_Master_Out(249) <= \<const0>\;
  LOCKSTEP_Master_Out(250) <= \<const0>\;
  LOCKSTEP_Master_Out(251) <= \<const0>\;
  LOCKSTEP_Master_Out(252) <= \<const0>\;
  LOCKSTEP_Master_Out(253) <= \<const0>\;
  LOCKSTEP_Master_Out(254) <= \<const0>\;
  LOCKSTEP_Master_Out(255) <= \<const0>\;
  LOCKSTEP_Master_Out(256) <= \<const0>\;
  LOCKSTEP_Master_Out(257) <= \<const0>\;
  LOCKSTEP_Master_Out(258) <= \<const0>\;
  LOCKSTEP_Master_Out(259) <= \<const0>\;
  LOCKSTEP_Master_Out(260) <= \<const0>\;
  LOCKSTEP_Master_Out(261) <= \<const0>\;
  LOCKSTEP_Master_Out(262) <= \<const0>\;
  LOCKSTEP_Master_Out(263) <= \<const0>\;
  LOCKSTEP_Master_Out(264) <= \<const0>\;
  LOCKSTEP_Master_Out(265) <= \<const0>\;
  LOCKSTEP_Master_Out(266) <= \<const0>\;
  LOCKSTEP_Master_Out(267) <= \<const0>\;
  LOCKSTEP_Master_Out(268) <= \<const0>\;
  LOCKSTEP_Master_Out(269) <= \<const0>\;
  LOCKSTEP_Master_Out(270) <= \<const0>\;
  LOCKSTEP_Master_Out(271) <= \<const0>\;
  LOCKSTEP_Master_Out(272) <= \<const0>\;
  LOCKSTEP_Master_Out(273) <= \<const0>\;
  LOCKSTEP_Master_Out(274) <= \<const0>\;
  LOCKSTEP_Master_Out(275) <= \<const0>\;
  LOCKSTEP_Master_Out(276) <= \<const0>\;
  LOCKSTEP_Master_Out(277) <= \<const0>\;
  LOCKSTEP_Master_Out(278) <= \<const0>\;
  LOCKSTEP_Master_Out(279) <= \<const0>\;
  LOCKSTEP_Master_Out(280) <= \<const0>\;
  LOCKSTEP_Master_Out(281) <= \<const0>\;
  LOCKSTEP_Master_Out(282) <= \<const0>\;
  LOCKSTEP_Master_Out(283) <= \<const0>\;
  LOCKSTEP_Master_Out(284) <= \<const0>\;
  LOCKSTEP_Master_Out(285) <= \<const0>\;
  LOCKSTEP_Master_Out(286) <= \<const0>\;
  LOCKSTEP_Master_Out(287) <= \<const0>\;
  LOCKSTEP_Master_Out(288) <= \<const0>\;
  LOCKSTEP_Master_Out(289) <= \<const0>\;
  LOCKSTEP_Master_Out(290) <= \<const0>\;
  LOCKSTEP_Master_Out(291) <= \<const0>\;
  LOCKSTEP_Master_Out(292) <= \<const0>\;
  LOCKSTEP_Master_Out(293) <= \<const0>\;
  LOCKSTEP_Master_Out(294) <= \<const0>\;
  LOCKSTEP_Master_Out(295) <= \<const0>\;
  LOCKSTEP_Master_Out(296) <= \<const0>\;
  LOCKSTEP_Master_Out(297) <= \<const0>\;
  LOCKSTEP_Master_Out(298) <= \<const0>\;
  LOCKSTEP_Master_Out(299) <= \<const0>\;
  LOCKSTEP_Master_Out(300) <= \<const0>\;
  LOCKSTEP_Master_Out(301) <= \<const0>\;
  LOCKSTEP_Master_Out(302) <= \<const0>\;
  LOCKSTEP_Master_Out(303) <= \<const0>\;
  LOCKSTEP_Master_Out(304) <= \<const0>\;
  LOCKSTEP_Master_Out(305) <= \<const0>\;
  LOCKSTEP_Master_Out(306) <= \<const0>\;
  LOCKSTEP_Master_Out(307) <= \<const0>\;
  LOCKSTEP_Master_Out(308) <= \<const0>\;
  LOCKSTEP_Master_Out(309) <= \<const0>\;
  LOCKSTEP_Master_Out(310) <= \<const0>\;
  LOCKSTEP_Master_Out(311) <= \<const0>\;
  LOCKSTEP_Master_Out(312) <= \<const0>\;
  LOCKSTEP_Master_Out(313) <= \<const0>\;
  LOCKSTEP_Master_Out(314) <= \<const0>\;
  LOCKSTEP_Master_Out(315) <= \<const0>\;
  LOCKSTEP_Master_Out(316) <= \<const0>\;
  LOCKSTEP_Master_Out(317) <= \<const0>\;
  LOCKSTEP_Master_Out(318) <= \<const0>\;
  LOCKSTEP_Master_Out(319) <= \<const0>\;
  LOCKSTEP_Master_Out(320) <= \<const0>\;
  LOCKSTEP_Master_Out(321) <= \<const0>\;
  LOCKSTEP_Master_Out(322) <= \<const0>\;
  LOCKSTEP_Master_Out(323) <= \<const0>\;
  LOCKSTEP_Master_Out(324) <= \<const0>\;
  LOCKSTEP_Master_Out(325) <= \<const0>\;
  LOCKSTEP_Master_Out(326) <= \<const0>\;
  LOCKSTEP_Master_Out(327) <= \<const0>\;
  LOCKSTEP_Master_Out(328) <= \<const0>\;
  LOCKSTEP_Master_Out(329) <= \<const0>\;
  LOCKSTEP_Master_Out(330) <= \<const0>\;
  LOCKSTEP_Master_Out(331) <= \<const0>\;
  LOCKSTEP_Master_Out(332) <= \<const0>\;
  LOCKSTEP_Master_Out(333) <= \<const0>\;
  LOCKSTEP_Master_Out(334) <= \<const0>\;
  LOCKSTEP_Master_Out(335) <= \<const0>\;
  LOCKSTEP_Master_Out(336) <= \<const0>\;
  LOCKSTEP_Master_Out(337) <= \<const0>\;
  LOCKSTEP_Master_Out(338) <= \<const0>\;
  LOCKSTEP_Master_Out(339) <= \<const0>\;
  LOCKSTEP_Master_Out(340) <= \<const0>\;
  LOCKSTEP_Master_Out(341) <= \<const0>\;
  LOCKSTEP_Master_Out(342) <= \<const0>\;
  LOCKSTEP_Master_Out(343) <= \<const0>\;
  LOCKSTEP_Master_Out(344) <= \<const0>\;
  LOCKSTEP_Master_Out(345) <= \<const0>\;
  LOCKSTEP_Master_Out(346) <= \<const0>\;
  LOCKSTEP_Master_Out(347) <= \<const0>\;
  LOCKSTEP_Master_Out(348) <= \<const0>\;
  LOCKSTEP_Master_Out(349) <= \<const0>\;
  LOCKSTEP_Master_Out(350) <= \<const0>\;
  LOCKSTEP_Master_Out(351) <= \<const0>\;
  LOCKSTEP_Master_Out(352) <= \<const0>\;
  LOCKSTEP_Master_Out(353) <= \<const0>\;
  LOCKSTEP_Master_Out(354) <= \<const0>\;
  LOCKSTEP_Master_Out(355) <= \<const0>\;
  LOCKSTEP_Master_Out(356) <= \<const0>\;
  LOCKSTEP_Master_Out(357) <= \<const0>\;
  LOCKSTEP_Master_Out(358) <= \<const0>\;
  LOCKSTEP_Master_Out(359) <= \<const0>\;
  LOCKSTEP_Master_Out(360) <= \<const0>\;
  LOCKSTEP_Master_Out(361) <= \<const0>\;
  LOCKSTEP_Master_Out(362) <= \<const0>\;
  LOCKSTEP_Master_Out(363) <= \<const0>\;
  LOCKSTEP_Master_Out(364) <= \<const0>\;
  LOCKSTEP_Master_Out(365) <= \<const0>\;
  LOCKSTEP_Master_Out(366) <= \<const0>\;
  LOCKSTEP_Master_Out(367) <= \<const0>\;
  LOCKSTEP_Master_Out(368) <= \<const0>\;
  LOCKSTEP_Master_Out(369) <= \<const0>\;
  LOCKSTEP_Master_Out(370) <= \<const0>\;
  LOCKSTEP_Master_Out(371) <= \<const0>\;
  LOCKSTEP_Master_Out(372) <= \<const0>\;
  LOCKSTEP_Master_Out(373) <= \<const0>\;
  LOCKSTEP_Master_Out(374) <= \<const0>\;
  LOCKSTEP_Master_Out(375) <= \<const0>\;
  LOCKSTEP_Master_Out(376) <= \<const0>\;
  LOCKSTEP_Master_Out(377) <= \<const0>\;
  LOCKSTEP_Master_Out(378) <= \<const0>\;
  LOCKSTEP_Master_Out(379) <= \<const0>\;
  LOCKSTEP_Master_Out(380) <= \<const0>\;
  LOCKSTEP_Master_Out(381) <= \<const0>\;
  LOCKSTEP_Master_Out(382) <= \<const0>\;
  LOCKSTEP_Master_Out(383) <= \<const0>\;
  LOCKSTEP_Master_Out(384) <= \<const0>\;
  LOCKSTEP_Master_Out(385) <= \<const0>\;
  LOCKSTEP_Master_Out(386) <= \<const0>\;
  LOCKSTEP_Master_Out(387) <= \<const0>\;
  LOCKSTEP_Master_Out(388) <= \<const0>\;
  LOCKSTEP_Master_Out(389) <= \<const0>\;
  LOCKSTEP_Master_Out(390) <= \<const0>\;
  LOCKSTEP_Master_Out(391) <= \<const0>\;
  LOCKSTEP_Master_Out(392) <= \<const0>\;
  LOCKSTEP_Master_Out(393) <= \<const0>\;
  LOCKSTEP_Master_Out(394) <= \<const0>\;
  LOCKSTEP_Master_Out(395) <= \<const0>\;
  LOCKSTEP_Master_Out(396) <= \<const0>\;
  LOCKSTEP_Master_Out(397) <= \<const0>\;
  LOCKSTEP_Master_Out(398) <= \<const0>\;
  LOCKSTEP_Master_Out(399) <= \<const0>\;
  LOCKSTEP_Master_Out(400) <= \<const0>\;
  LOCKSTEP_Master_Out(401) <= \<const0>\;
  LOCKSTEP_Master_Out(402) <= \<const0>\;
  LOCKSTEP_Master_Out(403) <= \<const0>\;
  LOCKSTEP_Master_Out(404) <= \<const0>\;
  LOCKSTEP_Master_Out(405) <= \<const0>\;
  LOCKSTEP_Master_Out(406) <= \<const0>\;
  LOCKSTEP_Master_Out(407) <= \<const0>\;
  LOCKSTEP_Master_Out(408) <= \<const0>\;
  LOCKSTEP_Master_Out(409) <= \<const0>\;
  LOCKSTEP_Master_Out(410) <= \<const0>\;
  LOCKSTEP_Master_Out(411) <= \<const0>\;
  LOCKSTEP_Master_Out(412) <= \<const0>\;
  LOCKSTEP_Master_Out(413) <= \<const0>\;
  LOCKSTEP_Master_Out(414) <= \<const0>\;
  LOCKSTEP_Master_Out(415) <= \<const0>\;
  LOCKSTEP_Master_Out(416) <= \<const0>\;
  LOCKSTEP_Master_Out(417) <= \<const0>\;
  LOCKSTEP_Master_Out(418) <= \<const0>\;
  LOCKSTEP_Master_Out(419) <= \<const0>\;
  LOCKSTEP_Master_Out(420) <= \<const0>\;
  LOCKSTEP_Master_Out(421) <= \<const0>\;
  LOCKSTEP_Master_Out(422) <= \<const0>\;
  LOCKSTEP_Master_Out(423) <= \<const0>\;
  LOCKSTEP_Master_Out(424) <= \<const0>\;
  LOCKSTEP_Master_Out(425) <= \<const0>\;
  LOCKSTEP_Master_Out(426) <= \<const0>\;
  LOCKSTEP_Master_Out(427) <= \<const0>\;
  LOCKSTEP_Master_Out(428) <= \<const0>\;
  LOCKSTEP_Master_Out(429) <= \<const0>\;
  LOCKSTEP_Master_Out(430) <= \<const0>\;
  LOCKSTEP_Master_Out(431) <= \<const0>\;
  LOCKSTEP_Master_Out(432) <= \<const0>\;
  LOCKSTEP_Master_Out(433) <= \<const0>\;
  LOCKSTEP_Master_Out(434) <= \<const0>\;
  LOCKSTEP_Master_Out(435) <= \<const0>\;
  LOCKSTEP_Master_Out(436) <= \<const0>\;
  LOCKSTEP_Master_Out(437) <= \<const0>\;
  LOCKSTEP_Master_Out(438) <= \<const0>\;
  LOCKSTEP_Master_Out(439) <= \<const0>\;
  LOCKSTEP_Master_Out(440) <= \<const0>\;
  LOCKSTEP_Master_Out(441) <= \<const0>\;
  LOCKSTEP_Master_Out(442) <= \<const0>\;
  LOCKSTEP_Master_Out(443) <= \<const0>\;
  LOCKSTEP_Master_Out(444) <= \<const0>\;
  LOCKSTEP_Master_Out(445) <= \<const0>\;
  LOCKSTEP_Master_Out(446) <= \<const0>\;
  LOCKSTEP_Master_Out(447) <= \<const0>\;
  LOCKSTEP_Master_Out(448) <= \<const0>\;
  LOCKSTEP_Master_Out(449) <= \<const0>\;
  LOCKSTEP_Master_Out(450) <= \<const0>\;
  LOCKSTEP_Master_Out(451) <= \<const0>\;
  LOCKSTEP_Master_Out(452) <= \<const0>\;
  LOCKSTEP_Master_Out(453) <= \<const0>\;
  LOCKSTEP_Master_Out(454) <= \<const0>\;
  LOCKSTEP_Master_Out(455) <= \<const0>\;
  LOCKSTEP_Master_Out(456) <= \<const0>\;
  LOCKSTEP_Master_Out(457) <= \<const0>\;
  LOCKSTEP_Master_Out(458) <= \<const0>\;
  LOCKSTEP_Master_Out(459) <= \<const0>\;
  LOCKSTEP_Master_Out(460) <= \<const0>\;
  LOCKSTEP_Master_Out(461) <= \<const0>\;
  LOCKSTEP_Master_Out(462) <= \<const0>\;
  LOCKSTEP_Master_Out(463) <= \<const0>\;
  LOCKSTEP_Master_Out(464) <= \<const0>\;
  LOCKSTEP_Master_Out(465) <= \<const0>\;
  LOCKSTEP_Master_Out(466) <= \<const0>\;
  LOCKSTEP_Master_Out(467) <= \<const0>\;
  LOCKSTEP_Master_Out(468) <= \<const0>\;
  LOCKSTEP_Master_Out(469) <= \<const0>\;
  LOCKSTEP_Master_Out(470) <= \<const0>\;
  LOCKSTEP_Master_Out(471) <= \<const0>\;
  LOCKSTEP_Master_Out(472) <= \<const0>\;
  LOCKSTEP_Master_Out(473) <= \<const0>\;
  LOCKSTEP_Master_Out(474) <= \<const0>\;
  LOCKSTEP_Master_Out(475) <= \<const0>\;
  LOCKSTEP_Master_Out(476) <= \<const0>\;
  LOCKSTEP_Master_Out(477) <= \<const0>\;
  LOCKSTEP_Master_Out(478) <= \<const0>\;
  LOCKSTEP_Master_Out(479) <= \<const0>\;
  LOCKSTEP_Master_Out(480) <= \<const0>\;
  LOCKSTEP_Master_Out(481) <= \<const0>\;
  LOCKSTEP_Master_Out(482) <= \<const0>\;
  LOCKSTEP_Master_Out(483) <= \<const0>\;
  LOCKSTEP_Master_Out(484) <= \<const0>\;
  LOCKSTEP_Master_Out(485) <= \<const0>\;
  LOCKSTEP_Master_Out(486) <= \<const0>\;
  LOCKSTEP_Master_Out(487) <= \<const0>\;
  LOCKSTEP_Master_Out(488) <= \<const0>\;
  LOCKSTEP_Master_Out(489) <= \<const0>\;
  LOCKSTEP_Master_Out(490) <= \<const0>\;
  LOCKSTEP_Master_Out(491) <= \<const0>\;
  LOCKSTEP_Master_Out(492) <= \<const0>\;
  LOCKSTEP_Master_Out(493) <= \<const0>\;
  LOCKSTEP_Master_Out(494) <= \<const0>\;
  LOCKSTEP_Master_Out(495) <= \<const0>\;
  LOCKSTEP_Master_Out(496) <= \<const0>\;
  LOCKSTEP_Master_Out(497) <= \<const0>\;
  LOCKSTEP_Master_Out(498) <= \<const0>\;
  LOCKSTEP_Master_Out(499) <= \<const0>\;
  LOCKSTEP_Master_Out(500) <= \<const0>\;
  LOCKSTEP_Master_Out(501) <= \<const0>\;
  LOCKSTEP_Master_Out(502) <= \<const0>\;
  LOCKSTEP_Master_Out(503) <= \<const0>\;
  LOCKSTEP_Master_Out(504) <= \<const0>\;
  LOCKSTEP_Master_Out(505) <= \<const0>\;
  LOCKSTEP_Master_Out(506) <= \<const0>\;
  LOCKSTEP_Master_Out(507) <= \<const0>\;
  LOCKSTEP_Master_Out(508) <= \<const0>\;
  LOCKSTEP_Master_Out(509) <= \<const0>\;
  LOCKSTEP_Master_Out(510) <= \<const0>\;
  LOCKSTEP_Master_Out(511) <= \<const0>\;
  LOCKSTEP_Master_Out(512) <= \<const0>\;
  LOCKSTEP_Master_Out(513) <= \<const0>\;
  LOCKSTEP_Master_Out(514) <= \<const0>\;
  LOCKSTEP_Master_Out(515) <= \<const0>\;
  LOCKSTEP_Master_Out(516) <= \<const0>\;
  LOCKSTEP_Master_Out(517) <= \<const0>\;
  LOCKSTEP_Master_Out(518) <= \<const0>\;
  LOCKSTEP_Master_Out(519) <= \<const0>\;
  LOCKSTEP_Master_Out(520) <= \<const0>\;
  LOCKSTEP_Master_Out(521) <= \<const0>\;
  LOCKSTEP_Master_Out(522) <= \<const0>\;
  LOCKSTEP_Master_Out(523) <= \<const0>\;
  LOCKSTEP_Master_Out(524) <= \<const0>\;
  LOCKSTEP_Master_Out(525) <= \<const0>\;
  LOCKSTEP_Master_Out(526) <= \<const0>\;
  LOCKSTEP_Master_Out(527) <= \<const0>\;
  LOCKSTEP_Master_Out(528) <= \<const0>\;
  LOCKSTEP_Master_Out(529) <= \<const0>\;
  LOCKSTEP_Master_Out(530) <= \<const0>\;
  LOCKSTEP_Master_Out(531) <= \<const0>\;
  LOCKSTEP_Master_Out(532) <= \<const0>\;
  LOCKSTEP_Master_Out(533) <= \<const0>\;
  LOCKSTEP_Master_Out(534) <= \<const0>\;
  LOCKSTEP_Master_Out(535) <= \<const0>\;
  LOCKSTEP_Master_Out(536) <= \<const0>\;
  LOCKSTEP_Master_Out(537) <= \<const0>\;
  LOCKSTEP_Master_Out(538) <= \<const0>\;
  LOCKSTEP_Master_Out(539) <= \<const0>\;
  LOCKSTEP_Master_Out(540) <= \<const0>\;
  LOCKSTEP_Master_Out(541) <= \<const0>\;
  LOCKSTEP_Master_Out(542) <= \<const0>\;
  LOCKSTEP_Master_Out(543) <= \<const0>\;
  LOCKSTEP_Master_Out(544) <= \<const0>\;
  LOCKSTEP_Master_Out(545) <= \<const0>\;
  LOCKSTEP_Master_Out(546) <= \<const0>\;
  LOCKSTEP_Master_Out(547) <= \<const0>\;
  LOCKSTEP_Master_Out(548) <= \<const0>\;
  LOCKSTEP_Master_Out(549) <= \<const0>\;
  LOCKSTEP_Master_Out(550) <= \<const0>\;
  LOCKSTEP_Master_Out(551) <= \<const0>\;
  LOCKSTEP_Master_Out(552) <= \<const0>\;
  LOCKSTEP_Master_Out(553) <= \<const0>\;
  LOCKSTEP_Master_Out(554) <= \<const0>\;
  LOCKSTEP_Master_Out(555) <= \<const0>\;
  LOCKSTEP_Master_Out(556) <= \<const0>\;
  LOCKSTEP_Master_Out(557) <= \<const0>\;
  LOCKSTEP_Master_Out(558) <= \<const0>\;
  LOCKSTEP_Master_Out(559) <= \<const0>\;
  LOCKSTEP_Master_Out(560) <= \<const0>\;
  LOCKSTEP_Master_Out(561) <= \<const0>\;
  LOCKSTEP_Master_Out(562) <= \<const0>\;
  LOCKSTEP_Master_Out(563) <= \<const0>\;
  LOCKSTEP_Master_Out(564) <= \<const0>\;
  LOCKSTEP_Master_Out(565) <= \<const0>\;
  LOCKSTEP_Master_Out(566) <= \<const0>\;
  LOCKSTEP_Master_Out(567) <= \<const0>\;
  LOCKSTEP_Master_Out(568) <= \<const0>\;
  LOCKSTEP_Master_Out(569) <= \<const0>\;
  LOCKSTEP_Master_Out(570) <= \<const0>\;
  LOCKSTEP_Master_Out(571) <= \<const0>\;
  LOCKSTEP_Master_Out(572) <= \<const0>\;
  LOCKSTEP_Master_Out(573) <= \<const0>\;
  LOCKSTEP_Master_Out(574) <= \<const0>\;
  LOCKSTEP_Master_Out(575) <= \<const0>\;
  LOCKSTEP_Master_Out(576) <= \<const0>\;
  LOCKSTEP_Master_Out(577) <= \<const0>\;
  LOCKSTEP_Master_Out(578) <= \<const0>\;
  LOCKSTEP_Master_Out(579) <= \<const0>\;
  LOCKSTEP_Master_Out(580) <= \<const0>\;
  LOCKSTEP_Master_Out(581) <= \<const0>\;
  LOCKSTEP_Master_Out(582) <= \<const0>\;
  LOCKSTEP_Master_Out(583) <= \<const0>\;
  LOCKSTEP_Master_Out(584) <= \<const0>\;
  LOCKSTEP_Master_Out(585) <= \<const0>\;
  LOCKSTEP_Master_Out(586) <= \<const0>\;
  LOCKSTEP_Master_Out(587) <= \<const0>\;
  LOCKSTEP_Master_Out(588) <= \<const0>\;
  LOCKSTEP_Master_Out(589) <= \<const0>\;
  LOCKSTEP_Master_Out(590) <= \<const0>\;
  LOCKSTEP_Master_Out(591) <= \<const0>\;
  LOCKSTEP_Master_Out(592) <= \<const0>\;
  LOCKSTEP_Master_Out(593) <= \<const0>\;
  LOCKSTEP_Master_Out(594) <= \<const0>\;
  LOCKSTEP_Master_Out(595) <= \<const0>\;
  LOCKSTEP_Master_Out(596) <= \<const0>\;
  LOCKSTEP_Master_Out(597) <= \<const0>\;
  LOCKSTEP_Master_Out(598) <= \<const0>\;
  LOCKSTEP_Master_Out(599) <= \<const0>\;
  LOCKSTEP_Master_Out(600) <= \<const0>\;
  LOCKSTEP_Master_Out(601) <= \<const0>\;
  LOCKSTEP_Master_Out(602) <= \<const0>\;
  LOCKSTEP_Master_Out(603) <= \<const0>\;
  LOCKSTEP_Master_Out(604) <= \<const0>\;
  LOCKSTEP_Master_Out(605) <= \<const0>\;
  LOCKSTEP_Master_Out(606) <= \<const0>\;
  LOCKSTEP_Master_Out(607) <= \<const0>\;
  LOCKSTEP_Master_Out(608) <= \<const0>\;
  LOCKSTEP_Master_Out(609) <= \<const0>\;
  LOCKSTEP_Master_Out(610) <= \<const0>\;
  LOCKSTEP_Master_Out(611) <= \<const0>\;
  LOCKSTEP_Master_Out(612) <= \<const0>\;
  LOCKSTEP_Master_Out(613) <= \<const0>\;
  LOCKSTEP_Master_Out(614) <= \<const0>\;
  LOCKSTEP_Master_Out(615) <= \<const0>\;
  LOCKSTEP_Master_Out(616) <= \<const0>\;
  LOCKSTEP_Master_Out(617) <= \<const0>\;
  LOCKSTEP_Master_Out(618) <= \<const0>\;
  LOCKSTEP_Master_Out(619) <= \<const0>\;
  LOCKSTEP_Master_Out(620) <= \<const0>\;
  LOCKSTEP_Master_Out(621) <= \<const0>\;
  LOCKSTEP_Master_Out(622) <= \<const0>\;
  LOCKSTEP_Master_Out(623) <= \<const0>\;
  LOCKSTEP_Master_Out(624) <= \<const0>\;
  LOCKSTEP_Master_Out(625) <= \<const0>\;
  LOCKSTEP_Master_Out(626) <= \<const0>\;
  LOCKSTEP_Master_Out(627) <= \<const0>\;
  LOCKSTEP_Master_Out(628) <= \<const0>\;
  LOCKSTEP_Master_Out(629) <= \<const0>\;
  LOCKSTEP_Master_Out(630) <= \<const0>\;
  LOCKSTEP_Master_Out(631) <= \<const0>\;
  LOCKSTEP_Master_Out(632) <= \<const0>\;
  LOCKSTEP_Master_Out(633) <= \<const0>\;
  LOCKSTEP_Master_Out(634) <= \<const0>\;
  LOCKSTEP_Master_Out(635) <= \<const0>\;
  LOCKSTEP_Master_Out(636) <= \<const0>\;
  LOCKSTEP_Master_Out(637) <= \<const0>\;
  LOCKSTEP_Master_Out(638) <= \<const0>\;
  LOCKSTEP_Master_Out(639) <= \<const0>\;
  LOCKSTEP_Master_Out(640) <= \<const0>\;
  LOCKSTEP_Master_Out(641) <= \<const0>\;
  LOCKSTEP_Master_Out(642) <= \<const0>\;
  LOCKSTEP_Master_Out(643) <= \<const0>\;
  LOCKSTEP_Master_Out(644) <= \<const0>\;
  LOCKSTEP_Master_Out(645) <= \<const0>\;
  LOCKSTEP_Master_Out(646) <= \<const0>\;
  LOCKSTEP_Master_Out(647) <= \<const0>\;
  LOCKSTEP_Master_Out(648) <= \<const0>\;
  LOCKSTEP_Master_Out(649) <= \<const0>\;
  LOCKSTEP_Master_Out(650) <= \<const0>\;
  LOCKSTEP_Master_Out(651) <= \<const0>\;
  LOCKSTEP_Master_Out(652) <= \<const0>\;
  LOCKSTEP_Master_Out(653) <= \<const0>\;
  LOCKSTEP_Master_Out(654) <= \<const0>\;
  LOCKSTEP_Master_Out(655) <= \<const0>\;
  LOCKSTEP_Master_Out(656) <= \<const0>\;
  LOCKSTEP_Master_Out(657) <= \<const0>\;
  LOCKSTEP_Master_Out(658) <= \<const0>\;
  LOCKSTEP_Master_Out(659) <= \<const0>\;
  LOCKSTEP_Master_Out(660) <= \<const0>\;
  LOCKSTEP_Master_Out(661) <= \<const0>\;
  LOCKSTEP_Master_Out(662) <= \<const0>\;
  LOCKSTEP_Master_Out(663) <= \<const0>\;
  LOCKSTEP_Master_Out(664) <= \<const0>\;
  LOCKSTEP_Master_Out(665) <= \<const0>\;
  LOCKSTEP_Master_Out(666) <= \<const0>\;
  LOCKSTEP_Master_Out(667) <= \<const0>\;
  LOCKSTEP_Master_Out(668) <= \<const0>\;
  LOCKSTEP_Master_Out(669) <= \<const0>\;
  LOCKSTEP_Master_Out(670) <= \<const0>\;
  LOCKSTEP_Master_Out(671) <= \<const0>\;
  LOCKSTEP_Master_Out(672) <= \<const0>\;
  LOCKSTEP_Master_Out(673) <= \<const0>\;
  LOCKSTEP_Master_Out(674) <= \<const0>\;
  LOCKSTEP_Master_Out(675) <= \<const0>\;
  LOCKSTEP_Master_Out(676) <= \<const0>\;
  LOCKSTEP_Master_Out(677) <= \<const0>\;
  LOCKSTEP_Master_Out(678) <= \<const0>\;
  LOCKSTEP_Master_Out(679) <= \<const0>\;
  LOCKSTEP_Master_Out(680) <= \<const0>\;
  LOCKSTEP_Master_Out(681) <= \<const0>\;
  LOCKSTEP_Master_Out(682) <= \<const0>\;
  LOCKSTEP_Master_Out(683) <= \<const0>\;
  LOCKSTEP_Master_Out(684) <= \<const0>\;
  LOCKSTEP_Master_Out(685) <= \<const0>\;
  LOCKSTEP_Master_Out(686) <= \<const0>\;
  LOCKSTEP_Master_Out(687) <= \<const0>\;
  LOCKSTEP_Master_Out(688) <= \<const0>\;
  LOCKSTEP_Master_Out(689) <= \<const0>\;
  LOCKSTEP_Master_Out(690) <= \<const0>\;
  LOCKSTEP_Master_Out(691) <= \<const0>\;
  LOCKSTEP_Master_Out(692) <= \<const0>\;
  LOCKSTEP_Master_Out(693) <= \<const0>\;
  LOCKSTEP_Master_Out(694) <= \<const0>\;
  LOCKSTEP_Master_Out(695) <= \<const0>\;
  LOCKSTEP_Master_Out(696) <= \<const0>\;
  LOCKSTEP_Master_Out(697) <= \<const0>\;
  LOCKSTEP_Master_Out(698) <= \<const0>\;
  LOCKSTEP_Master_Out(699) <= \<const0>\;
  LOCKSTEP_Master_Out(700) <= \<const0>\;
  LOCKSTEP_Master_Out(701) <= \<const0>\;
  LOCKSTEP_Master_Out(702) <= \<const0>\;
  LOCKSTEP_Master_Out(703) <= \<const0>\;
  LOCKSTEP_Master_Out(704) <= \<const0>\;
  LOCKSTEP_Master_Out(705) <= \<const0>\;
  LOCKSTEP_Master_Out(706) <= \<const0>\;
  LOCKSTEP_Master_Out(707) <= \<const0>\;
  LOCKSTEP_Master_Out(708) <= \<const0>\;
  LOCKSTEP_Master_Out(709) <= \<const0>\;
  LOCKSTEP_Master_Out(710) <= \<const0>\;
  LOCKSTEP_Master_Out(711) <= \<const0>\;
  LOCKSTEP_Master_Out(712) <= \<const0>\;
  LOCKSTEP_Master_Out(713) <= \<const0>\;
  LOCKSTEP_Master_Out(714) <= \<const0>\;
  LOCKSTEP_Master_Out(715) <= \<const0>\;
  LOCKSTEP_Master_Out(716) <= \<const0>\;
  LOCKSTEP_Master_Out(717) <= \<const0>\;
  LOCKSTEP_Master_Out(718) <= \<const0>\;
  LOCKSTEP_Master_Out(719) <= \<const0>\;
  LOCKSTEP_Master_Out(720) <= \<const0>\;
  LOCKSTEP_Master_Out(721) <= \<const0>\;
  LOCKSTEP_Master_Out(722) <= \<const0>\;
  LOCKSTEP_Master_Out(723) <= \<const0>\;
  LOCKSTEP_Master_Out(724) <= \<const0>\;
  LOCKSTEP_Master_Out(725) <= \<const0>\;
  LOCKSTEP_Master_Out(726) <= \<const0>\;
  LOCKSTEP_Master_Out(727) <= \<const0>\;
  LOCKSTEP_Master_Out(728) <= \<const0>\;
  LOCKSTEP_Master_Out(729) <= \<const0>\;
  LOCKSTEP_Master_Out(730) <= \<const0>\;
  LOCKSTEP_Master_Out(731) <= \<const0>\;
  LOCKSTEP_Master_Out(732) <= \<const0>\;
  LOCKSTEP_Master_Out(733) <= \<const0>\;
  LOCKSTEP_Master_Out(734) <= \<const0>\;
  LOCKSTEP_Master_Out(735) <= \<const0>\;
  LOCKSTEP_Master_Out(736) <= \<const0>\;
  LOCKSTEP_Master_Out(737) <= \<const0>\;
  LOCKSTEP_Master_Out(738) <= \<const0>\;
  LOCKSTEP_Master_Out(739) <= \<const0>\;
  LOCKSTEP_Master_Out(740) <= \<const0>\;
  LOCKSTEP_Master_Out(741) <= \<const0>\;
  LOCKSTEP_Master_Out(742) <= \<const0>\;
  LOCKSTEP_Master_Out(743) <= \<const0>\;
  LOCKSTEP_Master_Out(744) <= \<const0>\;
  LOCKSTEP_Master_Out(745) <= \<const0>\;
  LOCKSTEP_Master_Out(746) <= \<const0>\;
  LOCKSTEP_Master_Out(747) <= \<const0>\;
  LOCKSTEP_Master_Out(748) <= \<const0>\;
  LOCKSTEP_Master_Out(749) <= \<const0>\;
  LOCKSTEP_Master_Out(750) <= \<const0>\;
  LOCKSTEP_Master_Out(751) <= \<const0>\;
  LOCKSTEP_Master_Out(752) <= \<const0>\;
  LOCKSTEP_Master_Out(753) <= \<const0>\;
  LOCKSTEP_Master_Out(754) <= \<const0>\;
  LOCKSTEP_Master_Out(755) <= \<const0>\;
  LOCKSTEP_Master_Out(756) <= \<const0>\;
  LOCKSTEP_Master_Out(757) <= \<const0>\;
  LOCKSTEP_Master_Out(758) <= \<const0>\;
  LOCKSTEP_Master_Out(759) <= \<const0>\;
  LOCKSTEP_Master_Out(760) <= \<const0>\;
  LOCKSTEP_Master_Out(761) <= \<const0>\;
  LOCKSTEP_Master_Out(762) <= \<const0>\;
  LOCKSTEP_Master_Out(763) <= \<const0>\;
  LOCKSTEP_Master_Out(764) <= \<const0>\;
  LOCKSTEP_Master_Out(765) <= \<const0>\;
  LOCKSTEP_Master_Out(766) <= \<const0>\;
  LOCKSTEP_Master_Out(767) <= \<const0>\;
  LOCKSTEP_Master_Out(768) <= \<const0>\;
  LOCKSTEP_Master_Out(769) <= \<const0>\;
  LOCKSTEP_Master_Out(770) <= \<const0>\;
  LOCKSTEP_Master_Out(771) <= \<const0>\;
  LOCKSTEP_Master_Out(772) <= \<const0>\;
  LOCKSTEP_Master_Out(773) <= \<const0>\;
  LOCKSTEP_Master_Out(774) <= \<const0>\;
  LOCKSTEP_Master_Out(775) <= \<const0>\;
  LOCKSTEP_Master_Out(776) <= \<const0>\;
  LOCKSTEP_Master_Out(777) <= \<const0>\;
  LOCKSTEP_Master_Out(778) <= \<const0>\;
  LOCKSTEP_Master_Out(779) <= \<const0>\;
  LOCKSTEP_Master_Out(780) <= \<const0>\;
  LOCKSTEP_Master_Out(781) <= \<const0>\;
  LOCKSTEP_Master_Out(782) <= \<const0>\;
  LOCKSTEP_Master_Out(783) <= \<const0>\;
  LOCKSTEP_Master_Out(784) <= \<const0>\;
  LOCKSTEP_Master_Out(785) <= \<const0>\;
  LOCKSTEP_Master_Out(786) <= \<const0>\;
  LOCKSTEP_Master_Out(787) <= \<const0>\;
  LOCKSTEP_Master_Out(788) <= \<const0>\;
  LOCKSTEP_Master_Out(789) <= \<const0>\;
  LOCKSTEP_Master_Out(790) <= \<const0>\;
  LOCKSTEP_Master_Out(791) <= \<const0>\;
  LOCKSTEP_Master_Out(792) <= \<const0>\;
  LOCKSTEP_Master_Out(793) <= \<const0>\;
  LOCKSTEP_Master_Out(794) <= \<const0>\;
  LOCKSTEP_Master_Out(795) <= \<const0>\;
  LOCKSTEP_Master_Out(796) <= \<const0>\;
  LOCKSTEP_Master_Out(797) <= \<const0>\;
  LOCKSTEP_Master_Out(798) <= \<const0>\;
  LOCKSTEP_Master_Out(799) <= \<const0>\;
  LOCKSTEP_Master_Out(800) <= \<const0>\;
  LOCKSTEP_Master_Out(801) <= \<const0>\;
  LOCKSTEP_Master_Out(802) <= \<const0>\;
  LOCKSTEP_Master_Out(803) <= \<const0>\;
  LOCKSTEP_Master_Out(804) <= \<const0>\;
  LOCKSTEP_Master_Out(805) <= \<const0>\;
  LOCKSTEP_Master_Out(806) <= \<const0>\;
  LOCKSTEP_Master_Out(807) <= \<const0>\;
  LOCKSTEP_Master_Out(808) <= \<const0>\;
  LOCKSTEP_Master_Out(809) <= \<const0>\;
  LOCKSTEP_Master_Out(810) <= \<const0>\;
  LOCKSTEP_Master_Out(811) <= \<const0>\;
  LOCKSTEP_Master_Out(812) <= \<const0>\;
  LOCKSTEP_Master_Out(813) <= \<const0>\;
  LOCKSTEP_Master_Out(814) <= \<const0>\;
  LOCKSTEP_Master_Out(815) <= \<const0>\;
  LOCKSTEP_Master_Out(816) <= \<const0>\;
  LOCKSTEP_Master_Out(817) <= \<const0>\;
  LOCKSTEP_Master_Out(818) <= \<const0>\;
  LOCKSTEP_Master_Out(819) <= \<const0>\;
  LOCKSTEP_Master_Out(820) <= \<const0>\;
  LOCKSTEP_Master_Out(821) <= \<const0>\;
  LOCKSTEP_Master_Out(822) <= \<const0>\;
  LOCKSTEP_Master_Out(823) <= \<const0>\;
  LOCKSTEP_Master_Out(824) <= \<const0>\;
  LOCKSTEP_Master_Out(825) <= \<const0>\;
  LOCKSTEP_Master_Out(826) <= \<const0>\;
  LOCKSTEP_Master_Out(827) <= \<const0>\;
  LOCKSTEP_Master_Out(828) <= \<const0>\;
  LOCKSTEP_Master_Out(829) <= \<const0>\;
  LOCKSTEP_Master_Out(830) <= \<const0>\;
  LOCKSTEP_Master_Out(831) <= \<const0>\;
  LOCKSTEP_Master_Out(832) <= \<const0>\;
  LOCKSTEP_Master_Out(833) <= \<const0>\;
  LOCKSTEP_Master_Out(834) <= \<const0>\;
  LOCKSTEP_Master_Out(835) <= \<const0>\;
  LOCKSTEP_Master_Out(836) <= \<const0>\;
  LOCKSTEP_Master_Out(837) <= \<const0>\;
  LOCKSTEP_Master_Out(838) <= \<const0>\;
  LOCKSTEP_Master_Out(839) <= \<const0>\;
  LOCKSTEP_Master_Out(840) <= \<const0>\;
  LOCKSTEP_Master_Out(841) <= \<const0>\;
  LOCKSTEP_Master_Out(842) <= \<const0>\;
  LOCKSTEP_Master_Out(843) <= \<const0>\;
  LOCKSTEP_Master_Out(844) <= \<const0>\;
  LOCKSTEP_Master_Out(845) <= \<const0>\;
  LOCKSTEP_Master_Out(846) <= \<const0>\;
  LOCKSTEP_Master_Out(847) <= \<const0>\;
  LOCKSTEP_Master_Out(848) <= \<const0>\;
  LOCKSTEP_Master_Out(849) <= \<const0>\;
  LOCKSTEP_Master_Out(850) <= \<const0>\;
  LOCKSTEP_Master_Out(851) <= \<const0>\;
  LOCKSTEP_Master_Out(852) <= \<const0>\;
  LOCKSTEP_Master_Out(853) <= \<const0>\;
  LOCKSTEP_Master_Out(854) <= \<const0>\;
  LOCKSTEP_Master_Out(855) <= \<const0>\;
  LOCKSTEP_Master_Out(856) <= \<const0>\;
  LOCKSTEP_Master_Out(857) <= \<const0>\;
  LOCKSTEP_Master_Out(858) <= \<const0>\;
  LOCKSTEP_Master_Out(859) <= \<const0>\;
  LOCKSTEP_Master_Out(860) <= \<const0>\;
  LOCKSTEP_Master_Out(861) <= \<const0>\;
  LOCKSTEP_Master_Out(862) <= \<const0>\;
  LOCKSTEP_Master_Out(863) <= \<const0>\;
  LOCKSTEP_Master_Out(864) <= \<const0>\;
  LOCKSTEP_Master_Out(865) <= \<const0>\;
  LOCKSTEP_Master_Out(866) <= \<const0>\;
  LOCKSTEP_Master_Out(867) <= \<const0>\;
  LOCKSTEP_Master_Out(868) <= \<const0>\;
  LOCKSTEP_Master_Out(869) <= \<const0>\;
  LOCKSTEP_Master_Out(870) <= \<const0>\;
  LOCKSTEP_Master_Out(871) <= \<const0>\;
  LOCKSTEP_Master_Out(872) <= \<const0>\;
  LOCKSTEP_Master_Out(873) <= \<const0>\;
  LOCKSTEP_Master_Out(874) <= \<const0>\;
  LOCKSTEP_Master_Out(875) <= \<const0>\;
  LOCKSTEP_Master_Out(876) <= \<const0>\;
  LOCKSTEP_Master_Out(877) <= \<const0>\;
  LOCKSTEP_Master_Out(878) <= \<const0>\;
  LOCKSTEP_Master_Out(879) <= \<const0>\;
  LOCKSTEP_Master_Out(880) <= \<const0>\;
  LOCKSTEP_Master_Out(881) <= \<const0>\;
  LOCKSTEP_Master_Out(882) <= \<const0>\;
  LOCKSTEP_Master_Out(883) <= \<const0>\;
  LOCKSTEP_Master_Out(884) <= \<const0>\;
  LOCKSTEP_Master_Out(885) <= \<const0>\;
  LOCKSTEP_Master_Out(886) <= \<const0>\;
  LOCKSTEP_Master_Out(887) <= \<const0>\;
  LOCKSTEP_Master_Out(888) <= \<const0>\;
  LOCKSTEP_Master_Out(889) <= \<const0>\;
  LOCKSTEP_Master_Out(890) <= \<const0>\;
  LOCKSTEP_Master_Out(891) <= \<const0>\;
  LOCKSTEP_Master_Out(892) <= \<const0>\;
  LOCKSTEP_Master_Out(893) <= \<const0>\;
  LOCKSTEP_Master_Out(894) <= \<const0>\;
  LOCKSTEP_Master_Out(895) <= \<const0>\;
  LOCKSTEP_Master_Out(896) <= \<const0>\;
  LOCKSTEP_Master_Out(897) <= \<const0>\;
  LOCKSTEP_Master_Out(898) <= \<const0>\;
  LOCKSTEP_Master_Out(899) <= \<const0>\;
  LOCKSTEP_Master_Out(900) <= \<const0>\;
  LOCKSTEP_Master_Out(901) <= \<const0>\;
  LOCKSTEP_Master_Out(902) <= \<const0>\;
  LOCKSTEP_Master_Out(903) <= \<const0>\;
  LOCKSTEP_Master_Out(904) <= \<const0>\;
  LOCKSTEP_Master_Out(905) <= \<const0>\;
  LOCKSTEP_Master_Out(906) <= \<const0>\;
  LOCKSTEP_Master_Out(907) <= \<const0>\;
  LOCKSTEP_Master_Out(908) <= \<const0>\;
  LOCKSTEP_Master_Out(909) <= \<const0>\;
  LOCKSTEP_Master_Out(910) <= \<const0>\;
  LOCKSTEP_Master_Out(911) <= \<const0>\;
  LOCKSTEP_Master_Out(912) <= \<const0>\;
  LOCKSTEP_Master_Out(913) <= \<const0>\;
  LOCKSTEP_Master_Out(914) <= \<const0>\;
  LOCKSTEP_Master_Out(915) <= \<const0>\;
  LOCKSTEP_Master_Out(916) <= \<const0>\;
  LOCKSTEP_Master_Out(917) <= \<const0>\;
  LOCKSTEP_Master_Out(918) <= \<const0>\;
  LOCKSTEP_Master_Out(919) <= \<const0>\;
  LOCKSTEP_Master_Out(920) <= \<const0>\;
  LOCKSTEP_Master_Out(921) <= \<const0>\;
  LOCKSTEP_Master_Out(922) <= \<const0>\;
  LOCKSTEP_Master_Out(923) <= \<const0>\;
  LOCKSTEP_Master_Out(924) <= \<const0>\;
  LOCKSTEP_Master_Out(925) <= \<const0>\;
  LOCKSTEP_Master_Out(926) <= \<const0>\;
  LOCKSTEP_Master_Out(927) <= \<const0>\;
  LOCKSTEP_Master_Out(928) <= \<const0>\;
  LOCKSTEP_Master_Out(929) <= \<const0>\;
  LOCKSTEP_Master_Out(930) <= \<const0>\;
  LOCKSTEP_Master_Out(931) <= \<const0>\;
  LOCKSTEP_Master_Out(932) <= \<const0>\;
  LOCKSTEP_Master_Out(933) <= \<const0>\;
  LOCKSTEP_Master_Out(934) <= \<const0>\;
  LOCKSTEP_Master_Out(935) <= \<const0>\;
  LOCKSTEP_Master_Out(936) <= \<const0>\;
  LOCKSTEP_Master_Out(937) <= \<const0>\;
  LOCKSTEP_Master_Out(938) <= \<const0>\;
  LOCKSTEP_Master_Out(939) <= \<const0>\;
  LOCKSTEP_Master_Out(940) <= \<const0>\;
  LOCKSTEP_Master_Out(941) <= \<const0>\;
  LOCKSTEP_Master_Out(942) <= \<const0>\;
  LOCKSTEP_Master_Out(943) <= \<const0>\;
  LOCKSTEP_Master_Out(944) <= \<const0>\;
  LOCKSTEP_Master_Out(945) <= \<const0>\;
  LOCKSTEP_Master_Out(946) <= \<const0>\;
  LOCKSTEP_Master_Out(947) <= \<const0>\;
  LOCKSTEP_Master_Out(948) <= \<const0>\;
  LOCKSTEP_Master_Out(949) <= \<const0>\;
  LOCKSTEP_Master_Out(950) <= \<const0>\;
  LOCKSTEP_Master_Out(951) <= \<const0>\;
  LOCKSTEP_Master_Out(952) <= \<const0>\;
  LOCKSTEP_Master_Out(953) <= \<const0>\;
  LOCKSTEP_Master_Out(954) <= \<const0>\;
  LOCKSTEP_Master_Out(955) <= \<const0>\;
  LOCKSTEP_Master_Out(956) <= \<const0>\;
  LOCKSTEP_Master_Out(957) <= \<const0>\;
  LOCKSTEP_Master_Out(958) <= \<const0>\;
  LOCKSTEP_Master_Out(959) <= \<const0>\;
  LOCKSTEP_Master_Out(960) <= \<const0>\;
  LOCKSTEP_Master_Out(961) <= \<const0>\;
  LOCKSTEP_Master_Out(962) <= \<const0>\;
  LOCKSTEP_Master_Out(963) <= \<const0>\;
  LOCKSTEP_Master_Out(964) <= \<const0>\;
  LOCKSTEP_Master_Out(965) <= \<const0>\;
  LOCKSTEP_Master_Out(966) <= \<const0>\;
  LOCKSTEP_Master_Out(967) <= \<const0>\;
  LOCKSTEP_Master_Out(968) <= \<const0>\;
  LOCKSTEP_Master_Out(969) <= \<const0>\;
  LOCKSTEP_Master_Out(970) <= \<const0>\;
  LOCKSTEP_Master_Out(971) <= \<const0>\;
  LOCKSTEP_Master_Out(972) <= \<const0>\;
  LOCKSTEP_Master_Out(973) <= \<const0>\;
  LOCKSTEP_Master_Out(974) <= \<const0>\;
  LOCKSTEP_Master_Out(975) <= \<const0>\;
  LOCKSTEP_Master_Out(976) <= \<const0>\;
  LOCKSTEP_Master_Out(977) <= \<const0>\;
  LOCKSTEP_Master_Out(978) <= \<const0>\;
  LOCKSTEP_Master_Out(979) <= \<const0>\;
  LOCKSTEP_Master_Out(980) <= \<const0>\;
  LOCKSTEP_Master_Out(981) <= \<const0>\;
  LOCKSTEP_Master_Out(982) <= \<const0>\;
  LOCKSTEP_Master_Out(983) <= \<const0>\;
  LOCKSTEP_Master_Out(984) <= \<const0>\;
  LOCKSTEP_Master_Out(985) <= \<const0>\;
  LOCKSTEP_Master_Out(986) <= \<const0>\;
  LOCKSTEP_Master_Out(987) <= \<const0>\;
  LOCKSTEP_Master_Out(988) <= \<const0>\;
  LOCKSTEP_Master_Out(989) <= \<const0>\;
  LOCKSTEP_Master_Out(990) <= \<const0>\;
  LOCKSTEP_Master_Out(991) <= \<const0>\;
  LOCKSTEP_Master_Out(992) <= \<const0>\;
  LOCKSTEP_Master_Out(993) <= \<const0>\;
  LOCKSTEP_Master_Out(994) <= \<const0>\;
  LOCKSTEP_Master_Out(995) <= \<const0>\;
  LOCKSTEP_Master_Out(996) <= \<const0>\;
  LOCKSTEP_Master_Out(997) <= \<const0>\;
  LOCKSTEP_Master_Out(998) <= \<const0>\;
  LOCKSTEP_Master_Out(999) <= \<const0>\;
  LOCKSTEP_Master_Out(1000) <= \<const0>\;
  LOCKSTEP_Master_Out(1001) <= \<const0>\;
  LOCKSTEP_Master_Out(1002) <= \<const0>\;
  LOCKSTEP_Master_Out(1003) <= \<const0>\;
  LOCKSTEP_Master_Out(1004) <= \<const0>\;
  LOCKSTEP_Master_Out(1005) <= \<const0>\;
  LOCKSTEP_Master_Out(1006) <= \<const0>\;
  LOCKSTEP_Master_Out(1007) <= \<const0>\;
  LOCKSTEP_Master_Out(1008) <= \<const0>\;
  LOCKSTEP_Master_Out(1009) <= \<const0>\;
  LOCKSTEP_Master_Out(1010) <= \<const0>\;
  LOCKSTEP_Master_Out(1011) <= \<const0>\;
  LOCKSTEP_Master_Out(1012) <= \<const0>\;
  LOCKSTEP_Master_Out(1013) <= \<const0>\;
  LOCKSTEP_Master_Out(1014) <= \<const0>\;
  LOCKSTEP_Master_Out(1015) <= \<const0>\;
  LOCKSTEP_Master_Out(1016) <= \<const0>\;
  LOCKSTEP_Master_Out(1017) <= \<const0>\;
  LOCKSTEP_Master_Out(1018) <= \<const0>\;
  LOCKSTEP_Master_Out(1019) <= \<const0>\;
  LOCKSTEP_Master_Out(1020) <= \<const0>\;
  LOCKSTEP_Master_Out(1021) <= \<const0>\;
  LOCKSTEP_Master_Out(1022) <= \<const0>\;
  LOCKSTEP_Master_Out(1023) <= \<const0>\;
  LOCKSTEP_Master_Out(1024) <= \<const0>\;
  LOCKSTEP_Master_Out(1025) <= \<const0>\;
  LOCKSTEP_Master_Out(1026) <= \<const0>\;
  LOCKSTEP_Master_Out(1027) <= \<const0>\;
  LOCKSTEP_Master_Out(1028) <= \<const0>\;
  LOCKSTEP_Master_Out(1029) <= \<const0>\;
  LOCKSTEP_Master_Out(1030) <= \<const0>\;
  LOCKSTEP_Master_Out(1031) <= \<const0>\;
  LOCKSTEP_Master_Out(1032) <= \<const0>\;
  LOCKSTEP_Master_Out(1033) <= \<const0>\;
  LOCKSTEP_Master_Out(1034) <= \<const0>\;
  LOCKSTEP_Master_Out(1035) <= \<const0>\;
  LOCKSTEP_Master_Out(1036) <= \<const0>\;
  LOCKSTEP_Master_Out(1037) <= \<const0>\;
  LOCKSTEP_Master_Out(1038) <= \<const0>\;
  LOCKSTEP_Master_Out(1039) <= \<const0>\;
  LOCKSTEP_Master_Out(1040) <= \<const0>\;
  LOCKSTEP_Master_Out(1041) <= \<const0>\;
  LOCKSTEP_Master_Out(1042) <= \<const0>\;
  LOCKSTEP_Master_Out(1043) <= \<const0>\;
  LOCKSTEP_Master_Out(1044) <= \<const0>\;
  LOCKSTEP_Master_Out(1045) <= \<const0>\;
  LOCKSTEP_Master_Out(1046) <= \<const0>\;
  LOCKSTEP_Master_Out(1047) <= \<const0>\;
  LOCKSTEP_Master_Out(1048) <= \<const0>\;
  LOCKSTEP_Master_Out(1049) <= \<const0>\;
  LOCKSTEP_Master_Out(1050) <= \<const0>\;
  LOCKSTEP_Master_Out(1051) <= \<const0>\;
  LOCKSTEP_Master_Out(1052) <= \<const0>\;
  LOCKSTEP_Master_Out(1053) <= \<const0>\;
  LOCKSTEP_Master_Out(1054) <= \<const0>\;
  LOCKSTEP_Master_Out(1055) <= \<const0>\;
  LOCKSTEP_Master_Out(1056) <= \<const0>\;
  LOCKSTEP_Master_Out(1057) <= \<const0>\;
  LOCKSTEP_Master_Out(1058) <= \<const0>\;
  LOCKSTEP_Master_Out(1059) <= \<const0>\;
  LOCKSTEP_Master_Out(1060) <= \<const0>\;
  LOCKSTEP_Master_Out(1061) <= \<const0>\;
  LOCKSTEP_Master_Out(1062) <= \<const0>\;
  LOCKSTEP_Master_Out(1063) <= \<const0>\;
  LOCKSTEP_Master_Out(1064) <= \<const0>\;
  LOCKSTEP_Master_Out(1065) <= \<const0>\;
  LOCKSTEP_Master_Out(1066) <= \<const0>\;
  LOCKSTEP_Master_Out(1067) <= \<const0>\;
  LOCKSTEP_Master_Out(1068) <= \<const0>\;
  LOCKSTEP_Master_Out(1069) <= \<const0>\;
  LOCKSTEP_Master_Out(1070) <= \<const0>\;
  LOCKSTEP_Master_Out(1071) <= \<const0>\;
  LOCKSTEP_Master_Out(1072) <= \<const0>\;
  LOCKSTEP_Master_Out(1073) <= \<const0>\;
  LOCKSTEP_Master_Out(1074) <= \<const0>\;
  LOCKSTEP_Master_Out(1075) <= \<const0>\;
  LOCKSTEP_Master_Out(1076) <= \<const0>\;
  LOCKSTEP_Master_Out(1077) <= \<const0>\;
  LOCKSTEP_Master_Out(1078) <= \<const0>\;
  LOCKSTEP_Master_Out(1079) <= \<const0>\;
  LOCKSTEP_Master_Out(1080) <= \<const0>\;
  LOCKSTEP_Master_Out(1081) <= \<const0>\;
  LOCKSTEP_Master_Out(1082) <= \<const0>\;
  LOCKSTEP_Master_Out(1083) <= \<const0>\;
  LOCKSTEP_Master_Out(1084) <= \<const0>\;
  LOCKSTEP_Master_Out(1085) <= \<const0>\;
  LOCKSTEP_Master_Out(1086) <= \<const0>\;
  LOCKSTEP_Master_Out(1087) <= \<const0>\;
  LOCKSTEP_Master_Out(1088) <= \<const0>\;
  LOCKSTEP_Master_Out(1089) <= \<const0>\;
  LOCKSTEP_Master_Out(1090) <= \<const0>\;
  LOCKSTEP_Master_Out(1091) <= \<const0>\;
  LOCKSTEP_Master_Out(1092) <= \<const0>\;
  LOCKSTEP_Master_Out(1093) <= \<const0>\;
  LOCKSTEP_Master_Out(1094) <= \<const0>\;
  LOCKSTEP_Master_Out(1095) <= \<const0>\;
  LOCKSTEP_Master_Out(1096) <= \<const0>\;
  LOCKSTEP_Master_Out(1097) <= \<const0>\;
  LOCKSTEP_Master_Out(1098) <= \<const0>\;
  LOCKSTEP_Master_Out(1099) <= \<const0>\;
  LOCKSTEP_Master_Out(1100) <= \<const0>\;
  LOCKSTEP_Master_Out(1101) <= \<const0>\;
  LOCKSTEP_Master_Out(1102) <= \<const0>\;
  LOCKSTEP_Master_Out(1103) <= \<const0>\;
  LOCKSTEP_Master_Out(1104) <= \<const0>\;
  LOCKSTEP_Master_Out(1105) <= \<const0>\;
  LOCKSTEP_Master_Out(1106) <= \<const0>\;
  LOCKSTEP_Master_Out(1107) <= \<const0>\;
  LOCKSTEP_Master_Out(1108) <= \<const0>\;
  LOCKSTEP_Master_Out(1109) <= \<const0>\;
  LOCKSTEP_Master_Out(1110) <= \<const0>\;
  LOCKSTEP_Master_Out(1111) <= \<const0>\;
  LOCKSTEP_Master_Out(1112) <= \<const0>\;
  LOCKSTEP_Master_Out(1113) <= \<const0>\;
  LOCKSTEP_Master_Out(1114) <= \<const0>\;
  LOCKSTEP_Master_Out(1115) <= \<const0>\;
  LOCKSTEP_Master_Out(1116) <= \<const0>\;
  LOCKSTEP_Master_Out(1117) <= \<const0>\;
  LOCKSTEP_Master_Out(1118) <= \<const0>\;
  LOCKSTEP_Master_Out(1119) <= \<const0>\;
  LOCKSTEP_Master_Out(1120) <= \<const0>\;
  LOCKSTEP_Master_Out(1121) <= \<const0>\;
  LOCKSTEP_Master_Out(1122) <= \<const0>\;
  LOCKSTEP_Master_Out(1123) <= \<const0>\;
  LOCKSTEP_Master_Out(1124) <= \<const0>\;
  LOCKSTEP_Master_Out(1125) <= \<const0>\;
  LOCKSTEP_Master_Out(1126) <= \<const0>\;
  LOCKSTEP_Master_Out(1127) <= \<const0>\;
  LOCKSTEP_Master_Out(1128) <= \<const0>\;
  LOCKSTEP_Master_Out(1129) <= \<const0>\;
  LOCKSTEP_Master_Out(1130) <= \<const0>\;
  LOCKSTEP_Master_Out(1131) <= \<const0>\;
  LOCKSTEP_Master_Out(1132) <= \<const0>\;
  LOCKSTEP_Master_Out(1133) <= \<const0>\;
  LOCKSTEP_Master_Out(1134) <= \<const0>\;
  LOCKSTEP_Master_Out(1135) <= \<const0>\;
  LOCKSTEP_Master_Out(1136) <= \<const0>\;
  LOCKSTEP_Master_Out(1137) <= \<const0>\;
  LOCKSTEP_Master_Out(1138) <= \<const0>\;
  LOCKSTEP_Master_Out(1139) <= \<const0>\;
  LOCKSTEP_Master_Out(1140) <= \<const0>\;
  LOCKSTEP_Master_Out(1141) <= \<const0>\;
  LOCKSTEP_Master_Out(1142) <= \<const0>\;
  LOCKSTEP_Master_Out(1143) <= \<const0>\;
  LOCKSTEP_Master_Out(1144) <= \<const0>\;
  LOCKSTEP_Master_Out(1145) <= \<const0>\;
  LOCKSTEP_Master_Out(1146) <= \<const0>\;
  LOCKSTEP_Master_Out(1147) <= \<const0>\;
  LOCKSTEP_Master_Out(1148) <= \<const0>\;
  LOCKSTEP_Master_Out(1149) <= \<const0>\;
  LOCKSTEP_Master_Out(1150) <= \<const0>\;
  LOCKSTEP_Master_Out(1151) <= \<const0>\;
  LOCKSTEP_Master_Out(1152) <= \<const0>\;
  LOCKSTEP_Master_Out(1153) <= \<const0>\;
  LOCKSTEP_Master_Out(1154) <= \<const0>\;
  LOCKSTEP_Master_Out(1155) <= \<const0>\;
  LOCKSTEP_Master_Out(1156) <= \<const0>\;
  LOCKSTEP_Master_Out(1157) <= \<const0>\;
  LOCKSTEP_Master_Out(1158) <= \<const0>\;
  LOCKSTEP_Master_Out(1159) <= \<const0>\;
  LOCKSTEP_Master_Out(1160) <= \<const0>\;
  LOCKSTEP_Master_Out(1161) <= \<const0>\;
  LOCKSTEP_Master_Out(1162) <= \<const0>\;
  LOCKSTEP_Master_Out(1163) <= \<const0>\;
  LOCKSTEP_Master_Out(1164) <= \<const0>\;
  LOCKSTEP_Master_Out(1165) <= \<const0>\;
  LOCKSTEP_Master_Out(1166) <= \<const0>\;
  LOCKSTEP_Master_Out(1167) <= \<const0>\;
  LOCKSTEP_Master_Out(1168) <= \<const0>\;
  LOCKSTEP_Master_Out(1169) <= \<const0>\;
  LOCKSTEP_Master_Out(1170) <= \<const0>\;
  LOCKSTEP_Master_Out(1171) <= \<const0>\;
  LOCKSTEP_Master_Out(1172) <= \<const0>\;
  LOCKSTEP_Master_Out(1173) <= \<const0>\;
  LOCKSTEP_Master_Out(1174) <= \<const0>\;
  LOCKSTEP_Master_Out(1175) <= \<const0>\;
  LOCKSTEP_Master_Out(1176) <= \<const0>\;
  LOCKSTEP_Master_Out(1177) <= \<const0>\;
  LOCKSTEP_Master_Out(1178) <= \<const0>\;
  LOCKSTEP_Master_Out(1179) <= \<const0>\;
  LOCKSTEP_Master_Out(1180) <= \<const0>\;
  LOCKSTEP_Master_Out(1181) <= \<const0>\;
  LOCKSTEP_Master_Out(1182) <= \<const0>\;
  LOCKSTEP_Master_Out(1183) <= \<const0>\;
  LOCKSTEP_Master_Out(1184) <= \<const0>\;
  LOCKSTEP_Master_Out(1185) <= \<const0>\;
  LOCKSTEP_Master_Out(1186) <= \<const0>\;
  LOCKSTEP_Master_Out(1187) <= \<const0>\;
  LOCKSTEP_Master_Out(1188) <= \<const0>\;
  LOCKSTEP_Master_Out(1189) <= \<const0>\;
  LOCKSTEP_Master_Out(1190) <= \<const0>\;
  LOCKSTEP_Master_Out(1191) <= \<const0>\;
  LOCKSTEP_Master_Out(1192) <= \<const0>\;
  LOCKSTEP_Master_Out(1193) <= \<const0>\;
  LOCKSTEP_Master_Out(1194) <= \<const0>\;
  LOCKSTEP_Master_Out(1195) <= \<const0>\;
  LOCKSTEP_Master_Out(1196) <= \<const0>\;
  LOCKSTEP_Master_Out(1197) <= \<const0>\;
  LOCKSTEP_Master_Out(1198) <= \<const0>\;
  LOCKSTEP_Master_Out(1199) <= \<const0>\;
  LOCKSTEP_Master_Out(1200) <= \<const0>\;
  LOCKSTEP_Master_Out(1201) <= \<const0>\;
  LOCKSTEP_Master_Out(1202) <= \<const0>\;
  LOCKSTEP_Master_Out(1203) <= \<const0>\;
  LOCKSTEP_Master_Out(1204) <= \<const0>\;
  LOCKSTEP_Master_Out(1205) <= \<const0>\;
  LOCKSTEP_Master_Out(1206) <= \<const0>\;
  LOCKSTEP_Master_Out(1207) <= \<const0>\;
  LOCKSTEP_Master_Out(1208) <= \<const0>\;
  LOCKSTEP_Master_Out(1209) <= \<const0>\;
  LOCKSTEP_Master_Out(1210) <= \<const0>\;
  LOCKSTEP_Master_Out(1211) <= \<const0>\;
  LOCKSTEP_Master_Out(1212) <= \<const0>\;
  LOCKSTEP_Master_Out(1213) <= \<const0>\;
  LOCKSTEP_Master_Out(1214) <= \<const0>\;
  LOCKSTEP_Master_Out(1215) <= \<const0>\;
  LOCKSTEP_Master_Out(1216) <= \<const0>\;
  LOCKSTEP_Master_Out(1217) <= \<const0>\;
  LOCKSTEP_Master_Out(1218) <= \<const0>\;
  LOCKSTEP_Master_Out(1219) <= \<const0>\;
  LOCKSTEP_Master_Out(1220) <= \<const0>\;
  LOCKSTEP_Master_Out(1221) <= \<const0>\;
  LOCKSTEP_Master_Out(1222) <= \<const0>\;
  LOCKSTEP_Master_Out(1223) <= \<const0>\;
  LOCKSTEP_Master_Out(1224) <= \<const0>\;
  LOCKSTEP_Master_Out(1225) <= \<const0>\;
  LOCKSTEP_Master_Out(1226) <= \<const0>\;
  LOCKSTEP_Master_Out(1227) <= \<const0>\;
  LOCKSTEP_Master_Out(1228) <= \<const0>\;
  LOCKSTEP_Master_Out(1229) <= \<const0>\;
  LOCKSTEP_Master_Out(1230) <= \<const0>\;
  LOCKSTEP_Master_Out(1231) <= \<const0>\;
  LOCKSTEP_Master_Out(1232) <= \<const0>\;
  LOCKSTEP_Master_Out(1233) <= \<const0>\;
  LOCKSTEP_Master_Out(1234) <= \<const0>\;
  LOCKSTEP_Master_Out(1235) <= \<const0>\;
  LOCKSTEP_Master_Out(1236) <= \<const0>\;
  LOCKSTEP_Master_Out(1237) <= \<const0>\;
  LOCKSTEP_Master_Out(1238) <= \<const0>\;
  LOCKSTEP_Master_Out(1239) <= \<const0>\;
  LOCKSTEP_Master_Out(1240) <= \<const0>\;
  LOCKSTEP_Master_Out(1241) <= \<const0>\;
  LOCKSTEP_Master_Out(1242) <= \<const0>\;
  LOCKSTEP_Master_Out(1243) <= \<const0>\;
  LOCKSTEP_Master_Out(1244) <= \<const0>\;
  LOCKSTEP_Master_Out(1245) <= \<const0>\;
  LOCKSTEP_Master_Out(1246) <= \<const0>\;
  LOCKSTEP_Master_Out(1247) <= \<const0>\;
  LOCKSTEP_Master_Out(1248) <= \<const0>\;
  LOCKSTEP_Master_Out(1249) <= \<const0>\;
  LOCKSTEP_Master_Out(1250) <= \<const0>\;
  LOCKSTEP_Master_Out(1251) <= \<const0>\;
  LOCKSTEP_Master_Out(1252) <= \<const0>\;
  LOCKSTEP_Master_Out(1253) <= \<const0>\;
  LOCKSTEP_Master_Out(1254) <= \<const0>\;
  LOCKSTEP_Master_Out(1255) <= \<const0>\;
  LOCKSTEP_Master_Out(1256) <= \<const0>\;
  LOCKSTEP_Master_Out(1257) <= \<const0>\;
  LOCKSTEP_Master_Out(1258) <= \<const0>\;
  LOCKSTEP_Master_Out(1259) <= \<const0>\;
  LOCKSTEP_Master_Out(1260) <= \<const0>\;
  LOCKSTEP_Master_Out(1261) <= \<const0>\;
  LOCKSTEP_Master_Out(1262) <= \<const0>\;
  LOCKSTEP_Master_Out(1263) <= \<const0>\;
  LOCKSTEP_Master_Out(1264) <= \<const0>\;
  LOCKSTEP_Master_Out(1265) <= \<const0>\;
  LOCKSTEP_Master_Out(1266) <= \<const0>\;
  LOCKSTEP_Master_Out(1267) <= \<const0>\;
  LOCKSTEP_Master_Out(1268) <= \<const0>\;
  LOCKSTEP_Master_Out(1269) <= \<const0>\;
  LOCKSTEP_Master_Out(1270) <= \<const0>\;
  LOCKSTEP_Master_Out(1271) <= \<const0>\;
  LOCKSTEP_Master_Out(1272) <= \<const0>\;
  LOCKSTEP_Master_Out(1273) <= \<const0>\;
  LOCKSTEP_Master_Out(1274) <= \<const0>\;
  LOCKSTEP_Master_Out(1275) <= \<const0>\;
  LOCKSTEP_Master_Out(1276) <= \<const0>\;
  LOCKSTEP_Master_Out(1277) <= \<const0>\;
  LOCKSTEP_Master_Out(1278) <= \<const0>\;
  LOCKSTEP_Master_Out(1279) <= \<const0>\;
  LOCKSTEP_Master_Out(1280) <= \<const0>\;
  LOCKSTEP_Master_Out(1281) <= \<const0>\;
  LOCKSTEP_Master_Out(1282) <= \<const0>\;
  LOCKSTEP_Master_Out(1283) <= \<const0>\;
  LOCKSTEP_Master_Out(1284) <= \<const0>\;
  LOCKSTEP_Master_Out(1285) <= \<const0>\;
  LOCKSTEP_Master_Out(1286) <= \<const0>\;
  LOCKSTEP_Master_Out(1287) <= \<const0>\;
  LOCKSTEP_Master_Out(1288) <= \<const0>\;
  LOCKSTEP_Master_Out(1289) <= \<const0>\;
  LOCKSTEP_Master_Out(1290) <= \<const0>\;
  LOCKSTEP_Master_Out(1291) <= \<const0>\;
  LOCKSTEP_Master_Out(1292) <= \<const0>\;
  LOCKSTEP_Master_Out(1293) <= \<const0>\;
  LOCKSTEP_Master_Out(1294) <= \<const0>\;
  LOCKSTEP_Master_Out(1295) <= \<const0>\;
  LOCKSTEP_Master_Out(1296) <= \<const0>\;
  LOCKSTEP_Master_Out(1297) <= \<const0>\;
  LOCKSTEP_Master_Out(1298) <= \<const0>\;
  LOCKSTEP_Master_Out(1299) <= \<const0>\;
  LOCKSTEP_Master_Out(1300) <= \<const0>\;
  LOCKSTEP_Master_Out(1301) <= \<const0>\;
  LOCKSTEP_Master_Out(1302) <= \<const0>\;
  LOCKSTEP_Master_Out(1303) <= \<const0>\;
  LOCKSTEP_Master_Out(1304) <= \<const0>\;
  LOCKSTEP_Master_Out(1305) <= \<const0>\;
  LOCKSTEP_Master_Out(1306) <= \<const0>\;
  LOCKSTEP_Master_Out(1307) <= \<const0>\;
  LOCKSTEP_Master_Out(1308) <= \<const0>\;
  LOCKSTEP_Master_Out(1309) <= \<const0>\;
  LOCKSTEP_Master_Out(1310) <= \<const0>\;
  LOCKSTEP_Master_Out(1311) <= \<const0>\;
  LOCKSTEP_Master_Out(1312) <= \<const0>\;
  LOCKSTEP_Master_Out(1313) <= \<const0>\;
  LOCKSTEP_Master_Out(1314) <= \<const0>\;
  LOCKSTEP_Master_Out(1315) <= \<const0>\;
  LOCKSTEP_Master_Out(1316) <= \<const0>\;
  LOCKSTEP_Master_Out(1317) <= \<const0>\;
  LOCKSTEP_Master_Out(1318) <= \<const0>\;
  LOCKSTEP_Master_Out(1319) <= \<const0>\;
  LOCKSTEP_Master_Out(1320) <= \<const0>\;
  LOCKSTEP_Master_Out(1321) <= \<const0>\;
  LOCKSTEP_Master_Out(1322) <= \<const0>\;
  LOCKSTEP_Master_Out(1323) <= \<const0>\;
  LOCKSTEP_Master_Out(1324) <= \<const0>\;
  LOCKSTEP_Master_Out(1325) <= \<const0>\;
  LOCKSTEP_Master_Out(1326) <= \<const0>\;
  LOCKSTEP_Master_Out(1327) <= \<const0>\;
  LOCKSTEP_Master_Out(1328) <= \<const0>\;
  LOCKSTEP_Master_Out(1329) <= \<const0>\;
  LOCKSTEP_Master_Out(1330) <= \<const0>\;
  LOCKSTEP_Master_Out(1331) <= \<const0>\;
  LOCKSTEP_Master_Out(1332) <= \<const0>\;
  LOCKSTEP_Master_Out(1333) <= \<const0>\;
  LOCKSTEP_Master_Out(1334) <= \<const0>\;
  LOCKSTEP_Master_Out(1335) <= \<const0>\;
  LOCKSTEP_Master_Out(1336) <= \<const0>\;
  LOCKSTEP_Master_Out(1337) <= \<const0>\;
  LOCKSTEP_Master_Out(1338) <= \<const0>\;
  LOCKSTEP_Master_Out(1339) <= \<const0>\;
  LOCKSTEP_Master_Out(1340) <= \<const0>\;
  LOCKSTEP_Master_Out(1341) <= \<const0>\;
  LOCKSTEP_Master_Out(1342) <= \<const0>\;
  LOCKSTEP_Master_Out(1343) <= \<const0>\;
  LOCKSTEP_Master_Out(1344) <= \<const0>\;
  LOCKSTEP_Master_Out(1345) <= \<const0>\;
  LOCKSTEP_Master_Out(1346) <= \<const0>\;
  LOCKSTEP_Master_Out(1347) <= \<const0>\;
  LOCKSTEP_Master_Out(1348) <= \<const0>\;
  LOCKSTEP_Master_Out(1349) <= \<const0>\;
  LOCKSTEP_Master_Out(1350) <= \<const0>\;
  LOCKSTEP_Master_Out(1351) <= \<const0>\;
  LOCKSTEP_Master_Out(1352) <= \<const0>\;
  LOCKSTEP_Master_Out(1353) <= \<const0>\;
  LOCKSTEP_Master_Out(1354) <= \<const0>\;
  LOCKSTEP_Master_Out(1355) <= \<const0>\;
  LOCKSTEP_Master_Out(1356) <= \<const0>\;
  LOCKSTEP_Master_Out(1357) <= \<const0>\;
  LOCKSTEP_Master_Out(1358) <= \<const0>\;
  LOCKSTEP_Master_Out(1359) <= \<const0>\;
  LOCKSTEP_Master_Out(1360) <= \<const0>\;
  LOCKSTEP_Master_Out(1361) <= \<const0>\;
  LOCKSTEP_Master_Out(1362) <= \<const0>\;
  LOCKSTEP_Master_Out(1363) <= \<const0>\;
  LOCKSTEP_Master_Out(1364) <= \<const0>\;
  LOCKSTEP_Master_Out(1365) <= \<const0>\;
  LOCKSTEP_Master_Out(1366) <= \<const0>\;
  LOCKSTEP_Master_Out(1367) <= \<const0>\;
  LOCKSTEP_Master_Out(1368) <= \<const0>\;
  LOCKSTEP_Master_Out(1369) <= \<const0>\;
  LOCKSTEP_Master_Out(1370) <= \<const0>\;
  LOCKSTEP_Master_Out(1371) <= \<const0>\;
  LOCKSTEP_Master_Out(1372) <= \<const0>\;
  LOCKSTEP_Master_Out(1373) <= \<const0>\;
  LOCKSTEP_Master_Out(1374) <= \<const0>\;
  LOCKSTEP_Master_Out(1375) <= \<const0>\;
  LOCKSTEP_Master_Out(1376) <= \<const0>\;
  LOCKSTEP_Master_Out(1377) <= \<const0>\;
  LOCKSTEP_Master_Out(1378) <= \<const0>\;
  LOCKSTEP_Master_Out(1379) <= \<const0>\;
  LOCKSTEP_Master_Out(1380) <= \<const0>\;
  LOCKSTEP_Master_Out(1381) <= \<const0>\;
  LOCKSTEP_Master_Out(1382) <= \<const0>\;
  LOCKSTEP_Master_Out(1383) <= \<const0>\;
  LOCKSTEP_Master_Out(1384) <= \<const0>\;
  LOCKSTEP_Master_Out(1385) <= \<const0>\;
  LOCKSTEP_Master_Out(1386) <= \<const0>\;
  LOCKSTEP_Master_Out(1387) <= \<const0>\;
  LOCKSTEP_Master_Out(1388) <= \<const0>\;
  LOCKSTEP_Master_Out(1389) <= \<const0>\;
  LOCKSTEP_Master_Out(1390) <= \<const0>\;
  LOCKSTEP_Master_Out(1391) <= \<const0>\;
  LOCKSTEP_Master_Out(1392) <= \<const0>\;
  LOCKSTEP_Master_Out(1393) <= \<const0>\;
  LOCKSTEP_Master_Out(1394) <= \<const0>\;
  LOCKSTEP_Master_Out(1395) <= \<const0>\;
  LOCKSTEP_Master_Out(1396) <= \<const0>\;
  LOCKSTEP_Master_Out(1397) <= \<const0>\;
  LOCKSTEP_Master_Out(1398) <= \<const0>\;
  LOCKSTEP_Master_Out(1399) <= \<const0>\;
  LOCKSTEP_Master_Out(1400) <= \<const0>\;
  LOCKSTEP_Master_Out(1401) <= \<const0>\;
  LOCKSTEP_Master_Out(1402) <= \<const0>\;
  LOCKSTEP_Master_Out(1403) <= \<const0>\;
  LOCKSTEP_Master_Out(1404) <= \<const0>\;
  LOCKSTEP_Master_Out(1405) <= \<const0>\;
  LOCKSTEP_Master_Out(1406) <= \<const0>\;
  LOCKSTEP_Master_Out(1407) <= \<const0>\;
  LOCKSTEP_Master_Out(1408) <= \<const0>\;
  LOCKSTEP_Master_Out(1409) <= \<const0>\;
  LOCKSTEP_Master_Out(1410) <= \<const0>\;
  LOCKSTEP_Master_Out(1411) <= \<const0>\;
  LOCKSTEP_Master_Out(1412) <= \<const0>\;
  LOCKSTEP_Master_Out(1413) <= \<const0>\;
  LOCKSTEP_Master_Out(1414) <= \<const0>\;
  LOCKSTEP_Master_Out(1415) <= \<const0>\;
  LOCKSTEP_Master_Out(1416) <= \<const0>\;
  LOCKSTEP_Master_Out(1417) <= \<const0>\;
  LOCKSTEP_Master_Out(1418) <= \<const0>\;
  LOCKSTEP_Master_Out(1419) <= \<const0>\;
  LOCKSTEP_Master_Out(1420) <= \<const0>\;
  LOCKSTEP_Master_Out(1421) <= \<const0>\;
  LOCKSTEP_Master_Out(1422) <= \<const0>\;
  LOCKSTEP_Master_Out(1423) <= \<const0>\;
  LOCKSTEP_Master_Out(1424) <= \<const0>\;
  LOCKSTEP_Master_Out(1425) <= \<const0>\;
  LOCKSTEP_Master_Out(1426) <= \<const0>\;
  LOCKSTEP_Master_Out(1427) <= \<const0>\;
  LOCKSTEP_Master_Out(1428) <= \<const0>\;
  LOCKSTEP_Master_Out(1429) <= \<const0>\;
  LOCKSTEP_Master_Out(1430) <= \<const0>\;
  LOCKSTEP_Master_Out(1431) <= \<const0>\;
  LOCKSTEP_Master_Out(1432) <= \<const0>\;
  LOCKSTEP_Master_Out(1433) <= \<const0>\;
  LOCKSTEP_Master_Out(1434) <= \<const0>\;
  LOCKSTEP_Master_Out(1435) <= \<const0>\;
  LOCKSTEP_Master_Out(1436) <= \<const0>\;
  LOCKSTEP_Master_Out(1437) <= \<const0>\;
  LOCKSTEP_Master_Out(1438) <= \<const0>\;
  LOCKSTEP_Master_Out(1439) <= \<const0>\;
  LOCKSTEP_Master_Out(1440) <= \<const0>\;
  LOCKSTEP_Master_Out(1441) <= \<const0>\;
  LOCKSTEP_Master_Out(1442) <= \<const0>\;
  LOCKSTEP_Master_Out(1443) <= \<const0>\;
  LOCKSTEP_Master_Out(1444) <= \<const0>\;
  LOCKSTEP_Master_Out(1445) <= \<const0>\;
  LOCKSTEP_Master_Out(1446) <= \<const0>\;
  LOCKSTEP_Master_Out(1447) <= \<const0>\;
  LOCKSTEP_Master_Out(1448) <= \<const0>\;
  LOCKSTEP_Master_Out(1449) <= \<const0>\;
  LOCKSTEP_Master_Out(1450) <= \<const0>\;
  LOCKSTEP_Master_Out(1451) <= \<const0>\;
  LOCKSTEP_Master_Out(1452) <= \<const0>\;
  LOCKSTEP_Master_Out(1453) <= \<const0>\;
  LOCKSTEP_Master_Out(1454) <= \<const0>\;
  LOCKSTEP_Master_Out(1455) <= \<const0>\;
  LOCKSTEP_Master_Out(1456) <= \<const0>\;
  LOCKSTEP_Master_Out(1457) <= \<const0>\;
  LOCKSTEP_Master_Out(1458) <= \<const0>\;
  LOCKSTEP_Master_Out(1459) <= \<const0>\;
  LOCKSTEP_Master_Out(1460) <= \<const0>\;
  LOCKSTEP_Master_Out(1461) <= \<const0>\;
  LOCKSTEP_Master_Out(1462) <= \<const0>\;
  LOCKSTEP_Master_Out(1463) <= \<const0>\;
  LOCKSTEP_Master_Out(1464) <= \<const0>\;
  LOCKSTEP_Master_Out(1465) <= \<const0>\;
  LOCKSTEP_Master_Out(1466) <= \<const0>\;
  LOCKSTEP_Master_Out(1467) <= \<const0>\;
  LOCKSTEP_Master_Out(1468) <= \<const0>\;
  LOCKSTEP_Master_Out(1469) <= \<const0>\;
  LOCKSTEP_Master_Out(1470) <= \<const0>\;
  LOCKSTEP_Master_Out(1471) <= \<const0>\;
  LOCKSTEP_Master_Out(1472) <= \<const0>\;
  LOCKSTEP_Master_Out(1473) <= \<const0>\;
  LOCKSTEP_Master_Out(1474) <= \<const0>\;
  LOCKSTEP_Master_Out(1475) <= \<const0>\;
  LOCKSTEP_Master_Out(1476) <= \<const0>\;
  LOCKSTEP_Master_Out(1477) <= \<const0>\;
  LOCKSTEP_Master_Out(1478) <= \<const0>\;
  LOCKSTEP_Master_Out(1479) <= \<const0>\;
  LOCKSTEP_Master_Out(1480) <= \<const0>\;
  LOCKSTEP_Master_Out(1481) <= \<const0>\;
  LOCKSTEP_Master_Out(1482) <= \<const0>\;
  LOCKSTEP_Master_Out(1483) <= \<const0>\;
  LOCKSTEP_Master_Out(1484) <= \<const0>\;
  LOCKSTEP_Master_Out(1485) <= \<const0>\;
  LOCKSTEP_Master_Out(1486) <= \<const0>\;
  LOCKSTEP_Master_Out(1487) <= \<const0>\;
  LOCKSTEP_Master_Out(1488) <= \<const0>\;
  LOCKSTEP_Master_Out(1489) <= \<const0>\;
  LOCKSTEP_Master_Out(1490) <= \<const0>\;
  LOCKSTEP_Master_Out(1491) <= \<const0>\;
  LOCKSTEP_Master_Out(1492) <= \<const0>\;
  LOCKSTEP_Master_Out(1493) <= \<const0>\;
  LOCKSTEP_Master_Out(1494) <= \<const0>\;
  LOCKSTEP_Master_Out(1495) <= \<const0>\;
  LOCKSTEP_Master_Out(1496) <= \<const0>\;
  LOCKSTEP_Master_Out(1497) <= \<const0>\;
  LOCKSTEP_Master_Out(1498) <= \<const0>\;
  LOCKSTEP_Master_Out(1499) <= \<const0>\;
  LOCKSTEP_Master_Out(1500) <= \<const0>\;
  LOCKSTEP_Master_Out(1501) <= \<const0>\;
  LOCKSTEP_Master_Out(1502) <= \<const0>\;
  LOCKSTEP_Master_Out(1503) <= \<const0>\;
  LOCKSTEP_Master_Out(1504) <= \<const0>\;
  LOCKSTEP_Master_Out(1505) <= \<const0>\;
  LOCKSTEP_Master_Out(1506) <= \<const0>\;
  LOCKSTEP_Master_Out(1507) <= \<const0>\;
  LOCKSTEP_Master_Out(1508) <= \<const0>\;
  LOCKSTEP_Master_Out(1509) <= \<const0>\;
  LOCKSTEP_Master_Out(1510) <= \<const0>\;
  LOCKSTEP_Master_Out(1511) <= \<const0>\;
  LOCKSTEP_Master_Out(1512) <= \<const0>\;
  LOCKSTEP_Master_Out(1513) <= \<const0>\;
  LOCKSTEP_Master_Out(1514) <= \<const0>\;
  LOCKSTEP_Master_Out(1515) <= \<const0>\;
  LOCKSTEP_Master_Out(1516) <= \<const0>\;
  LOCKSTEP_Master_Out(1517) <= \<const0>\;
  LOCKSTEP_Master_Out(1518) <= \<const0>\;
  LOCKSTEP_Master_Out(1519) <= \<const0>\;
  LOCKSTEP_Master_Out(1520) <= \<const0>\;
  LOCKSTEP_Master_Out(1521) <= \<const0>\;
  LOCKSTEP_Master_Out(1522) <= \<const0>\;
  LOCKSTEP_Master_Out(1523) <= \<const0>\;
  LOCKSTEP_Master_Out(1524) <= \<const0>\;
  LOCKSTEP_Master_Out(1525) <= \<const0>\;
  LOCKSTEP_Master_Out(1526) <= \<const0>\;
  LOCKSTEP_Master_Out(1527) <= \<const0>\;
  LOCKSTEP_Master_Out(1528) <= \<const0>\;
  LOCKSTEP_Master_Out(1529) <= \<const0>\;
  LOCKSTEP_Master_Out(1530) <= \<const0>\;
  LOCKSTEP_Master_Out(1531) <= \<const0>\;
  LOCKSTEP_Master_Out(1532) <= \<const0>\;
  LOCKSTEP_Master_Out(1533) <= \<const0>\;
  LOCKSTEP_Master_Out(1534) <= \<const0>\;
  LOCKSTEP_Master_Out(1535) <= \<const0>\;
  LOCKSTEP_Master_Out(1536) <= \<const0>\;
  LOCKSTEP_Master_Out(1537) <= \<const0>\;
  LOCKSTEP_Master_Out(1538) <= \<const0>\;
  LOCKSTEP_Master_Out(1539) <= \<const0>\;
  LOCKSTEP_Master_Out(1540) <= \<const0>\;
  LOCKSTEP_Master_Out(1541) <= \<const0>\;
  LOCKSTEP_Master_Out(1542) <= \<const0>\;
  LOCKSTEP_Master_Out(1543) <= \<const0>\;
  LOCKSTEP_Master_Out(1544) <= \<const0>\;
  LOCKSTEP_Master_Out(1545) <= \<const0>\;
  LOCKSTEP_Master_Out(1546) <= \<const0>\;
  LOCKSTEP_Master_Out(1547) <= \<const0>\;
  LOCKSTEP_Master_Out(1548) <= \<const0>\;
  LOCKSTEP_Master_Out(1549) <= \<const0>\;
  LOCKSTEP_Master_Out(1550) <= \<const0>\;
  LOCKSTEP_Master_Out(1551) <= \<const0>\;
  LOCKSTEP_Master_Out(1552) <= \<const0>\;
  LOCKSTEP_Master_Out(1553) <= \<const0>\;
  LOCKSTEP_Master_Out(1554) <= \<const0>\;
  LOCKSTEP_Master_Out(1555) <= \<const0>\;
  LOCKSTEP_Master_Out(1556) <= \<const0>\;
  LOCKSTEP_Master_Out(1557) <= \<const0>\;
  LOCKSTEP_Master_Out(1558) <= \<const0>\;
  LOCKSTEP_Master_Out(1559) <= \<const0>\;
  LOCKSTEP_Master_Out(1560) <= \<const0>\;
  LOCKSTEP_Master_Out(1561) <= \<const0>\;
  LOCKSTEP_Master_Out(1562) <= \<const0>\;
  LOCKSTEP_Master_Out(1563) <= \<const0>\;
  LOCKSTEP_Master_Out(1564) <= \<const0>\;
  LOCKSTEP_Master_Out(1565) <= \<const0>\;
  LOCKSTEP_Master_Out(1566) <= \<const0>\;
  LOCKSTEP_Master_Out(1567) <= \<const0>\;
  LOCKSTEP_Master_Out(1568) <= \<const0>\;
  LOCKSTEP_Master_Out(1569) <= \<const0>\;
  LOCKSTEP_Master_Out(1570) <= \<const0>\;
  LOCKSTEP_Master_Out(1571) <= \<const0>\;
  LOCKSTEP_Master_Out(1572) <= \<const0>\;
  LOCKSTEP_Master_Out(1573) <= \<const0>\;
  LOCKSTEP_Master_Out(1574) <= \<const0>\;
  LOCKSTEP_Master_Out(1575) <= \<const0>\;
  LOCKSTEP_Master_Out(1576) <= \<const0>\;
  LOCKSTEP_Master_Out(1577) <= \<const0>\;
  LOCKSTEP_Master_Out(1578) <= \<const0>\;
  LOCKSTEP_Master_Out(1579) <= \<const0>\;
  LOCKSTEP_Master_Out(1580) <= \<const0>\;
  LOCKSTEP_Master_Out(1581) <= \<const0>\;
  LOCKSTEP_Master_Out(1582) <= \<const0>\;
  LOCKSTEP_Master_Out(1583) <= \<const0>\;
  LOCKSTEP_Master_Out(1584) <= \<const0>\;
  LOCKSTEP_Master_Out(1585) <= \<const0>\;
  LOCKSTEP_Master_Out(1586) <= \<const0>\;
  LOCKSTEP_Master_Out(1587) <= \<const0>\;
  LOCKSTEP_Master_Out(1588) <= \<const0>\;
  LOCKSTEP_Master_Out(1589) <= \<const0>\;
  LOCKSTEP_Master_Out(1590) <= \<const0>\;
  LOCKSTEP_Master_Out(1591) <= \<const0>\;
  LOCKSTEP_Master_Out(1592) <= \<const0>\;
  LOCKSTEP_Master_Out(1593) <= \<const0>\;
  LOCKSTEP_Master_Out(1594) <= \<const0>\;
  LOCKSTEP_Master_Out(1595) <= \<const0>\;
  LOCKSTEP_Master_Out(1596) <= \<const0>\;
  LOCKSTEP_Master_Out(1597) <= \<const0>\;
  LOCKSTEP_Master_Out(1598) <= \<const0>\;
  LOCKSTEP_Master_Out(1599) <= \<const0>\;
  LOCKSTEP_Master_Out(1600) <= \<const0>\;
  LOCKSTEP_Master_Out(1601) <= \<const0>\;
  LOCKSTEP_Master_Out(1602) <= \<const0>\;
  LOCKSTEP_Master_Out(1603) <= \<const0>\;
  LOCKSTEP_Master_Out(1604) <= \<const0>\;
  LOCKSTEP_Master_Out(1605) <= \<const0>\;
  LOCKSTEP_Master_Out(1606) <= \<const0>\;
  LOCKSTEP_Master_Out(1607) <= \<const0>\;
  LOCKSTEP_Master_Out(1608) <= \<const0>\;
  LOCKSTEP_Master_Out(1609) <= \<const0>\;
  LOCKSTEP_Master_Out(1610) <= \<const0>\;
  LOCKSTEP_Master_Out(1611) <= \<const0>\;
  LOCKSTEP_Master_Out(1612) <= \<const0>\;
  LOCKSTEP_Master_Out(1613) <= \<const0>\;
  LOCKSTEP_Master_Out(1614) <= \<const0>\;
  LOCKSTEP_Master_Out(1615) <= \<const0>\;
  LOCKSTEP_Master_Out(1616) <= \<const0>\;
  LOCKSTEP_Master_Out(1617) <= \<const0>\;
  LOCKSTEP_Master_Out(1618) <= \<const0>\;
  LOCKSTEP_Master_Out(1619) <= \<const0>\;
  LOCKSTEP_Master_Out(1620) <= \<const0>\;
  LOCKSTEP_Master_Out(1621) <= \<const0>\;
  LOCKSTEP_Master_Out(1622) <= \<const0>\;
  LOCKSTEP_Master_Out(1623) <= \<const0>\;
  LOCKSTEP_Master_Out(1624) <= \<const0>\;
  LOCKSTEP_Master_Out(1625) <= \<const0>\;
  LOCKSTEP_Master_Out(1626) <= \<const0>\;
  LOCKSTEP_Master_Out(1627) <= \<const0>\;
  LOCKSTEP_Master_Out(1628) <= \<const0>\;
  LOCKSTEP_Master_Out(1629) <= \<const0>\;
  LOCKSTEP_Master_Out(1630) <= \<const0>\;
  LOCKSTEP_Master_Out(1631) <= \<const0>\;
  LOCKSTEP_Master_Out(1632) <= \<const0>\;
  LOCKSTEP_Master_Out(1633) <= \<const0>\;
  LOCKSTEP_Master_Out(1634) <= \<const0>\;
  LOCKSTEP_Master_Out(1635) <= \<const0>\;
  LOCKSTEP_Master_Out(1636) <= \<const0>\;
  LOCKSTEP_Master_Out(1637) <= \<const0>\;
  LOCKSTEP_Master_Out(1638) <= \<const0>\;
  LOCKSTEP_Master_Out(1639) <= \<const0>\;
  LOCKSTEP_Master_Out(1640) <= \<const0>\;
  LOCKSTEP_Master_Out(1641) <= \<const0>\;
  LOCKSTEP_Master_Out(1642) <= \<const0>\;
  LOCKSTEP_Master_Out(1643) <= \<const0>\;
  LOCKSTEP_Master_Out(1644) <= \<const0>\;
  LOCKSTEP_Master_Out(1645) <= \<const0>\;
  LOCKSTEP_Master_Out(1646) <= \<const0>\;
  LOCKSTEP_Master_Out(1647) <= \<const0>\;
  LOCKSTEP_Master_Out(1648) <= \<const0>\;
  LOCKSTEP_Master_Out(1649) <= \<const0>\;
  LOCKSTEP_Master_Out(1650) <= \<const0>\;
  LOCKSTEP_Master_Out(1651) <= \<const0>\;
  LOCKSTEP_Master_Out(1652) <= \<const0>\;
  LOCKSTEP_Master_Out(1653) <= \<const0>\;
  LOCKSTEP_Master_Out(1654) <= \<const0>\;
  LOCKSTEP_Master_Out(1655) <= \<const0>\;
  LOCKSTEP_Master_Out(1656) <= \<const0>\;
  LOCKSTEP_Master_Out(1657) <= \<const0>\;
  LOCKSTEP_Master_Out(1658) <= \<const0>\;
  LOCKSTEP_Master_Out(1659) <= \<const0>\;
  LOCKSTEP_Master_Out(1660) <= \<const0>\;
  LOCKSTEP_Master_Out(1661) <= \<const0>\;
  LOCKSTEP_Master_Out(1662) <= \<const0>\;
  LOCKSTEP_Master_Out(1663) <= \<const0>\;
  LOCKSTEP_Master_Out(1664) <= \<const0>\;
  LOCKSTEP_Master_Out(1665) <= \<const0>\;
  LOCKSTEP_Master_Out(1666) <= \<const0>\;
  LOCKSTEP_Master_Out(1667) <= \<const0>\;
  LOCKSTEP_Master_Out(1668) <= \<const0>\;
  LOCKSTEP_Master_Out(1669) <= \<const0>\;
  LOCKSTEP_Master_Out(1670) <= \<const0>\;
  LOCKSTEP_Master_Out(1671) <= \<const0>\;
  LOCKSTEP_Master_Out(1672) <= \<const0>\;
  LOCKSTEP_Master_Out(1673) <= \<const0>\;
  LOCKSTEP_Master_Out(1674) <= \<const0>\;
  LOCKSTEP_Master_Out(1675) <= \<const0>\;
  LOCKSTEP_Master_Out(1676) <= \<const0>\;
  LOCKSTEP_Master_Out(1677) <= \<const0>\;
  LOCKSTEP_Master_Out(1678) <= \<const0>\;
  LOCKSTEP_Master_Out(1679) <= \<const0>\;
  LOCKSTEP_Master_Out(1680) <= \<const0>\;
  LOCKSTEP_Master_Out(1681) <= \<const0>\;
  LOCKSTEP_Master_Out(1682) <= \<const0>\;
  LOCKSTEP_Master_Out(1683) <= \<const0>\;
  LOCKSTEP_Master_Out(1684) <= \<const0>\;
  LOCKSTEP_Master_Out(1685) <= \<const0>\;
  LOCKSTEP_Master_Out(1686) <= \<const0>\;
  LOCKSTEP_Master_Out(1687) <= \<const0>\;
  LOCKSTEP_Master_Out(1688) <= \<const0>\;
  LOCKSTEP_Master_Out(1689) <= \<const0>\;
  LOCKSTEP_Master_Out(1690) <= \<const0>\;
  LOCKSTEP_Master_Out(1691) <= \<const0>\;
  LOCKSTEP_Master_Out(1692) <= \<const0>\;
  LOCKSTEP_Master_Out(1693) <= \<const0>\;
  LOCKSTEP_Master_Out(1694) <= \<const0>\;
  LOCKSTEP_Master_Out(1695) <= \<const0>\;
  LOCKSTEP_Master_Out(1696) <= \<const0>\;
  LOCKSTEP_Master_Out(1697) <= \<const0>\;
  LOCKSTEP_Master_Out(1698) <= \<const0>\;
  LOCKSTEP_Master_Out(1699) <= \<const0>\;
  LOCKSTEP_Master_Out(1700) <= \<const0>\;
  LOCKSTEP_Master_Out(1701) <= \<const0>\;
  LOCKSTEP_Master_Out(1702) <= \<const0>\;
  LOCKSTEP_Master_Out(1703) <= \<const0>\;
  LOCKSTEP_Master_Out(1704) <= \<const0>\;
  LOCKSTEP_Master_Out(1705) <= \<const0>\;
  LOCKSTEP_Master_Out(1706) <= \<const0>\;
  LOCKSTEP_Master_Out(1707) <= \<const0>\;
  LOCKSTEP_Master_Out(1708) <= \<const0>\;
  LOCKSTEP_Master_Out(1709) <= \<const0>\;
  LOCKSTEP_Master_Out(1710) <= \<const0>\;
  LOCKSTEP_Master_Out(1711) <= \<const0>\;
  LOCKSTEP_Master_Out(1712) <= \<const0>\;
  LOCKSTEP_Master_Out(1713) <= \<const0>\;
  LOCKSTEP_Master_Out(1714) <= \<const0>\;
  LOCKSTEP_Master_Out(1715) <= \<const0>\;
  LOCKSTEP_Master_Out(1716) <= \<const0>\;
  LOCKSTEP_Master_Out(1717) <= \<const0>\;
  LOCKSTEP_Master_Out(1718) <= \<const0>\;
  LOCKSTEP_Master_Out(1719) <= \<const0>\;
  LOCKSTEP_Master_Out(1720) <= \<const0>\;
  LOCKSTEP_Master_Out(1721) <= \<const0>\;
  LOCKSTEP_Master_Out(1722) <= \<const0>\;
  LOCKSTEP_Master_Out(1723) <= \<const0>\;
  LOCKSTEP_Master_Out(1724) <= \<const0>\;
  LOCKSTEP_Master_Out(1725) <= \<const0>\;
  LOCKSTEP_Master_Out(1726) <= \<const0>\;
  LOCKSTEP_Master_Out(1727) <= \<const0>\;
  LOCKSTEP_Master_Out(1728) <= \<const0>\;
  LOCKSTEP_Master_Out(1729) <= \<const0>\;
  LOCKSTEP_Master_Out(1730) <= \<const0>\;
  LOCKSTEP_Master_Out(1731) <= \<const0>\;
  LOCKSTEP_Master_Out(1732) <= \<const0>\;
  LOCKSTEP_Master_Out(1733) <= \<const0>\;
  LOCKSTEP_Master_Out(1734) <= \<const0>\;
  LOCKSTEP_Master_Out(1735) <= \<const0>\;
  LOCKSTEP_Master_Out(1736) <= \<const0>\;
  LOCKSTEP_Master_Out(1737) <= \<const0>\;
  LOCKSTEP_Master_Out(1738) <= \<const0>\;
  LOCKSTEP_Master_Out(1739) <= \<const0>\;
  LOCKSTEP_Master_Out(1740) <= \<const0>\;
  LOCKSTEP_Master_Out(1741) <= \<const0>\;
  LOCKSTEP_Master_Out(1742) <= \<const0>\;
  LOCKSTEP_Master_Out(1743) <= \<const0>\;
  LOCKSTEP_Master_Out(1744) <= \<const0>\;
  LOCKSTEP_Master_Out(1745) <= \<const0>\;
  LOCKSTEP_Master_Out(1746) <= \<const0>\;
  LOCKSTEP_Master_Out(1747) <= \<const0>\;
  LOCKSTEP_Master_Out(1748) <= \<const0>\;
  LOCKSTEP_Master_Out(1749) <= \<const0>\;
  LOCKSTEP_Master_Out(1750) <= \<const0>\;
  LOCKSTEP_Master_Out(1751) <= \<const0>\;
  LOCKSTEP_Master_Out(1752) <= \<const0>\;
  LOCKSTEP_Master_Out(1753) <= \<const0>\;
  LOCKSTEP_Master_Out(1754) <= \<const0>\;
  LOCKSTEP_Master_Out(1755) <= \<const0>\;
  LOCKSTEP_Master_Out(1756) <= \<const0>\;
  LOCKSTEP_Master_Out(1757) <= \<const0>\;
  LOCKSTEP_Master_Out(1758) <= \<const0>\;
  LOCKSTEP_Master_Out(1759) <= \<const0>\;
  LOCKSTEP_Master_Out(1760) <= \<const0>\;
  LOCKSTEP_Master_Out(1761) <= \<const0>\;
  LOCKSTEP_Master_Out(1762) <= \<const0>\;
  LOCKSTEP_Master_Out(1763) <= \<const0>\;
  LOCKSTEP_Master_Out(1764) <= \<const0>\;
  LOCKSTEP_Master_Out(1765) <= \<const0>\;
  LOCKSTEP_Master_Out(1766) <= \<const0>\;
  LOCKSTEP_Master_Out(1767) <= \<const0>\;
  LOCKSTEP_Master_Out(1768) <= \<const0>\;
  LOCKSTEP_Master_Out(1769) <= \<const0>\;
  LOCKSTEP_Master_Out(1770) <= \<const0>\;
  LOCKSTEP_Master_Out(1771) <= \<const0>\;
  LOCKSTEP_Master_Out(1772) <= \<const0>\;
  LOCKSTEP_Master_Out(1773) <= \<const0>\;
  LOCKSTEP_Master_Out(1774) <= \<const0>\;
  LOCKSTEP_Master_Out(1775) <= \<const0>\;
  LOCKSTEP_Master_Out(1776) <= \<const0>\;
  LOCKSTEP_Master_Out(1777) <= \<const0>\;
  LOCKSTEP_Master_Out(1778) <= \<const0>\;
  LOCKSTEP_Master_Out(1779) <= \<const0>\;
  LOCKSTEP_Master_Out(1780) <= \<const0>\;
  LOCKSTEP_Master_Out(1781) <= \<const0>\;
  LOCKSTEP_Master_Out(1782) <= \<const0>\;
  LOCKSTEP_Master_Out(1783) <= \<const0>\;
  LOCKSTEP_Master_Out(1784) <= \<const0>\;
  LOCKSTEP_Master_Out(1785) <= \<const0>\;
  LOCKSTEP_Master_Out(1786) <= \<const0>\;
  LOCKSTEP_Master_Out(1787) <= \<const0>\;
  LOCKSTEP_Master_Out(1788) <= \<const0>\;
  LOCKSTEP_Master_Out(1789) <= \<const0>\;
  LOCKSTEP_Master_Out(1790) <= \<const0>\;
  LOCKSTEP_Master_Out(1791) <= \<const0>\;
  LOCKSTEP_Master_Out(1792) <= \<const0>\;
  LOCKSTEP_Master_Out(1793) <= \<const0>\;
  LOCKSTEP_Master_Out(1794) <= \<const0>\;
  LOCKSTEP_Master_Out(1795) <= \<const0>\;
  LOCKSTEP_Master_Out(1796) <= \<const0>\;
  LOCKSTEP_Master_Out(1797) <= \<const0>\;
  LOCKSTEP_Master_Out(1798) <= \<const0>\;
  LOCKSTEP_Master_Out(1799) <= \<const0>\;
  LOCKSTEP_Master_Out(1800) <= \<const0>\;
  LOCKSTEP_Master_Out(1801) <= \<const0>\;
  LOCKSTEP_Master_Out(1802) <= \<const0>\;
  LOCKSTEP_Master_Out(1803) <= \<const0>\;
  LOCKSTEP_Master_Out(1804) <= \<const0>\;
  LOCKSTEP_Master_Out(1805) <= \<const0>\;
  LOCKSTEP_Master_Out(1806) <= \<const0>\;
  LOCKSTEP_Master_Out(1807) <= \<const0>\;
  LOCKSTEP_Master_Out(1808) <= \<const0>\;
  LOCKSTEP_Master_Out(1809) <= \<const0>\;
  LOCKSTEP_Master_Out(1810) <= \<const0>\;
  LOCKSTEP_Master_Out(1811) <= \<const0>\;
  LOCKSTEP_Master_Out(1812) <= \<const0>\;
  LOCKSTEP_Master_Out(1813) <= \<const0>\;
  LOCKSTEP_Master_Out(1814) <= \<const0>\;
  LOCKSTEP_Master_Out(1815) <= \<const0>\;
  LOCKSTEP_Master_Out(1816) <= \<const0>\;
  LOCKSTEP_Master_Out(1817) <= \<const0>\;
  LOCKSTEP_Master_Out(1818) <= \<const0>\;
  LOCKSTEP_Master_Out(1819) <= \<const0>\;
  LOCKSTEP_Master_Out(1820) <= \<const0>\;
  LOCKSTEP_Master_Out(1821) <= \<const0>\;
  LOCKSTEP_Master_Out(1822) <= \<const0>\;
  LOCKSTEP_Master_Out(1823) <= \<const0>\;
  LOCKSTEP_Master_Out(1824) <= \<const0>\;
  LOCKSTEP_Master_Out(1825) <= \<const0>\;
  LOCKSTEP_Master_Out(1826) <= \<const0>\;
  LOCKSTEP_Master_Out(1827) <= \<const0>\;
  LOCKSTEP_Master_Out(1828) <= \<const0>\;
  LOCKSTEP_Master_Out(1829) <= \<const0>\;
  LOCKSTEP_Master_Out(1830) <= \<const0>\;
  LOCKSTEP_Master_Out(1831) <= \<const0>\;
  LOCKSTEP_Master_Out(1832) <= \<const0>\;
  LOCKSTEP_Master_Out(1833) <= \<const0>\;
  LOCKSTEP_Master_Out(1834) <= \<const0>\;
  LOCKSTEP_Master_Out(1835) <= \<const0>\;
  LOCKSTEP_Master_Out(1836) <= \<const0>\;
  LOCKSTEP_Master_Out(1837) <= \<const0>\;
  LOCKSTEP_Master_Out(1838) <= \<const0>\;
  LOCKSTEP_Master_Out(1839) <= \<const0>\;
  LOCKSTEP_Master_Out(1840) <= \<const0>\;
  LOCKSTEP_Master_Out(1841) <= \<const0>\;
  LOCKSTEP_Master_Out(1842) <= \<const0>\;
  LOCKSTEP_Master_Out(1843) <= \<const0>\;
  LOCKSTEP_Master_Out(1844) <= \<const0>\;
  LOCKSTEP_Master_Out(1845) <= \<const0>\;
  LOCKSTEP_Master_Out(1846) <= \<const0>\;
  LOCKSTEP_Master_Out(1847) <= \<const0>\;
  LOCKSTEP_Master_Out(1848) <= \<const0>\;
  LOCKSTEP_Master_Out(1849) <= \<const0>\;
  LOCKSTEP_Master_Out(1850) <= \<const0>\;
  LOCKSTEP_Master_Out(1851) <= \<const0>\;
  LOCKSTEP_Master_Out(1852) <= \<const0>\;
  LOCKSTEP_Master_Out(1853) <= \<const0>\;
  LOCKSTEP_Master_Out(1854) <= \<const0>\;
  LOCKSTEP_Master_Out(1855) <= \<const0>\;
  LOCKSTEP_Master_Out(1856) <= \<const0>\;
  LOCKSTEP_Master_Out(1857) <= \<const0>\;
  LOCKSTEP_Master_Out(1858) <= \<const0>\;
  LOCKSTEP_Master_Out(1859) <= \<const0>\;
  LOCKSTEP_Master_Out(1860) <= \<const0>\;
  LOCKSTEP_Master_Out(1861) <= \<const0>\;
  LOCKSTEP_Master_Out(1862) <= \<const0>\;
  LOCKSTEP_Master_Out(1863) <= \<const0>\;
  LOCKSTEP_Master_Out(1864) <= \<const0>\;
  LOCKSTEP_Master_Out(1865) <= \<const0>\;
  LOCKSTEP_Master_Out(1866) <= \<const0>\;
  LOCKSTEP_Master_Out(1867) <= \<const0>\;
  LOCKSTEP_Master_Out(1868) <= \<const0>\;
  LOCKSTEP_Master_Out(1869) <= \<const0>\;
  LOCKSTEP_Master_Out(1870) <= \<const0>\;
  LOCKSTEP_Master_Out(1871) <= \<const0>\;
  LOCKSTEP_Master_Out(1872) <= \<const0>\;
  LOCKSTEP_Master_Out(1873) <= \<const0>\;
  LOCKSTEP_Master_Out(1874) <= \<const0>\;
  LOCKSTEP_Master_Out(1875) <= \<const0>\;
  LOCKSTEP_Master_Out(1876) <= \<const0>\;
  LOCKSTEP_Master_Out(1877) <= \<const0>\;
  LOCKSTEP_Master_Out(1878) <= \<const0>\;
  LOCKSTEP_Master_Out(1879) <= \<const0>\;
  LOCKSTEP_Master_Out(1880) <= \<const0>\;
  LOCKSTEP_Master_Out(1881) <= \<const0>\;
  LOCKSTEP_Master_Out(1882) <= \<const0>\;
  LOCKSTEP_Master_Out(1883) <= \<const0>\;
  LOCKSTEP_Master_Out(1884) <= \<const0>\;
  LOCKSTEP_Master_Out(1885) <= \<const0>\;
  LOCKSTEP_Master_Out(1886) <= \<const0>\;
  LOCKSTEP_Master_Out(1887) <= \<const0>\;
  LOCKSTEP_Master_Out(1888) <= \<const0>\;
  LOCKSTEP_Master_Out(1889) <= \<const0>\;
  LOCKSTEP_Master_Out(1890) <= \<const0>\;
  LOCKSTEP_Master_Out(1891) <= \<const0>\;
  LOCKSTEP_Master_Out(1892) <= \<const0>\;
  LOCKSTEP_Master_Out(1893) <= \<const0>\;
  LOCKSTEP_Master_Out(1894) <= \<const0>\;
  LOCKSTEP_Master_Out(1895) <= \<const0>\;
  LOCKSTEP_Master_Out(1896) <= \<const0>\;
  LOCKSTEP_Master_Out(1897) <= \<const0>\;
  LOCKSTEP_Master_Out(1898) <= \<const0>\;
  LOCKSTEP_Master_Out(1899) <= \<const0>\;
  LOCKSTEP_Master_Out(1900) <= \<const0>\;
  LOCKSTEP_Master_Out(1901) <= \<const0>\;
  LOCKSTEP_Master_Out(1902) <= \<const0>\;
  LOCKSTEP_Master_Out(1903) <= \<const0>\;
  LOCKSTEP_Master_Out(1904) <= \<const0>\;
  LOCKSTEP_Master_Out(1905) <= \<const0>\;
  LOCKSTEP_Master_Out(1906) <= \<const0>\;
  LOCKSTEP_Master_Out(1907) <= \<const0>\;
  LOCKSTEP_Master_Out(1908) <= \<const0>\;
  LOCKSTEP_Master_Out(1909) <= \<const0>\;
  LOCKSTEP_Master_Out(1910) <= \<const0>\;
  LOCKSTEP_Master_Out(1911) <= \<const0>\;
  LOCKSTEP_Master_Out(1912) <= \<const0>\;
  LOCKSTEP_Master_Out(1913) <= \<const0>\;
  LOCKSTEP_Master_Out(1914) <= \<const0>\;
  LOCKSTEP_Master_Out(1915) <= \<const0>\;
  LOCKSTEP_Master_Out(1916) <= \<const0>\;
  LOCKSTEP_Master_Out(1917) <= \<const0>\;
  LOCKSTEP_Master_Out(1918) <= \<const0>\;
  LOCKSTEP_Master_Out(1919) <= \<const0>\;
  LOCKSTEP_Master_Out(1920) <= \<const0>\;
  LOCKSTEP_Master_Out(1921) <= \<const0>\;
  LOCKSTEP_Master_Out(1922) <= \<const0>\;
  LOCKSTEP_Master_Out(1923) <= \<const0>\;
  LOCKSTEP_Master_Out(1924) <= \<const0>\;
  LOCKSTEP_Master_Out(1925) <= \<const0>\;
  LOCKSTEP_Master_Out(1926) <= \<const0>\;
  LOCKSTEP_Master_Out(1927) <= \<const0>\;
  LOCKSTEP_Master_Out(1928) <= \<const0>\;
  LOCKSTEP_Master_Out(1929) <= \<const0>\;
  LOCKSTEP_Master_Out(1930) <= \<const0>\;
  LOCKSTEP_Master_Out(1931) <= \<const0>\;
  LOCKSTEP_Master_Out(1932) <= \<const0>\;
  LOCKSTEP_Master_Out(1933) <= \<const0>\;
  LOCKSTEP_Master_Out(1934) <= \<const0>\;
  LOCKSTEP_Master_Out(1935) <= \<const0>\;
  LOCKSTEP_Master_Out(1936) <= \<const0>\;
  LOCKSTEP_Master_Out(1937) <= \<const0>\;
  LOCKSTEP_Master_Out(1938) <= \<const0>\;
  LOCKSTEP_Master_Out(1939) <= \<const0>\;
  LOCKSTEP_Master_Out(1940) <= \<const0>\;
  LOCKSTEP_Master_Out(1941) <= \<const0>\;
  LOCKSTEP_Master_Out(1942) <= \<const0>\;
  LOCKSTEP_Master_Out(1943) <= \<const0>\;
  LOCKSTEP_Master_Out(1944) <= \<const0>\;
  LOCKSTEP_Master_Out(1945) <= \<const0>\;
  LOCKSTEP_Master_Out(1946) <= \<const0>\;
  LOCKSTEP_Master_Out(1947) <= \<const0>\;
  LOCKSTEP_Master_Out(1948) <= \<const0>\;
  LOCKSTEP_Master_Out(1949) <= \<const0>\;
  LOCKSTEP_Master_Out(1950) <= \<const0>\;
  LOCKSTEP_Master_Out(1951) <= \<const0>\;
  LOCKSTEP_Master_Out(1952) <= \<const0>\;
  LOCKSTEP_Master_Out(1953) <= \<const0>\;
  LOCKSTEP_Master_Out(1954) <= \<const0>\;
  LOCKSTEP_Master_Out(1955) <= \<const0>\;
  LOCKSTEP_Master_Out(1956) <= \<const0>\;
  LOCKSTEP_Master_Out(1957) <= \<const0>\;
  LOCKSTEP_Master_Out(1958) <= \<const0>\;
  LOCKSTEP_Master_Out(1959) <= \<const0>\;
  LOCKSTEP_Master_Out(1960) <= \<const0>\;
  LOCKSTEP_Master_Out(1961) <= \<const0>\;
  LOCKSTEP_Master_Out(1962) <= \<const0>\;
  LOCKSTEP_Master_Out(1963) <= \<const0>\;
  LOCKSTEP_Master_Out(1964) <= \<const0>\;
  LOCKSTEP_Master_Out(1965) <= \<const0>\;
  LOCKSTEP_Master_Out(1966) <= \<const0>\;
  LOCKSTEP_Master_Out(1967) <= \<const0>\;
  LOCKSTEP_Master_Out(1968) <= \<const0>\;
  LOCKSTEP_Master_Out(1969) <= \<const0>\;
  LOCKSTEP_Master_Out(1970) <= \<const0>\;
  LOCKSTEP_Master_Out(1971) <= \<const0>\;
  LOCKSTEP_Master_Out(1972) <= \<const0>\;
  LOCKSTEP_Master_Out(1973) <= \<const0>\;
  LOCKSTEP_Master_Out(1974) <= \<const0>\;
  LOCKSTEP_Master_Out(1975) <= \<const0>\;
  LOCKSTEP_Master_Out(1976) <= \<const0>\;
  LOCKSTEP_Master_Out(1977) <= \<const0>\;
  LOCKSTEP_Master_Out(1978) <= \<const0>\;
  LOCKSTEP_Master_Out(1979) <= \<const0>\;
  LOCKSTEP_Master_Out(1980) <= \<const0>\;
  LOCKSTEP_Master_Out(1981) <= \<const0>\;
  LOCKSTEP_Master_Out(1982) <= \<const0>\;
  LOCKSTEP_Master_Out(1983) <= \<const0>\;
  LOCKSTEP_Master_Out(1984) <= \<const0>\;
  LOCKSTEP_Master_Out(1985) <= \<const0>\;
  LOCKSTEP_Master_Out(1986) <= \<const0>\;
  LOCKSTEP_Master_Out(1987) <= \<const0>\;
  LOCKSTEP_Master_Out(1988) <= \<const0>\;
  LOCKSTEP_Master_Out(1989) <= \<const0>\;
  LOCKSTEP_Master_Out(1990) <= \<const0>\;
  LOCKSTEP_Master_Out(1991) <= \<const0>\;
  LOCKSTEP_Master_Out(1992) <= \<const0>\;
  LOCKSTEP_Master_Out(1993) <= \<const0>\;
  LOCKSTEP_Master_Out(1994) <= \<const0>\;
  LOCKSTEP_Master_Out(1995) <= \<const0>\;
  LOCKSTEP_Master_Out(1996) <= \<const0>\;
  LOCKSTEP_Master_Out(1997) <= \<const0>\;
  LOCKSTEP_Master_Out(1998) <= \<const0>\;
  LOCKSTEP_Master_Out(1999) <= \<const0>\;
  LOCKSTEP_Master_Out(2000) <= \<const0>\;
  LOCKSTEP_Master_Out(2001) <= \<const0>\;
  LOCKSTEP_Master_Out(2002) <= \<const0>\;
  LOCKSTEP_Master_Out(2003) <= \<const0>\;
  LOCKSTEP_Master_Out(2004) <= \<const0>\;
  LOCKSTEP_Master_Out(2005) <= \<const0>\;
  LOCKSTEP_Master_Out(2006) <= \<const0>\;
  LOCKSTEP_Master_Out(2007) <= \<const0>\;
  LOCKSTEP_Master_Out(2008) <= \<const0>\;
  LOCKSTEP_Master_Out(2009) <= \<const0>\;
  LOCKSTEP_Master_Out(2010) <= \<const0>\;
  LOCKSTEP_Master_Out(2011) <= \<const0>\;
  LOCKSTEP_Master_Out(2012) <= \<const0>\;
  LOCKSTEP_Master_Out(2013) <= \<const0>\;
  LOCKSTEP_Master_Out(2014) <= \<const0>\;
  LOCKSTEP_Master_Out(2015) <= \<const0>\;
  LOCKSTEP_Master_Out(2016) <= \<const0>\;
  LOCKSTEP_Master_Out(2017) <= \<const0>\;
  LOCKSTEP_Master_Out(2018) <= \<const0>\;
  LOCKSTEP_Master_Out(2019) <= \<const0>\;
  LOCKSTEP_Master_Out(2020) <= \<const0>\;
  LOCKSTEP_Master_Out(2021) <= \<const0>\;
  LOCKSTEP_Master_Out(2022) <= \<const0>\;
  LOCKSTEP_Master_Out(2023) <= \<const0>\;
  LOCKSTEP_Master_Out(2024) <= \<const0>\;
  LOCKSTEP_Master_Out(2025) <= \<const0>\;
  LOCKSTEP_Master_Out(2026) <= \<const0>\;
  LOCKSTEP_Master_Out(2027) <= \<const0>\;
  LOCKSTEP_Master_Out(2028) <= \<const0>\;
  LOCKSTEP_Master_Out(2029) <= \<const0>\;
  LOCKSTEP_Master_Out(2030) <= \<const0>\;
  LOCKSTEP_Master_Out(2031) <= \<const0>\;
  LOCKSTEP_Master_Out(2032) <= \<const0>\;
  LOCKSTEP_Master_Out(2033) <= \<const0>\;
  LOCKSTEP_Master_Out(2034) <= \<const0>\;
  LOCKSTEP_Master_Out(2035) <= \<const0>\;
  LOCKSTEP_Master_Out(2036) <= \<const0>\;
  LOCKSTEP_Master_Out(2037) <= \<const0>\;
  LOCKSTEP_Master_Out(2038) <= \<const0>\;
  LOCKSTEP_Master_Out(2039) <= \<const0>\;
  LOCKSTEP_Master_Out(2040) <= \<const0>\;
  LOCKSTEP_Master_Out(2041) <= \<const0>\;
  LOCKSTEP_Master_Out(2042) <= \<const0>\;
  LOCKSTEP_Master_Out(2043) <= \<const0>\;
  LOCKSTEP_Master_Out(2044) <= \<const0>\;
  LOCKSTEP_Master_Out(2045) <= \<const0>\;
  LOCKSTEP_Master_Out(2046) <= \<const0>\;
  LOCKSTEP_Master_Out(2047) <= \<const0>\;
  LOCKSTEP_Master_Out(2048) <= \<const0>\;
  LOCKSTEP_Master_Out(2049) <= \<const0>\;
  LOCKSTEP_Master_Out(2050) <= \<const0>\;
  LOCKSTEP_Master_Out(2051) <= \<const0>\;
  LOCKSTEP_Master_Out(2052) <= \<const0>\;
  LOCKSTEP_Master_Out(2053) <= \<const0>\;
  LOCKSTEP_Master_Out(2054) <= \<const0>\;
  LOCKSTEP_Master_Out(2055) <= \<const0>\;
  LOCKSTEP_Master_Out(2056) <= \<const0>\;
  LOCKSTEP_Master_Out(2057) <= \<const0>\;
  LOCKSTEP_Master_Out(2058) <= \<const0>\;
  LOCKSTEP_Master_Out(2059) <= \<const0>\;
  LOCKSTEP_Master_Out(2060) <= \<const0>\;
  LOCKSTEP_Master_Out(2061) <= \<const0>\;
  LOCKSTEP_Master_Out(2062) <= \<const0>\;
  LOCKSTEP_Master_Out(2063) <= \<const0>\;
  LOCKSTEP_Master_Out(2064) <= \<const0>\;
  LOCKSTEP_Master_Out(2065) <= \<const0>\;
  LOCKSTEP_Master_Out(2066) <= \<const0>\;
  LOCKSTEP_Master_Out(2067) <= \<const0>\;
  LOCKSTEP_Master_Out(2068) <= \<const0>\;
  LOCKSTEP_Master_Out(2069) <= \<const0>\;
  LOCKSTEP_Master_Out(2070) <= \<const0>\;
  LOCKSTEP_Master_Out(2071) <= \<const0>\;
  LOCKSTEP_Master_Out(2072) <= \<const0>\;
  LOCKSTEP_Master_Out(2073) <= \<const0>\;
  LOCKSTEP_Master_Out(2074) <= \<const0>\;
  LOCKSTEP_Master_Out(2075) <= \<const0>\;
  LOCKSTEP_Master_Out(2076) <= \<const0>\;
  LOCKSTEP_Master_Out(2077) <= \<const0>\;
  LOCKSTEP_Master_Out(2078) <= \<const0>\;
  LOCKSTEP_Master_Out(2079) <= \<const0>\;
  LOCKSTEP_Master_Out(2080) <= \<const0>\;
  LOCKSTEP_Master_Out(2081) <= \<const0>\;
  LOCKSTEP_Master_Out(2082) <= \<const0>\;
  LOCKSTEP_Master_Out(2083) <= \<const0>\;
  LOCKSTEP_Master_Out(2084) <= \<const0>\;
  LOCKSTEP_Master_Out(2085) <= \<const0>\;
  LOCKSTEP_Master_Out(2086) <= \<const0>\;
  LOCKSTEP_Master_Out(2087) <= \<const0>\;
  LOCKSTEP_Master_Out(2088) <= \<const0>\;
  LOCKSTEP_Master_Out(2089) <= \<const0>\;
  LOCKSTEP_Master_Out(2090) <= \<const0>\;
  LOCKSTEP_Master_Out(2091) <= \<const0>\;
  LOCKSTEP_Master_Out(2092) <= \<const0>\;
  LOCKSTEP_Master_Out(2093) <= \<const0>\;
  LOCKSTEP_Master_Out(2094) <= \<const0>\;
  LOCKSTEP_Master_Out(2095) <= \<const0>\;
  LOCKSTEP_Master_Out(2096) <= \<const0>\;
  LOCKSTEP_Master_Out(2097) <= \<const0>\;
  LOCKSTEP_Master_Out(2098) <= \<const0>\;
  LOCKSTEP_Master_Out(2099) <= \<const0>\;
  LOCKSTEP_Master_Out(2100) <= \<const0>\;
  LOCKSTEP_Master_Out(2101) <= \<const0>\;
  LOCKSTEP_Master_Out(2102) <= \<const0>\;
  LOCKSTEP_Master_Out(2103) <= \<const0>\;
  LOCKSTEP_Master_Out(2104) <= \<const0>\;
  LOCKSTEP_Master_Out(2105) <= \<const0>\;
  LOCKSTEP_Master_Out(2106) <= \<const0>\;
  LOCKSTEP_Master_Out(2107) <= \<const0>\;
  LOCKSTEP_Master_Out(2108) <= \<const0>\;
  LOCKSTEP_Master_Out(2109) <= \<const0>\;
  LOCKSTEP_Master_Out(2110) <= \<const0>\;
  LOCKSTEP_Master_Out(2111) <= \<const0>\;
  LOCKSTEP_Master_Out(2112) <= \<const0>\;
  LOCKSTEP_Master_Out(2113) <= \<const0>\;
  LOCKSTEP_Master_Out(2114) <= \<const0>\;
  LOCKSTEP_Master_Out(2115) <= \<const0>\;
  LOCKSTEP_Master_Out(2116) <= \<const0>\;
  LOCKSTEP_Master_Out(2117) <= \<const0>\;
  LOCKSTEP_Master_Out(2118) <= \<const0>\;
  LOCKSTEP_Master_Out(2119) <= \<const0>\;
  LOCKSTEP_Master_Out(2120) <= \<const0>\;
  LOCKSTEP_Master_Out(2121) <= \<const0>\;
  LOCKSTEP_Master_Out(2122) <= \<const0>\;
  LOCKSTEP_Master_Out(2123) <= \<const0>\;
  LOCKSTEP_Master_Out(2124) <= \<const0>\;
  LOCKSTEP_Master_Out(2125) <= \<const0>\;
  LOCKSTEP_Master_Out(2126) <= \<const0>\;
  LOCKSTEP_Master_Out(2127) <= \<const0>\;
  LOCKSTEP_Master_Out(2128) <= \<const0>\;
  LOCKSTEP_Master_Out(2129) <= \<const0>\;
  LOCKSTEP_Master_Out(2130) <= \<const0>\;
  LOCKSTEP_Master_Out(2131) <= \<const0>\;
  LOCKSTEP_Master_Out(2132) <= \<const0>\;
  LOCKSTEP_Master_Out(2133) <= \<const0>\;
  LOCKSTEP_Master_Out(2134) <= \<const0>\;
  LOCKSTEP_Master_Out(2135) <= \<const0>\;
  LOCKSTEP_Master_Out(2136) <= \<const0>\;
  LOCKSTEP_Master_Out(2137) <= \<const0>\;
  LOCKSTEP_Master_Out(2138) <= \<const0>\;
  LOCKSTEP_Master_Out(2139) <= \<const0>\;
  LOCKSTEP_Master_Out(2140) <= \<const0>\;
  LOCKSTEP_Master_Out(2141) <= \<const0>\;
  LOCKSTEP_Master_Out(2142) <= \<const0>\;
  LOCKSTEP_Master_Out(2143) <= \<const0>\;
  LOCKSTEP_Master_Out(2144) <= \<const0>\;
  LOCKSTEP_Master_Out(2145) <= \<const0>\;
  LOCKSTEP_Master_Out(2146) <= \<const0>\;
  LOCKSTEP_Master_Out(2147) <= \<const0>\;
  LOCKSTEP_Master_Out(2148) <= \<const0>\;
  LOCKSTEP_Master_Out(2149) <= \<const0>\;
  LOCKSTEP_Master_Out(2150) <= \<const0>\;
  LOCKSTEP_Master_Out(2151) <= \<const0>\;
  LOCKSTEP_Master_Out(2152) <= \<const0>\;
  LOCKSTEP_Master_Out(2153) <= \<const0>\;
  LOCKSTEP_Master_Out(2154) <= \<const0>\;
  LOCKSTEP_Master_Out(2155) <= \<const0>\;
  LOCKSTEP_Master_Out(2156) <= \<const0>\;
  LOCKSTEP_Master_Out(2157) <= \<const0>\;
  LOCKSTEP_Master_Out(2158) <= \<const0>\;
  LOCKSTEP_Master_Out(2159) <= \<const0>\;
  LOCKSTEP_Master_Out(2160) <= \<const0>\;
  LOCKSTEP_Master_Out(2161) <= \<const0>\;
  LOCKSTEP_Master_Out(2162) <= \<const0>\;
  LOCKSTEP_Master_Out(2163) <= \<const0>\;
  LOCKSTEP_Master_Out(2164) <= \<const0>\;
  LOCKSTEP_Master_Out(2165) <= \<const0>\;
  LOCKSTEP_Master_Out(2166) <= \<const0>\;
  LOCKSTEP_Master_Out(2167) <= \<const0>\;
  LOCKSTEP_Master_Out(2168) <= \<const0>\;
  LOCKSTEP_Master_Out(2169) <= \<const0>\;
  LOCKSTEP_Master_Out(2170) <= \<const0>\;
  LOCKSTEP_Master_Out(2171) <= \<const0>\;
  LOCKSTEP_Master_Out(2172) <= \<const0>\;
  LOCKSTEP_Master_Out(2173) <= \<const0>\;
  LOCKSTEP_Master_Out(2174) <= \<const0>\;
  LOCKSTEP_Master_Out(2175) <= \<const0>\;
  LOCKSTEP_Master_Out(2176) <= \<const0>\;
  LOCKSTEP_Master_Out(2177) <= \<const0>\;
  LOCKSTEP_Master_Out(2178) <= \<const0>\;
  LOCKSTEP_Master_Out(2179) <= \<const0>\;
  LOCKSTEP_Master_Out(2180) <= \<const0>\;
  LOCKSTEP_Master_Out(2181) <= \<const0>\;
  LOCKSTEP_Master_Out(2182) <= \<const0>\;
  LOCKSTEP_Master_Out(2183) <= \<const0>\;
  LOCKSTEP_Master_Out(2184) <= \<const0>\;
  LOCKSTEP_Master_Out(2185) <= \<const0>\;
  LOCKSTEP_Master_Out(2186) <= \<const0>\;
  LOCKSTEP_Master_Out(2187) <= \<const0>\;
  LOCKSTEP_Master_Out(2188) <= \<const0>\;
  LOCKSTEP_Master_Out(2189) <= \<const0>\;
  LOCKSTEP_Master_Out(2190) <= \<const0>\;
  LOCKSTEP_Master_Out(2191) <= \<const0>\;
  LOCKSTEP_Master_Out(2192) <= \<const0>\;
  LOCKSTEP_Master_Out(2193) <= \<const0>\;
  LOCKSTEP_Master_Out(2194) <= \<const0>\;
  LOCKSTEP_Master_Out(2195) <= \<const0>\;
  LOCKSTEP_Master_Out(2196) <= \<const0>\;
  LOCKSTEP_Master_Out(2197) <= \<const0>\;
  LOCKSTEP_Master_Out(2198) <= \<const0>\;
  LOCKSTEP_Master_Out(2199) <= \<const0>\;
  LOCKSTEP_Master_Out(2200) <= \<const0>\;
  LOCKSTEP_Master_Out(2201) <= \<const0>\;
  LOCKSTEP_Master_Out(2202) <= \<const0>\;
  LOCKSTEP_Master_Out(2203) <= \<const0>\;
  LOCKSTEP_Master_Out(2204) <= \<const0>\;
  LOCKSTEP_Master_Out(2205) <= \<const0>\;
  LOCKSTEP_Master_Out(2206) <= \<const0>\;
  LOCKSTEP_Master_Out(2207) <= \<const0>\;
  LOCKSTEP_Master_Out(2208) <= \<const0>\;
  LOCKSTEP_Master_Out(2209) <= \<const0>\;
  LOCKSTEP_Master_Out(2210) <= \<const0>\;
  LOCKSTEP_Master_Out(2211) <= \<const0>\;
  LOCKSTEP_Master_Out(2212) <= \<const0>\;
  LOCKSTEP_Master_Out(2213) <= \<const0>\;
  LOCKSTEP_Master_Out(2214) <= \<const0>\;
  LOCKSTEP_Master_Out(2215) <= \<const0>\;
  LOCKSTEP_Master_Out(2216) <= \<const0>\;
  LOCKSTEP_Master_Out(2217) <= \<const0>\;
  LOCKSTEP_Master_Out(2218) <= \<const0>\;
  LOCKSTEP_Master_Out(2219) <= \<const0>\;
  LOCKSTEP_Master_Out(2220) <= \<const0>\;
  LOCKSTEP_Master_Out(2221) <= \<const0>\;
  LOCKSTEP_Master_Out(2222) <= \<const0>\;
  LOCKSTEP_Master_Out(2223) <= \<const0>\;
  LOCKSTEP_Master_Out(2224) <= \<const0>\;
  LOCKSTEP_Master_Out(2225) <= \<const0>\;
  LOCKSTEP_Master_Out(2226) <= \<const0>\;
  LOCKSTEP_Master_Out(2227) <= \<const0>\;
  LOCKSTEP_Master_Out(2228) <= \<const0>\;
  LOCKSTEP_Master_Out(2229) <= \<const0>\;
  LOCKSTEP_Master_Out(2230) <= \<const0>\;
  LOCKSTEP_Master_Out(2231) <= \<const0>\;
  LOCKSTEP_Master_Out(2232) <= \<const0>\;
  LOCKSTEP_Master_Out(2233) <= \<const0>\;
  LOCKSTEP_Master_Out(2234) <= \<const0>\;
  LOCKSTEP_Master_Out(2235) <= \<const0>\;
  LOCKSTEP_Master_Out(2236) <= \<const0>\;
  LOCKSTEP_Master_Out(2237) <= \<const0>\;
  LOCKSTEP_Master_Out(2238) <= \<const0>\;
  LOCKSTEP_Master_Out(2239) <= \<const0>\;
  LOCKSTEP_Master_Out(2240) <= \<const0>\;
  LOCKSTEP_Master_Out(2241) <= \<const0>\;
  LOCKSTEP_Master_Out(2242) <= \<const0>\;
  LOCKSTEP_Master_Out(2243) <= \<const0>\;
  LOCKSTEP_Master_Out(2244) <= \<const0>\;
  LOCKSTEP_Master_Out(2245) <= \<const0>\;
  LOCKSTEP_Master_Out(2246) <= \<const0>\;
  LOCKSTEP_Master_Out(2247) <= \<const0>\;
  LOCKSTEP_Master_Out(2248) <= \<const0>\;
  LOCKSTEP_Master_Out(2249) <= \<const0>\;
  LOCKSTEP_Master_Out(2250) <= \<const0>\;
  LOCKSTEP_Master_Out(2251) <= \<const0>\;
  LOCKSTEP_Master_Out(2252) <= \<const0>\;
  LOCKSTEP_Master_Out(2253) <= \<const0>\;
  LOCKSTEP_Master_Out(2254) <= \<const0>\;
  LOCKSTEP_Master_Out(2255) <= \<const0>\;
  LOCKSTEP_Master_Out(2256) <= \<const0>\;
  LOCKSTEP_Master_Out(2257) <= \<const0>\;
  LOCKSTEP_Master_Out(2258) <= \<const0>\;
  LOCKSTEP_Master_Out(2259) <= \<const0>\;
  LOCKSTEP_Master_Out(2260) <= \<const0>\;
  LOCKSTEP_Master_Out(2261) <= \<const0>\;
  LOCKSTEP_Master_Out(2262) <= \<const0>\;
  LOCKSTEP_Master_Out(2263) <= \<const0>\;
  LOCKSTEP_Master_Out(2264) <= \<const0>\;
  LOCKSTEP_Master_Out(2265) <= \<const0>\;
  LOCKSTEP_Master_Out(2266) <= \<const0>\;
  LOCKSTEP_Master_Out(2267) <= \<const0>\;
  LOCKSTEP_Master_Out(2268) <= \<const0>\;
  LOCKSTEP_Master_Out(2269) <= \<const0>\;
  LOCKSTEP_Master_Out(2270) <= \<const0>\;
  LOCKSTEP_Master_Out(2271) <= \<const0>\;
  LOCKSTEP_Master_Out(2272) <= \<const0>\;
  LOCKSTEP_Master_Out(2273) <= \<const0>\;
  LOCKSTEP_Master_Out(2274) <= \<const0>\;
  LOCKSTEP_Master_Out(2275) <= \<const0>\;
  LOCKSTEP_Master_Out(2276) <= \<const0>\;
  LOCKSTEP_Master_Out(2277) <= \<const0>\;
  LOCKSTEP_Master_Out(2278) <= \<const0>\;
  LOCKSTEP_Master_Out(2279) <= \<const0>\;
  LOCKSTEP_Master_Out(2280) <= \<const0>\;
  LOCKSTEP_Master_Out(2281) <= \<const0>\;
  LOCKSTEP_Master_Out(2282) <= \<const0>\;
  LOCKSTEP_Master_Out(2283) <= \<const0>\;
  LOCKSTEP_Master_Out(2284) <= \<const0>\;
  LOCKSTEP_Master_Out(2285) <= \<const0>\;
  LOCKSTEP_Master_Out(2286) <= \<const0>\;
  LOCKSTEP_Master_Out(2287) <= \<const0>\;
  LOCKSTEP_Master_Out(2288) <= \<const0>\;
  LOCKSTEP_Master_Out(2289) <= \<const0>\;
  LOCKSTEP_Master_Out(2290) <= \<const0>\;
  LOCKSTEP_Master_Out(2291) <= \<const0>\;
  LOCKSTEP_Master_Out(2292) <= \<const0>\;
  LOCKSTEP_Master_Out(2293) <= \<const0>\;
  LOCKSTEP_Master_Out(2294) <= \<const0>\;
  LOCKSTEP_Master_Out(2295) <= \<const0>\;
  LOCKSTEP_Master_Out(2296) <= \<const0>\;
  LOCKSTEP_Master_Out(2297) <= \<const0>\;
  LOCKSTEP_Master_Out(2298) <= \<const0>\;
  LOCKSTEP_Master_Out(2299) <= \<const0>\;
  LOCKSTEP_Master_Out(2300) <= \<const0>\;
  LOCKSTEP_Master_Out(2301) <= \<const0>\;
  LOCKSTEP_Master_Out(2302) <= \<const0>\;
  LOCKSTEP_Master_Out(2303) <= \<const0>\;
  LOCKSTEP_Master_Out(2304) <= \<const0>\;
  LOCKSTEP_Master_Out(2305) <= \<const0>\;
  LOCKSTEP_Master_Out(2306) <= \<const0>\;
  LOCKSTEP_Master_Out(2307) <= \<const0>\;
  LOCKSTEP_Master_Out(2308) <= \<const0>\;
  LOCKSTEP_Master_Out(2309) <= \<const0>\;
  LOCKSTEP_Master_Out(2310) <= \<const0>\;
  LOCKSTEP_Master_Out(2311) <= \<const0>\;
  LOCKSTEP_Master_Out(2312) <= \<const0>\;
  LOCKSTEP_Master_Out(2313) <= \<const0>\;
  LOCKSTEP_Master_Out(2314) <= \<const0>\;
  LOCKSTEP_Master_Out(2315) <= \<const0>\;
  LOCKSTEP_Master_Out(2316) <= \<const0>\;
  LOCKSTEP_Master_Out(2317) <= \<const0>\;
  LOCKSTEP_Master_Out(2318) <= \<const0>\;
  LOCKSTEP_Master_Out(2319) <= \<const0>\;
  LOCKSTEP_Master_Out(2320) <= \<const0>\;
  LOCKSTEP_Master_Out(2321) <= \<const0>\;
  LOCKSTEP_Master_Out(2322) <= \<const0>\;
  LOCKSTEP_Master_Out(2323) <= \<const0>\;
  LOCKSTEP_Master_Out(2324) <= \<const0>\;
  LOCKSTEP_Master_Out(2325) <= \<const0>\;
  LOCKSTEP_Master_Out(2326) <= \<const0>\;
  LOCKSTEP_Master_Out(2327) <= \<const0>\;
  LOCKSTEP_Master_Out(2328) <= \<const0>\;
  LOCKSTEP_Master_Out(2329) <= \<const0>\;
  LOCKSTEP_Master_Out(2330) <= \<const0>\;
  LOCKSTEP_Master_Out(2331) <= \<const0>\;
  LOCKSTEP_Master_Out(2332) <= \<const0>\;
  LOCKSTEP_Master_Out(2333) <= \<const0>\;
  LOCKSTEP_Master_Out(2334) <= \<const0>\;
  LOCKSTEP_Master_Out(2335) <= \<const0>\;
  LOCKSTEP_Master_Out(2336) <= \<const0>\;
  LOCKSTEP_Master_Out(2337) <= \<const0>\;
  LOCKSTEP_Master_Out(2338) <= \<const0>\;
  LOCKSTEP_Master_Out(2339) <= \<const0>\;
  LOCKSTEP_Master_Out(2340) <= \<const0>\;
  LOCKSTEP_Master_Out(2341) <= \<const0>\;
  LOCKSTEP_Master_Out(2342) <= \<const0>\;
  LOCKSTEP_Master_Out(2343) <= \<const0>\;
  LOCKSTEP_Master_Out(2344) <= \<const0>\;
  LOCKSTEP_Master_Out(2345) <= \<const0>\;
  LOCKSTEP_Master_Out(2346) <= \<const0>\;
  LOCKSTEP_Master_Out(2347) <= \<const0>\;
  LOCKSTEP_Master_Out(2348) <= \<const0>\;
  LOCKSTEP_Master_Out(2349) <= \<const0>\;
  LOCKSTEP_Master_Out(2350) <= \<const0>\;
  LOCKSTEP_Master_Out(2351) <= \<const0>\;
  LOCKSTEP_Master_Out(2352) <= \<const0>\;
  LOCKSTEP_Master_Out(2353) <= \<const0>\;
  LOCKSTEP_Master_Out(2354) <= \<const0>\;
  LOCKSTEP_Master_Out(2355) <= \<const0>\;
  LOCKSTEP_Master_Out(2356) <= \<const0>\;
  LOCKSTEP_Master_Out(2357) <= \<const0>\;
  LOCKSTEP_Master_Out(2358) <= \<const0>\;
  LOCKSTEP_Master_Out(2359) <= \<const0>\;
  LOCKSTEP_Master_Out(2360) <= \<const0>\;
  LOCKSTEP_Master_Out(2361) <= \<const0>\;
  LOCKSTEP_Master_Out(2362) <= \<const0>\;
  LOCKSTEP_Master_Out(2363) <= \<const0>\;
  LOCKSTEP_Master_Out(2364) <= \<const0>\;
  LOCKSTEP_Master_Out(2365) <= \<const0>\;
  LOCKSTEP_Master_Out(2366) <= \<const0>\;
  LOCKSTEP_Master_Out(2367) <= \<const0>\;
  LOCKSTEP_Master_Out(2368) <= \<const0>\;
  LOCKSTEP_Master_Out(2369) <= \<const0>\;
  LOCKSTEP_Master_Out(2370) <= \<const0>\;
  LOCKSTEP_Master_Out(2371) <= \<const0>\;
  LOCKSTEP_Master_Out(2372) <= \<const0>\;
  LOCKSTEP_Master_Out(2373) <= \<const0>\;
  LOCKSTEP_Master_Out(2374) <= \<const0>\;
  LOCKSTEP_Master_Out(2375) <= \<const0>\;
  LOCKSTEP_Master_Out(2376) <= \<const0>\;
  LOCKSTEP_Master_Out(2377) <= \<const0>\;
  LOCKSTEP_Master_Out(2378) <= \<const0>\;
  LOCKSTEP_Master_Out(2379) <= \<const0>\;
  LOCKSTEP_Master_Out(2380) <= \<const0>\;
  LOCKSTEP_Master_Out(2381) <= \<const0>\;
  LOCKSTEP_Master_Out(2382) <= \<const0>\;
  LOCKSTEP_Master_Out(2383) <= \<const0>\;
  LOCKSTEP_Master_Out(2384) <= \<const0>\;
  LOCKSTEP_Master_Out(2385) <= \<const0>\;
  LOCKSTEP_Master_Out(2386) <= \<const0>\;
  LOCKSTEP_Master_Out(2387) <= \<const0>\;
  LOCKSTEP_Master_Out(2388) <= \<const0>\;
  LOCKSTEP_Master_Out(2389) <= \<const0>\;
  LOCKSTEP_Master_Out(2390) <= \<const0>\;
  LOCKSTEP_Master_Out(2391) <= \<const0>\;
  LOCKSTEP_Master_Out(2392) <= \<const0>\;
  LOCKSTEP_Master_Out(2393) <= \<const0>\;
  LOCKSTEP_Master_Out(2394) <= \<const0>\;
  LOCKSTEP_Master_Out(2395) <= \<const0>\;
  LOCKSTEP_Master_Out(2396) <= \<const0>\;
  LOCKSTEP_Master_Out(2397) <= \<const0>\;
  LOCKSTEP_Master_Out(2398) <= \<const0>\;
  LOCKSTEP_Master_Out(2399) <= \<const0>\;
  LOCKSTEP_Master_Out(2400) <= \<const0>\;
  LOCKSTEP_Master_Out(2401) <= \<const0>\;
  LOCKSTEP_Master_Out(2402) <= \<const0>\;
  LOCKSTEP_Master_Out(2403) <= \<const0>\;
  LOCKSTEP_Master_Out(2404) <= \<const0>\;
  LOCKSTEP_Master_Out(2405) <= \<const0>\;
  LOCKSTEP_Master_Out(2406) <= \<const0>\;
  LOCKSTEP_Master_Out(2407) <= \<const0>\;
  LOCKSTEP_Master_Out(2408) <= \<const0>\;
  LOCKSTEP_Master_Out(2409) <= \<const0>\;
  LOCKSTEP_Master_Out(2410) <= \<const0>\;
  LOCKSTEP_Master_Out(2411) <= \<const0>\;
  LOCKSTEP_Master_Out(2412) <= \<const0>\;
  LOCKSTEP_Master_Out(2413) <= \<const0>\;
  LOCKSTEP_Master_Out(2414) <= \<const0>\;
  LOCKSTEP_Master_Out(2415) <= \<const0>\;
  LOCKSTEP_Master_Out(2416) <= \<const0>\;
  LOCKSTEP_Master_Out(2417) <= \<const0>\;
  LOCKSTEP_Master_Out(2418) <= \<const0>\;
  LOCKSTEP_Master_Out(2419) <= \<const0>\;
  LOCKSTEP_Master_Out(2420) <= \<const0>\;
  LOCKSTEP_Master_Out(2421) <= \<const0>\;
  LOCKSTEP_Master_Out(2422) <= \<const0>\;
  LOCKSTEP_Master_Out(2423) <= \<const0>\;
  LOCKSTEP_Master_Out(2424) <= \<const0>\;
  LOCKSTEP_Master_Out(2425) <= \<const0>\;
  LOCKSTEP_Master_Out(2426) <= \<const0>\;
  LOCKSTEP_Master_Out(2427) <= \<const0>\;
  LOCKSTEP_Master_Out(2428) <= \<const0>\;
  LOCKSTEP_Master_Out(2429) <= \<const0>\;
  LOCKSTEP_Master_Out(2430) <= \<const0>\;
  LOCKSTEP_Master_Out(2431) <= \<const0>\;
  LOCKSTEP_Master_Out(2432) <= \<const0>\;
  LOCKSTEP_Master_Out(2433) <= \<const0>\;
  LOCKSTEP_Master_Out(2434) <= \<const0>\;
  LOCKSTEP_Master_Out(2435) <= \<const0>\;
  LOCKSTEP_Master_Out(2436) <= \<const0>\;
  LOCKSTEP_Master_Out(2437) <= \<const0>\;
  LOCKSTEP_Master_Out(2438) <= \<const0>\;
  LOCKSTEP_Master_Out(2439) <= \<const0>\;
  LOCKSTEP_Master_Out(2440) <= \<const0>\;
  LOCKSTEP_Master_Out(2441) <= \<const0>\;
  LOCKSTEP_Master_Out(2442) <= \<const0>\;
  LOCKSTEP_Master_Out(2443) <= \<const0>\;
  LOCKSTEP_Master_Out(2444) <= \<const0>\;
  LOCKSTEP_Master_Out(2445) <= \<const0>\;
  LOCKSTEP_Master_Out(2446) <= \<const0>\;
  LOCKSTEP_Master_Out(2447) <= \<const0>\;
  LOCKSTEP_Master_Out(2448) <= \<const0>\;
  LOCKSTEP_Master_Out(2449) <= \<const0>\;
  LOCKSTEP_Master_Out(2450) <= \<const0>\;
  LOCKSTEP_Master_Out(2451) <= \<const0>\;
  LOCKSTEP_Master_Out(2452) <= \<const0>\;
  LOCKSTEP_Master_Out(2453) <= \<const0>\;
  LOCKSTEP_Master_Out(2454) <= \<const0>\;
  LOCKSTEP_Master_Out(2455) <= \<const0>\;
  LOCKSTEP_Master_Out(2456) <= \<const0>\;
  LOCKSTEP_Master_Out(2457) <= \<const0>\;
  LOCKSTEP_Master_Out(2458) <= \<const0>\;
  LOCKSTEP_Master_Out(2459) <= \<const0>\;
  LOCKSTEP_Master_Out(2460) <= \<const0>\;
  LOCKSTEP_Master_Out(2461) <= \<const0>\;
  LOCKSTEP_Master_Out(2462) <= \<const0>\;
  LOCKSTEP_Master_Out(2463) <= \<const0>\;
  LOCKSTEP_Master_Out(2464) <= \<const0>\;
  LOCKSTEP_Master_Out(2465) <= \<const0>\;
  LOCKSTEP_Master_Out(2466) <= \<const0>\;
  LOCKSTEP_Master_Out(2467) <= \<const0>\;
  LOCKSTEP_Master_Out(2468) <= \<const0>\;
  LOCKSTEP_Master_Out(2469) <= \<const0>\;
  LOCKSTEP_Master_Out(2470) <= \<const0>\;
  LOCKSTEP_Master_Out(2471) <= \<const0>\;
  LOCKSTEP_Master_Out(2472) <= \<const0>\;
  LOCKSTEP_Master_Out(2473) <= \<const0>\;
  LOCKSTEP_Master_Out(2474) <= \<const0>\;
  LOCKSTEP_Master_Out(2475) <= \<const0>\;
  LOCKSTEP_Master_Out(2476) <= \<const0>\;
  LOCKSTEP_Master_Out(2477) <= \<const0>\;
  LOCKSTEP_Master_Out(2478) <= \<const0>\;
  LOCKSTEP_Master_Out(2479) <= \<const0>\;
  LOCKSTEP_Master_Out(2480) <= \<const0>\;
  LOCKSTEP_Master_Out(2481) <= \<const0>\;
  LOCKSTEP_Master_Out(2482) <= \<const0>\;
  LOCKSTEP_Master_Out(2483) <= \<const0>\;
  LOCKSTEP_Master_Out(2484) <= \<const0>\;
  LOCKSTEP_Master_Out(2485) <= \<const0>\;
  LOCKSTEP_Master_Out(2486) <= \<const0>\;
  LOCKSTEP_Master_Out(2487) <= \<const0>\;
  LOCKSTEP_Master_Out(2488) <= \<const0>\;
  LOCKSTEP_Master_Out(2489) <= \<const0>\;
  LOCKSTEP_Master_Out(2490) <= \<const0>\;
  LOCKSTEP_Master_Out(2491) <= \<const0>\;
  LOCKSTEP_Master_Out(2492) <= \<const0>\;
  LOCKSTEP_Master_Out(2493) <= \<const0>\;
  LOCKSTEP_Master_Out(2494) <= \<const0>\;
  LOCKSTEP_Master_Out(2495) <= \<const0>\;
  LOCKSTEP_Master_Out(2496) <= \<const0>\;
  LOCKSTEP_Master_Out(2497) <= \<const0>\;
  LOCKSTEP_Master_Out(2498) <= \<const0>\;
  LOCKSTEP_Master_Out(2499) <= \<const0>\;
  LOCKSTEP_Master_Out(2500) <= \<const0>\;
  LOCKSTEP_Master_Out(2501) <= \<const0>\;
  LOCKSTEP_Master_Out(2502) <= \<const0>\;
  LOCKSTEP_Master_Out(2503) <= \<const0>\;
  LOCKSTEP_Master_Out(2504) <= \<const0>\;
  LOCKSTEP_Master_Out(2505) <= \<const0>\;
  LOCKSTEP_Master_Out(2506) <= \<const0>\;
  LOCKSTEP_Master_Out(2507) <= \<const0>\;
  LOCKSTEP_Master_Out(2508) <= \<const0>\;
  LOCKSTEP_Master_Out(2509) <= \<const0>\;
  LOCKSTEP_Master_Out(2510) <= \<const0>\;
  LOCKSTEP_Master_Out(2511) <= \<const0>\;
  LOCKSTEP_Master_Out(2512) <= \<const0>\;
  LOCKSTEP_Master_Out(2513) <= \<const0>\;
  LOCKSTEP_Master_Out(2514) <= \<const0>\;
  LOCKSTEP_Master_Out(2515) <= \<const0>\;
  LOCKSTEP_Master_Out(2516) <= \<const0>\;
  LOCKSTEP_Master_Out(2517) <= \<const0>\;
  LOCKSTEP_Master_Out(2518) <= \<const0>\;
  LOCKSTEP_Master_Out(2519) <= \<const0>\;
  LOCKSTEP_Master_Out(2520) <= \<const0>\;
  LOCKSTEP_Master_Out(2521) <= \<const0>\;
  LOCKSTEP_Master_Out(2522) <= \<const0>\;
  LOCKSTEP_Master_Out(2523) <= \<const0>\;
  LOCKSTEP_Master_Out(2524) <= \<const0>\;
  LOCKSTEP_Master_Out(2525) <= \<const0>\;
  LOCKSTEP_Master_Out(2526) <= \<const0>\;
  LOCKSTEP_Master_Out(2527) <= \<const0>\;
  LOCKSTEP_Master_Out(2528) <= \<const0>\;
  LOCKSTEP_Master_Out(2529) <= \<const0>\;
  LOCKSTEP_Master_Out(2530) <= \<const0>\;
  LOCKSTEP_Master_Out(2531) <= \<const0>\;
  LOCKSTEP_Master_Out(2532) <= \<const0>\;
  LOCKSTEP_Master_Out(2533) <= \<const0>\;
  LOCKSTEP_Master_Out(2534) <= \<const0>\;
  LOCKSTEP_Master_Out(2535) <= \<const0>\;
  LOCKSTEP_Master_Out(2536) <= \<const0>\;
  LOCKSTEP_Master_Out(2537) <= \<const0>\;
  LOCKSTEP_Master_Out(2538) <= \<const0>\;
  LOCKSTEP_Master_Out(2539) <= \<const0>\;
  LOCKSTEP_Master_Out(2540) <= \<const0>\;
  LOCKSTEP_Master_Out(2541) <= \<const0>\;
  LOCKSTEP_Master_Out(2542) <= \<const0>\;
  LOCKSTEP_Master_Out(2543) <= \<const0>\;
  LOCKSTEP_Master_Out(2544) <= \<const0>\;
  LOCKSTEP_Master_Out(2545) <= \<const0>\;
  LOCKSTEP_Master_Out(2546) <= \<const0>\;
  LOCKSTEP_Master_Out(2547) <= \<const0>\;
  LOCKSTEP_Master_Out(2548) <= \<const0>\;
  LOCKSTEP_Master_Out(2549) <= \<const0>\;
  LOCKSTEP_Master_Out(2550) <= \<const0>\;
  LOCKSTEP_Master_Out(2551) <= \<const0>\;
  LOCKSTEP_Master_Out(2552) <= \<const0>\;
  LOCKSTEP_Master_Out(2553) <= \<const0>\;
  LOCKSTEP_Master_Out(2554) <= \<const0>\;
  LOCKSTEP_Master_Out(2555) <= \<const0>\;
  LOCKSTEP_Master_Out(2556) <= \<const0>\;
  LOCKSTEP_Master_Out(2557) <= \<const0>\;
  LOCKSTEP_Master_Out(2558) <= \<const0>\;
  LOCKSTEP_Master_Out(2559) <= \<const0>\;
  LOCKSTEP_Master_Out(2560) <= \<const0>\;
  LOCKSTEP_Master_Out(2561) <= \<const0>\;
  LOCKSTEP_Master_Out(2562) <= \<const0>\;
  LOCKSTEP_Master_Out(2563) <= \<const0>\;
  LOCKSTEP_Master_Out(2564) <= \<const0>\;
  LOCKSTEP_Master_Out(2565) <= \<const0>\;
  LOCKSTEP_Master_Out(2566) <= \<const0>\;
  LOCKSTEP_Master_Out(2567) <= \<const0>\;
  LOCKSTEP_Master_Out(2568) <= \<const0>\;
  LOCKSTEP_Master_Out(2569) <= \<const0>\;
  LOCKSTEP_Master_Out(2570) <= \<const0>\;
  LOCKSTEP_Master_Out(2571) <= \<const0>\;
  LOCKSTEP_Master_Out(2572) <= \<const0>\;
  LOCKSTEP_Master_Out(2573) <= \<const0>\;
  LOCKSTEP_Master_Out(2574) <= \<const0>\;
  LOCKSTEP_Master_Out(2575) <= \<const0>\;
  LOCKSTEP_Master_Out(2576) <= \<const0>\;
  LOCKSTEP_Master_Out(2577) <= \<const0>\;
  LOCKSTEP_Master_Out(2578) <= \<const0>\;
  LOCKSTEP_Master_Out(2579) <= \<const0>\;
  LOCKSTEP_Master_Out(2580) <= \<const0>\;
  LOCKSTEP_Master_Out(2581) <= \<const0>\;
  LOCKSTEP_Master_Out(2582) <= \<const0>\;
  LOCKSTEP_Master_Out(2583) <= \<const0>\;
  LOCKSTEP_Master_Out(2584) <= \<const0>\;
  LOCKSTEP_Master_Out(2585) <= \<const0>\;
  LOCKSTEP_Master_Out(2586) <= \<const0>\;
  LOCKSTEP_Master_Out(2587) <= \<const0>\;
  LOCKSTEP_Master_Out(2588) <= \<const0>\;
  LOCKSTEP_Master_Out(2589) <= \<const0>\;
  LOCKSTEP_Master_Out(2590) <= \<const0>\;
  LOCKSTEP_Master_Out(2591) <= \<const0>\;
  LOCKSTEP_Master_Out(2592) <= \<const0>\;
  LOCKSTEP_Master_Out(2593) <= \<const0>\;
  LOCKSTEP_Master_Out(2594) <= \<const0>\;
  LOCKSTEP_Master_Out(2595) <= \<const0>\;
  LOCKSTEP_Master_Out(2596) <= \<const0>\;
  LOCKSTEP_Master_Out(2597) <= \<const0>\;
  LOCKSTEP_Master_Out(2598) <= \<const0>\;
  LOCKSTEP_Master_Out(2599) <= \<const0>\;
  LOCKSTEP_Master_Out(2600) <= \<const0>\;
  LOCKSTEP_Master_Out(2601) <= \<const0>\;
  LOCKSTEP_Master_Out(2602) <= \<const0>\;
  LOCKSTEP_Master_Out(2603) <= \<const0>\;
  LOCKSTEP_Master_Out(2604) <= \<const0>\;
  LOCKSTEP_Master_Out(2605) <= \<const0>\;
  LOCKSTEP_Master_Out(2606) <= \<const0>\;
  LOCKSTEP_Master_Out(2607) <= \<const0>\;
  LOCKSTEP_Master_Out(2608) <= \<const0>\;
  LOCKSTEP_Master_Out(2609) <= \<const0>\;
  LOCKSTEP_Master_Out(2610) <= \<const0>\;
  LOCKSTEP_Master_Out(2611) <= \<const0>\;
  LOCKSTEP_Master_Out(2612) <= \<const0>\;
  LOCKSTEP_Master_Out(2613) <= \<const0>\;
  LOCKSTEP_Master_Out(2614) <= \<const0>\;
  LOCKSTEP_Master_Out(2615) <= \<const0>\;
  LOCKSTEP_Master_Out(2616) <= \<const0>\;
  LOCKSTEP_Master_Out(2617) <= \<const0>\;
  LOCKSTEP_Master_Out(2618) <= \<const0>\;
  LOCKSTEP_Master_Out(2619) <= \<const0>\;
  LOCKSTEP_Master_Out(2620) <= \<const0>\;
  LOCKSTEP_Master_Out(2621) <= \<const0>\;
  LOCKSTEP_Master_Out(2622) <= \<const0>\;
  LOCKSTEP_Master_Out(2623) <= \<const0>\;
  LOCKSTEP_Master_Out(2624) <= \<const0>\;
  LOCKSTEP_Master_Out(2625) <= \<const0>\;
  LOCKSTEP_Master_Out(2626) <= \<const0>\;
  LOCKSTEP_Master_Out(2627) <= \<const0>\;
  LOCKSTEP_Master_Out(2628) <= \<const0>\;
  LOCKSTEP_Master_Out(2629) <= \<const0>\;
  LOCKSTEP_Master_Out(2630) <= \<const0>\;
  LOCKSTEP_Master_Out(2631) <= \<const0>\;
  LOCKSTEP_Master_Out(2632) <= \<const0>\;
  LOCKSTEP_Master_Out(2633) <= \<const0>\;
  LOCKSTEP_Master_Out(2634) <= \<const0>\;
  LOCKSTEP_Master_Out(2635) <= \<const0>\;
  LOCKSTEP_Master_Out(2636) <= \<const0>\;
  LOCKSTEP_Master_Out(2637) <= \<const0>\;
  LOCKSTEP_Master_Out(2638) <= \<const0>\;
  LOCKSTEP_Master_Out(2639) <= \<const0>\;
  LOCKSTEP_Master_Out(2640) <= \<const0>\;
  LOCKSTEP_Master_Out(2641) <= \<const0>\;
  LOCKSTEP_Master_Out(2642) <= \<const0>\;
  LOCKSTEP_Master_Out(2643) <= \<const0>\;
  LOCKSTEP_Master_Out(2644) <= \<const0>\;
  LOCKSTEP_Master_Out(2645) <= \<const0>\;
  LOCKSTEP_Master_Out(2646) <= \<const0>\;
  LOCKSTEP_Master_Out(2647) <= \<const0>\;
  LOCKSTEP_Master_Out(2648) <= \<const0>\;
  LOCKSTEP_Master_Out(2649) <= \<const0>\;
  LOCKSTEP_Master_Out(2650) <= \<const0>\;
  LOCKSTEP_Master_Out(2651) <= \<const0>\;
  LOCKSTEP_Master_Out(2652) <= \<const0>\;
  LOCKSTEP_Master_Out(2653) <= \<const0>\;
  LOCKSTEP_Master_Out(2654) <= \<const0>\;
  LOCKSTEP_Master_Out(2655) <= \<const0>\;
  LOCKSTEP_Master_Out(2656) <= \<const0>\;
  LOCKSTEP_Master_Out(2657) <= \<const0>\;
  LOCKSTEP_Master_Out(2658) <= \<const0>\;
  LOCKSTEP_Master_Out(2659) <= \<const0>\;
  LOCKSTEP_Master_Out(2660) <= \<const0>\;
  LOCKSTEP_Master_Out(2661) <= \<const0>\;
  LOCKSTEP_Master_Out(2662) <= \<const0>\;
  LOCKSTEP_Master_Out(2663) <= \<const0>\;
  LOCKSTEP_Master_Out(2664) <= \<const0>\;
  LOCKSTEP_Master_Out(2665) <= \<const0>\;
  LOCKSTEP_Master_Out(2666) <= \<const0>\;
  LOCKSTEP_Master_Out(2667) <= \<const0>\;
  LOCKSTEP_Master_Out(2668) <= \<const0>\;
  LOCKSTEP_Master_Out(2669) <= \<const0>\;
  LOCKSTEP_Master_Out(2670) <= \<const0>\;
  LOCKSTEP_Master_Out(2671) <= \<const0>\;
  LOCKSTEP_Master_Out(2672) <= \<const0>\;
  LOCKSTEP_Master_Out(2673) <= \<const0>\;
  LOCKSTEP_Master_Out(2674) <= \<const0>\;
  LOCKSTEP_Master_Out(2675) <= \<const0>\;
  LOCKSTEP_Master_Out(2676) <= \<const0>\;
  LOCKSTEP_Master_Out(2677) <= \<const0>\;
  LOCKSTEP_Master_Out(2678) <= \<const0>\;
  LOCKSTEP_Master_Out(2679) <= \<const0>\;
  LOCKSTEP_Master_Out(2680) <= \<const0>\;
  LOCKSTEP_Master_Out(2681) <= \<const0>\;
  LOCKSTEP_Master_Out(2682) <= \<const0>\;
  LOCKSTEP_Master_Out(2683) <= \<const0>\;
  LOCKSTEP_Master_Out(2684) <= \<const0>\;
  LOCKSTEP_Master_Out(2685) <= \<const0>\;
  LOCKSTEP_Master_Out(2686) <= \<const0>\;
  LOCKSTEP_Master_Out(2687) <= \<const0>\;
  LOCKSTEP_Master_Out(2688) <= \<const0>\;
  LOCKSTEP_Master_Out(2689) <= \<const0>\;
  LOCKSTEP_Master_Out(2690) <= \<const0>\;
  LOCKSTEP_Master_Out(2691) <= \<const0>\;
  LOCKSTEP_Master_Out(2692) <= \<const0>\;
  LOCKSTEP_Master_Out(2693) <= \<const0>\;
  LOCKSTEP_Master_Out(2694) <= \<const0>\;
  LOCKSTEP_Master_Out(2695) <= \<const0>\;
  LOCKSTEP_Master_Out(2696) <= \<const0>\;
  LOCKSTEP_Master_Out(2697) <= \<const0>\;
  LOCKSTEP_Master_Out(2698) <= \<const0>\;
  LOCKSTEP_Master_Out(2699) <= \<const0>\;
  LOCKSTEP_Master_Out(2700) <= \<const0>\;
  LOCKSTEP_Master_Out(2701) <= \<const0>\;
  LOCKSTEP_Master_Out(2702) <= \<const0>\;
  LOCKSTEP_Master_Out(2703) <= \<const0>\;
  LOCKSTEP_Master_Out(2704) <= \<const0>\;
  LOCKSTEP_Master_Out(2705) <= \<const0>\;
  LOCKSTEP_Master_Out(2706) <= \<const0>\;
  LOCKSTEP_Master_Out(2707) <= \<const0>\;
  LOCKSTEP_Master_Out(2708) <= \<const0>\;
  LOCKSTEP_Master_Out(2709) <= \<const0>\;
  LOCKSTEP_Master_Out(2710) <= \<const0>\;
  LOCKSTEP_Master_Out(2711) <= \<const0>\;
  LOCKSTEP_Master_Out(2712) <= \<const0>\;
  LOCKSTEP_Master_Out(2713) <= \<const0>\;
  LOCKSTEP_Master_Out(2714) <= \<const0>\;
  LOCKSTEP_Master_Out(2715) <= \<const0>\;
  LOCKSTEP_Master_Out(2716) <= \<const0>\;
  LOCKSTEP_Master_Out(2717) <= \<const0>\;
  LOCKSTEP_Master_Out(2718) <= \<const0>\;
  LOCKSTEP_Master_Out(2719) <= \<const0>\;
  LOCKSTEP_Master_Out(2720) <= \<const0>\;
  LOCKSTEP_Master_Out(2721) <= \<const0>\;
  LOCKSTEP_Master_Out(2722) <= \<const0>\;
  LOCKSTEP_Master_Out(2723) <= \<const0>\;
  LOCKSTEP_Master_Out(2724) <= \<const0>\;
  LOCKSTEP_Master_Out(2725) <= \<const0>\;
  LOCKSTEP_Master_Out(2726) <= \<const0>\;
  LOCKSTEP_Master_Out(2727) <= \<const0>\;
  LOCKSTEP_Master_Out(2728) <= \<const0>\;
  LOCKSTEP_Master_Out(2729) <= \<const0>\;
  LOCKSTEP_Master_Out(2730) <= \<const0>\;
  LOCKSTEP_Master_Out(2731) <= \<const0>\;
  LOCKSTEP_Master_Out(2732) <= \<const0>\;
  LOCKSTEP_Master_Out(2733) <= \<const0>\;
  LOCKSTEP_Master_Out(2734) <= \<const0>\;
  LOCKSTEP_Master_Out(2735) <= \<const0>\;
  LOCKSTEP_Master_Out(2736) <= \<const0>\;
  LOCKSTEP_Master_Out(2737) <= \<const0>\;
  LOCKSTEP_Master_Out(2738) <= \<const0>\;
  LOCKSTEP_Master_Out(2739) <= \<const0>\;
  LOCKSTEP_Master_Out(2740) <= \<const0>\;
  LOCKSTEP_Master_Out(2741) <= \<const0>\;
  LOCKSTEP_Master_Out(2742) <= \<const0>\;
  LOCKSTEP_Master_Out(2743) <= \<const0>\;
  LOCKSTEP_Master_Out(2744) <= \<const0>\;
  LOCKSTEP_Master_Out(2745) <= \<const0>\;
  LOCKSTEP_Master_Out(2746) <= \<const0>\;
  LOCKSTEP_Master_Out(2747) <= \<const0>\;
  LOCKSTEP_Master_Out(2748) <= \<const0>\;
  LOCKSTEP_Master_Out(2749) <= \<const0>\;
  LOCKSTEP_Master_Out(2750) <= \<const0>\;
  LOCKSTEP_Master_Out(2751) <= \<const0>\;
  LOCKSTEP_Master_Out(2752) <= \<const0>\;
  LOCKSTEP_Master_Out(2753) <= \<const0>\;
  LOCKSTEP_Master_Out(2754) <= \<const0>\;
  LOCKSTEP_Master_Out(2755) <= \<const0>\;
  LOCKSTEP_Master_Out(2756) <= \<const0>\;
  LOCKSTEP_Master_Out(2757) <= \<const0>\;
  LOCKSTEP_Master_Out(2758) <= \<const0>\;
  LOCKSTEP_Master_Out(2759) <= \<const0>\;
  LOCKSTEP_Master_Out(2760) <= \<const0>\;
  LOCKSTEP_Master_Out(2761) <= \<const0>\;
  LOCKSTEP_Master_Out(2762) <= \<const0>\;
  LOCKSTEP_Master_Out(2763) <= \<const0>\;
  LOCKSTEP_Master_Out(2764) <= \<const0>\;
  LOCKSTEP_Master_Out(2765) <= \<const0>\;
  LOCKSTEP_Master_Out(2766) <= \<const0>\;
  LOCKSTEP_Master_Out(2767) <= \<const0>\;
  LOCKSTEP_Master_Out(2768) <= \<const0>\;
  LOCKSTEP_Master_Out(2769) <= \<const0>\;
  LOCKSTEP_Master_Out(2770) <= \<const0>\;
  LOCKSTEP_Master_Out(2771) <= \<const0>\;
  LOCKSTEP_Master_Out(2772) <= \<const0>\;
  LOCKSTEP_Master_Out(2773) <= \<const0>\;
  LOCKSTEP_Master_Out(2774) <= \<const0>\;
  LOCKSTEP_Master_Out(2775) <= \<const0>\;
  LOCKSTEP_Master_Out(2776) <= \<const0>\;
  LOCKSTEP_Master_Out(2777) <= \<const0>\;
  LOCKSTEP_Master_Out(2778) <= \<const0>\;
  LOCKSTEP_Master_Out(2779) <= \<const0>\;
  LOCKSTEP_Master_Out(2780) <= \<const0>\;
  LOCKSTEP_Master_Out(2781) <= \<const0>\;
  LOCKSTEP_Master_Out(2782) <= \<const0>\;
  LOCKSTEP_Master_Out(2783) <= \<const0>\;
  LOCKSTEP_Master_Out(2784) <= \<const0>\;
  LOCKSTEP_Master_Out(2785) <= \<const0>\;
  LOCKSTEP_Master_Out(2786) <= \<const0>\;
  LOCKSTEP_Master_Out(2787) <= \<const0>\;
  LOCKSTEP_Master_Out(2788) <= \<const0>\;
  LOCKSTEP_Master_Out(2789) <= \<const0>\;
  LOCKSTEP_Master_Out(2790) <= \<const0>\;
  LOCKSTEP_Master_Out(2791) <= \<const0>\;
  LOCKSTEP_Master_Out(2792) <= \<const0>\;
  LOCKSTEP_Master_Out(2793) <= \<const0>\;
  LOCKSTEP_Master_Out(2794) <= \<const0>\;
  LOCKSTEP_Master_Out(2795) <= \<const0>\;
  LOCKSTEP_Master_Out(2796) <= \<const0>\;
  LOCKSTEP_Master_Out(2797) <= \<const0>\;
  LOCKSTEP_Master_Out(2798) <= \<const0>\;
  LOCKSTEP_Master_Out(2799) <= \<const0>\;
  LOCKSTEP_Master_Out(2800) <= \<const0>\;
  LOCKSTEP_Master_Out(2801) <= \<const0>\;
  LOCKSTEP_Master_Out(2802) <= \<const0>\;
  LOCKSTEP_Master_Out(2803) <= \<const0>\;
  LOCKSTEP_Master_Out(2804) <= \<const0>\;
  LOCKSTEP_Master_Out(2805) <= \<const0>\;
  LOCKSTEP_Master_Out(2806) <= \<const0>\;
  LOCKSTEP_Master_Out(2807) <= \<const0>\;
  LOCKSTEP_Master_Out(2808) <= \<const0>\;
  LOCKSTEP_Master_Out(2809) <= \<const0>\;
  LOCKSTEP_Master_Out(2810) <= \<const0>\;
  LOCKSTEP_Master_Out(2811) <= \<const0>\;
  LOCKSTEP_Master_Out(2812) <= \<const0>\;
  LOCKSTEP_Master_Out(2813) <= \<const0>\;
  LOCKSTEP_Master_Out(2814) <= \<const0>\;
  LOCKSTEP_Master_Out(2815) <= \<const0>\;
  LOCKSTEP_Master_Out(2816) <= \<const0>\;
  LOCKSTEP_Master_Out(2817) <= \<const0>\;
  LOCKSTEP_Master_Out(2818) <= \<const0>\;
  LOCKSTEP_Master_Out(2819) <= \<const0>\;
  LOCKSTEP_Master_Out(2820) <= \<const0>\;
  LOCKSTEP_Master_Out(2821) <= \<const0>\;
  LOCKSTEP_Master_Out(2822) <= \<const0>\;
  LOCKSTEP_Master_Out(2823) <= \<const0>\;
  LOCKSTEP_Master_Out(2824) <= \<const0>\;
  LOCKSTEP_Master_Out(2825) <= \<const0>\;
  LOCKSTEP_Master_Out(2826) <= \<const0>\;
  LOCKSTEP_Master_Out(2827) <= \<const0>\;
  LOCKSTEP_Master_Out(2828) <= \<const0>\;
  LOCKSTEP_Master_Out(2829) <= \<const0>\;
  LOCKSTEP_Master_Out(2830) <= \<const0>\;
  LOCKSTEP_Master_Out(2831) <= \<const0>\;
  LOCKSTEP_Master_Out(2832) <= \<const0>\;
  LOCKSTEP_Master_Out(2833) <= \<const0>\;
  LOCKSTEP_Master_Out(2834) <= \<const0>\;
  LOCKSTEP_Master_Out(2835) <= \<const0>\;
  LOCKSTEP_Master_Out(2836) <= \<const0>\;
  LOCKSTEP_Master_Out(2837) <= \<const0>\;
  LOCKSTEP_Master_Out(2838) <= \<const0>\;
  LOCKSTEP_Master_Out(2839) <= \<const0>\;
  LOCKSTEP_Master_Out(2840) <= \<const0>\;
  LOCKSTEP_Master_Out(2841) <= \<const0>\;
  LOCKSTEP_Master_Out(2842) <= \<const0>\;
  LOCKSTEP_Master_Out(2843) <= \<const0>\;
  LOCKSTEP_Master_Out(2844) <= \<const0>\;
  LOCKSTEP_Master_Out(2845) <= \<const0>\;
  LOCKSTEP_Master_Out(2846) <= \<const0>\;
  LOCKSTEP_Master_Out(2847) <= \<const0>\;
  LOCKSTEP_Master_Out(2848) <= \<const0>\;
  LOCKSTEP_Master_Out(2849) <= \<const0>\;
  LOCKSTEP_Master_Out(2850) <= \<const0>\;
  LOCKSTEP_Master_Out(2851) <= \<const0>\;
  LOCKSTEP_Master_Out(2852) <= \<const0>\;
  LOCKSTEP_Master_Out(2853) <= \<const0>\;
  LOCKSTEP_Master_Out(2854) <= \<const0>\;
  LOCKSTEP_Master_Out(2855) <= \<const0>\;
  LOCKSTEP_Master_Out(2856) <= \<const0>\;
  LOCKSTEP_Master_Out(2857) <= \<const0>\;
  LOCKSTEP_Master_Out(2858) <= \<const0>\;
  LOCKSTEP_Master_Out(2859) <= \<const0>\;
  LOCKSTEP_Master_Out(2860) <= \<const0>\;
  LOCKSTEP_Master_Out(2861) <= \<const0>\;
  LOCKSTEP_Master_Out(2862) <= \<const0>\;
  LOCKSTEP_Master_Out(2863) <= \<const0>\;
  LOCKSTEP_Master_Out(2864) <= \<const0>\;
  LOCKSTEP_Master_Out(2865) <= \<const0>\;
  LOCKSTEP_Master_Out(2866) <= \<const0>\;
  LOCKSTEP_Master_Out(2867) <= \<const0>\;
  LOCKSTEP_Master_Out(2868) <= \<const0>\;
  LOCKSTEP_Master_Out(2869) <= \<const0>\;
  LOCKSTEP_Master_Out(2870) <= \<const0>\;
  LOCKSTEP_Master_Out(2871) <= \<const0>\;
  LOCKSTEP_Master_Out(2872) <= \<const0>\;
  LOCKSTEP_Master_Out(2873) <= \<const0>\;
  LOCKSTEP_Master_Out(2874) <= \<const0>\;
  LOCKSTEP_Master_Out(2875) <= \<const0>\;
  LOCKSTEP_Master_Out(2876) <= \<const0>\;
  LOCKSTEP_Master_Out(2877) <= \<const0>\;
  LOCKSTEP_Master_Out(2878) <= \<const0>\;
  LOCKSTEP_Master_Out(2879) <= \<const0>\;
  LOCKSTEP_Master_Out(2880) <= \<const0>\;
  LOCKSTEP_Master_Out(2881) <= \<const0>\;
  LOCKSTEP_Master_Out(2882) <= \<const0>\;
  LOCKSTEP_Master_Out(2883) <= \<const0>\;
  LOCKSTEP_Master_Out(2884) <= \<const0>\;
  LOCKSTEP_Master_Out(2885) <= \<const0>\;
  LOCKSTEP_Master_Out(2886) <= \<const0>\;
  LOCKSTEP_Master_Out(2887) <= \<const0>\;
  LOCKSTEP_Master_Out(2888) <= \<const0>\;
  LOCKSTEP_Master_Out(2889) <= \<const0>\;
  LOCKSTEP_Master_Out(2890) <= \<const0>\;
  LOCKSTEP_Master_Out(2891) <= \<const0>\;
  LOCKSTEP_Master_Out(2892) <= \<const0>\;
  LOCKSTEP_Master_Out(2893) <= \<const0>\;
  LOCKSTEP_Master_Out(2894) <= \<const0>\;
  LOCKSTEP_Master_Out(2895) <= \<const0>\;
  LOCKSTEP_Master_Out(2896) <= \<const0>\;
  LOCKSTEP_Master_Out(2897) <= \<const0>\;
  LOCKSTEP_Master_Out(2898) <= \<const0>\;
  LOCKSTEP_Master_Out(2899) <= \<const0>\;
  LOCKSTEP_Master_Out(2900) <= \<const0>\;
  LOCKSTEP_Master_Out(2901) <= \<const0>\;
  LOCKSTEP_Master_Out(2902) <= \<const0>\;
  LOCKSTEP_Master_Out(2903) <= \<const0>\;
  LOCKSTEP_Master_Out(2904) <= \<const0>\;
  LOCKSTEP_Master_Out(2905) <= \<const0>\;
  LOCKSTEP_Master_Out(2906) <= \<const0>\;
  LOCKSTEP_Master_Out(2907) <= \<const0>\;
  LOCKSTEP_Master_Out(2908) <= \<const0>\;
  LOCKSTEP_Master_Out(2909) <= \<const0>\;
  LOCKSTEP_Master_Out(2910) <= \<const0>\;
  LOCKSTEP_Master_Out(2911) <= \<const0>\;
  LOCKSTEP_Master_Out(2912) <= \<const0>\;
  LOCKSTEP_Master_Out(2913) <= \<const0>\;
  LOCKSTEP_Master_Out(2914) <= \<const0>\;
  LOCKSTEP_Master_Out(2915) <= \<const0>\;
  LOCKSTEP_Master_Out(2916) <= \<const0>\;
  LOCKSTEP_Master_Out(2917) <= \<const0>\;
  LOCKSTEP_Master_Out(2918) <= \<const0>\;
  LOCKSTEP_Master_Out(2919) <= \<const0>\;
  LOCKSTEP_Master_Out(2920) <= \<const0>\;
  LOCKSTEP_Master_Out(2921) <= \<const0>\;
  LOCKSTEP_Master_Out(2922) <= \<const0>\;
  LOCKSTEP_Master_Out(2923) <= \<const0>\;
  LOCKSTEP_Master_Out(2924) <= \<const0>\;
  LOCKSTEP_Master_Out(2925) <= \<const0>\;
  LOCKSTEP_Master_Out(2926) <= \<const0>\;
  LOCKSTEP_Master_Out(2927) <= \<const0>\;
  LOCKSTEP_Master_Out(2928) <= \<const0>\;
  LOCKSTEP_Master_Out(2929) <= \<const0>\;
  LOCKSTEP_Master_Out(2930) <= \<const0>\;
  LOCKSTEP_Master_Out(2931) <= \<const0>\;
  LOCKSTEP_Master_Out(2932) <= \<const0>\;
  LOCKSTEP_Master_Out(2933) <= \<const0>\;
  LOCKSTEP_Master_Out(2934) <= \<const0>\;
  LOCKSTEP_Master_Out(2935) <= \<const0>\;
  LOCKSTEP_Master_Out(2936) <= \<const0>\;
  LOCKSTEP_Master_Out(2937) <= \<const0>\;
  LOCKSTEP_Master_Out(2938) <= \<const0>\;
  LOCKSTEP_Master_Out(2939) <= \<const0>\;
  LOCKSTEP_Master_Out(2940) <= \<const0>\;
  LOCKSTEP_Master_Out(2941) <= \<const0>\;
  LOCKSTEP_Master_Out(2942) <= \<const0>\;
  LOCKSTEP_Master_Out(2943) <= \<const0>\;
  LOCKSTEP_Master_Out(2944) <= \<const0>\;
  LOCKSTEP_Master_Out(2945) <= \<const0>\;
  LOCKSTEP_Master_Out(2946) <= \<const0>\;
  LOCKSTEP_Master_Out(2947) <= \<const0>\;
  LOCKSTEP_Master_Out(2948) <= \<const0>\;
  LOCKSTEP_Master_Out(2949) <= \<const0>\;
  LOCKSTEP_Master_Out(2950) <= \<const0>\;
  LOCKSTEP_Master_Out(2951) <= \<const0>\;
  LOCKSTEP_Master_Out(2952) <= \<const0>\;
  LOCKSTEP_Master_Out(2953) <= \<const0>\;
  LOCKSTEP_Master_Out(2954) <= \<const0>\;
  LOCKSTEP_Master_Out(2955) <= \<const0>\;
  LOCKSTEP_Master_Out(2956) <= \<const0>\;
  LOCKSTEP_Master_Out(2957) <= \<const0>\;
  LOCKSTEP_Master_Out(2958) <= \<const0>\;
  LOCKSTEP_Master_Out(2959) <= \<const0>\;
  LOCKSTEP_Master_Out(2960) <= \<const0>\;
  LOCKSTEP_Master_Out(2961) <= \<const0>\;
  LOCKSTEP_Master_Out(2962) <= \<const0>\;
  LOCKSTEP_Master_Out(2963) <= \<const0>\;
  LOCKSTEP_Master_Out(2964) <= \<const0>\;
  LOCKSTEP_Master_Out(2965) <= \<const0>\;
  LOCKSTEP_Master_Out(2966) <= \<const0>\;
  LOCKSTEP_Master_Out(2967) <= \<const0>\;
  LOCKSTEP_Master_Out(2968) <= \<const0>\;
  LOCKSTEP_Master_Out(2969) <= \<const0>\;
  LOCKSTEP_Master_Out(2970) <= \<const0>\;
  LOCKSTEP_Master_Out(2971) <= \<const0>\;
  LOCKSTEP_Master_Out(2972) <= \<const0>\;
  LOCKSTEP_Master_Out(2973) <= \<const0>\;
  LOCKSTEP_Master_Out(2974) <= \<const0>\;
  LOCKSTEP_Master_Out(2975) <= \<const0>\;
  LOCKSTEP_Master_Out(2976) <= \<const0>\;
  LOCKSTEP_Master_Out(2977) <= \<const0>\;
  LOCKSTEP_Master_Out(2978) <= \<const0>\;
  LOCKSTEP_Master_Out(2979) <= \<const0>\;
  LOCKSTEP_Master_Out(2980) <= \<const0>\;
  LOCKSTEP_Master_Out(2981) <= \<const0>\;
  LOCKSTEP_Master_Out(2982) <= \<const0>\;
  LOCKSTEP_Master_Out(2983) <= \<const0>\;
  LOCKSTEP_Master_Out(2984) <= \<const0>\;
  LOCKSTEP_Master_Out(2985) <= \<const0>\;
  LOCKSTEP_Master_Out(2986) <= \<const0>\;
  LOCKSTEP_Master_Out(2987) <= \<const0>\;
  LOCKSTEP_Master_Out(2988) <= \<const0>\;
  LOCKSTEP_Master_Out(2989) <= \<const0>\;
  LOCKSTEP_Master_Out(2990) <= \<const0>\;
  LOCKSTEP_Master_Out(2991) <= \<const0>\;
  LOCKSTEP_Master_Out(2992) <= \<const0>\;
  LOCKSTEP_Master_Out(2993) <= \<const0>\;
  LOCKSTEP_Master_Out(2994) <= \<const0>\;
  LOCKSTEP_Master_Out(2995) <= \<const0>\;
  LOCKSTEP_Master_Out(2996) <= \<const0>\;
  LOCKSTEP_Master_Out(2997) <= \<const0>\;
  LOCKSTEP_Master_Out(2998) <= \<const0>\;
  LOCKSTEP_Master_Out(2999) <= \<const0>\;
  LOCKSTEP_Master_Out(3000) <= \<const0>\;
  LOCKSTEP_Master_Out(3001) <= \<const0>\;
  LOCKSTEP_Master_Out(3002) <= \<const0>\;
  LOCKSTEP_Master_Out(3003) <= \<const0>\;
  LOCKSTEP_Master_Out(3004) <= \<const0>\;
  LOCKSTEP_Master_Out(3005) <= \<const0>\;
  LOCKSTEP_Master_Out(3006) <= \<const0>\;
  LOCKSTEP_Master_Out(3007) <= \<const0>\;
  LOCKSTEP_Master_Out(3008) <= \<const0>\;
  LOCKSTEP_Master_Out(3009) <= \<const0>\;
  LOCKSTEP_Master_Out(3010) <= \<const0>\;
  LOCKSTEP_Master_Out(3011) <= \<const0>\;
  LOCKSTEP_Master_Out(3012) <= \<const0>\;
  LOCKSTEP_Master_Out(3013) <= \<const0>\;
  LOCKSTEP_Master_Out(3014) <= \<const0>\;
  LOCKSTEP_Master_Out(3015) <= \<const0>\;
  LOCKSTEP_Master_Out(3016) <= \<const0>\;
  LOCKSTEP_Master_Out(3017) <= \<const0>\;
  LOCKSTEP_Master_Out(3018) <= \<const0>\;
  LOCKSTEP_Master_Out(3019) <= \<const0>\;
  LOCKSTEP_Master_Out(3020) <= \<const0>\;
  LOCKSTEP_Master_Out(3021) <= \<const0>\;
  LOCKSTEP_Master_Out(3022) <= \<const0>\;
  LOCKSTEP_Master_Out(3023) <= \<const0>\;
  LOCKSTEP_Master_Out(3024) <= \<const0>\;
  LOCKSTEP_Master_Out(3025) <= \<const0>\;
  LOCKSTEP_Master_Out(3026) <= \<const0>\;
  LOCKSTEP_Master_Out(3027) <= \<const0>\;
  LOCKSTEP_Master_Out(3028) <= \<const0>\;
  LOCKSTEP_Master_Out(3029) <= \<const0>\;
  LOCKSTEP_Master_Out(3030) <= \<const0>\;
  LOCKSTEP_Master_Out(3031) <= \<const0>\;
  LOCKSTEP_Master_Out(3032) <= \<const0>\;
  LOCKSTEP_Master_Out(3033) <= \<const0>\;
  LOCKSTEP_Master_Out(3034) <= \<const0>\;
  LOCKSTEP_Master_Out(3035) <= \<const0>\;
  LOCKSTEP_Master_Out(3036) <= \<const0>\;
  LOCKSTEP_Master_Out(3037) <= \<const0>\;
  LOCKSTEP_Master_Out(3038) <= \<const0>\;
  LOCKSTEP_Master_Out(3039) <= \<const0>\;
  LOCKSTEP_Master_Out(3040) <= \<const0>\;
  LOCKSTEP_Master_Out(3041) <= \<const0>\;
  LOCKSTEP_Master_Out(3042) <= \<const0>\;
  LOCKSTEP_Master_Out(3043) <= \<const0>\;
  LOCKSTEP_Master_Out(3044) <= \<const0>\;
  LOCKSTEP_Master_Out(3045) <= \<const0>\;
  LOCKSTEP_Master_Out(3046) <= \<const0>\;
  LOCKSTEP_Master_Out(3047) <= \<const0>\;
  LOCKSTEP_Master_Out(3048) <= \<const0>\;
  LOCKSTEP_Master_Out(3049) <= \<const0>\;
  LOCKSTEP_Master_Out(3050) <= \<const0>\;
  LOCKSTEP_Master_Out(3051) <= \<const0>\;
  LOCKSTEP_Master_Out(3052) <= \<const0>\;
  LOCKSTEP_Master_Out(3053) <= \<const0>\;
  LOCKSTEP_Master_Out(3054) <= \<const0>\;
  LOCKSTEP_Master_Out(3055) <= \<const0>\;
  LOCKSTEP_Master_Out(3056) <= \<const0>\;
  LOCKSTEP_Master_Out(3057) <= \<const0>\;
  LOCKSTEP_Master_Out(3058) <= \<const0>\;
  LOCKSTEP_Master_Out(3059) <= \<const0>\;
  LOCKSTEP_Master_Out(3060) <= \<const0>\;
  LOCKSTEP_Master_Out(3061) <= \<const0>\;
  LOCKSTEP_Master_Out(3062) <= \<const0>\;
  LOCKSTEP_Master_Out(3063) <= \<const0>\;
  LOCKSTEP_Master_Out(3064) <= \<const0>\;
  LOCKSTEP_Master_Out(3065) <= \<const0>\;
  LOCKSTEP_Master_Out(3066) <= \<const0>\;
  LOCKSTEP_Master_Out(3067) <= \<const0>\;
  LOCKSTEP_Master_Out(3068) <= \<const0>\;
  LOCKSTEP_Master_Out(3069) <= \<const0>\;
  LOCKSTEP_Master_Out(3070) <= \<const0>\;
  LOCKSTEP_Master_Out(3071) <= \<const0>\;
  LOCKSTEP_Master_Out(3072) <= \<const0>\;
  LOCKSTEP_Master_Out(3073) <= \<const0>\;
  LOCKSTEP_Master_Out(3074) <= \<const0>\;
  LOCKSTEP_Master_Out(3075) <= \<const0>\;
  LOCKSTEP_Master_Out(3076) <= \<const0>\;
  LOCKSTEP_Master_Out(3077) <= \<const0>\;
  LOCKSTEP_Master_Out(3078) <= \<const0>\;
  LOCKSTEP_Master_Out(3079) <= \<const0>\;
  LOCKSTEP_Master_Out(3080) <= \<const0>\;
  LOCKSTEP_Master_Out(3081) <= \<const0>\;
  LOCKSTEP_Master_Out(3082) <= \<const0>\;
  LOCKSTEP_Master_Out(3083) <= \<const0>\;
  LOCKSTEP_Master_Out(3084) <= \<const0>\;
  LOCKSTEP_Master_Out(3085) <= \<const0>\;
  LOCKSTEP_Master_Out(3086) <= \<const0>\;
  LOCKSTEP_Master_Out(3087) <= \<const0>\;
  LOCKSTEP_Master_Out(3088) <= \<const0>\;
  LOCKSTEP_Master_Out(3089) <= \<const0>\;
  LOCKSTEP_Master_Out(3090) <= \<const0>\;
  LOCKSTEP_Master_Out(3091) <= \<const0>\;
  LOCKSTEP_Master_Out(3092) <= \<const0>\;
  LOCKSTEP_Master_Out(3093) <= \<const0>\;
  LOCKSTEP_Master_Out(3094) <= \<const0>\;
  LOCKSTEP_Master_Out(3095) <= \<const0>\;
  LOCKSTEP_Master_Out(3096) <= \<const0>\;
  LOCKSTEP_Master_Out(3097) <= \<const0>\;
  LOCKSTEP_Master_Out(3098) <= \<const0>\;
  LOCKSTEP_Master_Out(3099) <= \<const0>\;
  LOCKSTEP_Master_Out(3100) <= \<const0>\;
  LOCKSTEP_Master_Out(3101) <= \<const0>\;
  LOCKSTEP_Master_Out(3102) <= \<const0>\;
  LOCKSTEP_Master_Out(3103) <= \<const0>\;
  LOCKSTEP_Master_Out(3104) <= \<const0>\;
  LOCKSTEP_Master_Out(3105) <= \<const0>\;
  LOCKSTEP_Master_Out(3106) <= \<const0>\;
  LOCKSTEP_Master_Out(3107) <= \<const0>\;
  LOCKSTEP_Master_Out(3108) <= \<const0>\;
  LOCKSTEP_Master_Out(3109) <= \<const0>\;
  LOCKSTEP_Master_Out(3110) <= \<const0>\;
  LOCKSTEP_Master_Out(3111) <= \<const0>\;
  LOCKSTEP_Master_Out(3112) <= \<const0>\;
  LOCKSTEP_Master_Out(3113) <= \<const0>\;
  LOCKSTEP_Master_Out(3114) <= \<const0>\;
  LOCKSTEP_Master_Out(3115) <= \<const0>\;
  LOCKSTEP_Master_Out(3116) <= \<const0>\;
  LOCKSTEP_Master_Out(3117) <= \<const0>\;
  LOCKSTEP_Master_Out(3118) <= \<const0>\;
  LOCKSTEP_Master_Out(3119) <= \<const0>\;
  LOCKSTEP_Master_Out(3120) <= \<const0>\;
  LOCKSTEP_Master_Out(3121) <= \<const0>\;
  LOCKSTEP_Master_Out(3122) <= \<const0>\;
  LOCKSTEP_Master_Out(3123) <= \<const0>\;
  LOCKSTEP_Master_Out(3124) <= \<const0>\;
  LOCKSTEP_Master_Out(3125) <= \<const0>\;
  LOCKSTEP_Master_Out(3126) <= \<const0>\;
  LOCKSTEP_Master_Out(3127) <= \<const0>\;
  LOCKSTEP_Master_Out(3128) <= \<const0>\;
  LOCKSTEP_Master_Out(3129) <= \<const0>\;
  LOCKSTEP_Master_Out(3130) <= \<const0>\;
  LOCKSTEP_Master_Out(3131) <= \<const0>\;
  LOCKSTEP_Master_Out(3132) <= \<const0>\;
  LOCKSTEP_Master_Out(3133) <= \<const0>\;
  LOCKSTEP_Master_Out(3134) <= \<const0>\;
  LOCKSTEP_Master_Out(3135) <= \<const0>\;
  LOCKSTEP_Master_Out(3136) <= \<const0>\;
  LOCKSTEP_Master_Out(3137) <= \<const0>\;
  LOCKSTEP_Master_Out(3138) <= \<const0>\;
  LOCKSTEP_Master_Out(3139) <= \<const0>\;
  LOCKSTEP_Master_Out(3140) <= \<const0>\;
  LOCKSTEP_Master_Out(3141) <= \<const0>\;
  LOCKSTEP_Master_Out(3142) <= \<const0>\;
  LOCKSTEP_Master_Out(3143) <= \<const0>\;
  LOCKSTEP_Master_Out(3144) <= \<const0>\;
  LOCKSTEP_Master_Out(3145) <= \<const0>\;
  LOCKSTEP_Master_Out(3146) <= \<const0>\;
  LOCKSTEP_Master_Out(3147) <= \<const0>\;
  LOCKSTEP_Master_Out(3148) <= \<const0>\;
  LOCKSTEP_Master_Out(3149) <= \<const0>\;
  LOCKSTEP_Master_Out(3150) <= \<const0>\;
  LOCKSTEP_Master_Out(3151) <= \<const0>\;
  LOCKSTEP_Master_Out(3152) <= \<const0>\;
  LOCKSTEP_Master_Out(3153) <= \<const0>\;
  LOCKSTEP_Master_Out(3154) <= \<const0>\;
  LOCKSTEP_Master_Out(3155) <= \<const0>\;
  LOCKSTEP_Master_Out(3156) <= \<const0>\;
  LOCKSTEP_Master_Out(3157) <= \<const0>\;
  LOCKSTEP_Master_Out(3158) <= \<const0>\;
  LOCKSTEP_Master_Out(3159) <= \<const0>\;
  LOCKSTEP_Master_Out(3160) <= \<const0>\;
  LOCKSTEP_Master_Out(3161) <= \<const0>\;
  LOCKSTEP_Master_Out(3162) <= \<const0>\;
  LOCKSTEP_Master_Out(3163) <= \<const0>\;
  LOCKSTEP_Master_Out(3164) <= \<const0>\;
  LOCKSTEP_Master_Out(3165) <= \<const0>\;
  LOCKSTEP_Master_Out(3166) <= \<const0>\;
  LOCKSTEP_Master_Out(3167) <= \<const0>\;
  LOCKSTEP_Master_Out(3168) <= \<const0>\;
  LOCKSTEP_Master_Out(3169) <= \<const0>\;
  LOCKSTEP_Master_Out(3170) <= \<const0>\;
  LOCKSTEP_Master_Out(3171) <= \<const0>\;
  LOCKSTEP_Master_Out(3172) <= \<const0>\;
  LOCKSTEP_Master_Out(3173) <= \<const0>\;
  LOCKSTEP_Master_Out(3174) <= \<const0>\;
  LOCKSTEP_Master_Out(3175) <= \<const0>\;
  LOCKSTEP_Master_Out(3176) <= \<const0>\;
  LOCKSTEP_Master_Out(3177) <= \<const0>\;
  LOCKSTEP_Master_Out(3178) <= \<const0>\;
  LOCKSTEP_Master_Out(3179) <= \<const0>\;
  LOCKSTEP_Master_Out(3180) <= \<const0>\;
  LOCKSTEP_Master_Out(3181) <= \<const0>\;
  LOCKSTEP_Master_Out(3182) <= \<const0>\;
  LOCKSTEP_Master_Out(3183) <= \<const0>\;
  LOCKSTEP_Master_Out(3184) <= \<const0>\;
  LOCKSTEP_Master_Out(3185) <= \<const0>\;
  LOCKSTEP_Master_Out(3186) <= \<const0>\;
  LOCKSTEP_Master_Out(3187) <= \<const0>\;
  LOCKSTEP_Master_Out(3188) <= \<const0>\;
  LOCKSTEP_Master_Out(3189) <= \<const0>\;
  LOCKSTEP_Master_Out(3190) <= \<const0>\;
  LOCKSTEP_Master_Out(3191) <= \<const0>\;
  LOCKSTEP_Master_Out(3192) <= \<const0>\;
  LOCKSTEP_Master_Out(3193) <= \<const0>\;
  LOCKSTEP_Master_Out(3194) <= \<const0>\;
  LOCKSTEP_Master_Out(3195) <= \<const0>\;
  LOCKSTEP_Master_Out(3196) <= \<const0>\;
  LOCKSTEP_Master_Out(3197) <= \<const0>\;
  LOCKSTEP_Master_Out(3198) <= \<const0>\;
  LOCKSTEP_Master_Out(3199) <= \<const0>\;
  LOCKSTEP_Master_Out(3200) <= \<const0>\;
  LOCKSTEP_Master_Out(3201) <= \<const0>\;
  LOCKSTEP_Master_Out(3202) <= \<const0>\;
  LOCKSTEP_Master_Out(3203) <= \<const0>\;
  LOCKSTEP_Master_Out(3204) <= \<const0>\;
  LOCKSTEP_Master_Out(3205) <= \<const0>\;
  LOCKSTEP_Master_Out(3206) <= \<const0>\;
  LOCKSTEP_Master_Out(3207) <= \<const0>\;
  LOCKSTEP_Master_Out(3208) <= \<const0>\;
  LOCKSTEP_Master_Out(3209) <= \<const0>\;
  LOCKSTEP_Master_Out(3210) <= \<const0>\;
  LOCKSTEP_Master_Out(3211) <= \<const0>\;
  LOCKSTEP_Master_Out(3212) <= \<const0>\;
  LOCKSTEP_Master_Out(3213) <= \<const0>\;
  LOCKSTEP_Master_Out(3214) <= \<const0>\;
  LOCKSTEP_Master_Out(3215) <= \<const0>\;
  LOCKSTEP_Master_Out(3216) <= \<const0>\;
  LOCKSTEP_Master_Out(3217) <= \<const0>\;
  LOCKSTEP_Master_Out(3218) <= \<const0>\;
  LOCKSTEP_Master_Out(3219) <= \<const0>\;
  LOCKSTEP_Master_Out(3220) <= \<const0>\;
  LOCKSTEP_Master_Out(3221) <= \<const0>\;
  LOCKSTEP_Master_Out(3222) <= \<const0>\;
  LOCKSTEP_Master_Out(3223) <= \<const0>\;
  LOCKSTEP_Master_Out(3224) <= \<const0>\;
  LOCKSTEP_Master_Out(3225) <= \<const0>\;
  LOCKSTEP_Master_Out(3226) <= \<const0>\;
  LOCKSTEP_Master_Out(3227) <= \<const0>\;
  LOCKSTEP_Master_Out(3228) <= \<const0>\;
  LOCKSTEP_Master_Out(3229) <= \<const0>\;
  LOCKSTEP_Master_Out(3230) <= \<const0>\;
  LOCKSTEP_Master_Out(3231) <= \<const0>\;
  LOCKSTEP_Master_Out(3232) <= \<const0>\;
  LOCKSTEP_Master_Out(3233) <= \<const0>\;
  LOCKSTEP_Master_Out(3234) <= \<const0>\;
  LOCKSTEP_Master_Out(3235) <= \<const0>\;
  LOCKSTEP_Master_Out(3236) <= \<const0>\;
  LOCKSTEP_Master_Out(3237) <= \<const0>\;
  LOCKSTEP_Master_Out(3238) <= \<const0>\;
  LOCKSTEP_Master_Out(3239) <= \<const0>\;
  LOCKSTEP_Master_Out(3240) <= \<const0>\;
  LOCKSTEP_Master_Out(3241) <= \<const0>\;
  LOCKSTEP_Master_Out(3242) <= \<const0>\;
  LOCKSTEP_Master_Out(3243) <= \<const0>\;
  LOCKSTEP_Master_Out(3244) <= \<const0>\;
  LOCKSTEP_Master_Out(3245) <= \<const0>\;
  LOCKSTEP_Master_Out(3246) <= \<const0>\;
  LOCKSTEP_Master_Out(3247) <= \<const0>\;
  LOCKSTEP_Master_Out(3248) <= \<const0>\;
  LOCKSTEP_Master_Out(3249) <= \<const0>\;
  LOCKSTEP_Master_Out(3250) <= \<const0>\;
  LOCKSTEP_Master_Out(3251) <= \<const0>\;
  LOCKSTEP_Master_Out(3252) <= \<const0>\;
  LOCKSTEP_Master_Out(3253) <= \<const0>\;
  LOCKSTEP_Master_Out(3254) <= \<const0>\;
  LOCKSTEP_Master_Out(3255) <= \<const0>\;
  LOCKSTEP_Master_Out(3256) <= \<const0>\;
  LOCKSTEP_Master_Out(3257) <= \<const0>\;
  LOCKSTEP_Master_Out(3258) <= \<const0>\;
  LOCKSTEP_Master_Out(3259) <= \<const0>\;
  LOCKSTEP_Master_Out(3260) <= \<const0>\;
  LOCKSTEP_Master_Out(3261) <= \<const0>\;
  LOCKSTEP_Master_Out(3262) <= \<const0>\;
  LOCKSTEP_Master_Out(3263) <= \<const0>\;
  LOCKSTEP_Master_Out(3264) <= \<const0>\;
  LOCKSTEP_Master_Out(3265) <= \<const0>\;
  LOCKSTEP_Master_Out(3266) <= \<const0>\;
  LOCKSTEP_Master_Out(3267) <= \<const0>\;
  LOCKSTEP_Master_Out(3268) <= \<const0>\;
  LOCKSTEP_Master_Out(3269) <= \<const0>\;
  LOCKSTEP_Master_Out(3270) <= \<const0>\;
  LOCKSTEP_Master_Out(3271) <= \<const0>\;
  LOCKSTEP_Master_Out(3272) <= \<const0>\;
  LOCKSTEP_Master_Out(3273) <= \<const0>\;
  LOCKSTEP_Master_Out(3274) <= \<const0>\;
  LOCKSTEP_Master_Out(3275) <= \<const0>\;
  LOCKSTEP_Master_Out(3276) <= \<const0>\;
  LOCKSTEP_Master_Out(3277) <= \<const0>\;
  LOCKSTEP_Master_Out(3278) <= \<const0>\;
  LOCKSTEP_Master_Out(3279) <= \<const0>\;
  LOCKSTEP_Master_Out(3280) <= \<const0>\;
  LOCKSTEP_Master_Out(3281) <= \<const0>\;
  LOCKSTEP_Master_Out(3282) <= \<const0>\;
  LOCKSTEP_Master_Out(3283) <= \<const0>\;
  LOCKSTEP_Master_Out(3284) <= \<const0>\;
  LOCKSTEP_Master_Out(3285) <= \<const0>\;
  LOCKSTEP_Master_Out(3286) <= \<const0>\;
  LOCKSTEP_Master_Out(3287) <= \<const0>\;
  LOCKSTEP_Master_Out(3288) <= \<const0>\;
  LOCKSTEP_Master_Out(3289) <= \<const0>\;
  LOCKSTEP_Master_Out(3290) <= \<const0>\;
  LOCKSTEP_Master_Out(3291) <= \<const0>\;
  LOCKSTEP_Master_Out(3292) <= \<const0>\;
  LOCKSTEP_Master_Out(3293) <= \<const0>\;
  LOCKSTEP_Master_Out(3294) <= \<const0>\;
  LOCKSTEP_Master_Out(3295) <= \<const0>\;
  LOCKSTEP_Master_Out(3296) <= \<const0>\;
  LOCKSTEP_Master_Out(3297) <= \<const0>\;
  LOCKSTEP_Master_Out(3298) <= \<const0>\;
  LOCKSTEP_Master_Out(3299) <= \<const0>\;
  LOCKSTEP_Master_Out(3300) <= \<const0>\;
  LOCKSTEP_Master_Out(3301) <= \<const0>\;
  LOCKSTEP_Master_Out(3302) <= \<const0>\;
  LOCKSTEP_Master_Out(3303) <= \<const0>\;
  LOCKSTEP_Master_Out(3304) <= \<const0>\;
  LOCKSTEP_Master_Out(3305) <= \<const0>\;
  LOCKSTEP_Master_Out(3306) <= \<const0>\;
  LOCKSTEP_Master_Out(3307) <= \<const0>\;
  LOCKSTEP_Master_Out(3308) <= \<const0>\;
  LOCKSTEP_Master_Out(3309) <= \<const0>\;
  LOCKSTEP_Master_Out(3310) <= \<const0>\;
  LOCKSTEP_Master_Out(3311) <= \<const0>\;
  LOCKSTEP_Master_Out(3312) <= \<const0>\;
  LOCKSTEP_Master_Out(3313) <= \<const0>\;
  LOCKSTEP_Master_Out(3314) <= \<const0>\;
  LOCKSTEP_Master_Out(3315) <= \<const0>\;
  LOCKSTEP_Master_Out(3316) <= \<const0>\;
  LOCKSTEP_Master_Out(3317) <= \<const0>\;
  LOCKSTEP_Master_Out(3318) <= \<const0>\;
  LOCKSTEP_Master_Out(3319) <= \<const0>\;
  LOCKSTEP_Master_Out(3320) <= \<const0>\;
  LOCKSTEP_Master_Out(3321) <= \<const0>\;
  LOCKSTEP_Master_Out(3322) <= \<const0>\;
  LOCKSTEP_Master_Out(3323) <= \<const0>\;
  LOCKSTEP_Master_Out(3324) <= \<const0>\;
  LOCKSTEP_Master_Out(3325) <= \<const0>\;
  LOCKSTEP_Master_Out(3326) <= \<const0>\;
  LOCKSTEP_Master_Out(3327) <= \<const0>\;
  LOCKSTEP_Master_Out(3328) <= \<const0>\;
  LOCKSTEP_Master_Out(3329) <= \<const0>\;
  LOCKSTEP_Master_Out(3330) <= \<const0>\;
  LOCKSTEP_Master_Out(3331) <= \<const0>\;
  LOCKSTEP_Master_Out(3332) <= \<const0>\;
  LOCKSTEP_Master_Out(3333) <= \<const0>\;
  LOCKSTEP_Master_Out(3334) <= \<const0>\;
  LOCKSTEP_Master_Out(3335) <= \<const0>\;
  LOCKSTEP_Master_Out(3336) <= \<const0>\;
  LOCKSTEP_Master_Out(3337) <= \<const0>\;
  LOCKSTEP_Master_Out(3338) <= \<const0>\;
  LOCKSTEP_Master_Out(3339) <= \<const0>\;
  LOCKSTEP_Master_Out(3340) <= \<const0>\;
  LOCKSTEP_Master_Out(3341) <= \<const0>\;
  LOCKSTEP_Master_Out(3342) <= \<const0>\;
  LOCKSTEP_Master_Out(3343) <= \<const0>\;
  LOCKSTEP_Master_Out(3344) <= \<const0>\;
  LOCKSTEP_Master_Out(3345) <= \<const0>\;
  LOCKSTEP_Master_Out(3346) <= \<const0>\;
  LOCKSTEP_Master_Out(3347) <= \<const0>\;
  LOCKSTEP_Master_Out(3348) <= \<const0>\;
  LOCKSTEP_Master_Out(3349) <= \<const0>\;
  LOCKSTEP_Master_Out(3350) <= \<const0>\;
  LOCKSTEP_Master_Out(3351) <= \<const0>\;
  LOCKSTEP_Master_Out(3352) <= \<const0>\;
  LOCKSTEP_Master_Out(3353) <= \<const0>\;
  LOCKSTEP_Master_Out(3354) <= \<const0>\;
  LOCKSTEP_Master_Out(3355) <= \<const0>\;
  LOCKSTEP_Master_Out(3356) <= \<const0>\;
  LOCKSTEP_Master_Out(3357) <= \<const0>\;
  LOCKSTEP_Master_Out(3358) <= \<const0>\;
  LOCKSTEP_Master_Out(3359) <= \<const0>\;
  LOCKSTEP_Master_Out(3360) <= \<const0>\;
  LOCKSTEP_Master_Out(3361) <= \<const0>\;
  LOCKSTEP_Master_Out(3362) <= \<const0>\;
  LOCKSTEP_Master_Out(3363) <= \<const0>\;
  LOCKSTEP_Master_Out(3364) <= \<const0>\;
  LOCKSTEP_Master_Out(3365) <= \<const0>\;
  LOCKSTEP_Master_Out(3366) <= \<const0>\;
  LOCKSTEP_Master_Out(3367) <= \<const0>\;
  LOCKSTEP_Master_Out(3368) <= \<const0>\;
  LOCKSTEP_Master_Out(3369) <= \<const0>\;
  LOCKSTEP_Master_Out(3370) <= \<const0>\;
  LOCKSTEP_Master_Out(3371) <= \<const0>\;
  LOCKSTEP_Master_Out(3372) <= \<const0>\;
  LOCKSTEP_Master_Out(3373) <= \<const0>\;
  LOCKSTEP_Master_Out(3374) <= \<const0>\;
  LOCKSTEP_Master_Out(3375) <= \<const0>\;
  LOCKSTEP_Master_Out(3376) <= \<const0>\;
  LOCKSTEP_Master_Out(3377) <= \<const0>\;
  LOCKSTEP_Master_Out(3378) <= \<const0>\;
  LOCKSTEP_Master_Out(3379) <= \<const0>\;
  LOCKSTEP_Master_Out(3380) <= \<const0>\;
  LOCKSTEP_Master_Out(3381) <= \<const0>\;
  LOCKSTEP_Master_Out(3382) <= \<const0>\;
  LOCKSTEP_Master_Out(3383) <= \<const0>\;
  LOCKSTEP_Master_Out(3384) <= \<const0>\;
  LOCKSTEP_Master_Out(3385) <= \<const0>\;
  LOCKSTEP_Master_Out(3386) <= \<const0>\;
  LOCKSTEP_Master_Out(3387) <= \<const0>\;
  LOCKSTEP_Master_Out(3388) <= \<const0>\;
  LOCKSTEP_Master_Out(3389) <= \<const0>\;
  LOCKSTEP_Master_Out(3390) <= \<const0>\;
  LOCKSTEP_Master_Out(3391) <= \<const0>\;
  LOCKSTEP_Master_Out(3392) <= \<const0>\;
  LOCKSTEP_Master_Out(3393) <= \<const0>\;
  LOCKSTEP_Master_Out(3394) <= \<const0>\;
  LOCKSTEP_Master_Out(3395) <= \<const0>\;
  LOCKSTEP_Master_Out(3396) <= \<const0>\;
  LOCKSTEP_Master_Out(3397) <= \<const0>\;
  LOCKSTEP_Master_Out(3398) <= \<const0>\;
  LOCKSTEP_Master_Out(3399) <= \<const0>\;
  LOCKSTEP_Master_Out(3400) <= \<const0>\;
  LOCKSTEP_Master_Out(3401) <= \<const0>\;
  LOCKSTEP_Master_Out(3402) <= \<const0>\;
  LOCKSTEP_Master_Out(3403) <= \<const0>\;
  LOCKSTEP_Master_Out(3404) <= \<const0>\;
  LOCKSTEP_Master_Out(3405) <= \<const0>\;
  LOCKSTEP_Master_Out(3406) <= \<const0>\;
  LOCKSTEP_Master_Out(3407) <= \<const0>\;
  LOCKSTEP_Master_Out(3408) <= \<const0>\;
  LOCKSTEP_Master_Out(3409) <= \<const0>\;
  LOCKSTEP_Master_Out(3410) <= \<const0>\;
  LOCKSTEP_Master_Out(3411) <= \<const0>\;
  LOCKSTEP_Master_Out(3412) <= \<const0>\;
  LOCKSTEP_Master_Out(3413) <= \<const0>\;
  LOCKSTEP_Master_Out(3414) <= \<const0>\;
  LOCKSTEP_Master_Out(3415) <= \<const0>\;
  LOCKSTEP_Master_Out(3416) <= \<const0>\;
  LOCKSTEP_Master_Out(3417) <= \<const0>\;
  LOCKSTEP_Master_Out(3418) <= \<const0>\;
  LOCKSTEP_Master_Out(3419) <= \<const0>\;
  LOCKSTEP_Master_Out(3420) <= \<const0>\;
  LOCKSTEP_Master_Out(3421) <= \<const0>\;
  LOCKSTEP_Master_Out(3422) <= \<const0>\;
  LOCKSTEP_Master_Out(3423) <= \<const0>\;
  LOCKSTEP_Master_Out(3424) <= \<const0>\;
  LOCKSTEP_Master_Out(3425) <= \<const0>\;
  LOCKSTEP_Master_Out(3426) <= \<const0>\;
  LOCKSTEP_Master_Out(3427) <= \<const0>\;
  LOCKSTEP_Master_Out(3428) <= \<const0>\;
  LOCKSTEP_Master_Out(3429) <= \<const0>\;
  LOCKSTEP_Master_Out(3430) <= \<const0>\;
  LOCKSTEP_Master_Out(3431) <= \<const0>\;
  LOCKSTEP_Master_Out(3432) <= \<const0>\;
  LOCKSTEP_Master_Out(3433) <= \<const0>\;
  LOCKSTEP_Master_Out(3434) <= \<const0>\;
  LOCKSTEP_Master_Out(3435) <= \<const0>\;
  LOCKSTEP_Master_Out(3436) <= \<const0>\;
  LOCKSTEP_Master_Out(3437) <= \<const0>\;
  LOCKSTEP_Master_Out(3438) <= \<const0>\;
  LOCKSTEP_Master_Out(3439) <= \<const0>\;
  LOCKSTEP_Master_Out(3440) <= \<const0>\;
  LOCKSTEP_Master_Out(3441) <= \<const0>\;
  LOCKSTEP_Master_Out(3442) <= \<const0>\;
  LOCKSTEP_Master_Out(3443) <= \<const0>\;
  LOCKSTEP_Master_Out(3444) <= \<const0>\;
  LOCKSTEP_Master_Out(3445) <= \<const0>\;
  LOCKSTEP_Master_Out(3446) <= \<const0>\;
  LOCKSTEP_Master_Out(3447) <= \<const0>\;
  LOCKSTEP_Master_Out(3448) <= \<const0>\;
  LOCKSTEP_Master_Out(3449) <= \<const0>\;
  LOCKSTEP_Master_Out(3450) <= \<const0>\;
  LOCKSTEP_Master_Out(3451) <= \<const0>\;
  LOCKSTEP_Master_Out(3452) <= \<const0>\;
  LOCKSTEP_Master_Out(3453) <= \<const0>\;
  LOCKSTEP_Master_Out(3454) <= \<const0>\;
  LOCKSTEP_Master_Out(3455) <= \<const0>\;
  LOCKSTEP_Master_Out(3456) <= \<const0>\;
  LOCKSTEP_Master_Out(3457) <= \<const0>\;
  LOCKSTEP_Master_Out(3458) <= \<const0>\;
  LOCKSTEP_Master_Out(3459) <= \<const0>\;
  LOCKSTEP_Master_Out(3460) <= \<const0>\;
  LOCKSTEP_Master_Out(3461) <= \<const0>\;
  LOCKSTEP_Master_Out(3462) <= \<const0>\;
  LOCKSTEP_Master_Out(3463) <= \<const0>\;
  LOCKSTEP_Master_Out(3464) <= \<const0>\;
  LOCKSTEP_Master_Out(3465) <= \<const0>\;
  LOCKSTEP_Master_Out(3466) <= \<const0>\;
  LOCKSTEP_Master_Out(3467) <= \<const0>\;
  LOCKSTEP_Master_Out(3468) <= \<const0>\;
  LOCKSTEP_Master_Out(3469) <= \<const0>\;
  LOCKSTEP_Master_Out(3470) <= \<const0>\;
  LOCKSTEP_Master_Out(3471) <= \<const0>\;
  LOCKSTEP_Master_Out(3472) <= \<const0>\;
  LOCKSTEP_Master_Out(3473) <= \<const0>\;
  LOCKSTEP_Master_Out(3474) <= \<const0>\;
  LOCKSTEP_Master_Out(3475) <= \<const0>\;
  LOCKSTEP_Master_Out(3476) <= \<const0>\;
  LOCKSTEP_Master_Out(3477) <= \<const0>\;
  LOCKSTEP_Master_Out(3478) <= \<const0>\;
  LOCKSTEP_Master_Out(3479) <= \<const0>\;
  LOCKSTEP_Master_Out(3480) <= \<const0>\;
  LOCKSTEP_Master_Out(3481) <= \<const0>\;
  LOCKSTEP_Master_Out(3482) <= \<const0>\;
  LOCKSTEP_Master_Out(3483) <= \<const0>\;
  LOCKSTEP_Master_Out(3484) <= \<const0>\;
  LOCKSTEP_Master_Out(3485) <= \<const0>\;
  LOCKSTEP_Master_Out(3486) <= \<const0>\;
  LOCKSTEP_Master_Out(3487) <= \<const0>\;
  LOCKSTEP_Master_Out(3488) <= \<const0>\;
  LOCKSTEP_Master_Out(3489) <= \<const0>\;
  LOCKSTEP_Master_Out(3490) <= \<const0>\;
  LOCKSTEP_Master_Out(3491) <= \<const0>\;
  LOCKSTEP_Master_Out(3492) <= \<const0>\;
  LOCKSTEP_Master_Out(3493) <= \<const0>\;
  LOCKSTEP_Master_Out(3494) <= \<const0>\;
  LOCKSTEP_Master_Out(3495) <= \<const0>\;
  LOCKSTEP_Master_Out(3496) <= \<const0>\;
  LOCKSTEP_Master_Out(3497) <= \<const0>\;
  LOCKSTEP_Master_Out(3498) <= \<const0>\;
  LOCKSTEP_Master_Out(3499) <= \<const0>\;
  LOCKSTEP_Master_Out(3500) <= \<const0>\;
  LOCKSTEP_Master_Out(3501) <= \<const0>\;
  LOCKSTEP_Master_Out(3502) <= \<const0>\;
  LOCKSTEP_Master_Out(3503) <= \<const0>\;
  LOCKSTEP_Master_Out(3504) <= \<const0>\;
  LOCKSTEP_Master_Out(3505) <= \<const0>\;
  LOCKSTEP_Master_Out(3506) <= \<const0>\;
  LOCKSTEP_Master_Out(3507) <= \<const0>\;
  LOCKSTEP_Master_Out(3508) <= \<const0>\;
  LOCKSTEP_Master_Out(3509) <= \<const0>\;
  LOCKSTEP_Master_Out(3510) <= \<const0>\;
  LOCKSTEP_Master_Out(3511) <= \<const0>\;
  LOCKSTEP_Master_Out(3512) <= \<const0>\;
  LOCKSTEP_Master_Out(3513) <= \<const0>\;
  LOCKSTEP_Master_Out(3514) <= \<const0>\;
  LOCKSTEP_Master_Out(3515) <= \<const0>\;
  LOCKSTEP_Master_Out(3516) <= \<const0>\;
  LOCKSTEP_Master_Out(3517) <= \<const0>\;
  LOCKSTEP_Master_Out(3518) <= \<const0>\;
  LOCKSTEP_Master_Out(3519) <= \<const0>\;
  LOCKSTEP_Master_Out(3520) <= \<const0>\;
  LOCKSTEP_Master_Out(3521) <= \<const0>\;
  LOCKSTEP_Master_Out(3522) <= \<const0>\;
  LOCKSTEP_Master_Out(3523) <= \<const0>\;
  LOCKSTEP_Master_Out(3524) <= \<const0>\;
  LOCKSTEP_Master_Out(3525) <= \<const0>\;
  LOCKSTEP_Master_Out(3526) <= \<const0>\;
  LOCKSTEP_Master_Out(3527) <= \<const0>\;
  LOCKSTEP_Master_Out(3528) <= \<const0>\;
  LOCKSTEP_Master_Out(3529) <= \<const0>\;
  LOCKSTEP_Master_Out(3530) <= \<const0>\;
  LOCKSTEP_Master_Out(3531) <= \<const0>\;
  LOCKSTEP_Master_Out(3532) <= \<const0>\;
  LOCKSTEP_Master_Out(3533) <= \<const0>\;
  LOCKSTEP_Master_Out(3534) <= \<const0>\;
  LOCKSTEP_Master_Out(3535) <= \<const0>\;
  LOCKSTEP_Master_Out(3536) <= \<const0>\;
  LOCKSTEP_Master_Out(3537) <= \<const0>\;
  LOCKSTEP_Master_Out(3538) <= \<const0>\;
  LOCKSTEP_Master_Out(3539) <= \<const0>\;
  LOCKSTEP_Master_Out(3540) <= \<const0>\;
  LOCKSTEP_Master_Out(3541) <= \<const0>\;
  LOCKSTEP_Master_Out(3542) <= \<const0>\;
  LOCKSTEP_Master_Out(3543) <= \<const0>\;
  LOCKSTEP_Master_Out(3544) <= \<const0>\;
  LOCKSTEP_Master_Out(3545) <= \<const0>\;
  LOCKSTEP_Master_Out(3546) <= \<const0>\;
  LOCKSTEP_Master_Out(3547) <= \<const0>\;
  LOCKSTEP_Master_Out(3548) <= \<const0>\;
  LOCKSTEP_Master_Out(3549) <= \<const0>\;
  LOCKSTEP_Master_Out(3550) <= \<const0>\;
  LOCKSTEP_Master_Out(3551) <= \<const0>\;
  LOCKSTEP_Master_Out(3552) <= \<const0>\;
  LOCKSTEP_Master_Out(3553) <= \<const0>\;
  LOCKSTEP_Master_Out(3554) <= \<const0>\;
  LOCKSTEP_Master_Out(3555) <= \<const0>\;
  LOCKSTEP_Master_Out(3556) <= \<const0>\;
  LOCKSTEP_Master_Out(3557) <= \<const0>\;
  LOCKSTEP_Master_Out(3558) <= \<const0>\;
  LOCKSTEP_Master_Out(3559) <= \<const0>\;
  LOCKSTEP_Master_Out(3560) <= \<const0>\;
  LOCKSTEP_Master_Out(3561) <= \<const0>\;
  LOCKSTEP_Master_Out(3562) <= \<const0>\;
  LOCKSTEP_Master_Out(3563) <= \<const0>\;
  LOCKSTEP_Master_Out(3564) <= \<const0>\;
  LOCKSTEP_Master_Out(3565) <= \<const0>\;
  LOCKSTEP_Master_Out(3566) <= \<const0>\;
  LOCKSTEP_Master_Out(3567) <= \<const0>\;
  LOCKSTEP_Master_Out(3568) <= \<const0>\;
  LOCKSTEP_Master_Out(3569) <= \<const0>\;
  LOCKSTEP_Master_Out(3570) <= \<const0>\;
  LOCKSTEP_Master_Out(3571) <= \<const0>\;
  LOCKSTEP_Master_Out(3572) <= \<const0>\;
  LOCKSTEP_Master_Out(3573) <= \<const0>\;
  LOCKSTEP_Master_Out(3574) <= \<const0>\;
  LOCKSTEP_Master_Out(3575) <= \<const0>\;
  LOCKSTEP_Master_Out(3576) <= \<const0>\;
  LOCKSTEP_Master_Out(3577) <= \<const0>\;
  LOCKSTEP_Master_Out(3578) <= \<const0>\;
  LOCKSTEP_Master_Out(3579) <= \<const0>\;
  LOCKSTEP_Master_Out(3580) <= \<const0>\;
  LOCKSTEP_Master_Out(3581) <= \<const0>\;
  LOCKSTEP_Master_Out(3582) <= \<const0>\;
  LOCKSTEP_Master_Out(3583) <= \<const0>\;
  LOCKSTEP_Master_Out(3584) <= \<const0>\;
  LOCKSTEP_Master_Out(3585) <= \<const0>\;
  LOCKSTEP_Master_Out(3586) <= \<const0>\;
  LOCKSTEP_Master_Out(3587) <= \<const0>\;
  LOCKSTEP_Master_Out(3588) <= \<const0>\;
  LOCKSTEP_Master_Out(3589) <= \<const0>\;
  LOCKSTEP_Master_Out(3590) <= \<const0>\;
  LOCKSTEP_Master_Out(3591) <= \<const0>\;
  LOCKSTEP_Master_Out(3592) <= \<const0>\;
  LOCKSTEP_Master_Out(3593) <= \<const0>\;
  LOCKSTEP_Master_Out(3594) <= \<const0>\;
  LOCKSTEP_Master_Out(3595) <= \<const0>\;
  LOCKSTEP_Master_Out(3596) <= \<const0>\;
  LOCKSTEP_Master_Out(3597) <= \<const0>\;
  LOCKSTEP_Master_Out(3598) <= \<const0>\;
  LOCKSTEP_Master_Out(3599) <= \<const0>\;
  LOCKSTEP_Master_Out(3600) <= \<const0>\;
  LOCKSTEP_Master_Out(3601) <= \<const0>\;
  LOCKSTEP_Master_Out(3602) <= \<const0>\;
  LOCKSTEP_Master_Out(3603) <= \<const0>\;
  LOCKSTEP_Master_Out(3604) <= \<const0>\;
  LOCKSTEP_Master_Out(3605) <= \<const0>\;
  LOCKSTEP_Master_Out(3606) <= \<const0>\;
  LOCKSTEP_Master_Out(3607) <= \<const0>\;
  LOCKSTEP_Master_Out(3608) <= \<const0>\;
  LOCKSTEP_Master_Out(3609) <= \<const0>\;
  LOCKSTEP_Master_Out(3610) <= \<const0>\;
  LOCKSTEP_Master_Out(3611) <= \<const0>\;
  LOCKSTEP_Master_Out(3612) <= \<const0>\;
  LOCKSTEP_Master_Out(3613) <= \<const0>\;
  LOCKSTEP_Master_Out(3614) <= \<const0>\;
  LOCKSTEP_Master_Out(3615) <= \<const0>\;
  LOCKSTEP_Master_Out(3616) <= \<const0>\;
  LOCKSTEP_Master_Out(3617) <= \<const0>\;
  LOCKSTEP_Master_Out(3618) <= \<const0>\;
  LOCKSTEP_Master_Out(3619) <= \<const0>\;
  LOCKSTEP_Master_Out(3620) <= \<const0>\;
  LOCKSTEP_Master_Out(3621) <= \<const0>\;
  LOCKSTEP_Master_Out(3622) <= \<const0>\;
  LOCKSTEP_Master_Out(3623) <= \<const0>\;
  LOCKSTEP_Master_Out(3624) <= \<const0>\;
  LOCKSTEP_Master_Out(3625) <= \<const0>\;
  LOCKSTEP_Master_Out(3626) <= \<const0>\;
  LOCKSTEP_Master_Out(3627) <= \<const0>\;
  LOCKSTEP_Master_Out(3628) <= \<const0>\;
  LOCKSTEP_Master_Out(3629) <= \<const0>\;
  LOCKSTEP_Master_Out(3630) <= \<const0>\;
  LOCKSTEP_Master_Out(3631) <= \<const0>\;
  LOCKSTEP_Master_Out(3632) <= \<const0>\;
  LOCKSTEP_Master_Out(3633) <= \<const0>\;
  LOCKSTEP_Master_Out(3634) <= \<const0>\;
  LOCKSTEP_Master_Out(3635) <= \<const0>\;
  LOCKSTEP_Master_Out(3636) <= \<const0>\;
  LOCKSTEP_Master_Out(3637) <= \<const0>\;
  LOCKSTEP_Master_Out(3638) <= \<const0>\;
  LOCKSTEP_Master_Out(3639) <= \<const0>\;
  LOCKSTEP_Master_Out(3640) <= \<const0>\;
  LOCKSTEP_Master_Out(3641) <= \<const0>\;
  LOCKSTEP_Master_Out(3642) <= \<const0>\;
  LOCKSTEP_Master_Out(3643) <= \<const0>\;
  LOCKSTEP_Master_Out(3644) <= \<const0>\;
  LOCKSTEP_Master_Out(3645) <= \<const0>\;
  LOCKSTEP_Master_Out(3646) <= \<const0>\;
  LOCKSTEP_Master_Out(3647) <= \<const0>\;
  LOCKSTEP_Master_Out(3648) <= \<const0>\;
  LOCKSTEP_Master_Out(3649) <= \<const0>\;
  LOCKSTEP_Master_Out(3650) <= \<const0>\;
  LOCKSTEP_Master_Out(3651) <= \<const0>\;
  LOCKSTEP_Master_Out(3652) <= \<const0>\;
  LOCKSTEP_Master_Out(3653) <= \<const0>\;
  LOCKSTEP_Master_Out(3654) <= \<const0>\;
  LOCKSTEP_Master_Out(3655) <= \<const0>\;
  LOCKSTEP_Master_Out(3656) <= \<const0>\;
  LOCKSTEP_Master_Out(3657) <= \<const0>\;
  LOCKSTEP_Master_Out(3658) <= \<const0>\;
  LOCKSTEP_Master_Out(3659) <= \<const0>\;
  LOCKSTEP_Master_Out(3660) <= \<const0>\;
  LOCKSTEP_Master_Out(3661) <= \<const0>\;
  LOCKSTEP_Master_Out(3662) <= \<const0>\;
  LOCKSTEP_Master_Out(3663) <= \<const0>\;
  LOCKSTEP_Master_Out(3664) <= \<const0>\;
  LOCKSTEP_Master_Out(3665) <= \<const0>\;
  LOCKSTEP_Master_Out(3666) <= \<const0>\;
  LOCKSTEP_Master_Out(3667) <= \<const0>\;
  LOCKSTEP_Master_Out(3668) <= \<const0>\;
  LOCKSTEP_Master_Out(3669) <= \<const0>\;
  LOCKSTEP_Master_Out(3670) <= \<const0>\;
  LOCKSTEP_Master_Out(3671) <= \<const0>\;
  LOCKSTEP_Master_Out(3672) <= \<const0>\;
  LOCKSTEP_Master_Out(3673) <= \<const0>\;
  LOCKSTEP_Master_Out(3674) <= \<const0>\;
  LOCKSTEP_Master_Out(3675) <= \<const0>\;
  LOCKSTEP_Master_Out(3676) <= \<const0>\;
  LOCKSTEP_Master_Out(3677) <= \<const0>\;
  LOCKSTEP_Master_Out(3678) <= \<const0>\;
  LOCKSTEP_Master_Out(3679) <= \<const0>\;
  LOCKSTEP_Master_Out(3680) <= \<const0>\;
  LOCKSTEP_Master_Out(3681) <= \<const0>\;
  LOCKSTEP_Master_Out(3682) <= \<const0>\;
  LOCKSTEP_Master_Out(3683) <= \<const0>\;
  LOCKSTEP_Master_Out(3684) <= \<const0>\;
  LOCKSTEP_Master_Out(3685) <= \<const0>\;
  LOCKSTEP_Master_Out(3686) <= \<const0>\;
  LOCKSTEP_Master_Out(3687) <= \<const0>\;
  LOCKSTEP_Master_Out(3688) <= \<const0>\;
  LOCKSTEP_Master_Out(3689) <= \<const0>\;
  LOCKSTEP_Master_Out(3690) <= \<const0>\;
  LOCKSTEP_Master_Out(3691) <= \<const0>\;
  LOCKSTEP_Master_Out(3692) <= \<const0>\;
  LOCKSTEP_Master_Out(3693) <= \<const0>\;
  LOCKSTEP_Master_Out(3694) <= \<const0>\;
  LOCKSTEP_Master_Out(3695) <= \<const0>\;
  LOCKSTEP_Master_Out(3696) <= \<const0>\;
  LOCKSTEP_Master_Out(3697) <= \<const0>\;
  LOCKSTEP_Master_Out(3698) <= \<const0>\;
  LOCKSTEP_Master_Out(3699) <= \<const0>\;
  LOCKSTEP_Master_Out(3700) <= \<const0>\;
  LOCKSTEP_Master_Out(3701) <= \<const0>\;
  LOCKSTEP_Master_Out(3702) <= \<const0>\;
  LOCKSTEP_Master_Out(3703) <= \<const0>\;
  LOCKSTEP_Master_Out(3704) <= \<const0>\;
  LOCKSTEP_Master_Out(3705) <= \<const0>\;
  LOCKSTEP_Master_Out(3706) <= \<const0>\;
  LOCKSTEP_Master_Out(3707) <= \<const0>\;
  LOCKSTEP_Master_Out(3708) <= \<const0>\;
  LOCKSTEP_Master_Out(3709) <= \<const0>\;
  LOCKSTEP_Master_Out(3710) <= \<const0>\;
  LOCKSTEP_Master_Out(3711) <= \<const0>\;
  LOCKSTEP_Master_Out(3712) <= \<const0>\;
  LOCKSTEP_Master_Out(3713) <= \<const0>\;
  LOCKSTEP_Master_Out(3714) <= \<const0>\;
  LOCKSTEP_Master_Out(3715) <= \<const0>\;
  LOCKSTEP_Master_Out(3716) <= \<const0>\;
  LOCKSTEP_Master_Out(3717) <= \<const0>\;
  LOCKSTEP_Master_Out(3718) <= \<const0>\;
  LOCKSTEP_Master_Out(3719) <= \<const0>\;
  LOCKSTEP_Master_Out(3720) <= \<const0>\;
  LOCKSTEP_Master_Out(3721) <= \<const0>\;
  LOCKSTEP_Master_Out(3722) <= \<const0>\;
  LOCKSTEP_Master_Out(3723) <= \<const0>\;
  LOCKSTEP_Master_Out(3724) <= \<const0>\;
  LOCKSTEP_Master_Out(3725) <= \<const0>\;
  LOCKSTEP_Master_Out(3726) <= \<const0>\;
  LOCKSTEP_Master_Out(3727) <= \<const0>\;
  LOCKSTEP_Master_Out(3728) <= \<const0>\;
  LOCKSTEP_Master_Out(3729) <= \<const0>\;
  LOCKSTEP_Master_Out(3730) <= \<const0>\;
  LOCKSTEP_Master_Out(3731) <= \<const0>\;
  LOCKSTEP_Master_Out(3732) <= \<const0>\;
  LOCKSTEP_Master_Out(3733) <= \<const0>\;
  LOCKSTEP_Master_Out(3734) <= \<const0>\;
  LOCKSTEP_Master_Out(3735) <= \<const0>\;
  LOCKSTEP_Master_Out(3736) <= \<const0>\;
  LOCKSTEP_Master_Out(3737) <= \<const0>\;
  LOCKSTEP_Master_Out(3738) <= \<const0>\;
  LOCKSTEP_Master_Out(3739) <= \<const0>\;
  LOCKSTEP_Master_Out(3740) <= \<const0>\;
  LOCKSTEP_Master_Out(3741) <= \<const0>\;
  LOCKSTEP_Master_Out(3742) <= \<const0>\;
  LOCKSTEP_Master_Out(3743) <= \<const0>\;
  LOCKSTEP_Master_Out(3744) <= \<const0>\;
  LOCKSTEP_Master_Out(3745) <= \<const0>\;
  LOCKSTEP_Master_Out(3746) <= \<const0>\;
  LOCKSTEP_Master_Out(3747) <= \<const0>\;
  LOCKSTEP_Master_Out(3748) <= \<const0>\;
  LOCKSTEP_Master_Out(3749) <= \<const0>\;
  LOCKSTEP_Master_Out(3750) <= \<const0>\;
  LOCKSTEP_Master_Out(3751) <= \<const0>\;
  LOCKSTEP_Master_Out(3752) <= \<const0>\;
  LOCKSTEP_Master_Out(3753) <= \<const0>\;
  LOCKSTEP_Master_Out(3754) <= \<const0>\;
  LOCKSTEP_Master_Out(3755) <= \<const0>\;
  LOCKSTEP_Master_Out(3756) <= \<const0>\;
  LOCKSTEP_Master_Out(3757) <= \<const0>\;
  LOCKSTEP_Master_Out(3758) <= \<const0>\;
  LOCKSTEP_Master_Out(3759) <= \<const0>\;
  LOCKSTEP_Master_Out(3760) <= \<const0>\;
  LOCKSTEP_Master_Out(3761) <= \<const0>\;
  LOCKSTEP_Master_Out(3762) <= \<const0>\;
  LOCKSTEP_Master_Out(3763) <= \<const0>\;
  LOCKSTEP_Master_Out(3764) <= \<const0>\;
  LOCKSTEP_Master_Out(3765) <= \<const0>\;
  LOCKSTEP_Master_Out(3766) <= \<const0>\;
  LOCKSTEP_Master_Out(3767) <= \<const0>\;
  LOCKSTEP_Master_Out(3768) <= \<const0>\;
  LOCKSTEP_Master_Out(3769) <= \<const0>\;
  LOCKSTEP_Master_Out(3770) <= \<const0>\;
  LOCKSTEP_Master_Out(3771) <= \<const0>\;
  LOCKSTEP_Master_Out(3772) <= \<const0>\;
  LOCKSTEP_Master_Out(3773) <= \<const0>\;
  LOCKSTEP_Master_Out(3774) <= \<const0>\;
  LOCKSTEP_Master_Out(3775) <= \<const0>\;
  LOCKSTEP_Master_Out(3776) <= \<const0>\;
  LOCKSTEP_Master_Out(3777) <= \<const0>\;
  LOCKSTEP_Master_Out(3778) <= \<const0>\;
  LOCKSTEP_Master_Out(3779) <= \<const0>\;
  LOCKSTEP_Master_Out(3780) <= \<const0>\;
  LOCKSTEP_Master_Out(3781) <= \<const0>\;
  LOCKSTEP_Master_Out(3782) <= \<const0>\;
  LOCKSTEP_Master_Out(3783) <= \<const0>\;
  LOCKSTEP_Master_Out(3784) <= \<const0>\;
  LOCKSTEP_Master_Out(3785) <= \<const0>\;
  LOCKSTEP_Master_Out(3786) <= \<const0>\;
  LOCKSTEP_Master_Out(3787) <= \<const0>\;
  LOCKSTEP_Master_Out(3788) <= \<const0>\;
  LOCKSTEP_Master_Out(3789) <= \<const0>\;
  LOCKSTEP_Master_Out(3790) <= \<const0>\;
  LOCKSTEP_Master_Out(3791) <= \<const0>\;
  LOCKSTEP_Master_Out(3792) <= \<const0>\;
  LOCKSTEP_Master_Out(3793) <= \<const0>\;
  LOCKSTEP_Master_Out(3794) <= \<const0>\;
  LOCKSTEP_Master_Out(3795) <= \<const0>\;
  LOCKSTEP_Master_Out(3796) <= \<const0>\;
  LOCKSTEP_Master_Out(3797) <= \<const0>\;
  LOCKSTEP_Master_Out(3798) <= \<const0>\;
  LOCKSTEP_Master_Out(3799) <= \<const0>\;
  LOCKSTEP_Master_Out(3800) <= \<const0>\;
  LOCKSTEP_Master_Out(3801) <= \<const0>\;
  LOCKSTEP_Master_Out(3802) <= \<const0>\;
  LOCKSTEP_Master_Out(3803) <= \<const0>\;
  LOCKSTEP_Master_Out(3804) <= \<const0>\;
  LOCKSTEP_Master_Out(3805) <= \<const0>\;
  LOCKSTEP_Master_Out(3806) <= \<const0>\;
  LOCKSTEP_Master_Out(3807) <= \<const0>\;
  LOCKSTEP_Master_Out(3808) <= \<const0>\;
  LOCKSTEP_Master_Out(3809) <= \<const0>\;
  LOCKSTEP_Master_Out(3810) <= \<const0>\;
  LOCKSTEP_Master_Out(3811) <= \<const0>\;
  LOCKSTEP_Master_Out(3812) <= \<const0>\;
  LOCKSTEP_Master_Out(3813) <= \<const0>\;
  LOCKSTEP_Master_Out(3814) <= \<const0>\;
  LOCKSTEP_Master_Out(3815) <= \<const0>\;
  LOCKSTEP_Master_Out(3816) <= \<const0>\;
  LOCKSTEP_Master_Out(3817) <= \<const0>\;
  LOCKSTEP_Master_Out(3818) <= \<const0>\;
  LOCKSTEP_Master_Out(3819) <= \<const0>\;
  LOCKSTEP_Master_Out(3820) <= \<const0>\;
  LOCKSTEP_Master_Out(3821) <= \<const0>\;
  LOCKSTEP_Master_Out(3822) <= \<const0>\;
  LOCKSTEP_Master_Out(3823) <= \<const0>\;
  LOCKSTEP_Master_Out(3824) <= \<const0>\;
  LOCKSTEP_Master_Out(3825) <= \<const0>\;
  LOCKSTEP_Master_Out(3826) <= \<const0>\;
  LOCKSTEP_Master_Out(3827) <= \<const0>\;
  LOCKSTEP_Master_Out(3828) <= \<const0>\;
  LOCKSTEP_Master_Out(3829) <= \<const0>\;
  LOCKSTEP_Master_Out(3830) <= \<const0>\;
  LOCKSTEP_Master_Out(3831) <= \<const0>\;
  LOCKSTEP_Master_Out(3832) <= \<const0>\;
  LOCKSTEP_Master_Out(3833) <= \<const0>\;
  LOCKSTEP_Master_Out(3834) <= \<const0>\;
  LOCKSTEP_Master_Out(3835) <= \<const0>\;
  LOCKSTEP_Master_Out(3836) <= \<const0>\;
  LOCKSTEP_Master_Out(3837) <= \<const0>\;
  LOCKSTEP_Master_Out(3838) <= \<const0>\;
  LOCKSTEP_Master_Out(3839) <= \<const0>\;
  LOCKSTEP_Master_Out(3840) <= \<const0>\;
  LOCKSTEP_Master_Out(3841) <= \<const0>\;
  LOCKSTEP_Master_Out(3842) <= \<const0>\;
  LOCKSTEP_Master_Out(3843) <= \<const0>\;
  LOCKSTEP_Master_Out(3844) <= \<const0>\;
  LOCKSTEP_Master_Out(3845) <= \<const0>\;
  LOCKSTEP_Master_Out(3846) <= \<const0>\;
  LOCKSTEP_Master_Out(3847) <= \<const0>\;
  LOCKSTEP_Master_Out(3848) <= \<const0>\;
  LOCKSTEP_Master_Out(3849) <= \<const0>\;
  LOCKSTEP_Master_Out(3850) <= \<const0>\;
  LOCKSTEP_Master_Out(3851) <= \<const0>\;
  LOCKSTEP_Master_Out(3852) <= \<const0>\;
  LOCKSTEP_Master_Out(3853) <= \<const0>\;
  LOCKSTEP_Master_Out(3854) <= \<const0>\;
  LOCKSTEP_Master_Out(3855) <= \<const0>\;
  LOCKSTEP_Master_Out(3856) <= \<const0>\;
  LOCKSTEP_Master_Out(3857) <= \<const0>\;
  LOCKSTEP_Master_Out(3858) <= \<const0>\;
  LOCKSTEP_Master_Out(3859) <= \<const0>\;
  LOCKSTEP_Master_Out(3860) <= \<const0>\;
  LOCKSTEP_Master_Out(3861) <= \<const0>\;
  LOCKSTEP_Master_Out(3862) <= \<const0>\;
  LOCKSTEP_Master_Out(3863) <= \<const0>\;
  LOCKSTEP_Master_Out(3864) <= \<const0>\;
  LOCKSTEP_Master_Out(3865) <= \<const0>\;
  LOCKSTEP_Master_Out(3866) <= \<const0>\;
  LOCKSTEP_Master_Out(3867) <= \<const0>\;
  LOCKSTEP_Master_Out(3868) <= \<const0>\;
  LOCKSTEP_Master_Out(3869) <= \<const0>\;
  LOCKSTEP_Master_Out(3870) <= \<const0>\;
  LOCKSTEP_Master_Out(3871) <= \<const0>\;
  LOCKSTEP_Master_Out(3872) <= \<const0>\;
  LOCKSTEP_Master_Out(3873) <= \<const0>\;
  LOCKSTEP_Master_Out(3874) <= \<const0>\;
  LOCKSTEP_Master_Out(3875) <= \<const0>\;
  LOCKSTEP_Master_Out(3876) <= \<const0>\;
  LOCKSTEP_Master_Out(3877) <= \<const0>\;
  LOCKSTEP_Master_Out(3878) <= \<const0>\;
  LOCKSTEP_Master_Out(3879) <= \<const0>\;
  LOCKSTEP_Master_Out(3880) <= \<const0>\;
  LOCKSTEP_Master_Out(3881) <= \<const0>\;
  LOCKSTEP_Master_Out(3882) <= \<const0>\;
  LOCKSTEP_Master_Out(3883) <= \<const0>\;
  LOCKSTEP_Master_Out(3884) <= \<const0>\;
  LOCKSTEP_Master_Out(3885) <= \<const0>\;
  LOCKSTEP_Master_Out(3886) <= \<const0>\;
  LOCKSTEP_Master_Out(3887) <= \<const0>\;
  LOCKSTEP_Master_Out(3888) <= \<const0>\;
  LOCKSTEP_Master_Out(3889) <= \<const0>\;
  LOCKSTEP_Master_Out(3890) <= \<const0>\;
  LOCKSTEP_Master_Out(3891) <= \<const0>\;
  LOCKSTEP_Master_Out(3892) <= \<const0>\;
  LOCKSTEP_Master_Out(3893) <= \<const0>\;
  LOCKSTEP_Master_Out(3894) <= \<const0>\;
  LOCKSTEP_Master_Out(3895) <= \<const0>\;
  LOCKSTEP_Master_Out(3896) <= \<const0>\;
  LOCKSTEP_Master_Out(3897) <= \<const0>\;
  LOCKSTEP_Master_Out(3898) <= \<const0>\;
  LOCKSTEP_Master_Out(3899) <= \<const0>\;
  LOCKSTEP_Master_Out(3900) <= \<const0>\;
  LOCKSTEP_Master_Out(3901) <= \<const0>\;
  LOCKSTEP_Master_Out(3902) <= \<const0>\;
  LOCKSTEP_Master_Out(3903) <= \<const0>\;
  LOCKSTEP_Master_Out(3904) <= \<const0>\;
  LOCKSTEP_Master_Out(3905) <= \<const0>\;
  LOCKSTEP_Master_Out(3906) <= \<const0>\;
  LOCKSTEP_Master_Out(3907) <= \<const0>\;
  LOCKSTEP_Master_Out(3908) <= \<const0>\;
  LOCKSTEP_Master_Out(3909) <= \<const0>\;
  LOCKSTEP_Master_Out(3910) <= \<const0>\;
  LOCKSTEP_Master_Out(3911) <= \<const0>\;
  LOCKSTEP_Master_Out(3912) <= \<const0>\;
  LOCKSTEP_Master_Out(3913) <= \<const0>\;
  LOCKSTEP_Master_Out(3914) <= \<const0>\;
  LOCKSTEP_Master_Out(3915) <= \<const0>\;
  LOCKSTEP_Master_Out(3916) <= \<const0>\;
  LOCKSTEP_Master_Out(3917) <= \<const0>\;
  LOCKSTEP_Master_Out(3918) <= \<const0>\;
  LOCKSTEP_Master_Out(3919) <= \<const0>\;
  LOCKSTEP_Master_Out(3920) <= \<const0>\;
  LOCKSTEP_Master_Out(3921) <= \<const0>\;
  LOCKSTEP_Master_Out(3922) <= \<const0>\;
  LOCKSTEP_Master_Out(3923) <= \<const0>\;
  LOCKSTEP_Master_Out(3924) <= \<const0>\;
  LOCKSTEP_Master_Out(3925) <= \<const0>\;
  LOCKSTEP_Master_Out(3926) <= \<const0>\;
  LOCKSTEP_Master_Out(3927) <= \<const0>\;
  LOCKSTEP_Master_Out(3928) <= \<const0>\;
  LOCKSTEP_Master_Out(3929) <= \<const0>\;
  LOCKSTEP_Master_Out(3930) <= \<const0>\;
  LOCKSTEP_Master_Out(3931) <= \<const0>\;
  LOCKSTEP_Master_Out(3932) <= \<const0>\;
  LOCKSTEP_Master_Out(3933) <= \<const0>\;
  LOCKSTEP_Master_Out(3934) <= \<const0>\;
  LOCKSTEP_Master_Out(3935) <= \<const0>\;
  LOCKSTEP_Master_Out(3936) <= \<const0>\;
  LOCKSTEP_Master_Out(3937) <= \<const0>\;
  LOCKSTEP_Master_Out(3938) <= \<const0>\;
  LOCKSTEP_Master_Out(3939) <= \<const0>\;
  LOCKSTEP_Master_Out(3940) <= \<const0>\;
  LOCKSTEP_Master_Out(3941) <= \<const0>\;
  LOCKSTEP_Master_Out(3942) <= \<const0>\;
  LOCKSTEP_Master_Out(3943) <= \<const0>\;
  LOCKSTEP_Master_Out(3944) <= \<const0>\;
  LOCKSTEP_Master_Out(3945) <= \<const0>\;
  LOCKSTEP_Master_Out(3946) <= \<const0>\;
  LOCKSTEP_Master_Out(3947) <= \<const0>\;
  LOCKSTEP_Master_Out(3948) <= \<const0>\;
  LOCKSTEP_Master_Out(3949) <= \<const0>\;
  LOCKSTEP_Master_Out(3950) <= \<const0>\;
  LOCKSTEP_Master_Out(3951) <= \<const0>\;
  LOCKSTEP_Master_Out(3952) <= \<const0>\;
  LOCKSTEP_Master_Out(3953) <= \<const0>\;
  LOCKSTEP_Master_Out(3954) <= \<const0>\;
  LOCKSTEP_Master_Out(3955) <= \<const0>\;
  LOCKSTEP_Master_Out(3956) <= \<const0>\;
  LOCKSTEP_Master_Out(3957) <= \<const0>\;
  LOCKSTEP_Master_Out(3958) <= \<const0>\;
  LOCKSTEP_Master_Out(3959) <= \<const0>\;
  LOCKSTEP_Master_Out(3960) <= \<const0>\;
  LOCKSTEP_Master_Out(3961) <= \<const0>\;
  LOCKSTEP_Master_Out(3962) <= \<const0>\;
  LOCKSTEP_Master_Out(3963) <= \<const0>\;
  LOCKSTEP_Master_Out(3964) <= \<const0>\;
  LOCKSTEP_Master_Out(3965) <= \<const0>\;
  LOCKSTEP_Master_Out(3966) <= \<const0>\;
  LOCKSTEP_Master_Out(3967) <= \<const0>\;
  LOCKSTEP_Master_Out(3968) <= \<const0>\;
  LOCKSTEP_Master_Out(3969) <= \<const0>\;
  LOCKSTEP_Master_Out(3970) <= \<const0>\;
  LOCKSTEP_Master_Out(3971) <= \<const0>\;
  LOCKSTEP_Master_Out(3972) <= \<const0>\;
  LOCKSTEP_Master_Out(3973) <= \<const0>\;
  LOCKSTEP_Master_Out(3974) <= \<const0>\;
  LOCKSTEP_Master_Out(3975) <= \<const0>\;
  LOCKSTEP_Master_Out(3976) <= \<const0>\;
  LOCKSTEP_Master_Out(3977) <= \<const0>\;
  LOCKSTEP_Master_Out(3978) <= \<const0>\;
  LOCKSTEP_Master_Out(3979) <= \<const0>\;
  LOCKSTEP_Master_Out(3980) <= \<const0>\;
  LOCKSTEP_Master_Out(3981) <= \<const0>\;
  LOCKSTEP_Master_Out(3982) <= \<const0>\;
  LOCKSTEP_Master_Out(3983) <= \<const0>\;
  LOCKSTEP_Master_Out(3984) <= \<const0>\;
  LOCKSTEP_Master_Out(3985) <= \<const0>\;
  LOCKSTEP_Master_Out(3986) <= \<const0>\;
  LOCKSTEP_Master_Out(3987) <= \<const0>\;
  LOCKSTEP_Master_Out(3988) <= \<const0>\;
  LOCKSTEP_Master_Out(3989) <= \<const0>\;
  LOCKSTEP_Master_Out(3990) <= \<const0>\;
  LOCKSTEP_Master_Out(3991) <= \<const0>\;
  LOCKSTEP_Master_Out(3992) <= \<const0>\;
  LOCKSTEP_Master_Out(3993) <= \<const0>\;
  LOCKSTEP_Master_Out(3994) <= \<const0>\;
  LOCKSTEP_Master_Out(3995) <= \<const0>\;
  LOCKSTEP_Master_Out(3996) <= \<const0>\;
  LOCKSTEP_Master_Out(3997) <= \<const0>\;
  LOCKSTEP_Master_Out(3998) <= \<const0>\;
  LOCKSTEP_Master_Out(3999) <= \<const0>\;
  LOCKSTEP_Master_Out(4000) <= \<const0>\;
  LOCKSTEP_Master_Out(4001) <= \<const0>\;
  LOCKSTEP_Master_Out(4002) <= \<const0>\;
  LOCKSTEP_Master_Out(4003) <= \<const0>\;
  LOCKSTEP_Master_Out(4004) <= \<const0>\;
  LOCKSTEP_Master_Out(4005) <= \<const0>\;
  LOCKSTEP_Master_Out(4006) <= \<const0>\;
  LOCKSTEP_Master_Out(4007) <= \<const0>\;
  LOCKSTEP_Master_Out(4008) <= \<const0>\;
  LOCKSTEP_Master_Out(4009) <= \<const0>\;
  LOCKSTEP_Master_Out(4010) <= \<const0>\;
  LOCKSTEP_Master_Out(4011) <= \<const0>\;
  LOCKSTEP_Master_Out(4012) <= \<const0>\;
  LOCKSTEP_Master_Out(4013) <= \<const0>\;
  LOCKSTEP_Master_Out(4014) <= \<const0>\;
  LOCKSTEP_Master_Out(4015) <= \<const0>\;
  LOCKSTEP_Master_Out(4016) <= \<const0>\;
  LOCKSTEP_Master_Out(4017) <= \<const0>\;
  LOCKSTEP_Master_Out(4018) <= \<const0>\;
  LOCKSTEP_Master_Out(4019) <= \<const0>\;
  LOCKSTEP_Master_Out(4020) <= \<const0>\;
  LOCKSTEP_Master_Out(4021) <= \<const0>\;
  LOCKSTEP_Master_Out(4022) <= \<const0>\;
  LOCKSTEP_Master_Out(4023) <= \<const0>\;
  LOCKSTEP_Master_Out(4024) <= \<const0>\;
  LOCKSTEP_Master_Out(4025) <= \<const0>\;
  LOCKSTEP_Master_Out(4026) <= \<const0>\;
  LOCKSTEP_Master_Out(4027) <= \<const0>\;
  LOCKSTEP_Master_Out(4028) <= \<const0>\;
  LOCKSTEP_Master_Out(4029) <= \<const0>\;
  LOCKSTEP_Master_Out(4030) <= \<const0>\;
  LOCKSTEP_Master_Out(4031) <= \<const0>\;
  LOCKSTEP_Master_Out(4032) <= \<const0>\;
  LOCKSTEP_Master_Out(4033) <= \<const0>\;
  LOCKSTEP_Master_Out(4034) <= \<const0>\;
  LOCKSTEP_Master_Out(4035) <= \<const0>\;
  LOCKSTEP_Master_Out(4036) <= \<const0>\;
  LOCKSTEP_Master_Out(4037) <= \<const0>\;
  LOCKSTEP_Master_Out(4038) <= \<const0>\;
  LOCKSTEP_Master_Out(4039) <= \<const0>\;
  LOCKSTEP_Master_Out(4040) <= \<const0>\;
  LOCKSTEP_Master_Out(4041) <= \<const0>\;
  LOCKSTEP_Master_Out(4042) <= \<const0>\;
  LOCKSTEP_Master_Out(4043) <= \<const0>\;
  LOCKSTEP_Master_Out(4044) <= \<const0>\;
  LOCKSTEP_Master_Out(4045) <= \<const0>\;
  LOCKSTEP_Master_Out(4046) <= \<const0>\;
  LOCKSTEP_Master_Out(4047) <= \<const0>\;
  LOCKSTEP_Master_Out(4048) <= \<const0>\;
  LOCKSTEP_Master_Out(4049) <= \<const0>\;
  LOCKSTEP_Master_Out(4050) <= \<const0>\;
  LOCKSTEP_Master_Out(4051) <= \<const0>\;
  LOCKSTEP_Master_Out(4052) <= \<const0>\;
  LOCKSTEP_Master_Out(4053) <= \<const0>\;
  LOCKSTEP_Master_Out(4054) <= \<const0>\;
  LOCKSTEP_Master_Out(4055) <= \<const0>\;
  LOCKSTEP_Master_Out(4056) <= \<const0>\;
  LOCKSTEP_Master_Out(4057) <= \<const0>\;
  LOCKSTEP_Master_Out(4058) <= \<const0>\;
  LOCKSTEP_Master_Out(4059) <= \<const0>\;
  LOCKSTEP_Master_Out(4060) <= \<const0>\;
  LOCKSTEP_Master_Out(4061) <= \<const0>\;
  LOCKSTEP_Master_Out(4062) <= \<const0>\;
  LOCKSTEP_Master_Out(4063) <= \<const0>\;
  LOCKSTEP_Master_Out(4064) <= \<const0>\;
  LOCKSTEP_Master_Out(4065) <= \<const0>\;
  LOCKSTEP_Master_Out(4066) <= \<const0>\;
  LOCKSTEP_Master_Out(4067) <= \<const0>\;
  LOCKSTEP_Master_Out(4068) <= \<const0>\;
  LOCKSTEP_Master_Out(4069) <= \<const0>\;
  LOCKSTEP_Master_Out(4070) <= \<const0>\;
  LOCKSTEP_Master_Out(4071) <= \<const0>\;
  LOCKSTEP_Master_Out(4072) <= \<const0>\;
  LOCKSTEP_Master_Out(4073) <= \<const0>\;
  LOCKSTEP_Master_Out(4074) <= \<const0>\;
  LOCKSTEP_Master_Out(4075) <= \<const0>\;
  LOCKSTEP_Master_Out(4076) <= \<const0>\;
  LOCKSTEP_Master_Out(4077) <= \<const0>\;
  LOCKSTEP_Master_Out(4078) <= \<const0>\;
  LOCKSTEP_Master_Out(4079) <= \<const0>\;
  LOCKSTEP_Master_Out(4080) <= \<const0>\;
  LOCKSTEP_Master_Out(4081) <= \<const0>\;
  LOCKSTEP_Master_Out(4082) <= \<const0>\;
  LOCKSTEP_Master_Out(4083) <= \<const0>\;
  LOCKSTEP_Master_Out(4084) <= \<const0>\;
  LOCKSTEP_Master_Out(4085) <= \<const0>\;
  LOCKSTEP_Master_Out(4086) <= \<const0>\;
  LOCKSTEP_Master_Out(4087) <= \<const0>\;
  LOCKSTEP_Master_Out(4088) <= \<const0>\;
  LOCKSTEP_Master_Out(4089) <= \<const0>\;
  LOCKSTEP_Master_Out(4090) <= \<const0>\;
  LOCKSTEP_Master_Out(4091) <= \<const0>\;
  LOCKSTEP_Master_Out(4092) <= \<const0>\;
  LOCKSTEP_Master_Out(4093) <= \<const0>\;
  LOCKSTEP_Master_Out(4094) <= \<const0>\;
  LOCKSTEP_Master_Out(4095) <= \<const0>\;
  LOCKSTEP_Out(0) <= \^lockstep_out\(3228);
  LOCKSTEP_Out(1) <= \<const0>\;
  LOCKSTEP_Out(2 to 35) <= \^lockstep_out\(2 to 35);
  LOCKSTEP_Out(36) <= \<const0>\;
  LOCKSTEP_Out(37) <= \<const0>\;
  LOCKSTEP_Out(38) <= \<const0>\;
  LOCKSTEP_Out(39) <= \<const0>\;
  LOCKSTEP_Out(40) <= \<const0>\;
  LOCKSTEP_Out(41) <= \<const0>\;
  LOCKSTEP_Out(42) <= \<const0>\;
  LOCKSTEP_Out(43) <= \<const0>\;
  LOCKSTEP_Out(44) <= \<const0>\;
  LOCKSTEP_Out(45) <= \<const0>\;
  LOCKSTEP_Out(46) <= \<const0>\;
  LOCKSTEP_Out(47) <= \<const0>\;
  LOCKSTEP_Out(48) <= \<const0>\;
  LOCKSTEP_Out(49) <= \<const0>\;
  LOCKSTEP_Out(50) <= \<const0>\;
  LOCKSTEP_Out(51) <= \<const0>\;
  LOCKSTEP_Out(52) <= \<const0>\;
  LOCKSTEP_Out(53) <= \<const0>\;
  LOCKSTEP_Out(54) <= \<const0>\;
  LOCKSTEP_Out(55) <= \<const0>\;
  LOCKSTEP_Out(56) <= \<const0>\;
  LOCKSTEP_Out(57) <= \<const0>\;
  LOCKSTEP_Out(58) <= \<const0>\;
  LOCKSTEP_Out(59) <= \<const0>\;
  LOCKSTEP_Out(60) <= \<const0>\;
  LOCKSTEP_Out(61) <= \<const0>\;
  LOCKSTEP_Out(62) <= \<const0>\;
  LOCKSTEP_Out(63) <= \<const0>\;
  LOCKSTEP_Out(64) <= \<const0>\;
  LOCKSTEP_Out(65) <= \<const0>\;
  LOCKSTEP_Out(66) <= \<const0>\;
  LOCKSTEP_Out(67) <= \<const0>\;
  LOCKSTEP_Out(68 to 99) <= \^lockstep_out\(68 to 99);
  LOCKSTEP_Out(100) <= \<const0>\;
  LOCKSTEP_Out(101) <= \<const0>\;
  LOCKSTEP_Out(102) <= \<const0>\;
  LOCKSTEP_Out(103) <= \<const0>\;
  LOCKSTEP_Out(104) <= \<const0>\;
  LOCKSTEP_Out(105) <= \<const0>\;
  LOCKSTEP_Out(106) <= \<const0>\;
  LOCKSTEP_Out(107) <= \<const0>\;
  LOCKSTEP_Out(108) <= \<const0>\;
  LOCKSTEP_Out(109) <= \<const0>\;
  LOCKSTEP_Out(110) <= \<const0>\;
  LOCKSTEP_Out(111) <= \<const0>\;
  LOCKSTEP_Out(112) <= \<const0>\;
  LOCKSTEP_Out(113) <= \<const0>\;
  LOCKSTEP_Out(114) <= \<const0>\;
  LOCKSTEP_Out(115) <= \<const0>\;
  LOCKSTEP_Out(116) <= \<const0>\;
  LOCKSTEP_Out(117) <= \<const0>\;
  LOCKSTEP_Out(118) <= \<const0>\;
  LOCKSTEP_Out(119) <= \<const0>\;
  LOCKSTEP_Out(120) <= \<const0>\;
  LOCKSTEP_Out(121) <= \<const0>\;
  LOCKSTEP_Out(122) <= \<const0>\;
  LOCKSTEP_Out(123) <= \<const0>\;
  LOCKSTEP_Out(124) <= \<const0>\;
  LOCKSTEP_Out(125) <= \<const0>\;
  LOCKSTEP_Out(126) <= \<const0>\;
  LOCKSTEP_Out(127) <= \<const0>\;
  LOCKSTEP_Out(128) <= \<const0>\;
  LOCKSTEP_Out(129) <= \<const0>\;
  LOCKSTEP_Out(130) <= \<const0>\;
  LOCKSTEP_Out(131) <= \<const0>\;
  LOCKSTEP_Out(132 to 163) <= \^lockstep_out\(132 to 163);
  LOCKSTEP_Out(164) <= \<const0>\;
  LOCKSTEP_Out(165) <= \<const0>\;
  LOCKSTEP_Out(166) <= \<const0>\;
  LOCKSTEP_Out(167) <= \<const0>\;
  LOCKSTEP_Out(168) <= \<const0>\;
  LOCKSTEP_Out(169) <= \<const0>\;
  LOCKSTEP_Out(170) <= \<const0>\;
  LOCKSTEP_Out(171) <= \<const0>\;
  LOCKSTEP_Out(172) <= \<const0>\;
  LOCKSTEP_Out(173) <= \<const0>\;
  LOCKSTEP_Out(174) <= \<const0>\;
  LOCKSTEP_Out(175) <= \<const0>\;
  LOCKSTEP_Out(176) <= \<const0>\;
  LOCKSTEP_Out(177) <= \<const0>\;
  LOCKSTEP_Out(178) <= \<const0>\;
  LOCKSTEP_Out(179) <= \<const0>\;
  LOCKSTEP_Out(180) <= \<const0>\;
  LOCKSTEP_Out(181) <= \<const0>\;
  LOCKSTEP_Out(182) <= \<const0>\;
  LOCKSTEP_Out(183) <= \<const0>\;
  LOCKSTEP_Out(184) <= \<const0>\;
  LOCKSTEP_Out(185) <= \<const0>\;
  LOCKSTEP_Out(186) <= \<const0>\;
  LOCKSTEP_Out(187) <= \<const0>\;
  LOCKSTEP_Out(188) <= \<const0>\;
  LOCKSTEP_Out(189) <= \<const0>\;
  LOCKSTEP_Out(190) <= \<const0>\;
  LOCKSTEP_Out(191) <= \<const0>\;
  LOCKSTEP_Out(192) <= \<const0>\;
  LOCKSTEP_Out(193) <= \<const0>\;
  LOCKSTEP_Out(194) <= \<const0>\;
  LOCKSTEP_Out(195) <= \<const0>\;
  LOCKSTEP_Out(196 to 202) <= \^lockstep_out\(196 to 202);
  LOCKSTEP_Out(203) <= \<const0>\;
  LOCKSTEP_Out(204) <= \<const0>\;
  LOCKSTEP_Out(205) <= \<const0>\;
  LOCKSTEP_Out(206) <= \<const0>\;
  LOCKSTEP_Out(207) <= \<const0>\;
  LOCKSTEP_Out(208) <= \<const0>\;
  LOCKSTEP_Out(209) <= \<const0>\;
  LOCKSTEP_Out(210) <= \<const0>\;
  LOCKSTEP_Out(211) <= \<const0>\;
  LOCKSTEP_Out(212) <= \<const0>\;
  LOCKSTEP_Out(213) <= \<const0>\;
  LOCKSTEP_Out(214) <= \<const0>\;
  LOCKSTEP_Out(215) <= \<const0>\;
  LOCKSTEP_Out(216) <= \<const0>\;
  LOCKSTEP_Out(217) <= \<const0>\;
  LOCKSTEP_Out(218) <= \<const0>\;
  LOCKSTEP_Out(219) <= \<const0>\;
  LOCKSTEP_Out(220) <= \<const0>\;
  LOCKSTEP_Out(221) <= \<const0>\;
  LOCKSTEP_Out(222) <= \<const0>\;
  LOCKSTEP_Out(223) <= \<const0>\;
  LOCKSTEP_Out(224) <= \<const0>\;
  LOCKSTEP_Out(225) <= \<const0>\;
  LOCKSTEP_Out(226) <= \<const0>\;
  LOCKSTEP_Out(227) <= \<const0>\;
  LOCKSTEP_Out(228) <= \<const0>\;
  LOCKSTEP_Out(229) <= \<const0>\;
  LOCKSTEP_Out(230) <= \<const0>\;
  LOCKSTEP_Out(231) <= \<const0>\;
  LOCKSTEP_Out(232) <= \<const0>\;
  LOCKSTEP_Out(233) <= \<const0>\;
  LOCKSTEP_Out(234) <= \<const0>\;
  LOCKSTEP_Out(235) <= \<const0>\;
  LOCKSTEP_Out(236) <= \<const0>\;
  LOCKSTEP_Out(237) <= \<const0>\;
  LOCKSTEP_Out(238) <= \<const0>\;
  LOCKSTEP_Out(239) <= \<const0>\;
  LOCKSTEP_Out(240) <= \<const0>\;
  LOCKSTEP_Out(241) <= \<const0>\;
  LOCKSTEP_Out(242) <= \<const0>\;
  LOCKSTEP_Out(243) <= \<const0>\;
  LOCKSTEP_Out(244) <= \<const0>\;
  LOCKSTEP_Out(245) <= \<const0>\;
  LOCKSTEP_Out(246) <= \<const0>\;
  LOCKSTEP_Out(247) <= \<const0>\;
  LOCKSTEP_Out(248) <= \<const0>\;
  LOCKSTEP_Out(249) <= \<const0>\;
  LOCKSTEP_Out(250) <= \<const0>\;
  LOCKSTEP_Out(251) <= \<const0>\;
  LOCKSTEP_Out(252) <= \<const0>\;
  LOCKSTEP_Out(253) <= \<const0>\;
  LOCKSTEP_Out(254) <= \<const0>\;
  LOCKSTEP_Out(255) <= \<const0>\;
  LOCKSTEP_Out(256) <= \<const0>\;
  LOCKSTEP_Out(257) <= \<const0>\;
  LOCKSTEP_Out(258) <= \<const0>\;
  LOCKSTEP_Out(259) <= \<const0>\;
  LOCKSTEP_Out(260) <= \<const0>\;
  LOCKSTEP_Out(261) <= \<const0>\;
  LOCKSTEP_Out(262) <= \<const0>\;
  LOCKSTEP_Out(263) <= \<const0>\;
  LOCKSTEP_Out(264) <= \<const0>\;
  LOCKSTEP_Out(265) <= \<const0>\;
  LOCKSTEP_Out(266) <= \<const0>\;
  LOCKSTEP_Out(267) <= \<const0>\;
  LOCKSTEP_Out(268) <= \<const0>\;
  LOCKSTEP_Out(269) <= \<const0>\;
  LOCKSTEP_Out(270) <= \<const0>\;
  LOCKSTEP_Out(271) <= \<const0>\;
  LOCKSTEP_Out(272) <= \<const0>\;
  LOCKSTEP_Out(273) <= \<const0>\;
  LOCKSTEP_Out(274) <= \<const0>\;
  LOCKSTEP_Out(275) <= \<const0>\;
  LOCKSTEP_Out(276) <= \<const0>\;
  LOCKSTEP_Out(277) <= \<const0>\;
  LOCKSTEP_Out(278) <= \<const0>\;
  LOCKSTEP_Out(279) <= \<const0>\;
  LOCKSTEP_Out(280) <= \<const0>\;
  LOCKSTEP_Out(281) <= \<const0>\;
  LOCKSTEP_Out(282) <= \<const0>\;
  LOCKSTEP_Out(283) <= \<const0>\;
  LOCKSTEP_Out(284) <= \<const0>\;
  LOCKSTEP_Out(285) <= \<const0>\;
  LOCKSTEP_Out(286) <= \<const0>\;
  LOCKSTEP_Out(287) <= \<const0>\;
  LOCKSTEP_Out(288) <= \<const0>\;
  LOCKSTEP_Out(289) <= \<const0>\;
  LOCKSTEP_Out(290) <= \<const0>\;
  LOCKSTEP_Out(291) <= \<const0>\;
  LOCKSTEP_Out(292) <= \<const0>\;
  LOCKSTEP_Out(293) <= \<const0>\;
  LOCKSTEP_Out(294) <= \<const0>\;
  LOCKSTEP_Out(295) <= \<const0>\;
  LOCKSTEP_Out(296) <= \<const0>\;
  LOCKSTEP_Out(297) <= \<const0>\;
  LOCKSTEP_Out(298) <= \<const0>\;
  LOCKSTEP_Out(299) <= \<const0>\;
  LOCKSTEP_Out(300) <= \<const0>\;
  LOCKSTEP_Out(301) <= \<const0>\;
  LOCKSTEP_Out(302) <= \<const0>\;
  LOCKSTEP_Out(303) <= \<const0>\;
  LOCKSTEP_Out(304) <= \<const0>\;
  LOCKSTEP_Out(305) <= \<const0>\;
  LOCKSTEP_Out(306) <= \<const0>\;
  LOCKSTEP_Out(307) <= \<const0>\;
  LOCKSTEP_Out(308) <= \<const0>\;
  LOCKSTEP_Out(309) <= \<const0>\;
  LOCKSTEP_Out(310) <= \<const0>\;
  LOCKSTEP_Out(311) <= \<const0>\;
  LOCKSTEP_Out(312) <= \<const0>\;
  LOCKSTEP_Out(313) <= \<const0>\;
  LOCKSTEP_Out(314) <= \<const0>\;
  LOCKSTEP_Out(315) <= \<const0>\;
  LOCKSTEP_Out(316) <= \<const0>\;
  LOCKSTEP_Out(317) <= \<const0>\;
  LOCKSTEP_Out(318) <= \<const0>\;
  LOCKSTEP_Out(319) <= \<const0>\;
  LOCKSTEP_Out(320) <= \<const0>\;
  LOCKSTEP_Out(321) <= \<const0>\;
  LOCKSTEP_Out(322) <= \<const0>\;
  LOCKSTEP_Out(323) <= \<const0>\;
  LOCKSTEP_Out(324) <= \<const0>\;
  LOCKSTEP_Out(325) <= \<const0>\;
  LOCKSTEP_Out(326) <= \<const0>\;
  LOCKSTEP_Out(327) <= \<const0>\;
  LOCKSTEP_Out(328) <= \<const0>\;
  LOCKSTEP_Out(329) <= \<const0>\;
  LOCKSTEP_Out(330) <= \<const0>\;
  LOCKSTEP_Out(331) <= \<const0>\;
  LOCKSTEP_Out(332) <= \<const0>\;
  LOCKSTEP_Out(333) <= \<const0>\;
  LOCKSTEP_Out(334) <= \<const0>\;
  LOCKSTEP_Out(335) <= \<const0>\;
  LOCKSTEP_Out(336) <= \<const0>\;
  LOCKSTEP_Out(337) <= \<const0>\;
  LOCKSTEP_Out(338) <= \<const0>\;
  LOCKSTEP_Out(339) <= \<const0>\;
  LOCKSTEP_Out(340) <= \<const0>\;
  LOCKSTEP_Out(341) <= \<const0>\;
  LOCKSTEP_Out(342) <= \<const0>\;
  LOCKSTEP_Out(343) <= \<const0>\;
  LOCKSTEP_Out(344) <= \<const0>\;
  LOCKSTEP_Out(345) <= \<const0>\;
  LOCKSTEP_Out(346) <= \<const0>\;
  LOCKSTEP_Out(347) <= \<const0>\;
  LOCKSTEP_Out(348) <= \<const0>\;
  LOCKSTEP_Out(349) <= \<const0>\;
  LOCKSTEP_Out(350) <= \<const0>\;
  LOCKSTEP_Out(351) <= \<const0>\;
  LOCKSTEP_Out(352) <= \<const0>\;
  LOCKSTEP_Out(353) <= \<const0>\;
  LOCKSTEP_Out(354) <= \<const0>\;
  LOCKSTEP_Out(355) <= \<const0>\;
  LOCKSTEP_Out(356) <= \<const0>\;
  LOCKSTEP_Out(357) <= \<const0>\;
  LOCKSTEP_Out(358) <= \<const0>\;
  LOCKSTEP_Out(359) <= \<const0>\;
  LOCKSTEP_Out(360) <= \<const0>\;
  LOCKSTEP_Out(361) <= \<const0>\;
  LOCKSTEP_Out(362) <= \<const0>\;
  LOCKSTEP_Out(363) <= \<const0>\;
  LOCKSTEP_Out(364) <= \<const0>\;
  LOCKSTEP_Out(365) <= \<const0>\;
  LOCKSTEP_Out(366) <= \<const0>\;
  LOCKSTEP_Out(367) <= \<const0>\;
  LOCKSTEP_Out(368) <= \<const0>\;
  LOCKSTEP_Out(369) <= \<const0>\;
  LOCKSTEP_Out(370) <= \<const0>\;
  LOCKSTEP_Out(371) <= \<const0>\;
  LOCKSTEP_Out(372) <= \<const0>\;
  LOCKSTEP_Out(373) <= \<const0>\;
  LOCKSTEP_Out(374) <= \<const0>\;
  LOCKSTEP_Out(375) <= \<const0>\;
  LOCKSTEP_Out(376) <= \<const0>\;
  LOCKSTEP_Out(377) <= \<const0>\;
  LOCKSTEP_Out(378) <= \<const0>\;
  LOCKSTEP_Out(379) <= \<const0>\;
  LOCKSTEP_Out(380) <= \<const0>\;
  LOCKSTEP_Out(381) <= \<const0>\;
  LOCKSTEP_Out(382) <= \<const0>\;
  LOCKSTEP_Out(383) <= \<const0>\;
  LOCKSTEP_Out(384) <= \<const0>\;
  LOCKSTEP_Out(385) <= \<const0>\;
  LOCKSTEP_Out(386) <= \<const0>\;
  LOCKSTEP_Out(387) <= \<const0>\;
  LOCKSTEP_Out(388) <= \<const0>\;
  LOCKSTEP_Out(389) <= \<const0>\;
  LOCKSTEP_Out(390) <= \<const0>\;
  LOCKSTEP_Out(391) <= \<const0>\;
  LOCKSTEP_Out(392) <= \<const0>\;
  LOCKSTEP_Out(393) <= \<const0>\;
  LOCKSTEP_Out(394) <= \<const0>\;
  LOCKSTEP_Out(395) <= \<const0>\;
  LOCKSTEP_Out(396) <= \<const0>\;
  LOCKSTEP_Out(397) <= \<const0>\;
  LOCKSTEP_Out(398) <= \<const0>\;
  LOCKSTEP_Out(399) <= \<const0>\;
  LOCKSTEP_Out(400) <= \<const0>\;
  LOCKSTEP_Out(401) <= \<const0>\;
  LOCKSTEP_Out(402) <= \<const0>\;
  LOCKSTEP_Out(403) <= \<const0>\;
  LOCKSTEP_Out(404) <= \<const0>\;
  LOCKSTEP_Out(405) <= \<const0>\;
  LOCKSTEP_Out(406) <= \<const0>\;
  LOCKSTEP_Out(407) <= \<const0>\;
  LOCKSTEP_Out(408) <= \<const0>\;
  LOCKSTEP_Out(409) <= \<const0>\;
  LOCKSTEP_Out(410) <= \<const0>\;
  LOCKSTEP_Out(411) <= \<const0>\;
  LOCKSTEP_Out(412) <= \<const0>\;
  LOCKSTEP_Out(413) <= \<const0>\;
  LOCKSTEP_Out(414) <= \<const0>\;
  LOCKSTEP_Out(415) <= \<const0>\;
  LOCKSTEP_Out(416) <= \<const0>\;
  LOCKSTEP_Out(417) <= \<const0>\;
  LOCKSTEP_Out(418) <= \<const0>\;
  LOCKSTEP_Out(419) <= \<const0>\;
  LOCKSTEP_Out(420) <= \<const0>\;
  LOCKSTEP_Out(421) <= \<const0>\;
  LOCKSTEP_Out(422) <= \<const0>\;
  LOCKSTEP_Out(423) <= \<const0>\;
  LOCKSTEP_Out(424) <= \<const0>\;
  LOCKSTEP_Out(425) <= \<const0>\;
  LOCKSTEP_Out(426) <= \<const0>\;
  LOCKSTEP_Out(427) <= \<const0>\;
  LOCKSTEP_Out(428) <= \<const0>\;
  LOCKSTEP_Out(429) <= \<const0>\;
  LOCKSTEP_Out(430) <= \<const0>\;
  LOCKSTEP_Out(431) <= \<const0>\;
  LOCKSTEP_Out(432) <= \<const0>\;
  LOCKSTEP_Out(433) <= \<const0>\;
  LOCKSTEP_Out(434) <= \<const0>\;
  LOCKSTEP_Out(435) <= \<const0>\;
  LOCKSTEP_Out(436) <= \<const0>\;
  LOCKSTEP_Out(437) <= \<const0>\;
  LOCKSTEP_Out(438) <= \<const0>\;
  LOCKSTEP_Out(439) <= \<const0>\;
  LOCKSTEP_Out(440) <= \<const0>\;
  LOCKSTEP_Out(441) <= \<const0>\;
  LOCKSTEP_Out(442) <= \<const0>\;
  LOCKSTEP_Out(443) <= \<const0>\;
  LOCKSTEP_Out(444) <= \<const0>\;
  LOCKSTEP_Out(445) <= \<const0>\;
  LOCKSTEP_Out(446) <= \<const0>\;
  LOCKSTEP_Out(447) <= \<const0>\;
  LOCKSTEP_Out(448) <= \<const0>\;
  LOCKSTEP_Out(449) <= \<const0>\;
  LOCKSTEP_Out(450) <= \<const0>\;
  LOCKSTEP_Out(451) <= \<const0>\;
  LOCKSTEP_Out(452) <= \<const0>\;
  LOCKSTEP_Out(453) <= \<const0>\;
  LOCKSTEP_Out(454) <= \<const0>\;
  LOCKSTEP_Out(455) <= \<const0>\;
  LOCKSTEP_Out(456) <= \<const0>\;
  LOCKSTEP_Out(457) <= \<const0>\;
  LOCKSTEP_Out(458) <= \<const0>\;
  LOCKSTEP_Out(459) <= \<const0>\;
  LOCKSTEP_Out(460) <= \<const0>\;
  LOCKSTEP_Out(461) <= \<const0>\;
  LOCKSTEP_Out(462) <= \<const0>\;
  LOCKSTEP_Out(463) <= \<const0>\;
  LOCKSTEP_Out(464) <= \<const0>\;
  LOCKSTEP_Out(465) <= \<const0>\;
  LOCKSTEP_Out(466 to 497) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(498) <= \<const0>\;
  LOCKSTEP_Out(499) <= \<const0>\;
  LOCKSTEP_Out(500) <= \<const0>\;
  LOCKSTEP_Out(501) <= \<const0>\;
  LOCKSTEP_Out(502) <= \<const0>\;
  LOCKSTEP_Out(503) <= \<const0>\;
  LOCKSTEP_Out(504) <= \<const0>\;
  LOCKSTEP_Out(505) <= \<const0>\;
  LOCKSTEP_Out(506) <= \<const0>\;
  LOCKSTEP_Out(507) <= \<const0>\;
  LOCKSTEP_Out(508) <= \<const0>\;
  LOCKSTEP_Out(509) <= \<const0>\;
  LOCKSTEP_Out(510) <= \<const0>\;
  LOCKSTEP_Out(511) <= \<const0>\;
  LOCKSTEP_Out(512) <= \<const0>\;
  LOCKSTEP_Out(513) <= \<const0>\;
  LOCKSTEP_Out(514) <= \<const0>\;
  LOCKSTEP_Out(515) <= \<const0>\;
  LOCKSTEP_Out(516) <= \<const0>\;
  LOCKSTEP_Out(517) <= \<const0>\;
  LOCKSTEP_Out(518) <= \<const0>\;
  LOCKSTEP_Out(519) <= \<const0>\;
  LOCKSTEP_Out(520) <= \<const0>\;
  LOCKSTEP_Out(521) <= \<const0>\;
  LOCKSTEP_Out(522) <= \<const0>\;
  LOCKSTEP_Out(523) <= \<const0>\;
  LOCKSTEP_Out(524) <= \<const0>\;
  LOCKSTEP_Out(525) <= \<const0>\;
  LOCKSTEP_Out(526) <= \<const0>\;
  LOCKSTEP_Out(527) <= \<const0>\;
  LOCKSTEP_Out(528) <= \<const0>\;
  LOCKSTEP_Out(529) <= \<const0>\;
  LOCKSTEP_Out(530) <= \<const0>\;
  LOCKSTEP_Out(531) <= \<const0>\;
  LOCKSTEP_Out(532) <= \<const0>\;
  LOCKSTEP_Out(533) <= \<const0>\;
  LOCKSTEP_Out(534) <= \<const0>\;
  LOCKSTEP_Out(535) <= \<const0>\;
  LOCKSTEP_Out(536) <= \<const0>\;
  LOCKSTEP_Out(537) <= \<const0>\;
  LOCKSTEP_Out(538) <= \<const0>\;
  LOCKSTEP_Out(539) <= \^lockstep_out\(542);
  LOCKSTEP_Out(540) <= \<const0>\;
  LOCKSTEP_Out(541) <= \<const0>\;
  LOCKSTEP_Out(542) <= \^lockstep_out\(542);
  LOCKSTEP_Out(543) <= \<const0>\;
  LOCKSTEP_Out(544) <= \<const0>\;
  LOCKSTEP_Out(545) <= \<const0>\;
  LOCKSTEP_Out(546) <= \^lockstep_out\(542);
  LOCKSTEP_Out(547) <= \^lockstep_out\(542);
  LOCKSTEP_Out(548) <= \<const0>\;
  LOCKSTEP_Out(549) <= \<const0>\;
  LOCKSTEP_Out(550) <= \<const0>\;
  LOCKSTEP_Out(551) <= \^lockstep_out\(542);
  LOCKSTEP_Out(552) <= \<const0>\;
  LOCKSTEP_Out(553) <= \<const0>\;
  LOCKSTEP_Out(554) <= \<const0>\;
  LOCKSTEP_Out(555 to 587) <= \^lockstep_out\(555 to 587);
  LOCKSTEP_Out(588) <= \<const0>\;
  LOCKSTEP_Out(589) <= \<const0>\;
  LOCKSTEP_Out(590) <= \<const0>\;
  LOCKSTEP_Out(591) <= \<const0>\;
  LOCKSTEP_Out(592) <= \<const0>\;
  LOCKSTEP_Out(593) <= \<const0>\;
  LOCKSTEP_Out(594) <= \<const0>\;
  LOCKSTEP_Out(595) <= \<const0>\;
  LOCKSTEP_Out(596) <= \<const0>\;
  LOCKSTEP_Out(597) <= \<const0>\;
  LOCKSTEP_Out(598) <= \<const0>\;
  LOCKSTEP_Out(599) <= \<const0>\;
  LOCKSTEP_Out(600) <= \<const0>\;
  LOCKSTEP_Out(601) <= \<const0>\;
  LOCKSTEP_Out(602) <= \<const0>\;
  LOCKSTEP_Out(603) <= \<const0>\;
  LOCKSTEP_Out(604) <= \<const0>\;
  LOCKSTEP_Out(605) <= \<const0>\;
  LOCKSTEP_Out(606) <= \<const0>\;
  LOCKSTEP_Out(607) <= \<const0>\;
  LOCKSTEP_Out(608) <= \<const0>\;
  LOCKSTEP_Out(609) <= \<const0>\;
  LOCKSTEP_Out(610) <= \<const0>\;
  LOCKSTEP_Out(611) <= \<const0>\;
  LOCKSTEP_Out(612) <= \<const0>\;
  LOCKSTEP_Out(613) <= \<const0>\;
  LOCKSTEP_Out(614) <= \<const0>\;
  LOCKSTEP_Out(615) <= \<const0>\;
  LOCKSTEP_Out(616) <= \<const0>\;
  LOCKSTEP_Out(617) <= \<const0>\;
  LOCKSTEP_Out(618) <= \<const0>\;
  LOCKSTEP_Out(619) <= \<const0>\;
  LOCKSTEP_Out(620 to 623) <= \^lockstep_out\(620 to 623);
  LOCKSTEP_Out(624) <= \<const0>\;
  LOCKSTEP_Out(625) <= \<const0>\;
  LOCKSTEP_Out(626) <= \<const0>\;
  LOCKSTEP_Out(627) <= \<const0>\;
  LOCKSTEP_Out(628) <= \^lockstep_out\(542);
  LOCKSTEP_Out(629) <= \^lockstep_out\(629);
  LOCKSTEP_Out(630) <= \^lockstep_out\(542);
  LOCKSTEP_Out(631) <= \<const0>\;
  LOCKSTEP_Out(632 to 663) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(664) <= \<const0>\;
  LOCKSTEP_Out(665) <= \<const0>\;
  LOCKSTEP_Out(666) <= \<const0>\;
  LOCKSTEP_Out(667) <= \<const0>\;
  LOCKSTEP_Out(668) <= \<const0>\;
  LOCKSTEP_Out(669) <= \<const0>\;
  LOCKSTEP_Out(670) <= \<const0>\;
  LOCKSTEP_Out(671) <= \<const0>\;
  LOCKSTEP_Out(672) <= \<const0>\;
  LOCKSTEP_Out(673) <= \<const0>\;
  LOCKSTEP_Out(674) <= \<const0>\;
  LOCKSTEP_Out(675) <= \<const0>\;
  LOCKSTEP_Out(676) <= \<const0>\;
  LOCKSTEP_Out(677) <= \<const0>\;
  LOCKSTEP_Out(678) <= \<const0>\;
  LOCKSTEP_Out(679) <= \<const0>\;
  LOCKSTEP_Out(680) <= \<const0>\;
  LOCKSTEP_Out(681) <= \<const0>\;
  LOCKSTEP_Out(682) <= \<const0>\;
  LOCKSTEP_Out(683) <= \<const0>\;
  LOCKSTEP_Out(684) <= \<const0>\;
  LOCKSTEP_Out(685) <= \<const0>\;
  LOCKSTEP_Out(686) <= \<const0>\;
  LOCKSTEP_Out(687) <= \<const0>\;
  LOCKSTEP_Out(688) <= \<const0>\;
  LOCKSTEP_Out(689) <= \<const0>\;
  LOCKSTEP_Out(690) <= \<const0>\;
  LOCKSTEP_Out(691) <= \<const0>\;
  LOCKSTEP_Out(692) <= \<const0>\;
  LOCKSTEP_Out(693) <= \<const0>\;
  LOCKSTEP_Out(694) <= \<const0>\;
  LOCKSTEP_Out(695) <= \<const0>\;
  LOCKSTEP_Out(696) <= \<const0>\;
  LOCKSTEP_Out(697) <= \<const0>\;
  LOCKSTEP_Out(698) <= \<const0>\;
  LOCKSTEP_Out(699) <= \<const0>\;
  LOCKSTEP_Out(700) <= \<const0>\;
  LOCKSTEP_Out(701) <= \<const0>\;
  LOCKSTEP_Out(702) <= \<const0>\;
  LOCKSTEP_Out(703) <= \<const0>\;
  LOCKSTEP_Out(704) <= \<const0>\;
  LOCKSTEP_Out(705) <= \^lockstep_out\(542);
  LOCKSTEP_Out(706) <= \<const0>\;
  LOCKSTEP_Out(707) <= \<const0>\;
  LOCKSTEP_Out(708) <= \^lockstep_out\(542);
  LOCKSTEP_Out(709) <= \<const0>\;
  LOCKSTEP_Out(710) <= \<const0>\;
  LOCKSTEP_Out(711) <= \<const0>\;
  LOCKSTEP_Out(712) <= \^lockstep_out\(542);
  LOCKSTEP_Out(713) <= \^lockstep_out\(542);
  LOCKSTEP_Out(714) <= \<const0>\;
  LOCKSTEP_Out(715) <= \<const0>\;
  LOCKSTEP_Out(716) <= \<const0>\;
  LOCKSTEP_Out(717) <= \^lockstep_out\(542);
  LOCKSTEP_Out(718) <= \<const0>\;
  LOCKSTEP_Out(719) <= \<const0>\;
  LOCKSTEP_Out(720) <= \<const0>\;
  LOCKSTEP_Out(721) <= \^lockstep_out\(721);
  LOCKSTEP_Out(722) <= \^lockstep_out\(542);
  LOCKSTEP_Out(723) <= \<const0>\;
  LOCKSTEP_Out(724) <= \<const0>\;
  LOCKSTEP_Out(725) <= \<const0>\;
  LOCKSTEP_Out(726) <= \<const0>\;
  LOCKSTEP_Out(727) <= \<const0>\;
  LOCKSTEP_Out(728) <= \<const0>\;
  LOCKSTEP_Out(729) <= \<const0>\;
  LOCKSTEP_Out(730) <= \<const0>\;
  LOCKSTEP_Out(731) <= \<const0>\;
  LOCKSTEP_Out(732) <= \<const0>\;
  LOCKSTEP_Out(733) <= \<const0>\;
  LOCKSTEP_Out(734) <= \<const0>\;
  LOCKSTEP_Out(735) <= \<const0>\;
  LOCKSTEP_Out(736) <= \<const0>\;
  LOCKSTEP_Out(737) <= \<const0>\;
  LOCKSTEP_Out(738) <= \<const0>\;
  LOCKSTEP_Out(739) <= \<const0>\;
  LOCKSTEP_Out(740) <= \<const0>\;
  LOCKSTEP_Out(741) <= \<const0>\;
  LOCKSTEP_Out(742) <= \<const0>\;
  LOCKSTEP_Out(743) <= \<const0>\;
  LOCKSTEP_Out(744) <= \<const0>\;
  LOCKSTEP_Out(745) <= \<const0>\;
  LOCKSTEP_Out(746) <= \<const0>\;
  LOCKSTEP_Out(747) <= \<const0>\;
  LOCKSTEP_Out(748) <= \<const0>\;
  LOCKSTEP_Out(749) <= \<const0>\;
  LOCKSTEP_Out(750) <= \<const0>\;
  LOCKSTEP_Out(751) <= \<const0>\;
  LOCKSTEP_Out(752) <= \<const0>\;
  LOCKSTEP_Out(753) <= \<const0>\;
  LOCKSTEP_Out(754) <= \<const0>\;
  LOCKSTEP_Out(755) <= \<const0>\;
  LOCKSTEP_Out(756) <= \<const0>\;
  LOCKSTEP_Out(757) <= \<const0>\;
  LOCKSTEP_Out(758) <= \<const0>\;
  LOCKSTEP_Out(759) <= \<const0>\;
  LOCKSTEP_Out(760) <= \<const0>\;
  LOCKSTEP_Out(761) <= \<const0>\;
  LOCKSTEP_Out(762) <= \<const0>\;
  LOCKSTEP_Out(763) <= \<const0>\;
  LOCKSTEP_Out(764) <= \<const0>\;
  LOCKSTEP_Out(765) <= \<const0>\;
  LOCKSTEP_Out(766) <= \<const0>\;
  LOCKSTEP_Out(767) <= \<const0>\;
  LOCKSTEP_Out(768) <= \<const0>\;
  LOCKSTEP_Out(769) <= \<const0>\;
  LOCKSTEP_Out(770) <= \<const0>\;
  LOCKSTEP_Out(771) <= \<const0>\;
  LOCKSTEP_Out(772) <= \<const0>\;
  LOCKSTEP_Out(773) <= \<const0>\;
  LOCKSTEP_Out(774) <= \<const0>\;
  LOCKSTEP_Out(775) <= \<const0>\;
  LOCKSTEP_Out(776) <= \<const0>\;
  LOCKSTEP_Out(777) <= \<const0>\;
  LOCKSTEP_Out(778) <= \<const0>\;
  LOCKSTEP_Out(779) <= \<const0>\;
  LOCKSTEP_Out(780) <= \<const0>\;
  LOCKSTEP_Out(781) <= \<const0>\;
  LOCKSTEP_Out(782) <= \<const0>\;
  LOCKSTEP_Out(783) <= \<const0>\;
  LOCKSTEP_Out(784) <= \<const0>\;
  LOCKSTEP_Out(785) <= \<const0>\;
  LOCKSTEP_Out(786) <= \<const0>\;
  LOCKSTEP_Out(787) <= \<const0>\;
  LOCKSTEP_Out(788) <= \<const0>\;
  LOCKSTEP_Out(789) <= \<const0>\;
  LOCKSTEP_Out(790) <= \<const0>\;
  LOCKSTEP_Out(791) <= \<const0>\;
  LOCKSTEP_Out(792) <= \<const0>\;
  LOCKSTEP_Out(793) <= \<const0>\;
  LOCKSTEP_Out(794) <= \<const0>\;
  LOCKSTEP_Out(795) <= \<const0>\;
  LOCKSTEP_Out(796) <= \<const0>\;
  LOCKSTEP_Out(797) <= \<const0>\;
  LOCKSTEP_Out(798) <= \<const0>\;
  LOCKSTEP_Out(799) <= \<const0>\;
  LOCKSTEP_Out(800) <= \<const0>\;
  LOCKSTEP_Out(801) <= \<const0>\;
  LOCKSTEP_Out(802) <= \<const0>\;
  LOCKSTEP_Out(803) <= \<const0>\;
  LOCKSTEP_Out(804) <= \<const0>\;
  LOCKSTEP_Out(805) <= \<const0>\;
  LOCKSTEP_Out(806) <= \<const0>\;
  LOCKSTEP_Out(807) <= \<const0>\;
  LOCKSTEP_Out(808) <= \<const0>\;
  LOCKSTEP_Out(809) <= \<const0>\;
  LOCKSTEP_Out(810) <= \<const0>\;
  LOCKSTEP_Out(811) <= \<const0>\;
  LOCKSTEP_Out(812) <= \<const0>\;
  LOCKSTEP_Out(813) <= \<const0>\;
  LOCKSTEP_Out(814) <= \<const0>\;
  LOCKSTEP_Out(815) <= \<const0>\;
  LOCKSTEP_Out(816) <= \<const0>\;
  LOCKSTEP_Out(817) <= \<const0>\;
  LOCKSTEP_Out(818) <= \<const0>\;
  LOCKSTEP_Out(819) <= \<const0>\;
  LOCKSTEP_Out(820) <= \<const0>\;
  LOCKSTEP_Out(821) <= \<const0>\;
  LOCKSTEP_Out(822) <= \<const0>\;
  LOCKSTEP_Out(823) <= \<const0>\;
  LOCKSTEP_Out(824) <= \<const0>\;
  LOCKSTEP_Out(825) <= \<const0>\;
  LOCKSTEP_Out(826) <= \<const0>\;
  LOCKSTEP_Out(827) <= \<const0>\;
  LOCKSTEP_Out(828) <= \<const0>\;
  LOCKSTEP_Out(829) <= \<const0>\;
  LOCKSTEP_Out(830) <= \<const0>\;
  LOCKSTEP_Out(831) <= \<const0>\;
  LOCKSTEP_Out(832) <= \<const0>\;
  LOCKSTEP_Out(833) <= \<const0>\;
  LOCKSTEP_Out(834) <= \<const0>\;
  LOCKSTEP_Out(835) <= \<const0>\;
  LOCKSTEP_Out(836) <= \<const0>\;
  LOCKSTEP_Out(837) <= \<const0>\;
  LOCKSTEP_Out(838) <= \<const0>\;
  LOCKSTEP_Out(839) <= \<const0>\;
  LOCKSTEP_Out(840) <= \<const0>\;
  LOCKSTEP_Out(841) <= \<const0>\;
  LOCKSTEP_Out(842) <= \<const0>\;
  LOCKSTEP_Out(843) <= \<const0>\;
  LOCKSTEP_Out(844) <= \<const0>\;
  LOCKSTEP_Out(845) <= \<const0>\;
  LOCKSTEP_Out(846) <= \<const0>\;
  LOCKSTEP_Out(847) <= \<const0>\;
  LOCKSTEP_Out(848) <= \<const0>\;
  LOCKSTEP_Out(849) <= \<const0>\;
  LOCKSTEP_Out(850) <= \<const0>\;
  LOCKSTEP_Out(851) <= \<const0>\;
  LOCKSTEP_Out(852) <= \<const0>\;
  LOCKSTEP_Out(853) <= \<const0>\;
  LOCKSTEP_Out(854) <= \<const0>\;
  LOCKSTEP_Out(855) <= \<const0>\;
  LOCKSTEP_Out(856) <= \<const0>\;
  LOCKSTEP_Out(857) <= \<const0>\;
  LOCKSTEP_Out(858) <= \<const0>\;
  LOCKSTEP_Out(859) <= \<const0>\;
  LOCKSTEP_Out(860) <= \<const0>\;
  LOCKSTEP_Out(861) <= \<const0>\;
  LOCKSTEP_Out(862) <= \<const0>\;
  LOCKSTEP_Out(863) <= \<const0>\;
  LOCKSTEP_Out(864) <= \<const0>\;
  LOCKSTEP_Out(865) <= \<const0>\;
  LOCKSTEP_Out(866) <= \<const0>\;
  LOCKSTEP_Out(867) <= \<const0>\;
  LOCKSTEP_Out(868) <= \<const0>\;
  LOCKSTEP_Out(869) <= \<const0>\;
  LOCKSTEP_Out(870) <= \<const0>\;
  LOCKSTEP_Out(871) <= \<const0>\;
  LOCKSTEP_Out(872) <= \<const0>\;
  LOCKSTEP_Out(873) <= \<const0>\;
  LOCKSTEP_Out(874) <= \<const0>\;
  LOCKSTEP_Out(875) <= \<const0>\;
  LOCKSTEP_Out(876) <= \<const0>\;
  LOCKSTEP_Out(877) <= \<const0>\;
  LOCKSTEP_Out(878) <= \<const0>\;
  LOCKSTEP_Out(879) <= \<const0>\;
  LOCKSTEP_Out(880) <= \<const0>\;
  LOCKSTEP_Out(881) <= \<const0>\;
  LOCKSTEP_Out(882) <= \<const0>\;
  LOCKSTEP_Out(883) <= \<const0>\;
  LOCKSTEP_Out(884) <= \<const0>\;
  LOCKSTEP_Out(885) <= \<const0>\;
  LOCKSTEP_Out(886) <= \<const0>\;
  LOCKSTEP_Out(887) <= \<const0>\;
  LOCKSTEP_Out(888) <= \<const0>\;
  LOCKSTEP_Out(889) <= \<const0>\;
  LOCKSTEP_Out(890) <= \<const0>\;
  LOCKSTEP_Out(891) <= \<const0>\;
  LOCKSTEP_Out(892) <= \<const0>\;
  LOCKSTEP_Out(893) <= \<const0>\;
  LOCKSTEP_Out(894) <= \<const0>\;
  LOCKSTEP_Out(895) <= \<const0>\;
  LOCKSTEP_Out(896) <= \<const0>\;
  LOCKSTEP_Out(897) <= \<const0>\;
  LOCKSTEP_Out(898) <= \<const0>\;
  LOCKSTEP_Out(899) <= \<const0>\;
  LOCKSTEP_Out(900) <= \<const0>\;
  LOCKSTEP_Out(901) <= \<const0>\;
  LOCKSTEP_Out(902) <= \<const0>\;
  LOCKSTEP_Out(903) <= \<const0>\;
  LOCKSTEP_Out(904) <= \<const0>\;
  LOCKSTEP_Out(905) <= \<const0>\;
  LOCKSTEP_Out(906) <= \<const0>\;
  LOCKSTEP_Out(907) <= \<const0>\;
  LOCKSTEP_Out(908) <= \<const0>\;
  LOCKSTEP_Out(909) <= \<const0>\;
  LOCKSTEP_Out(910) <= \<const0>\;
  LOCKSTEP_Out(911) <= \<const0>\;
  LOCKSTEP_Out(912) <= \<const0>\;
  LOCKSTEP_Out(913) <= \<const0>\;
  LOCKSTEP_Out(914) <= \<const0>\;
  LOCKSTEP_Out(915) <= \<const0>\;
  LOCKSTEP_Out(916) <= \<const0>\;
  LOCKSTEP_Out(917) <= \<const0>\;
  LOCKSTEP_Out(918) <= \<const0>\;
  LOCKSTEP_Out(919) <= \<const0>\;
  LOCKSTEP_Out(920) <= \<const0>\;
  LOCKSTEP_Out(921) <= \<const0>\;
  LOCKSTEP_Out(922) <= \<const0>\;
  LOCKSTEP_Out(923) <= \<const0>\;
  LOCKSTEP_Out(924) <= \<const0>\;
  LOCKSTEP_Out(925) <= \<const0>\;
  LOCKSTEP_Out(926) <= \<const0>\;
  LOCKSTEP_Out(927) <= \<const0>\;
  LOCKSTEP_Out(928) <= \<const0>\;
  LOCKSTEP_Out(929) <= \<const0>\;
  LOCKSTEP_Out(930) <= \<const0>\;
  LOCKSTEP_Out(931) <= \<const0>\;
  LOCKSTEP_Out(932) <= \<const0>\;
  LOCKSTEP_Out(933) <= \<const0>\;
  LOCKSTEP_Out(934) <= \<const0>\;
  LOCKSTEP_Out(935) <= \<const0>\;
  LOCKSTEP_Out(936) <= \<const0>\;
  LOCKSTEP_Out(937) <= \<const0>\;
  LOCKSTEP_Out(938) <= \<const0>\;
  LOCKSTEP_Out(939) <= \<const0>\;
  LOCKSTEP_Out(940) <= \<const0>\;
  LOCKSTEP_Out(941) <= \<const0>\;
  LOCKSTEP_Out(942) <= \<const0>\;
  LOCKSTEP_Out(943) <= \<const0>\;
  LOCKSTEP_Out(944) <= \<const0>\;
  LOCKSTEP_Out(945) <= \<const0>\;
  LOCKSTEP_Out(946) <= \<const0>\;
  LOCKSTEP_Out(947) <= \<const0>\;
  LOCKSTEP_Out(948) <= \<const0>\;
  LOCKSTEP_Out(949) <= \<const0>\;
  LOCKSTEP_Out(950) <= \<const0>\;
  LOCKSTEP_Out(951) <= \<const0>\;
  LOCKSTEP_Out(952) <= \<const0>\;
  LOCKSTEP_Out(953) <= \<const0>\;
  LOCKSTEP_Out(954) <= \<const0>\;
  LOCKSTEP_Out(955) <= \<const0>\;
  LOCKSTEP_Out(956) <= \<const0>\;
  LOCKSTEP_Out(957) <= \<const0>\;
  LOCKSTEP_Out(958) <= \<const0>\;
  LOCKSTEP_Out(959) <= \<const0>\;
  LOCKSTEP_Out(960) <= \<const0>\;
  LOCKSTEP_Out(961) <= \<const0>\;
  LOCKSTEP_Out(962) <= \<const0>\;
  LOCKSTEP_Out(963) <= \<const0>\;
  LOCKSTEP_Out(964) <= \<const0>\;
  LOCKSTEP_Out(965) <= \<const0>\;
  LOCKSTEP_Out(966) <= \<const0>\;
  LOCKSTEP_Out(967) <= \<const0>\;
  LOCKSTEP_Out(968) <= \<const0>\;
  LOCKSTEP_Out(969) <= \<const0>\;
  LOCKSTEP_Out(970) <= \<const0>\;
  LOCKSTEP_Out(971) <= \<const0>\;
  LOCKSTEP_Out(972) <= \<const0>\;
  LOCKSTEP_Out(973) <= \<const0>\;
  LOCKSTEP_Out(974) <= \<const0>\;
  LOCKSTEP_Out(975) <= \<const0>\;
  LOCKSTEP_Out(976) <= \<const0>\;
  LOCKSTEP_Out(977) <= \<const0>\;
  LOCKSTEP_Out(978) <= \<const0>\;
  LOCKSTEP_Out(979) <= \<const0>\;
  LOCKSTEP_Out(980) <= \<const0>\;
  LOCKSTEP_Out(981) <= \<const0>\;
  LOCKSTEP_Out(982) <= \<const0>\;
  LOCKSTEP_Out(983) <= \<const0>\;
  LOCKSTEP_Out(984) <= \<const0>\;
  LOCKSTEP_Out(985) <= \<const0>\;
  LOCKSTEP_Out(986) <= \<const0>\;
  LOCKSTEP_Out(987) <= \<const0>\;
  LOCKSTEP_Out(988) <= \<const0>\;
  LOCKSTEP_Out(989) <= \<const0>\;
  LOCKSTEP_Out(990) <= \<const0>\;
  LOCKSTEP_Out(991) <= \<const0>\;
  LOCKSTEP_Out(992) <= \<const0>\;
  LOCKSTEP_Out(993) <= \<const0>\;
  LOCKSTEP_Out(994) <= \<const0>\;
  LOCKSTEP_Out(995) <= \<const0>\;
  LOCKSTEP_Out(996) <= \<const0>\;
  LOCKSTEP_Out(997) <= \<const0>\;
  LOCKSTEP_Out(998) <= \<const0>\;
  LOCKSTEP_Out(999) <= \<const0>\;
  LOCKSTEP_Out(1000) <= \<const0>\;
  LOCKSTEP_Out(1001) <= \<const0>\;
  LOCKSTEP_Out(1002) <= \<const0>\;
  LOCKSTEP_Out(1003) <= \<const0>\;
  LOCKSTEP_Out(1004) <= \<const0>\;
  LOCKSTEP_Out(1005) <= \<const0>\;
  LOCKSTEP_Out(1006) <= \<const0>\;
  LOCKSTEP_Out(1007) <= \<const0>\;
  LOCKSTEP_Out(1008) <= \<const0>\;
  LOCKSTEP_Out(1009) <= \<const0>\;
  LOCKSTEP_Out(1010) <= \<const0>\;
  LOCKSTEP_Out(1011) <= \<const0>\;
  LOCKSTEP_Out(1012) <= \<const0>\;
  LOCKSTEP_Out(1013) <= \<const0>\;
  LOCKSTEP_Out(1014) <= \<const0>\;
  LOCKSTEP_Out(1015) <= \<const0>\;
  LOCKSTEP_Out(1016) <= \<const0>\;
  LOCKSTEP_Out(1017) <= \<const0>\;
  LOCKSTEP_Out(1018) <= \<const0>\;
  LOCKSTEP_Out(1019) <= \<const0>\;
  LOCKSTEP_Out(1020) <= \<const0>\;
  LOCKSTEP_Out(1021) <= \<const0>\;
  LOCKSTEP_Out(1022) <= \<const0>\;
  LOCKSTEP_Out(1023) <= \<const0>\;
  LOCKSTEP_Out(1024) <= \<const0>\;
  LOCKSTEP_Out(1025) <= \<const0>\;
  LOCKSTEP_Out(1026) <= \<const0>\;
  LOCKSTEP_Out(1027) <= \<const0>\;
  LOCKSTEP_Out(1028) <= \<const0>\;
  LOCKSTEP_Out(1029) <= \<const0>\;
  LOCKSTEP_Out(1030) <= \<const0>\;
  LOCKSTEP_Out(1031) <= \<const0>\;
  LOCKSTEP_Out(1032) <= \<const0>\;
  LOCKSTEP_Out(1033) <= \<const0>\;
  LOCKSTEP_Out(1034) <= \<const0>\;
  LOCKSTEP_Out(1035) <= \<const0>\;
  LOCKSTEP_Out(1036) <= \<const0>\;
  LOCKSTEP_Out(1037) <= \<const0>\;
  LOCKSTEP_Out(1038) <= \<const0>\;
  LOCKSTEP_Out(1039) <= \<const0>\;
  LOCKSTEP_Out(1040) <= \<const0>\;
  LOCKSTEP_Out(1041) <= \<const0>\;
  LOCKSTEP_Out(1042) <= \<const0>\;
  LOCKSTEP_Out(1043) <= \<const0>\;
  LOCKSTEP_Out(1044) <= \<const0>\;
  LOCKSTEP_Out(1045) <= \<const0>\;
  LOCKSTEP_Out(1046) <= \<const0>\;
  LOCKSTEP_Out(1047) <= \<const0>\;
  LOCKSTEP_Out(1048) <= \<const0>\;
  LOCKSTEP_Out(1049) <= \<const0>\;
  LOCKSTEP_Out(1050) <= \<const0>\;
  LOCKSTEP_Out(1051) <= \<const0>\;
  LOCKSTEP_Out(1052) <= \<const0>\;
  LOCKSTEP_Out(1053) <= \<const0>\;
  LOCKSTEP_Out(1054) <= \<const0>\;
  LOCKSTEP_Out(1055) <= \<const0>\;
  LOCKSTEP_Out(1056) <= \<const0>\;
  LOCKSTEP_Out(1057) <= \<const0>\;
  LOCKSTEP_Out(1058) <= \<const0>\;
  LOCKSTEP_Out(1059) <= \<const0>\;
  LOCKSTEP_Out(1060) <= \<const0>\;
  LOCKSTEP_Out(1061) <= \<const0>\;
  LOCKSTEP_Out(1062) <= \<const0>\;
  LOCKSTEP_Out(1063) <= \<const0>\;
  LOCKSTEP_Out(1064) <= \<const0>\;
  LOCKSTEP_Out(1065) <= \<const0>\;
  LOCKSTEP_Out(1066) <= \<const0>\;
  LOCKSTEP_Out(1067) <= \<const0>\;
  LOCKSTEP_Out(1068) <= \<const0>\;
  LOCKSTEP_Out(1069) <= \<const0>\;
  LOCKSTEP_Out(1070) <= \<const0>\;
  LOCKSTEP_Out(1071) <= \<const0>\;
  LOCKSTEP_Out(1072) <= \<const0>\;
  LOCKSTEP_Out(1073) <= \<const0>\;
  LOCKSTEP_Out(1074) <= \<const0>\;
  LOCKSTEP_Out(1075) <= \<const0>\;
  LOCKSTEP_Out(1076) <= \<const0>\;
  LOCKSTEP_Out(1077) <= \<const0>\;
  LOCKSTEP_Out(1078) <= \<const0>\;
  LOCKSTEP_Out(1079) <= \<const0>\;
  LOCKSTEP_Out(1080) <= \<const0>\;
  LOCKSTEP_Out(1081) <= \<const0>\;
  LOCKSTEP_Out(1082) <= \<const0>\;
  LOCKSTEP_Out(1083) <= \<const0>\;
  LOCKSTEP_Out(1084) <= \<const0>\;
  LOCKSTEP_Out(1085) <= \<const0>\;
  LOCKSTEP_Out(1086) <= \<const0>\;
  LOCKSTEP_Out(1087) <= \<const0>\;
  LOCKSTEP_Out(1088) <= \<const0>\;
  LOCKSTEP_Out(1089) <= \<const0>\;
  LOCKSTEP_Out(1090) <= \<const0>\;
  LOCKSTEP_Out(1091) <= \<const0>\;
  LOCKSTEP_Out(1092) <= \<const0>\;
  LOCKSTEP_Out(1093) <= \<const0>\;
  LOCKSTEP_Out(1094) <= \<const0>\;
  LOCKSTEP_Out(1095) <= \<const0>\;
  LOCKSTEP_Out(1096) <= \<const0>\;
  LOCKSTEP_Out(1097) <= \<const0>\;
  LOCKSTEP_Out(1098) <= \<const0>\;
  LOCKSTEP_Out(1099) <= \<const0>\;
  LOCKSTEP_Out(1100) <= \<const0>\;
  LOCKSTEP_Out(1101) <= \<const0>\;
  LOCKSTEP_Out(1102) <= \<const0>\;
  LOCKSTEP_Out(1103) <= \<const0>\;
  LOCKSTEP_Out(1104) <= \<const0>\;
  LOCKSTEP_Out(1105) <= \<const0>\;
  LOCKSTEP_Out(1106) <= \<const0>\;
  LOCKSTEP_Out(1107) <= \<const0>\;
  LOCKSTEP_Out(1108) <= \<const0>\;
  LOCKSTEP_Out(1109) <= \<const0>\;
  LOCKSTEP_Out(1110) <= \<const0>\;
  LOCKSTEP_Out(1111) <= \<const0>\;
  LOCKSTEP_Out(1112) <= \<const0>\;
  LOCKSTEP_Out(1113) <= \<const0>\;
  LOCKSTEP_Out(1114) <= \<const0>\;
  LOCKSTEP_Out(1115) <= \<const0>\;
  LOCKSTEP_Out(1116) <= \<const0>\;
  LOCKSTEP_Out(1117) <= \<const0>\;
  LOCKSTEP_Out(1118) <= \<const0>\;
  LOCKSTEP_Out(1119) <= \<const0>\;
  LOCKSTEP_Out(1120) <= \<const0>\;
  LOCKSTEP_Out(1121) <= \<const0>\;
  LOCKSTEP_Out(1122) <= \<const0>\;
  LOCKSTEP_Out(1123) <= \<const0>\;
  LOCKSTEP_Out(1124) <= \<const0>\;
  LOCKSTEP_Out(1125) <= \<const0>\;
  LOCKSTEP_Out(1126) <= \<const0>\;
  LOCKSTEP_Out(1127) <= \<const0>\;
  LOCKSTEP_Out(1128) <= \<const0>\;
  LOCKSTEP_Out(1129) <= \<const0>\;
  LOCKSTEP_Out(1130) <= \<const0>\;
  LOCKSTEP_Out(1131) <= \<const0>\;
  LOCKSTEP_Out(1132) <= \<const0>\;
  LOCKSTEP_Out(1133) <= \<const0>\;
  LOCKSTEP_Out(1134) <= \<const0>\;
  LOCKSTEP_Out(1135) <= \<const0>\;
  LOCKSTEP_Out(1136) <= \<const0>\;
  LOCKSTEP_Out(1137) <= \<const0>\;
  LOCKSTEP_Out(1138) <= \<const0>\;
  LOCKSTEP_Out(1139) <= \<const0>\;
  LOCKSTEP_Out(1140) <= \<const0>\;
  LOCKSTEP_Out(1141) <= \<const0>\;
  LOCKSTEP_Out(1142) <= \<const0>\;
  LOCKSTEP_Out(1143) <= \<const0>\;
  LOCKSTEP_Out(1144) <= \<const0>\;
  LOCKSTEP_Out(1145) <= \<const0>\;
  LOCKSTEP_Out(1146) <= \<const0>\;
  LOCKSTEP_Out(1147) <= \<const0>\;
  LOCKSTEP_Out(1148) <= \<const0>\;
  LOCKSTEP_Out(1149) <= \<const0>\;
  LOCKSTEP_Out(1150) <= \<const0>\;
  LOCKSTEP_Out(1151) <= \<const0>\;
  LOCKSTEP_Out(1152) <= \<const0>\;
  LOCKSTEP_Out(1153) <= \<const0>\;
  LOCKSTEP_Out(1154) <= \<const0>\;
  LOCKSTEP_Out(1155) <= \<const0>\;
  LOCKSTEP_Out(1156) <= \<const0>\;
  LOCKSTEP_Out(1157) <= \<const0>\;
  LOCKSTEP_Out(1158) <= \<const0>\;
  LOCKSTEP_Out(1159) <= \<const0>\;
  LOCKSTEP_Out(1160) <= \<const0>\;
  LOCKSTEP_Out(1161) <= \<const0>\;
  LOCKSTEP_Out(1162) <= \<const0>\;
  LOCKSTEP_Out(1163) <= \<const0>\;
  LOCKSTEP_Out(1164) <= \<const0>\;
  LOCKSTEP_Out(1165) <= \<const0>\;
  LOCKSTEP_Out(1166) <= \<const0>\;
  LOCKSTEP_Out(1167) <= \<const0>\;
  LOCKSTEP_Out(1168) <= \<const0>\;
  LOCKSTEP_Out(1169) <= \<const0>\;
  LOCKSTEP_Out(1170) <= \<const0>\;
  LOCKSTEP_Out(1171) <= \<const0>\;
  LOCKSTEP_Out(1172) <= \<const0>\;
  LOCKSTEP_Out(1173) <= \<const0>\;
  LOCKSTEP_Out(1174) <= \<const0>\;
  LOCKSTEP_Out(1175) <= \<const0>\;
  LOCKSTEP_Out(1176) <= \<const0>\;
  LOCKSTEP_Out(1177) <= \<const0>\;
  LOCKSTEP_Out(1178) <= \<const0>\;
  LOCKSTEP_Out(1179) <= \<const0>\;
  LOCKSTEP_Out(1180) <= \<const0>\;
  LOCKSTEP_Out(1181) <= \<const0>\;
  LOCKSTEP_Out(1182) <= \<const0>\;
  LOCKSTEP_Out(1183) <= \<const0>\;
  LOCKSTEP_Out(1184) <= \<const0>\;
  LOCKSTEP_Out(1185) <= \<const0>\;
  LOCKSTEP_Out(1186) <= \<const0>\;
  LOCKSTEP_Out(1187) <= \<const0>\;
  LOCKSTEP_Out(1188) <= \<const0>\;
  LOCKSTEP_Out(1189) <= \<const0>\;
  LOCKSTEP_Out(1190) <= \<const0>\;
  LOCKSTEP_Out(1191) <= \<const0>\;
  LOCKSTEP_Out(1192) <= \<const0>\;
  LOCKSTEP_Out(1193) <= \<const0>\;
  LOCKSTEP_Out(1194) <= \<const0>\;
  LOCKSTEP_Out(1195) <= \<const0>\;
  LOCKSTEP_Out(1196) <= \<const0>\;
  LOCKSTEP_Out(1197) <= \<const0>\;
  LOCKSTEP_Out(1198) <= \<const0>\;
  LOCKSTEP_Out(1199) <= \<const0>\;
  LOCKSTEP_Out(1200) <= \<const0>\;
  LOCKSTEP_Out(1201) <= \<const0>\;
  LOCKSTEP_Out(1202) <= \<const0>\;
  LOCKSTEP_Out(1203) <= \<const0>\;
  LOCKSTEP_Out(1204) <= \<const0>\;
  LOCKSTEP_Out(1205) <= \<const0>\;
  LOCKSTEP_Out(1206) <= \<const0>\;
  LOCKSTEP_Out(1207) <= \<const0>\;
  LOCKSTEP_Out(1208) <= \<const0>\;
  LOCKSTEP_Out(1209) <= \<const0>\;
  LOCKSTEP_Out(1210) <= \<const0>\;
  LOCKSTEP_Out(1211) <= \<const0>\;
  LOCKSTEP_Out(1212) <= \<const0>\;
  LOCKSTEP_Out(1213) <= \<const0>\;
  LOCKSTEP_Out(1214) <= \<const0>\;
  LOCKSTEP_Out(1215) <= \<const0>\;
  LOCKSTEP_Out(1216) <= \<const0>\;
  LOCKSTEP_Out(1217) <= \<const0>\;
  LOCKSTEP_Out(1218) <= \<const0>\;
  LOCKSTEP_Out(1219) <= \<const0>\;
  LOCKSTEP_Out(1220) <= \<const0>\;
  LOCKSTEP_Out(1221) <= \<const0>\;
  LOCKSTEP_Out(1222) <= \<const0>\;
  LOCKSTEP_Out(1223) <= \<const0>\;
  LOCKSTEP_Out(1224) <= \<const0>\;
  LOCKSTEP_Out(1225) <= \<const0>\;
  LOCKSTEP_Out(1226) <= \<const0>\;
  LOCKSTEP_Out(1227) <= \<const0>\;
  LOCKSTEP_Out(1228) <= \<const0>\;
  LOCKSTEP_Out(1229) <= \<const0>\;
  LOCKSTEP_Out(1230) <= \<const0>\;
  LOCKSTEP_Out(1231) <= \<const0>\;
  LOCKSTEP_Out(1232) <= \<const0>\;
  LOCKSTEP_Out(1233) <= \<const0>\;
  LOCKSTEP_Out(1234) <= \<const0>\;
  LOCKSTEP_Out(1235) <= \<const0>\;
  LOCKSTEP_Out(1236) <= \<const0>\;
  LOCKSTEP_Out(1237) <= \<const0>\;
  LOCKSTEP_Out(1238) <= \<const0>\;
  LOCKSTEP_Out(1239) <= \<const0>\;
  LOCKSTEP_Out(1240) <= \<const0>\;
  LOCKSTEP_Out(1241) <= \<const0>\;
  LOCKSTEP_Out(1242) <= \<const0>\;
  LOCKSTEP_Out(1243) <= \<const0>\;
  LOCKSTEP_Out(1244) <= \<const0>\;
  LOCKSTEP_Out(1245) <= \<const0>\;
  LOCKSTEP_Out(1246) <= \<const0>\;
  LOCKSTEP_Out(1247) <= \<const0>\;
  LOCKSTEP_Out(1248) <= \<const0>\;
  LOCKSTEP_Out(1249) <= \<const0>\;
  LOCKSTEP_Out(1250) <= \<const0>\;
  LOCKSTEP_Out(1251) <= \<const0>\;
  LOCKSTEP_Out(1252) <= \<const0>\;
  LOCKSTEP_Out(1253) <= \<const0>\;
  LOCKSTEP_Out(1254) <= \<const0>\;
  LOCKSTEP_Out(1255) <= \<const0>\;
  LOCKSTEP_Out(1256) <= \<const0>\;
  LOCKSTEP_Out(1257) <= \<const0>\;
  LOCKSTEP_Out(1258) <= \<const0>\;
  LOCKSTEP_Out(1259) <= \<const0>\;
  LOCKSTEP_Out(1260) <= \<const0>\;
  LOCKSTEP_Out(1261) <= \<const0>\;
  LOCKSTEP_Out(1262) <= \<const0>\;
  LOCKSTEP_Out(1263) <= \<const0>\;
  LOCKSTEP_Out(1264) <= \<const0>\;
  LOCKSTEP_Out(1265) <= \<const0>\;
  LOCKSTEP_Out(1266) <= \<const0>\;
  LOCKSTEP_Out(1267) <= \<const0>\;
  LOCKSTEP_Out(1268) <= \<const0>\;
  LOCKSTEP_Out(1269) <= \<const0>\;
  LOCKSTEP_Out(1270) <= \<const0>\;
  LOCKSTEP_Out(1271) <= \<const0>\;
  LOCKSTEP_Out(1272) <= \<const0>\;
  LOCKSTEP_Out(1273) <= \<const0>\;
  LOCKSTEP_Out(1274) <= \<const0>\;
  LOCKSTEP_Out(1275) <= \<const0>\;
  LOCKSTEP_Out(1276) <= \<const0>\;
  LOCKSTEP_Out(1277) <= \<const0>\;
  LOCKSTEP_Out(1278) <= \<const0>\;
  LOCKSTEP_Out(1279) <= \<const0>\;
  LOCKSTEP_Out(1280) <= \<const0>\;
  LOCKSTEP_Out(1281) <= \<const0>\;
  LOCKSTEP_Out(1282) <= \<const0>\;
  LOCKSTEP_Out(1283) <= \<const0>\;
  LOCKSTEP_Out(1284) <= \<const0>\;
  LOCKSTEP_Out(1285) <= \<const0>\;
  LOCKSTEP_Out(1286) <= \<const0>\;
  LOCKSTEP_Out(1287) <= \<const0>\;
  LOCKSTEP_Out(1288) <= \<const0>\;
  LOCKSTEP_Out(1289) <= \<const0>\;
  LOCKSTEP_Out(1290) <= \<const0>\;
  LOCKSTEP_Out(1291) <= \<const0>\;
  LOCKSTEP_Out(1292) <= \<const0>\;
  LOCKSTEP_Out(1293) <= \<const0>\;
  LOCKSTEP_Out(1294) <= \<const0>\;
  LOCKSTEP_Out(1295) <= \<const0>\;
  LOCKSTEP_Out(1296) <= \<const0>\;
  LOCKSTEP_Out(1297) <= \<const0>\;
  LOCKSTEP_Out(1298) <= \<const0>\;
  LOCKSTEP_Out(1299) <= \<const0>\;
  LOCKSTEP_Out(1300) <= \<const0>\;
  LOCKSTEP_Out(1301) <= \<const0>\;
  LOCKSTEP_Out(1302) <= \<const0>\;
  LOCKSTEP_Out(1303) <= \<const0>\;
  LOCKSTEP_Out(1304) <= \<const0>\;
  LOCKSTEP_Out(1305) <= \<const0>\;
  LOCKSTEP_Out(1306) <= \<const0>\;
  LOCKSTEP_Out(1307) <= \<const0>\;
  LOCKSTEP_Out(1308) <= \<const0>\;
  LOCKSTEP_Out(1309) <= \<const0>\;
  LOCKSTEP_Out(1310) <= \<const0>\;
  LOCKSTEP_Out(1311) <= \<const0>\;
  LOCKSTEP_Out(1312) <= \<const0>\;
  LOCKSTEP_Out(1313) <= \<const0>\;
  LOCKSTEP_Out(1314) <= \<const0>\;
  LOCKSTEP_Out(1315) <= \<const0>\;
  LOCKSTEP_Out(1316) <= \<const0>\;
  LOCKSTEP_Out(1317) <= \<const0>\;
  LOCKSTEP_Out(1318) <= \<const0>\;
  LOCKSTEP_Out(1319) <= \<const0>\;
  LOCKSTEP_Out(1320) <= \<const0>\;
  LOCKSTEP_Out(1321) <= \<const0>\;
  LOCKSTEP_Out(1322) <= \<const0>\;
  LOCKSTEP_Out(1323) <= \<const0>\;
  LOCKSTEP_Out(1324) <= \<const0>\;
  LOCKSTEP_Out(1325) <= \<const0>\;
  LOCKSTEP_Out(1326) <= \<const0>\;
  LOCKSTEP_Out(1327) <= \<const0>\;
  LOCKSTEP_Out(1328) <= \<const0>\;
  LOCKSTEP_Out(1329) <= \<const0>\;
  LOCKSTEP_Out(1330) <= \<const0>\;
  LOCKSTEP_Out(1331) <= \<const0>\;
  LOCKSTEP_Out(1332) <= \<const0>\;
  LOCKSTEP_Out(1333) <= \<const0>\;
  LOCKSTEP_Out(1334) <= \<const0>\;
  LOCKSTEP_Out(1335) <= \<const0>\;
  LOCKSTEP_Out(1336) <= \<const0>\;
  LOCKSTEP_Out(1337) <= \<const0>\;
  LOCKSTEP_Out(1338) <= \<const0>\;
  LOCKSTEP_Out(1339) <= \<const0>\;
  LOCKSTEP_Out(1340) <= \<const0>\;
  LOCKSTEP_Out(1341) <= \<const0>\;
  LOCKSTEP_Out(1342) <= \<const0>\;
  LOCKSTEP_Out(1343) <= \<const0>\;
  LOCKSTEP_Out(1344) <= \<const0>\;
  LOCKSTEP_Out(1345) <= \<const0>\;
  LOCKSTEP_Out(1346) <= \<const0>\;
  LOCKSTEP_Out(1347) <= \<const0>\;
  LOCKSTEP_Out(1348) <= \<const0>\;
  LOCKSTEP_Out(1349) <= \<const0>\;
  LOCKSTEP_Out(1350) <= \<const0>\;
  LOCKSTEP_Out(1351) <= \<const0>\;
  LOCKSTEP_Out(1352) <= \<const0>\;
  LOCKSTEP_Out(1353) <= \<const0>\;
  LOCKSTEP_Out(1354) <= \<const0>\;
  LOCKSTEP_Out(1355) <= \<const0>\;
  LOCKSTEP_Out(1356) <= \<const0>\;
  LOCKSTEP_Out(1357) <= \<const0>\;
  LOCKSTEP_Out(1358) <= \<const0>\;
  LOCKSTEP_Out(1359) <= \<const0>\;
  LOCKSTEP_Out(1360) <= \<const0>\;
  LOCKSTEP_Out(1361) <= \<const0>\;
  LOCKSTEP_Out(1362) <= \<const0>\;
  LOCKSTEP_Out(1363) <= \<const0>\;
  LOCKSTEP_Out(1364) <= \<const0>\;
  LOCKSTEP_Out(1365) <= \<const0>\;
  LOCKSTEP_Out(1366) <= \^lockstep_out\(542);
  LOCKSTEP_Out(1367) <= \<const0>\;
  LOCKSTEP_Out(1368) <= \<const0>\;
  LOCKSTEP_Out(1369) <= \^lockstep_out\(542);
  LOCKSTEP_Out(1370) <= \<const0>\;
  LOCKSTEP_Out(1371) <= \<const0>\;
  LOCKSTEP_Out(1372) <= \<const0>\;
  LOCKSTEP_Out(1373) <= \<const0>\;
  LOCKSTEP_Out(1374) <= \<const0>\;
  LOCKSTEP_Out(1375) <= \<const0>\;
  LOCKSTEP_Out(1376) <= \<const0>\;
  LOCKSTEP_Out(1377) <= \<const0>\;
  LOCKSTEP_Out(1378) <= \<const0>\;
  LOCKSTEP_Out(1379) <= \<const0>\;
  LOCKSTEP_Out(1380) <= \<const0>\;
  LOCKSTEP_Out(1381) <= \<const0>\;
  LOCKSTEP_Out(1382) <= \<const0>\;
  LOCKSTEP_Out(1383) <= \<const0>\;
  LOCKSTEP_Out(1384) <= \<const0>\;
  LOCKSTEP_Out(1385) <= \<const0>\;
  LOCKSTEP_Out(1386) <= \<const0>\;
  LOCKSTEP_Out(1387) <= \<const0>\;
  LOCKSTEP_Out(1388) <= \<const0>\;
  LOCKSTEP_Out(1389) <= \<const0>\;
  LOCKSTEP_Out(1390) <= \<const0>\;
  LOCKSTEP_Out(1391) <= \<const0>\;
  LOCKSTEP_Out(1392) <= \<const0>\;
  LOCKSTEP_Out(1393) <= \<const0>\;
  LOCKSTEP_Out(1394) <= \<const0>\;
  LOCKSTEP_Out(1395) <= \<const0>\;
  LOCKSTEP_Out(1396) <= \<const0>\;
  LOCKSTEP_Out(1397) <= \<const0>\;
  LOCKSTEP_Out(1398) <= \<const0>\;
  LOCKSTEP_Out(1399) <= \<const0>\;
  LOCKSTEP_Out(1400) <= \<const0>\;
  LOCKSTEP_Out(1401) <= \<const0>\;
  LOCKSTEP_Out(1402) <= \<const0>\;
  LOCKSTEP_Out(1403) <= \<const0>\;
  LOCKSTEP_Out(1404) <= \<const0>\;
  LOCKSTEP_Out(1405) <= \<const0>\;
  LOCKSTEP_Out(1406) <= \<const0>\;
  LOCKSTEP_Out(1407) <= \<const0>\;
  LOCKSTEP_Out(1408) <= \<const0>\;
  LOCKSTEP_Out(1409) <= \<const0>\;
  LOCKSTEP_Out(1410) <= \<const0>\;
  LOCKSTEP_Out(1411) <= \<const0>\;
  LOCKSTEP_Out(1412) <= \<const0>\;
  LOCKSTEP_Out(1413) <= \<const0>\;
  LOCKSTEP_Out(1414) <= \<const0>\;
  LOCKSTEP_Out(1415) <= \<const0>\;
  LOCKSTEP_Out(1416) <= \<const0>\;
  LOCKSTEP_Out(1417) <= \<const0>\;
  LOCKSTEP_Out(1418) <= \<const0>\;
  LOCKSTEP_Out(1419) <= \<const0>\;
  LOCKSTEP_Out(1420) <= \<const0>\;
  LOCKSTEP_Out(1421) <= \<const0>\;
  LOCKSTEP_Out(1422) <= \<const0>\;
  LOCKSTEP_Out(1423) <= \<const0>\;
  LOCKSTEP_Out(1424) <= \<const0>\;
  LOCKSTEP_Out(1425) <= \<const0>\;
  LOCKSTEP_Out(1426) <= \<const0>\;
  LOCKSTEP_Out(1427) <= \<const0>\;
  LOCKSTEP_Out(1428) <= \<const0>\;
  LOCKSTEP_Out(1429) <= \<const0>\;
  LOCKSTEP_Out(1430) <= \<const0>\;
  LOCKSTEP_Out(1431) <= \<const0>\;
  LOCKSTEP_Out(1432) <= \<const0>\;
  LOCKSTEP_Out(1433) <= \<const0>\;
  LOCKSTEP_Out(1434) <= \<const0>\;
  LOCKSTEP_Out(1435) <= \<const0>\;
  LOCKSTEP_Out(1436) <= \<const0>\;
  LOCKSTEP_Out(1437) <= \<const0>\;
  LOCKSTEP_Out(1438) <= \<const0>\;
  LOCKSTEP_Out(1439) <= \<const0>\;
  LOCKSTEP_Out(1440) <= \<const0>\;
  LOCKSTEP_Out(1441) <= \<const0>\;
  LOCKSTEP_Out(1442) <= \<const0>\;
  LOCKSTEP_Out(1443) <= \<const0>\;
  LOCKSTEP_Out(1444) <= \<const0>\;
  LOCKSTEP_Out(1445) <= \<const0>\;
  LOCKSTEP_Out(1446) <= \<const0>\;
  LOCKSTEP_Out(1447) <= \<const0>\;
  LOCKSTEP_Out(1448) <= \<const0>\;
  LOCKSTEP_Out(1449) <= \<const0>\;
  LOCKSTEP_Out(1450) <= \<const0>\;
  LOCKSTEP_Out(1451) <= \<const0>\;
  LOCKSTEP_Out(1452) <= \<const0>\;
  LOCKSTEP_Out(1453) <= \<const0>\;
  LOCKSTEP_Out(1454) <= \<const0>\;
  LOCKSTEP_Out(1455) <= \<const0>\;
  LOCKSTEP_Out(1456) <= \<const0>\;
  LOCKSTEP_Out(1457) <= \<const0>\;
  LOCKSTEP_Out(1458) <= \<const0>\;
  LOCKSTEP_Out(1459) <= \<const0>\;
  LOCKSTEP_Out(1460) <= \<const0>\;
  LOCKSTEP_Out(1461) <= \<const0>\;
  LOCKSTEP_Out(1462) <= \<const0>\;
  LOCKSTEP_Out(1463) <= \<const0>\;
  LOCKSTEP_Out(1464) <= \<const0>\;
  LOCKSTEP_Out(1465) <= \<const0>\;
  LOCKSTEP_Out(1466) <= \<const0>\;
  LOCKSTEP_Out(1467) <= \<const0>\;
  LOCKSTEP_Out(1468) <= \<const0>\;
  LOCKSTEP_Out(1469) <= \<const0>\;
  LOCKSTEP_Out(1470) <= \<const0>\;
  LOCKSTEP_Out(1471) <= \<const0>\;
  LOCKSTEP_Out(1472) <= \<const0>\;
  LOCKSTEP_Out(1473) <= \<const0>\;
  LOCKSTEP_Out(1474) <= \<const0>\;
  LOCKSTEP_Out(1475) <= \<const0>\;
  LOCKSTEP_Out(1476) <= \<const0>\;
  LOCKSTEP_Out(1477) <= \<const0>\;
  LOCKSTEP_Out(1478) <= \<const0>\;
  LOCKSTEP_Out(1479) <= \<const0>\;
  LOCKSTEP_Out(1480) <= \<const0>\;
  LOCKSTEP_Out(1481) <= \<const0>\;
  LOCKSTEP_Out(1482) <= \<const0>\;
  LOCKSTEP_Out(1483) <= \<const0>\;
  LOCKSTEP_Out(1484) <= \<const0>\;
  LOCKSTEP_Out(1485) <= \<const0>\;
  LOCKSTEP_Out(1486) <= \<const0>\;
  LOCKSTEP_Out(1487) <= \<const0>\;
  LOCKSTEP_Out(1488) <= \<const0>\;
  LOCKSTEP_Out(1489) <= \<const0>\;
  LOCKSTEP_Out(1490) <= \<const0>\;
  LOCKSTEP_Out(1491) <= \<const0>\;
  LOCKSTEP_Out(1492) <= \<const0>\;
  LOCKSTEP_Out(1493) <= \<const0>\;
  LOCKSTEP_Out(1494) <= \<const0>\;
  LOCKSTEP_Out(1495) <= \<const0>\;
  LOCKSTEP_Out(1496) <= \<const0>\;
  LOCKSTEP_Out(1497) <= \<const0>\;
  LOCKSTEP_Out(1498) <= \<const0>\;
  LOCKSTEP_Out(1499) <= \<const0>\;
  LOCKSTEP_Out(1500) <= \<const0>\;
  LOCKSTEP_Out(1501) <= \<const0>\;
  LOCKSTEP_Out(1502) <= \<const0>\;
  LOCKSTEP_Out(1503) <= \<const0>\;
  LOCKSTEP_Out(1504) <= \<const0>\;
  LOCKSTEP_Out(1505) <= \<const0>\;
  LOCKSTEP_Out(1506) <= \<const0>\;
  LOCKSTEP_Out(1507) <= \<const0>\;
  LOCKSTEP_Out(1508) <= \<const0>\;
  LOCKSTEP_Out(1509) <= \<const0>\;
  LOCKSTEP_Out(1510) <= \<const0>\;
  LOCKSTEP_Out(1511) <= \<const0>\;
  LOCKSTEP_Out(1512) <= \<const0>\;
  LOCKSTEP_Out(1513) <= \<const0>\;
  LOCKSTEP_Out(1514) <= \<const0>\;
  LOCKSTEP_Out(1515) <= \<const0>\;
  LOCKSTEP_Out(1516) <= \<const0>\;
  LOCKSTEP_Out(1517) <= \<const0>\;
  LOCKSTEP_Out(1518) <= \<const0>\;
  LOCKSTEP_Out(1519) <= \<const0>\;
  LOCKSTEP_Out(1520) <= \<const0>\;
  LOCKSTEP_Out(1521) <= \<const0>\;
  LOCKSTEP_Out(1522) <= \<const0>\;
  LOCKSTEP_Out(1523) <= \<const0>\;
  LOCKSTEP_Out(1524) <= \<const0>\;
  LOCKSTEP_Out(1525) <= \<const0>\;
  LOCKSTEP_Out(1526) <= \<const0>\;
  LOCKSTEP_Out(1527) <= \<const0>\;
  LOCKSTEP_Out(1528) <= \<const0>\;
  LOCKSTEP_Out(1529) <= \<const0>\;
  LOCKSTEP_Out(1530) <= \<const0>\;
  LOCKSTEP_Out(1531) <= \<const0>\;
  LOCKSTEP_Out(1532) <= \<const0>\;
  LOCKSTEP_Out(1533) <= \<const0>\;
  LOCKSTEP_Out(1534) <= \<const0>\;
  LOCKSTEP_Out(1535) <= \<const0>\;
  LOCKSTEP_Out(1536) <= \<const0>\;
  LOCKSTEP_Out(1537) <= \<const0>\;
  LOCKSTEP_Out(1538) <= \<const0>\;
  LOCKSTEP_Out(1539) <= \<const0>\;
  LOCKSTEP_Out(1540) <= \<const0>\;
  LOCKSTEP_Out(1541) <= \<const0>\;
  LOCKSTEP_Out(1542) <= \<const0>\;
  LOCKSTEP_Out(1543) <= \<const0>\;
  LOCKSTEP_Out(1544) <= \<const0>\;
  LOCKSTEP_Out(1545) <= \<const0>\;
  LOCKSTEP_Out(1546) <= \<const0>\;
  LOCKSTEP_Out(1547) <= \<const0>\;
  LOCKSTEP_Out(1548) <= \<const0>\;
  LOCKSTEP_Out(1549) <= \<const0>\;
  LOCKSTEP_Out(1550) <= \<const0>\;
  LOCKSTEP_Out(1551) <= \<const0>\;
  LOCKSTEP_Out(1552) <= \<const0>\;
  LOCKSTEP_Out(1553) <= \<const0>\;
  LOCKSTEP_Out(1554) <= \<const0>\;
  LOCKSTEP_Out(1555) <= \<const0>\;
  LOCKSTEP_Out(1556) <= \<const0>\;
  LOCKSTEP_Out(1557) <= \<const0>\;
  LOCKSTEP_Out(1558) <= \<const0>\;
  LOCKSTEP_Out(1559) <= \<const0>\;
  LOCKSTEP_Out(1560) <= \<const0>\;
  LOCKSTEP_Out(1561) <= \<const0>\;
  LOCKSTEP_Out(1562) <= \<const0>\;
  LOCKSTEP_Out(1563) <= \<const0>\;
  LOCKSTEP_Out(1564) <= \<const0>\;
  LOCKSTEP_Out(1565) <= \<const0>\;
  LOCKSTEP_Out(1566) <= \<const0>\;
  LOCKSTEP_Out(1567) <= \<const0>\;
  LOCKSTEP_Out(1568) <= \<const0>\;
  LOCKSTEP_Out(1569) <= \<const0>\;
  LOCKSTEP_Out(1570) <= \<const0>\;
  LOCKSTEP_Out(1571) <= \<const0>\;
  LOCKSTEP_Out(1572) <= \<const0>\;
  LOCKSTEP_Out(1573) <= \<const0>\;
  LOCKSTEP_Out(1574) <= \<const0>\;
  LOCKSTEP_Out(1575) <= \<const0>\;
  LOCKSTEP_Out(1576) <= \<const0>\;
  LOCKSTEP_Out(1577) <= \<const0>\;
  LOCKSTEP_Out(1578) <= \<const0>\;
  LOCKSTEP_Out(1579) <= \<const0>\;
  LOCKSTEP_Out(1580) <= \<const0>\;
  LOCKSTEP_Out(1581) <= \<const0>\;
  LOCKSTEP_Out(1582) <= \<const0>\;
  LOCKSTEP_Out(1583) <= \<const0>\;
  LOCKSTEP_Out(1584) <= \<const0>\;
  LOCKSTEP_Out(1585) <= \<const0>\;
  LOCKSTEP_Out(1586) <= \<const0>\;
  LOCKSTEP_Out(1587) <= \<const0>\;
  LOCKSTEP_Out(1588) <= \<const0>\;
  LOCKSTEP_Out(1589) <= \<const0>\;
  LOCKSTEP_Out(1590) <= \<const0>\;
  LOCKSTEP_Out(1591) <= \<const0>\;
  LOCKSTEP_Out(1592) <= \<const0>\;
  LOCKSTEP_Out(1593) <= \<const0>\;
  LOCKSTEP_Out(1594) <= \<const0>\;
  LOCKSTEP_Out(1595) <= \<const0>\;
  LOCKSTEP_Out(1596) <= \<const0>\;
  LOCKSTEP_Out(1597) <= \<const0>\;
  LOCKSTEP_Out(1598) <= \<const0>\;
  LOCKSTEP_Out(1599) <= \<const0>\;
  LOCKSTEP_Out(1600) <= \<const0>\;
  LOCKSTEP_Out(1601) <= \<const0>\;
  LOCKSTEP_Out(1602) <= \<const0>\;
  LOCKSTEP_Out(1603) <= \<const0>\;
  LOCKSTEP_Out(1604) <= \<const0>\;
  LOCKSTEP_Out(1605) <= \<const0>\;
  LOCKSTEP_Out(1606) <= \<const0>\;
  LOCKSTEP_Out(1607) <= \<const0>\;
  LOCKSTEP_Out(1608) <= \<const0>\;
  LOCKSTEP_Out(1609) <= \<const0>\;
  LOCKSTEP_Out(1610) <= \<const0>\;
  LOCKSTEP_Out(1611) <= \<const0>\;
  LOCKSTEP_Out(1612) <= \<const0>\;
  LOCKSTEP_Out(1613) <= \<const0>\;
  LOCKSTEP_Out(1614) <= \<const0>\;
  LOCKSTEP_Out(1615) <= \<const0>\;
  LOCKSTEP_Out(1616) <= \<const0>\;
  LOCKSTEP_Out(1617) <= \<const0>\;
  LOCKSTEP_Out(1618) <= \<const0>\;
  LOCKSTEP_Out(1619) <= \<const0>\;
  LOCKSTEP_Out(1620) <= \<const0>\;
  LOCKSTEP_Out(1621) <= \<const0>\;
  LOCKSTEP_Out(1622) <= \<const0>\;
  LOCKSTEP_Out(1623) <= \<const0>\;
  LOCKSTEP_Out(1624) <= \<const0>\;
  LOCKSTEP_Out(1625) <= \<const0>\;
  LOCKSTEP_Out(1626) <= \<const0>\;
  LOCKSTEP_Out(1627) <= \<const0>\;
  LOCKSTEP_Out(1628) <= \<const0>\;
  LOCKSTEP_Out(1629) <= \<const0>\;
  LOCKSTEP_Out(1630) <= \<const0>\;
  LOCKSTEP_Out(1631) <= \<const0>\;
  LOCKSTEP_Out(1632) <= \<const0>\;
  LOCKSTEP_Out(1633) <= \<const0>\;
  LOCKSTEP_Out(1634) <= \<const0>\;
  LOCKSTEP_Out(1635) <= \<const0>\;
  LOCKSTEP_Out(1636) <= \<const0>\;
  LOCKSTEP_Out(1637) <= \<const0>\;
  LOCKSTEP_Out(1638) <= \<const0>\;
  LOCKSTEP_Out(1639) <= \<const0>\;
  LOCKSTEP_Out(1640) <= \<const0>\;
  LOCKSTEP_Out(1641) <= \<const0>\;
  LOCKSTEP_Out(1642) <= \<const0>\;
  LOCKSTEP_Out(1643) <= \<const0>\;
  LOCKSTEP_Out(1644) <= \<const0>\;
  LOCKSTEP_Out(1645) <= \<const0>\;
  LOCKSTEP_Out(1646) <= \<const0>\;
  LOCKSTEP_Out(1647) <= \<const0>\;
  LOCKSTEP_Out(1648) <= \<const0>\;
  LOCKSTEP_Out(1649) <= \<const0>\;
  LOCKSTEP_Out(1650) <= \<const0>\;
  LOCKSTEP_Out(1651) <= \<const0>\;
  LOCKSTEP_Out(1652) <= \<const0>\;
  LOCKSTEP_Out(1653) <= \<const0>\;
  LOCKSTEP_Out(1654) <= \<const0>\;
  LOCKSTEP_Out(1655) <= \<const0>\;
  LOCKSTEP_Out(1656) <= \<const0>\;
  LOCKSTEP_Out(1657) <= \<const0>\;
  LOCKSTEP_Out(1658) <= \<const0>\;
  LOCKSTEP_Out(1659) <= \<const0>\;
  LOCKSTEP_Out(1660) <= \<const0>\;
  LOCKSTEP_Out(1661) <= \<const0>\;
  LOCKSTEP_Out(1662) <= \<const0>\;
  LOCKSTEP_Out(1663) <= \<const0>\;
  LOCKSTEP_Out(1664) <= \<const0>\;
  LOCKSTEP_Out(1665) <= \<const0>\;
  LOCKSTEP_Out(1666) <= \<const0>\;
  LOCKSTEP_Out(1667) <= \<const0>\;
  LOCKSTEP_Out(1668) <= \<const0>\;
  LOCKSTEP_Out(1669) <= \<const0>\;
  LOCKSTEP_Out(1670) <= \<const0>\;
  LOCKSTEP_Out(1671) <= \<const0>\;
  LOCKSTEP_Out(1672) <= \<const0>\;
  LOCKSTEP_Out(1673) <= \<const0>\;
  LOCKSTEP_Out(1674) <= \<const0>\;
  LOCKSTEP_Out(1675) <= \<const0>\;
  LOCKSTEP_Out(1676) <= \<const0>\;
  LOCKSTEP_Out(1677) <= \<const0>\;
  LOCKSTEP_Out(1678) <= \<const0>\;
  LOCKSTEP_Out(1679) <= \<const0>\;
  LOCKSTEP_Out(1680) <= \<const0>\;
  LOCKSTEP_Out(1681) <= \<const0>\;
  LOCKSTEP_Out(1682) <= \<const0>\;
  LOCKSTEP_Out(1683) <= \<const0>\;
  LOCKSTEP_Out(1684) <= \<const0>\;
  LOCKSTEP_Out(1685) <= \<const0>\;
  LOCKSTEP_Out(1686) <= \<const0>\;
  LOCKSTEP_Out(1687) <= \<const0>\;
  LOCKSTEP_Out(1688) <= \<const0>\;
  LOCKSTEP_Out(1689) <= \<const0>\;
  LOCKSTEP_Out(1690) <= \<const0>\;
  LOCKSTEP_Out(1691) <= \<const0>\;
  LOCKSTEP_Out(1692) <= \<const0>\;
  LOCKSTEP_Out(1693) <= \<const0>\;
  LOCKSTEP_Out(1694) <= \<const0>\;
  LOCKSTEP_Out(1695) <= \<const0>\;
  LOCKSTEP_Out(1696) <= \<const0>\;
  LOCKSTEP_Out(1697) <= \<const0>\;
  LOCKSTEP_Out(1698) <= \<const0>\;
  LOCKSTEP_Out(1699) <= \<const0>\;
  LOCKSTEP_Out(1700) <= \<const0>\;
  LOCKSTEP_Out(1701) <= \<const0>\;
  LOCKSTEP_Out(1702) <= \<const0>\;
  LOCKSTEP_Out(1703) <= \<const0>\;
  LOCKSTEP_Out(1704) <= \<const0>\;
  LOCKSTEP_Out(1705) <= \<const0>\;
  LOCKSTEP_Out(1706) <= \<const0>\;
  LOCKSTEP_Out(1707) <= \<const0>\;
  LOCKSTEP_Out(1708) <= \<const0>\;
  LOCKSTEP_Out(1709) <= \<const0>\;
  LOCKSTEP_Out(1710) <= \<const0>\;
  LOCKSTEP_Out(1711) <= \<const0>\;
  LOCKSTEP_Out(1712) <= \<const0>\;
  LOCKSTEP_Out(1713) <= \<const0>\;
  LOCKSTEP_Out(1714) <= \<const0>\;
  LOCKSTEP_Out(1715) <= \<const0>\;
  LOCKSTEP_Out(1716) <= \<const0>\;
  LOCKSTEP_Out(1717) <= \<const0>\;
  LOCKSTEP_Out(1718) <= \<const0>\;
  LOCKSTEP_Out(1719) <= \<const0>\;
  LOCKSTEP_Out(1720) <= \<const0>\;
  LOCKSTEP_Out(1721) <= \<const0>\;
  LOCKSTEP_Out(1722) <= \<const0>\;
  LOCKSTEP_Out(1723) <= \<const0>\;
  LOCKSTEP_Out(1724) <= \<const0>\;
  LOCKSTEP_Out(1725) <= \<const0>\;
  LOCKSTEP_Out(1726) <= \<const0>\;
  LOCKSTEP_Out(1727) <= \<const0>\;
  LOCKSTEP_Out(1728) <= \<const0>\;
  LOCKSTEP_Out(1729) <= \<const0>\;
  LOCKSTEP_Out(1730) <= \<const0>\;
  LOCKSTEP_Out(1731) <= \<const0>\;
  LOCKSTEP_Out(1732) <= \<const0>\;
  LOCKSTEP_Out(1733) <= \<const0>\;
  LOCKSTEP_Out(1734) <= \<const0>\;
  LOCKSTEP_Out(1735) <= \<const0>\;
  LOCKSTEP_Out(1736) <= \<const0>\;
  LOCKSTEP_Out(1737) <= \<const0>\;
  LOCKSTEP_Out(1738) <= \<const0>\;
  LOCKSTEP_Out(1739) <= \<const0>\;
  LOCKSTEP_Out(1740) <= \<const0>\;
  LOCKSTEP_Out(1741) <= \<const0>\;
  LOCKSTEP_Out(1742) <= \<const0>\;
  LOCKSTEP_Out(1743) <= \<const0>\;
  LOCKSTEP_Out(1744) <= \<const0>\;
  LOCKSTEP_Out(1745) <= \<const0>\;
  LOCKSTEP_Out(1746) <= \<const0>\;
  LOCKSTEP_Out(1747) <= \<const0>\;
  LOCKSTEP_Out(1748) <= \<const0>\;
  LOCKSTEP_Out(1749) <= \<const0>\;
  LOCKSTEP_Out(1750) <= \<const0>\;
  LOCKSTEP_Out(1751) <= \<const0>\;
  LOCKSTEP_Out(1752) <= \<const0>\;
  LOCKSTEP_Out(1753) <= \<const0>\;
  LOCKSTEP_Out(1754) <= \<const0>\;
  LOCKSTEP_Out(1755) <= \<const0>\;
  LOCKSTEP_Out(1756) <= \<const0>\;
  LOCKSTEP_Out(1757) <= \<const0>\;
  LOCKSTEP_Out(1758) <= \<const0>\;
  LOCKSTEP_Out(1759) <= \<const0>\;
  LOCKSTEP_Out(1760) <= \<const0>\;
  LOCKSTEP_Out(1761) <= \<const0>\;
  LOCKSTEP_Out(1762) <= \<const0>\;
  LOCKSTEP_Out(1763) <= \<const0>\;
  LOCKSTEP_Out(1764) <= \<const0>\;
  LOCKSTEP_Out(1765) <= \<const0>\;
  LOCKSTEP_Out(1766) <= \<const0>\;
  LOCKSTEP_Out(1767) <= \<const0>\;
  LOCKSTEP_Out(1768) <= \<const0>\;
  LOCKSTEP_Out(1769) <= \<const0>\;
  LOCKSTEP_Out(1770) <= \<const0>\;
  LOCKSTEP_Out(1771) <= \<const0>\;
  LOCKSTEP_Out(1772) <= \<const0>\;
  LOCKSTEP_Out(1773) <= \<const0>\;
  LOCKSTEP_Out(1774) <= \<const0>\;
  LOCKSTEP_Out(1775) <= \<const0>\;
  LOCKSTEP_Out(1776) <= \<const0>\;
  LOCKSTEP_Out(1777) <= \<const0>\;
  LOCKSTEP_Out(1778) <= \<const0>\;
  LOCKSTEP_Out(1779) <= \<const0>\;
  LOCKSTEP_Out(1780) <= \<const0>\;
  LOCKSTEP_Out(1781) <= \<const0>\;
  LOCKSTEP_Out(1782) <= \<const0>\;
  LOCKSTEP_Out(1783) <= \<const0>\;
  LOCKSTEP_Out(1784) <= \<const0>\;
  LOCKSTEP_Out(1785) <= \<const0>\;
  LOCKSTEP_Out(1786) <= \<const0>\;
  LOCKSTEP_Out(1787) <= \<const0>\;
  LOCKSTEP_Out(1788) <= \<const0>\;
  LOCKSTEP_Out(1789) <= \<const0>\;
  LOCKSTEP_Out(1790) <= \<const0>\;
  LOCKSTEP_Out(1791) <= \<const0>\;
  LOCKSTEP_Out(1792) <= \<const0>\;
  LOCKSTEP_Out(1793) <= \<const0>\;
  LOCKSTEP_Out(1794) <= \<const0>\;
  LOCKSTEP_Out(1795) <= \<const0>\;
  LOCKSTEP_Out(1796) <= \<const0>\;
  LOCKSTEP_Out(1797) <= \<const0>\;
  LOCKSTEP_Out(1798) <= \<const0>\;
  LOCKSTEP_Out(1799) <= \<const0>\;
  LOCKSTEP_Out(1800) <= \<const0>\;
  LOCKSTEP_Out(1801) <= \<const0>\;
  LOCKSTEP_Out(1802) <= \<const0>\;
  LOCKSTEP_Out(1803) <= \<const0>\;
  LOCKSTEP_Out(1804) <= \<const0>\;
  LOCKSTEP_Out(1805) <= \<const0>\;
  LOCKSTEP_Out(1806) <= \<const0>\;
  LOCKSTEP_Out(1807) <= \<const0>\;
  LOCKSTEP_Out(1808) <= \<const0>\;
  LOCKSTEP_Out(1809) <= \<const0>\;
  LOCKSTEP_Out(1810) <= \<const0>\;
  LOCKSTEP_Out(1811) <= \<const0>\;
  LOCKSTEP_Out(1812) <= \<const0>\;
  LOCKSTEP_Out(1813) <= \<const0>\;
  LOCKSTEP_Out(1814) <= \<const0>\;
  LOCKSTEP_Out(1815) <= \<const0>\;
  LOCKSTEP_Out(1816) <= \<const0>\;
  LOCKSTEP_Out(1817) <= \<const0>\;
  LOCKSTEP_Out(1818) <= \<const0>\;
  LOCKSTEP_Out(1819) <= \<const0>\;
  LOCKSTEP_Out(1820) <= \<const0>\;
  LOCKSTEP_Out(1821) <= \<const0>\;
  LOCKSTEP_Out(1822) <= \<const0>\;
  LOCKSTEP_Out(1823) <= \<const0>\;
  LOCKSTEP_Out(1824) <= \<const0>\;
  LOCKSTEP_Out(1825) <= \<const0>\;
  LOCKSTEP_Out(1826) <= \<const0>\;
  LOCKSTEP_Out(1827) <= \<const0>\;
  LOCKSTEP_Out(1828) <= \<const0>\;
  LOCKSTEP_Out(1829) <= \<const0>\;
  LOCKSTEP_Out(1830) <= \<const0>\;
  LOCKSTEP_Out(1831) <= \<const0>\;
  LOCKSTEP_Out(1832) <= \<const0>\;
  LOCKSTEP_Out(1833) <= \<const0>\;
  LOCKSTEP_Out(1834) <= \<const0>\;
  LOCKSTEP_Out(1835) <= \<const0>\;
  LOCKSTEP_Out(1836) <= \<const0>\;
  LOCKSTEP_Out(1837) <= \<const0>\;
  LOCKSTEP_Out(1838) <= \<const0>\;
  LOCKSTEP_Out(1839) <= \<const0>\;
  LOCKSTEP_Out(1840) <= \<const0>\;
  LOCKSTEP_Out(1841) <= \<const0>\;
  LOCKSTEP_Out(1842) <= \<const0>\;
  LOCKSTEP_Out(1843) <= \<const0>\;
  LOCKSTEP_Out(1844) <= \<const0>\;
  LOCKSTEP_Out(1845) <= \<const0>\;
  LOCKSTEP_Out(1846) <= \<const0>\;
  LOCKSTEP_Out(1847) <= \<const0>\;
  LOCKSTEP_Out(1848) <= \<const0>\;
  LOCKSTEP_Out(1849) <= \<const0>\;
  LOCKSTEP_Out(1850) <= \<const0>\;
  LOCKSTEP_Out(1851) <= \<const0>\;
  LOCKSTEP_Out(1852) <= \<const0>\;
  LOCKSTEP_Out(1853) <= \<const0>\;
  LOCKSTEP_Out(1854) <= \<const0>\;
  LOCKSTEP_Out(1855) <= \<const0>\;
  LOCKSTEP_Out(1856) <= \<const0>\;
  LOCKSTEP_Out(1857) <= \<const0>\;
  LOCKSTEP_Out(1858) <= \<const0>\;
  LOCKSTEP_Out(1859) <= \<const0>\;
  LOCKSTEP_Out(1860) <= \<const0>\;
  LOCKSTEP_Out(1861) <= \<const0>\;
  LOCKSTEP_Out(1862) <= \<const0>\;
  LOCKSTEP_Out(1863) <= \<const0>\;
  LOCKSTEP_Out(1864) <= \<const0>\;
  LOCKSTEP_Out(1865) <= \<const0>\;
  LOCKSTEP_Out(1866) <= \<const0>\;
  LOCKSTEP_Out(1867) <= \<const0>\;
  LOCKSTEP_Out(1868) <= \<const0>\;
  LOCKSTEP_Out(1869) <= \<const0>\;
  LOCKSTEP_Out(1870) <= \<const0>\;
  LOCKSTEP_Out(1871) <= \<const0>\;
  LOCKSTEP_Out(1872) <= \<const0>\;
  LOCKSTEP_Out(1873) <= \<const0>\;
  LOCKSTEP_Out(1874) <= \<const0>\;
  LOCKSTEP_Out(1875) <= \<const0>\;
  LOCKSTEP_Out(1876) <= \<const0>\;
  LOCKSTEP_Out(1877) <= \<const0>\;
  LOCKSTEP_Out(1878) <= \<const0>\;
  LOCKSTEP_Out(1879) <= \<const0>\;
  LOCKSTEP_Out(1880) <= \<const0>\;
  LOCKSTEP_Out(1881) <= \<const0>\;
  LOCKSTEP_Out(1882) <= \<const0>\;
  LOCKSTEP_Out(1883) <= \<const0>\;
  LOCKSTEP_Out(1884) <= \<const0>\;
  LOCKSTEP_Out(1885) <= \<const0>\;
  LOCKSTEP_Out(1886) <= \<const0>\;
  LOCKSTEP_Out(1887) <= \<const0>\;
  LOCKSTEP_Out(1888) <= \<const0>\;
  LOCKSTEP_Out(1889) <= \<const0>\;
  LOCKSTEP_Out(1890) <= \<const0>\;
  LOCKSTEP_Out(1891) <= \<const0>\;
  LOCKSTEP_Out(1892) <= \<const0>\;
  LOCKSTEP_Out(1893) <= \<const0>\;
  LOCKSTEP_Out(1894) <= \<const0>\;
  LOCKSTEP_Out(1895) <= \<const0>\;
  LOCKSTEP_Out(1896) <= \<const0>\;
  LOCKSTEP_Out(1897) <= \<const0>\;
  LOCKSTEP_Out(1898) <= \<const0>\;
  LOCKSTEP_Out(1899) <= \<const0>\;
  LOCKSTEP_Out(1900) <= \<const0>\;
  LOCKSTEP_Out(1901) <= \<const0>\;
  LOCKSTEP_Out(1902) <= \<const0>\;
  LOCKSTEP_Out(1903) <= \<const0>\;
  LOCKSTEP_Out(1904) <= \<const0>\;
  LOCKSTEP_Out(1905) <= \<const0>\;
  LOCKSTEP_Out(1906) <= \<const0>\;
  LOCKSTEP_Out(1907) <= \<const0>\;
  LOCKSTEP_Out(1908) <= \<const0>\;
  LOCKSTEP_Out(1909) <= \<const0>\;
  LOCKSTEP_Out(1910) <= \<const0>\;
  LOCKSTEP_Out(1911) <= \<const0>\;
  LOCKSTEP_Out(1912) <= \<const0>\;
  LOCKSTEP_Out(1913) <= \<const0>\;
  LOCKSTEP_Out(1914) <= \<const0>\;
  LOCKSTEP_Out(1915) <= \<const0>\;
  LOCKSTEP_Out(1916) <= \<const0>\;
  LOCKSTEP_Out(1917) <= \<const0>\;
  LOCKSTEP_Out(1918) <= \<const0>\;
  LOCKSTEP_Out(1919) <= \<const0>\;
  LOCKSTEP_Out(1920) <= \<const0>\;
  LOCKSTEP_Out(1921) <= \<const0>\;
  LOCKSTEP_Out(1922) <= \<const0>\;
  LOCKSTEP_Out(1923) <= \<const0>\;
  LOCKSTEP_Out(1924) <= \<const0>\;
  LOCKSTEP_Out(1925) <= \<const0>\;
  LOCKSTEP_Out(1926) <= \<const0>\;
  LOCKSTEP_Out(1927) <= \<const0>\;
  LOCKSTEP_Out(1928) <= \<const0>\;
  LOCKSTEP_Out(1929) <= \<const0>\;
  LOCKSTEP_Out(1930) <= \<const0>\;
  LOCKSTEP_Out(1931) <= \<const0>\;
  LOCKSTEP_Out(1932) <= \<const0>\;
  LOCKSTEP_Out(1933) <= \<const0>\;
  LOCKSTEP_Out(1934) <= \<const0>\;
  LOCKSTEP_Out(1935) <= \<const0>\;
  LOCKSTEP_Out(1936) <= \<const0>\;
  LOCKSTEP_Out(1937) <= \<const0>\;
  LOCKSTEP_Out(1938) <= \<const0>\;
  LOCKSTEP_Out(1939) <= \<const0>\;
  LOCKSTEP_Out(1940) <= \<const0>\;
  LOCKSTEP_Out(1941) <= \<const0>\;
  LOCKSTEP_Out(1942) <= \<const0>\;
  LOCKSTEP_Out(1943) <= \<const0>\;
  LOCKSTEP_Out(1944) <= \<const0>\;
  LOCKSTEP_Out(1945) <= \<const0>\;
  LOCKSTEP_Out(1946) <= \<const0>\;
  LOCKSTEP_Out(1947) <= \<const0>\;
  LOCKSTEP_Out(1948) <= \<const0>\;
  LOCKSTEP_Out(1949) <= \<const0>\;
  LOCKSTEP_Out(1950) <= \<const0>\;
  LOCKSTEP_Out(1951) <= \<const0>\;
  LOCKSTEP_Out(1952) <= \<const0>\;
  LOCKSTEP_Out(1953) <= \<const0>\;
  LOCKSTEP_Out(1954) <= \<const0>\;
  LOCKSTEP_Out(1955) <= \<const0>\;
  LOCKSTEP_Out(1956) <= \<const0>\;
  LOCKSTEP_Out(1957) <= \<const0>\;
  LOCKSTEP_Out(1958) <= \<const0>\;
  LOCKSTEP_Out(1959) <= \<const0>\;
  LOCKSTEP_Out(1960) <= \<const0>\;
  LOCKSTEP_Out(1961) <= \<const0>\;
  LOCKSTEP_Out(1962) <= \<const0>\;
  LOCKSTEP_Out(1963) <= \<const0>\;
  LOCKSTEP_Out(1964) <= \<const0>\;
  LOCKSTEP_Out(1965) <= \<const0>\;
  LOCKSTEP_Out(1966) <= \<const0>\;
  LOCKSTEP_Out(1967) <= \<const0>\;
  LOCKSTEP_Out(1968 to 1997) <= \^lockstep_out\(1968 to 1997);
  LOCKSTEP_Out(1998) <= \<const0>\;
  LOCKSTEP_Out(1999) <= \<const0>\;
  LOCKSTEP_Out(2000) <= \<const0>\;
  LOCKSTEP_Out(2001) <= \<const0>\;
  LOCKSTEP_Out(2002) <= \<const0>\;
  LOCKSTEP_Out(2003) <= \<const0>\;
  LOCKSTEP_Out(2004) <= \<const0>\;
  LOCKSTEP_Out(2005) <= \<const0>\;
  LOCKSTEP_Out(2006) <= \<const0>\;
  LOCKSTEP_Out(2007) <= \<const0>\;
  LOCKSTEP_Out(2008) <= \<const0>\;
  LOCKSTEP_Out(2009) <= \<const0>\;
  LOCKSTEP_Out(2010) <= \<const0>\;
  LOCKSTEP_Out(2011) <= \<const0>\;
  LOCKSTEP_Out(2012) <= \<const0>\;
  LOCKSTEP_Out(2013) <= \<const0>\;
  LOCKSTEP_Out(2014) <= \<const0>\;
  LOCKSTEP_Out(2015) <= \<const0>\;
  LOCKSTEP_Out(2016) <= \<const0>\;
  LOCKSTEP_Out(2017) <= \<const0>\;
  LOCKSTEP_Out(2018) <= \<const0>\;
  LOCKSTEP_Out(2019) <= \<const0>\;
  LOCKSTEP_Out(2020) <= \<const0>\;
  LOCKSTEP_Out(2021) <= \<const0>\;
  LOCKSTEP_Out(2022) <= \<const0>\;
  LOCKSTEP_Out(2023) <= \<const0>\;
  LOCKSTEP_Out(2024) <= \<const0>\;
  LOCKSTEP_Out(2025) <= \<const0>\;
  LOCKSTEP_Out(2026) <= \<const0>\;
  LOCKSTEP_Out(2027) <= \<const0>\;
  LOCKSTEP_Out(2028) <= \<const0>\;
  LOCKSTEP_Out(2029) <= \<const0>\;
  LOCKSTEP_Out(2030) <= \<const0>\;
  LOCKSTEP_Out(2031) <= \<const0>\;
  LOCKSTEP_Out(2032) <= \<const0>\;
  LOCKSTEP_Out(2033) <= \<const0>\;
  LOCKSTEP_Out(2034) <= \<const0>\;
  LOCKSTEP_Out(2035) <= \<const0>\;
  LOCKSTEP_Out(2036) <= \<const0>\;
  LOCKSTEP_Out(2037) <= \<const0>\;
  LOCKSTEP_Out(2038) <= \^lockstep_out\(2039);
  LOCKSTEP_Out(2039) <= \^lockstep_out\(2039);
  LOCKSTEP_Out(2040) <= \<const0>\;
  LOCKSTEP_Out(2041) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2042) <= \<const0>\;
  LOCKSTEP_Out(2043) <= \^lockstep_out\(2043);
  LOCKSTEP_Out(2044) <= \<const0>\;
  LOCKSTEP_Out(2045) <= \<const0>\;
  LOCKSTEP_Out(2046) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2047) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2048) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2049) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2050) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2051) <= \<const0>\;
  LOCKSTEP_Out(2052) <= \<const0>\;
  LOCKSTEP_Out(2053) <= \<const0>\;
  LOCKSTEP_Out(2054) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2055) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2056) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2057) <= \^lockstep_out\(2057);
  LOCKSTEP_Out(2058) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2059) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2060) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2061) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2062) <= \^lockstep_out\(2047);
  LOCKSTEP_Out(2063) <= \<const0>\;
  LOCKSTEP_Out(2064) <= \<const0>\;
  LOCKSTEP_Out(2065) <= \<const0>\;
  LOCKSTEP_Out(2066) <= \<const0>\;
  LOCKSTEP_Out(2067) <= \<const0>\;
  LOCKSTEP_Out(2068) <= \<const0>\;
  LOCKSTEP_Out(2069) <= \<const0>\;
  LOCKSTEP_Out(2070) <= \<const0>\;
  LOCKSTEP_Out(2071) <= \^lockstep_out\(2071);
  LOCKSTEP_Out(2072) <= \<const0>\;
  LOCKSTEP_Out(2073) <= \<const0>\;
  LOCKSTEP_Out(2074) <= \<const0>\;
  LOCKSTEP_Out(2075) <= \<const0>\;
  LOCKSTEP_Out(2076) <= \<const0>\;
  LOCKSTEP_Out(2077) <= \<const0>\;
  LOCKSTEP_Out(2078) <= \<const0>\;
  LOCKSTEP_Out(2079) <= \<const0>\;
  LOCKSTEP_Out(2080) <= \<const0>\;
  LOCKSTEP_Out(2081) <= \<const0>\;
  LOCKSTEP_Out(2082) <= \<const0>\;
  LOCKSTEP_Out(2083 to 2114) <= \^lockstep_out\(2083 to 2114);
  LOCKSTEP_Out(2115) <= \<const0>\;
  LOCKSTEP_Out(2116) <= \<const0>\;
  LOCKSTEP_Out(2117) <= \<const0>\;
  LOCKSTEP_Out(2118) <= \<const0>\;
  LOCKSTEP_Out(2119) <= \<const0>\;
  LOCKSTEP_Out(2120) <= \<const0>\;
  LOCKSTEP_Out(2121) <= \<const0>\;
  LOCKSTEP_Out(2122) <= \<const0>\;
  LOCKSTEP_Out(2123) <= \<const0>\;
  LOCKSTEP_Out(2124) <= \<const0>\;
  LOCKSTEP_Out(2125) <= \<const0>\;
  LOCKSTEP_Out(2126) <= \<const0>\;
  LOCKSTEP_Out(2127) <= \<const0>\;
  LOCKSTEP_Out(2128) <= \<const0>\;
  LOCKSTEP_Out(2129) <= \<const0>\;
  LOCKSTEP_Out(2130) <= \<const0>\;
  LOCKSTEP_Out(2131) <= \<const0>\;
  LOCKSTEP_Out(2132) <= \<const0>\;
  LOCKSTEP_Out(2133) <= \<const0>\;
  LOCKSTEP_Out(2134) <= \<const0>\;
  LOCKSTEP_Out(2135) <= \<const0>\;
  LOCKSTEP_Out(2136) <= \<const0>\;
  LOCKSTEP_Out(2137) <= \<const0>\;
  LOCKSTEP_Out(2138) <= \<const0>\;
  LOCKSTEP_Out(2139) <= \<const0>\;
  LOCKSTEP_Out(2140) <= \<const0>\;
  LOCKSTEP_Out(2141) <= \<const0>\;
  LOCKSTEP_Out(2142) <= \<const0>\;
  LOCKSTEP_Out(2143) <= \<const0>\;
  LOCKSTEP_Out(2144) <= \<const0>\;
  LOCKSTEP_Out(2145) <= \<const0>\;
  LOCKSTEP_Out(2146) <= \<const0>\;
  LOCKSTEP_Out(2147) <= \<const0>\;
  LOCKSTEP_Out(2148) <= \<const0>\;
  LOCKSTEP_Out(2149) <= \<const0>\;
  LOCKSTEP_Out(2150) <= \<const0>\;
  LOCKSTEP_Out(2151) <= \<const0>\;
  LOCKSTEP_Out(2152) <= \<const0>\;
  LOCKSTEP_Out(2153) <= \<const0>\;
  LOCKSTEP_Out(2154) <= \<const0>\;
  LOCKSTEP_Out(2155) <= \<const0>\;
  LOCKSTEP_Out(2156) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2157) <= \<const0>\;
  LOCKSTEP_Out(2158) <= \<const0>\;
  LOCKSTEP_Out(2159) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2160) <= \<const0>\;
  LOCKSTEP_Out(2161) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2162) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2163) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2164) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2165) <= \<const0>\;
  LOCKSTEP_Out(2166) <= \<const0>\;
  LOCKSTEP_Out(2167) <= \<const0>\;
  LOCKSTEP_Out(2168) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2169) <= \<const0>\;
  LOCKSTEP_Out(2170) <= \<const0>\;
  LOCKSTEP_Out(2171) <= \<const0>\;
  LOCKSTEP_Out(2172) <= \^lockstep_out\(2172);
  LOCKSTEP_Out(2173) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2174) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2175) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2176) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2177) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2178) <= \<const0>\;
  LOCKSTEP_Out(2179) <= \<const0>\;
  LOCKSTEP_Out(2180) <= \<const0>\;
  LOCKSTEP_Out(2181) <= \<const0>\;
  LOCKSTEP_Out(2182) <= \<const0>\;
  LOCKSTEP_Out(2183) <= \<const0>\;
  LOCKSTEP_Out(2184) <= \<const0>\;
  LOCKSTEP_Out(2185 to 2216) <= \^lockstep_out\(2185 to 2216);
  LOCKSTEP_Out(2217) <= \<const0>\;
  LOCKSTEP_Out(2218) <= \<const0>\;
  LOCKSTEP_Out(2219) <= \<const0>\;
  LOCKSTEP_Out(2220) <= \<const0>\;
  LOCKSTEP_Out(2221) <= \<const0>\;
  LOCKSTEP_Out(2222) <= \<const0>\;
  LOCKSTEP_Out(2223) <= \<const0>\;
  LOCKSTEP_Out(2224) <= \<const0>\;
  LOCKSTEP_Out(2225) <= \<const0>\;
  LOCKSTEP_Out(2226) <= \<const0>\;
  LOCKSTEP_Out(2227) <= \<const0>\;
  LOCKSTEP_Out(2228) <= \<const0>\;
  LOCKSTEP_Out(2229) <= \<const0>\;
  LOCKSTEP_Out(2230) <= \<const0>\;
  LOCKSTEP_Out(2231) <= \<const0>\;
  LOCKSTEP_Out(2232) <= \<const0>\;
  LOCKSTEP_Out(2233) <= \<const0>\;
  LOCKSTEP_Out(2234) <= \<const0>\;
  LOCKSTEP_Out(2235) <= \<const0>\;
  LOCKSTEP_Out(2236) <= \<const0>\;
  LOCKSTEP_Out(2237) <= \<const0>\;
  LOCKSTEP_Out(2238) <= \<const0>\;
  LOCKSTEP_Out(2239) <= \<const0>\;
  LOCKSTEP_Out(2240) <= \<const0>\;
  LOCKSTEP_Out(2241) <= \<const0>\;
  LOCKSTEP_Out(2242) <= \<const0>\;
  LOCKSTEP_Out(2243) <= \<const0>\;
  LOCKSTEP_Out(2244) <= \<const0>\;
  LOCKSTEP_Out(2245) <= \<const0>\;
  LOCKSTEP_Out(2246) <= \<const0>\;
  LOCKSTEP_Out(2247) <= \<const0>\;
  LOCKSTEP_Out(2248) <= \<const0>\;
  LOCKSTEP_Out(2249) <= \<const0>\;
  LOCKSTEP_Out(2250) <= \<const0>\;
  LOCKSTEP_Out(2251) <= \<const0>\;
  LOCKSTEP_Out(2252) <= \<const0>\;
  LOCKSTEP_Out(2253) <= \<const0>\;
  LOCKSTEP_Out(2254) <= \<const0>\;
  LOCKSTEP_Out(2255) <= \<const0>\;
  LOCKSTEP_Out(2256) <= \<const0>\;
  LOCKSTEP_Out(2257) <= \<const0>\;
  LOCKSTEP_Out(2258) <= \<const0>\;
  LOCKSTEP_Out(2259) <= \<const0>\;
  LOCKSTEP_Out(2260) <= \<const0>\;
  LOCKSTEP_Out(2261) <= \<const0>\;
  LOCKSTEP_Out(2262) <= \<const0>\;
  LOCKSTEP_Out(2263) <= \<const0>\;
  LOCKSTEP_Out(2264) <= \<const0>\;
  LOCKSTEP_Out(2265) <= \<const0>\;
  LOCKSTEP_Out(2266) <= \<const0>\;
  LOCKSTEP_Out(2267) <= \<const0>\;
  LOCKSTEP_Out(2268) <= \<const0>\;
  LOCKSTEP_Out(2269) <= \<const0>\;
  LOCKSTEP_Out(2270) <= \<const0>\;
  LOCKSTEP_Out(2271) <= \<const0>\;
  LOCKSTEP_Out(2272) <= \<const0>\;
  LOCKSTEP_Out(2273) <= \<const0>\;
  LOCKSTEP_Out(2274) <= \<const0>\;
  LOCKSTEP_Out(2275) <= \<const0>\;
  LOCKSTEP_Out(2276) <= \<const0>\;
  LOCKSTEP_Out(2277) <= \<const0>\;
  LOCKSTEP_Out(2278) <= \<const0>\;
  LOCKSTEP_Out(2279) <= \<const0>\;
  LOCKSTEP_Out(2280) <= \<const0>\;
  LOCKSTEP_Out(2281) <= \<const0>\;
  LOCKSTEP_Out(2282) <= \<const0>\;
  LOCKSTEP_Out(2283) <= \<const0>\;
  LOCKSTEP_Out(2284) <= \<const0>\;
  LOCKSTEP_Out(2285) <= \<const0>\;
  LOCKSTEP_Out(2286) <= \<const0>\;
  LOCKSTEP_Out(2287) <= \<const0>\;
  LOCKSTEP_Out(2288) <= \<const0>\;
  LOCKSTEP_Out(2289) <= \<const0>\;
  LOCKSTEP_Out(2290) <= \<const0>\;
  LOCKSTEP_Out(2291) <= \<const0>\;
  LOCKSTEP_Out(2292) <= \<const0>\;
  LOCKSTEP_Out(2293) <= \<const0>\;
  LOCKSTEP_Out(2294) <= \<const0>\;
  LOCKSTEP_Out(2295) <= \<const0>\;
  LOCKSTEP_Out(2296) <= \<const0>\;
  LOCKSTEP_Out(2297) <= \<const0>\;
  LOCKSTEP_Out(2298) <= \<const0>\;
  LOCKSTEP_Out(2299) <= \<const0>\;
  LOCKSTEP_Out(2300) <= \<const0>\;
  LOCKSTEP_Out(2301) <= \<const0>\;
  LOCKSTEP_Out(2302) <= \<const0>\;
  LOCKSTEP_Out(2303) <= \<const0>\;
  LOCKSTEP_Out(2304) <= \<const0>\;
  LOCKSTEP_Out(2305) <= \<const0>\;
  LOCKSTEP_Out(2306) <= \<const0>\;
  LOCKSTEP_Out(2307) <= \<const0>\;
  LOCKSTEP_Out(2308) <= \<const0>\;
  LOCKSTEP_Out(2309) <= \<const0>\;
  LOCKSTEP_Out(2310) <= \<const0>\;
  LOCKSTEP_Out(2311) <= \<const0>\;
  LOCKSTEP_Out(2312) <= \<const0>\;
  LOCKSTEP_Out(2313) <= \<const0>\;
  LOCKSTEP_Out(2314) <= \<const0>\;
  LOCKSTEP_Out(2315) <= \<const0>\;
  LOCKSTEP_Out(2316) <= \<const0>\;
  LOCKSTEP_Out(2317) <= \<const0>\;
  LOCKSTEP_Out(2318) <= \<const0>\;
  LOCKSTEP_Out(2319) <= \<const0>\;
  LOCKSTEP_Out(2320) <= \<const0>\;
  LOCKSTEP_Out(2321) <= \<const0>\;
  LOCKSTEP_Out(2322) <= \<const0>\;
  LOCKSTEP_Out(2323) <= \<const0>\;
  LOCKSTEP_Out(2324) <= \<const0>\;
  LOCKSTEP_Out(2325) <= \<const0>\;
  LOCKSTEP_Out(2326) <= \<const0>\;
  LOCKSTEP_Out(2327) <= \<const0>\;
  LOCKSTEP_Out(2328) <= \<const0>\;
  LOCKSTEP_Out(2329) <= \<const0>\;
  LOCKSTEP_Out(2330) <= \<const0>\;
  LOCKSTEP_Out(2331) <= \<const0>\;
  LOCKSTEP_Out(2332) <= \<const0>\;
  LOCKSTEP_Out(2333) <= \<const0>\;
  LOCKSTEP_Out(2334) <= \<const0>\;
  LOCKSTEP_Out(2335) <= \<const0>\;
  LOCKSTEP_Out(2336) <= \<const0>\;
  LOCKSTEP_Out(2337) <= \<const0>\;
  LOCKSTEP_Out(2338) <= \<const0>\;
  LOCKSTEP_Out(2339) <= \<const0>\;
  LOCKSTEP_Out(2340) <= \<const0>\;
  LOCKSTEP_Out(2341) <= \<const0>\;
  LOCKSTEP_Out(2342) <= \<const0>\;
  LOCKSTEP_Out(2343) <= \<const0>\;
  LOCKSTEP_Out(2344) <= \<const0>\;
  LOCKSTEP_Out(2345) <= \<const0>\;
  LOCKSTEP_Out(2346) <= \<const0>\;
  LOCKSTEP_Out(2347) <= \<const0>\;
  LOCKSTEP_Out(2348) <= \<const0>\;
  LOCKSTEP_Out(2349) <= \<const0>\;
  LOCKSTEP_Out(2350) <= \<const0>\;
  LOCKSTEP_Out(2351) <= \<const0>\;
  LOCKSTEP_Out(2352) <= \<const0>\;
  LOCKSTEP_Out(2353) <= \<const0>\;
  LOCKSTEP_Out(2354) <= \<const0>\;
  LOCKSTEP_Out(2355) <= \<const0>\;
  LOCKSTEP_Out(2356) <= \<const0>\;
  LOCKSTEP_Out(2357) <= \<const0>\;
  LOCKSTEP_Out(2358) <= \<const0>\;
  LOCKSTEP_Out(2359) <= \<const0>\;
  LOCKSTEP_Out(2360) <= \<const0>\;
  LOCKSTEP_Out(2361) <= \<const0>\;
  LOCKSTEP_Out(2362) <= \<const0>\;
  LOCKSTEP_Out(2363) <= \<const0>\;
  LOCKSTEP_Out(2364) <= \<const0>\;
  LOCKSTEP_Out(2365) <= \<const0>\;
  LOCKSTEP_Out(2366) <= \<const0>\;
  LOCKSTEP_Out(2367) <= \<const0>\;
  LOCKSTEP_Out(2368) <= \<const0>\;
  LOCKSTEP_Out(2369) <= \<const0>\;
  LOCKSTEP_Out(2370) <= \<const0>\;
  LOCKSTEP_Out(2371) <= \<const0>\;
  LOCKSTEP_Out(2372) <= \<const0>\;
  LOCKSTEP_Out(2373) <= \<const0>\;
  LOCKSTEP_Out(2374) <= \<const0>\;
  LOCKSTEP_Out(2375) <= \<const0>\;
  LOCKSTEP_Out(2376) <= \<const0>\;
  LOCKSTEP_Out(2377) <= \<const0>\;
  LOCKSTEP_Out(2378) <= \<const0>\;
  LOCKSTEP_Out(2379) <= \<const0>\;
  LOCKSTEP_Out(2380) <= \<const0>\;
  LOCKSTEP_Out(2381) <= \<const0>\;
  LOCKSTEP_Out(2382) <= \<const0>\;
  LOCKSTEP_Out(2383) <= \<const0>\;
  LOCKSTEP_Out(2384) <= \<const0>\;
  LOCKSTEP_Out(2385) <= \<const0>\;
  LOCKSTEP_Out(2386) <= \<const0>\;
  LOCKSTEP_Out(2387) <= \<const0>\;
  LOCKSTEP_Out(2388) <= \<const0>\;
  LOCKSTEP_Out(2389) <= \<const0>\;
  LOCKSTEP_Out(2390) <= \<const0>\;
  LOCKSTEP_Out(2391) <= \<const0>\;
  LOCKSTEP_Out(2392) <= \<const0>\;
  LOCKSTEP_Out(2393) <= \<const0>\;
  LOCKSTEP_Out(2394) <= \<const0>\;
  LOCKSTEP_Out(2395) <= \<const0>\;
  LOCKSTEP_Out(2396) <= \<const0>\;
  LOCKSTEP_Out(2397) <= \<const0>\;
  LOCKSTEP_Out(2398) <= \<const0>\;
  LOCKSTEP_Out(2399) <= \<const0>\;
  LOCKSTEP_Out(2400) <= \<const0>\;
  LOCKSTEP_Out(2401) <= \<const0>\;
  LOCKSTEP_Out(2402) <= \<const0>\;
  LOCKSTEP_Out(2403) <= \<const0>\;
  LOCKSTEP_Out(2404) <= \<const0>\;
  LOCKSTEP_Out(2405) <= \<const0>\;
  LOCKSTEP_Out(2406) <= \<const0>\;
  LOCKSTEP_Out(2407) <= \<const0>\;
  LOCKSTEP_Out(2408) <= \<const0>\;
  LOCKSTEP_Out(2409) <= \<const0>\;
  LOCKSTEP_Out(2410) <= \<const0>\;
  LOCKSTEP_Out(2411) <= \<const0>\;
  LOCKSTEP_Out(2412) <= \<const0>\;
  LOCKSTEP_Out(2413) <= \<const0>\;
  LOCKSTEP_Out(2414) <= \<const0>\;
  LOCKSTEP_Out(2415) <= \<const0>\;
  LOCKSTEP_Out(2416) <= \<const0>\;
  LOCKSTEP_Out(2417) <= \<const0>\;
  LOCKSTEP_Out(2418) <= \<const0>\;
  LOCKSTEP_Out(2419) <= \<const0>\;
  LOCKSTEP_Out(2420) <= \<const0>\;
  LOCKSTEP_Out(2421) <= \<const0>\;
  LOCKSTEP_Out(2422) <= \<const0>\;
  LOCKSTEP_Out(2423) <= \<const0>\;
  LOCKSTEP_Out(2424) <= \<const0>\;
  LOCKSTEP_Out(2425) <= \<const0>\;
  LOCKSTEP_Out(2426) <= \<const0>\;
  LOCKSTEP_Out(2427) <= \<const0>\;
  LOCKSTEP_Out(2428) <= \<const0>\;
  LOCKSTEP_Out(2429) <= \<const0>\;
  LOCKSTEP_Out(2430) <= \<const0>\;
  LOCKSTEP_Out(2431) <= \<const0>\;
  LOCKSTEP_Out(2432) <= \<const0>\;
  LOCKSTEP_Out(2433) <= \<const0>\;
  LOCKSTEP_Out(2434) <= \<const0>\;
  LOCKSTEP_Out(2435) <= \<const0>\;
  LOCKSTEP_Out(2436) <= \<const0>\;
  LOCKSTEP_Out(2437) <= \<const0>\;
  LOCKSTEP_Out(2438) <= \<const0>\;
  LOCKSTEP_Out(2439) <= \<const0>\;
  LOCKSTEP_Out(2440) <= \<const0>\;
  LOCKSTEP_Out(2441) <= \<const0>\;
  LOCKSTEP_Out(2442) <= \<const0>\;
  LOCKSTEP_Out(2443) <= \<const0>\;
  LOCKSTEP_Out(2444) <= \<const0>\;
  LOCKSTEP_Out(2445) <= \<const0>\;
  LOCKSTEP_Out(2446) <= \<const0>\;
  LOCKSTEP_Out(2447) <= \<const0>\;
  LOCKSTEP_Out(2448) <= \<const0>\;
  LOCKSTEP_Out(2449) <= \<const0>\;
  LOCKSTEP_Out(2450) <= \<const0>\;
  LOCKSTEP_Out(2451) <= \<const0>\;
  LOCKSTEP_Out(2452) <= \<const0>\;
  LOCKSTEP_Out(2453) <= \<const0>\;
  LOCKSTEP_Out(2454) <= \<const0>\;
  LOCKSTEP_Out(2455) <= \<const0>\;
  LOCKSTEP_Out(2456) <= \<const0>\;
  LOCKSTEP_Out(2457) <= \<const0>\;
  LOCKSTEP_Out(2458) <= \<const0>\;
  LOCKSTEP_Out(2459) <= \<const0>\;
  LOCKSTEP_Out(2460) <= \<const0>\;
  LOCKSTEP_Out(2461) <= \<const0>\;
  LOCKSTEP_Out(2462) <= \<const0>\;
  LOCKSTEP_Out(2463) <= \<const0>\;
  LOCKSTEP_Out(2464) <= \<const0>\;
  LOCKSTEP_Out(2465) <= \<const0>\;
  LOCKSTEP_Out(2466) <= \<const0>\;
  LOCKSTEP_Out(2467) <= \<const0>\;
  LOCKSTEP_Out(2468) <= \<const0>\;
  LOCKSTEP_Out(2469) <= \<const0>\;
  LOCKSTEP_Out(2470) <= \<const0>\;
  LOCKSTEP_Out(2471) <= \<const0>\;
  LOCKSTEP_Out(2472) <= \<const0>\;
  LOCKSTEP_Out(2473) <= \<const0>\;
  LOCKSTEP_Out(2474) <= \<const0>\;
  LOCKSTEP_Out(2475) <= \<const0>\;
  LOCKSTEP_Out(2476) <= \<const0>\;
  LOCKSTEP_Out(2477) <= \<const0>\;
  LOCKSTEP_Out(2478) <= \<const0>\;
  LOCKSTEP_Out(2479) <= \<const0>\;
  LOCKSTEP_Out(2480) <= \<const0>\;
  LOCKSTEP_Out(2481) <= \<const0>\;
  LOCKSTEP_Out(2482) <= \<const0>\;
  LOCKSTEP_Out(2483) <= \<const0>\;
  LOCKSTEP_Out(2484) <= \<const0>\;
  LOCKSTEP_Out(2485) <= \<const0>\;
  LOCKSTEP_Out(2486) <= \<const0>\;
  LOCKSTEP_Out(2487) <= \<const0>\;
  LOCKSTEP_Out(2488) <= \<const0>\;
  LOCKSTEP_Out(2489) <= \<const0>\;
  LOCKSTEP_Out(2490) <= \<const0>\;
  LOCKSTEP_Out(2491) <= \<const0>\;
  LOCKSTEP_Out(2492) <= \<const0>\;
  LOCKSTEP_Out(2493) <= \<const0>\;
  LOCKSTEP_Out(2494) <= \<const0>\;
  LOCKSTEP_Out(2495) <= \<const0>\;
  LOCKSTEP_Out(2496) <= \<const0>\;
  LOCKSTEP_Out(2497) <= \<const0>\;
  LOCKSTEP_Out(2498) <= \<const0>\;
  LOCKSTEP_Out(2499) <= \<const0>\;
  LOCKSTEP_Out(2500) <= \<const0>\;
  LOCKSTEP_Out(2501) <= \<const0>\;
  LOCKSTEP_Out(2502) <= \<const0>\;
  LOCKSTEP_Out(2503) <= \<const0>\;
  LOCKSTEP_Out(2504) <= \<const0>\;
  LOCKSTEP_Out(2505) <= \<const0>\;
  LOCKSTEP_Out(2506) <= \<const0>\;
  LOCKSTEP_Out(2507) <= \<const0>\;
  LOCKSTEP_Out(2508) <= \<const0>\;
  LOCKSTEP_Out(2509) <= \<const0>\;
  LOCKSTEP_Out(2510) <= \<const0>\;
  LOCKSTEP_Out(2511) <= \<const0>\;
  LOCKSTEP_Out(2512) <= \<const0>\;
  LOCKSTEP_Out(2513) <= \<const0>\;
  LOCKSTEP_Out(2514) <= \<const0>\;
  LOCKSTEP_Out(2515) <= \<const0>\;
  LOCKSTEP_Out(2516) <= \<const0>\;
  LOCKSTEP_Out(2517) <= \<const0>\;
  LOCKSTEP_Out(2518) <= \<const0>\;
  LOCKSTEP_Out(2519) <= \<const0>\;
  LOCKSTEP_Out(2520) <= \<const0>\;
  LOCKSTEP_Out(2521) <= \<const0>\;
  LOCKSTEP_Out(2522) <= \<const0>\;
  LOCKSTEP_Out(2523) <= \<const0>\;
  LOCKSTEP_Out(2524) <= \<const0>\;
  LOCKSTEP_Out(2525) <= \<const0>\;
  LOCKSTEP_Out(2526) <= \<const0>\;
  LOCKSTEP_Out(2527) <= \<const0>\;
  LOCKSTEP_Out(2528) <= \<const0>\;
  LOCKSTEP_Out(2529) <= \<const0>\;
  LOCKSTEP_Out(2530) <= \<const0>\;
  LOCKSTEP_Out(2531) <= \<const0>\;
  LOCKSTEP_Out(2532) <= \<const0>\;
  LOCKSTEP_Out(2533) <= \<const0>\;
  LOCKSTEP_Out(2534) <= \<const0>\;
  LOCKSTEP_Out(2535) <= \<const0>\;
  LOCKSTEP_Out(2536) <= \<const0>\;
  LOCKSTEP_Out(2537) <= \<const0>\;
  LOCKSTEP_Out(2538) <= \<const0>\;
  LOCKSTEP_Out(2539) <= \<const0>\;
  LOCKSTEP_Out(2540) <= \<const0>\;
  LOCKSTEP_Out(2541) <= \<const0>\;
  LOCKSTEP_Out(2542) <= \<const0>\;
  LOCKSTEP_Out(2543) <= \<const0>\;
  LOCKSTEP_Out(2544) <= \<const0>\;
  LOCKSTEP_Out(2545) <= \<const0>\;
  LOCKSTEP_Out(2546) <= \<const0>\;
  LOCKSTEP_Out(2547) <= \<const0>\;
  LOCKSTEP_Out(2548) <= \<const0>\;
  LOCKSTEP_Out(2549) <= \<const0>\;
  LOCKSTEP_Out(2550) <= \<const0>\;
  LOCKSTEP_Out(2551) <= \<const0>\;
  LOCKSTEP_Out(2552) <= \<const0>\;
  LOCKSTEP_Out(2553) <= \<const0>\;
  LOCKSTEP_Out(2554) <= \<const0>\;
  LOCKSTEP_Out(2555) <= \<const0>\;
  LOCKSTEP_Out(2556) <= \<const0>\;
  LOCKSTEP_Out(2557) <= \<const0>\;
  LOCKSTEP_Out(2558) <= \<const0>\;
  LOCKSTEP_Out(2559) <= \<const0>\;
  LOCKSTEP_Out(2560) <= \<const0>\;
  LOCKSTEP_Out(2561) <= \<const0>\;
  LOCKSTEP_Out(2562) <= \<const0>\;
  LOCKSTEP_Out(2563) <= \<const0>\;
  LOCKSTEP_Out(2564) <= \<const0>\;
  LOCKSTEP_Out(2565) <= \<const0>\;
  LOCKSTEP_Out(2566) <= \<const0>\;
  LOCKSTEP_Out(2567) <= \<const0>\;
  LOCKSTEP_Out(2568) <= \<const0>\;
  LOCKSTEP_Out(2569) <= \<const0>\;
  LOCKSTEP_Out(2570) <= \<const0>\;
  LOCKSTEP_Out(2571) <= \<const0>\;
  LOCKSTEP_Out(2572) <= \<const0>\;
  LOCKSTEP_Out(2573) <= \<const0>\;
  LOCKSTEP_Out(2574) <= \<const0>\;
  LOCKSTEP_Out(2575) <= \<const0>\;
  LOCKSTEP_Out(2576) <= \<const0>\;
  LOCKSTEP_Out(2577) <= \<const0>\;
  LOCKSTEP_Out(2578) <= \<const0>\;
  LOCKSTEP_Out(2579) <= \<const0>\;
  LOCKSTEP_Out(2580) <= \<const0>\;
  LOCKSTEP_Out(2581) <= \<const0>\;
  LOCKSTEP_Out(2582) <= \<const0>\;
  LOCKSTEP_Out(2583) <= \<const0>\;
  LOCKSTEP_Out(2584) <= \<const0>\;
  LOCKSTEP_Out(2585) <= \<const0>\;
  LOCKSTEP_Out(2586) <= \<const0>\;
  LOCKSTEP_Out(2587) <= \<const0>\;
  LOCKSTEP_Out(2588) <= \<const0>\;
  LOCKSTEP_Out(2589) <= \<const0>\;
  LOCKSTEP_Out(2590) <= \<const0>\;
  LOCKSTEP_Out(2591) <= \<const0>\;
  LOCKSTEP_Out(2592) <= \<const0>\;
  LOCKSTEP_Out(2593) <= \<const0>\;
  LOCKSTEP_Out(2594) <= \<const0>\;
  LOCKSTEP_Out(2595) <= \<const0>\;
  LOCKSTEP_Out(2596) <= \<const0>\;
  LOCKSTEP_Out(2597) <= \<const0>\;
  LOCKSTEP_Out(2598) <= \<const0>\;
  LOCKSTEP_Out(2599) <= \<const0>\;
  LOCKSTEP_Out(2600) <= \<const0>\;
  LOCKSTEP_Out(2601) <= \<const0>\;
  LOCKSTEP_Out(2602) <= \<const0>\;
  LOCKSTEP_Out(2603) <= \<const0>\;
  LOCKSTEP_Out(2604) <= \<const0>\;
  LOCKSTEP_Out(2605) <= \<const0>\;
  LOCKSTEP_Out(2606) <= \<const0>\;
  LOCKSTEP_Out(2607) <= \<const0>\;
  LOCKSTEP_Out(2608) <= \<const0>\;
  LOCKSTEP_Out(2609) <= \<const0>\;
  LOCKSTEP_Out(2610) <= \<const0>\;
  LOCKSTEP_Out(2611) <= \<const0>\;
  LOCKSTEP_Out(2612) <= \<const0>\;
  LOCKSTEP_Out(2613) <= \<const0>\;
  LOCKSTEP_Out(2614) <= \<const0>\;
  LOCKSTEP_Out(2615) <= \<const0>\;
  LOCKSTEP_Out(2616) <= \<const0>\;
  LOCKSTEP_Out(2617) <= \<const0>\;
  LOCKSTEP_Out(2618) <= \<const0>\;
  LOCKSTEP_Out(2619) <= \<const0>\;
  LOCKSTEP_Out(2620) <= \<const0>\;
  LOCKSTEP_Out(2621) <= \<const0>\;
  LOCKSTEP_Out(2622) <= \<const0>\;
  LOCKSTEP_Out(2623) <= \<const0>\;
  LOCKSTEP_Out(2624) <= \<const0>\;
  LOCKSTEP_Out(2625) <= \<const0>\;
  LOCKSTEP_Out(2626) <= \<const0>\;
  LOCKSTEP_Out(2627) <= \<const0>\;
  LOCKSTEP_Out(2628) <= \<const0>\;
  LOCKSTEP_Out(2629) <= \<const0>\;
  LOCKSTEP_Out(2630) <= \<const0>\;
  LOCKSTEP_Out(2631) <= \<const0>\;
  LOCKSTEP_Out(2632) <= \<const0>\;
  LOCKSTEP_Out(2633) <= \<const0>\;
  LOCKSTEP_Out(2634) <= \<const0>\;
  LOCKSTEP_Out(2635) <= \<const0>\;
  LOCKSTEP_Out(2636) <= \<const0>\;
  LOCKSTEP_Out(2637) <= \<const0>\;
  LOCKSTEP_Out(2638) <= \<const0>\;
  LOCKSTEP_Out(2639) <= \<const0>\;
  LOCKSTEP_Out(2640) <= \<const0>\;
  LOCKSTEP_Out(2641) <= \<const0>\;
  LOCKSTEP_Out(2642) <= \<const0>\;
  LOCKSTEP_Out(2643) <= \<const0>\;
  LOCKSTEP_Out(2644) <= \<const0>\;
  LOCKSTEP_Out(2645) <= \<const0>\;
  LOCKSTEP_Out(2646) <= \<const0>\;
  LOCKSTEP_Out(2647) <= \<const0>\;
  LOCKSTEP_Out(2648) <= \<const0>\;
  LOCKSTEP_Out(2649) <= \<const0>\;
  LOCKSTEP_Out(2650) <= \<const0>\;
  LOCKSTEP_Out(2651) <= \<const0>\;
  LOCKSTEP_Out(2652) <= \<const0>\;
  LOCKSTEP_Out(2653) <= \<const0>\;
  LOCKSTEP_Out(2654) <= \<const0>\;
  LOCKSTEP_Out(2655) <= \<const0>\;
  LOCKSTEP_Out(2656) <= \<const0>\;
  LOCKSTEP_Out(2657) <= \<const0>\;
  LOCKSTEP_Out(2658) <= \<const0>\;
  LOCKSTEP_Out(2659) <= \<const0>\;
  LOCKSTEP_Out(2660) <= \<const0>\;
  LOCKSTEP_Out(2661) <= \<const0>\;
  LOCKSTEP_Out(2662) <= \<const0>\;
  LOCKSTEP_Out(2663) <= \<const0>\;
  LOCKSTEP_Out(2664) <= \<const0>\;
  LOCKSTEP_Out(2665) <= \<const0>\;
  LOCKSTEP_Out(2666) <= \<const0>\;
  LOCKSTEP_Out(2667) <= \<const0>\;
  LOCKSTEP_Out(2668) <= \<const0>\;
  LOCKSTEP_Out(2669) <= \<const0>\;
  LOCKSTEP_Out(2670) <= \<const0>\;
  LOCKSTEP_Out(2671) <= \<const0>\;
  LOCKSTEP_Out(2672) <= \<const0>\;
  LOCKSTEP_Out(2673) <= \<const0>\;
  LOCKSTEP_Out(2674) <= \<const0>\;
  LOCKSTEP_Out(2675) <= \<const0>\;
  LOCKSTEP_Out(2676) <= \<const0>\;
  LOCKSTEP_Out(2677) <= \<const0>\;
  LOCKSTEP_Out(2678) <= \<const0>\;
  LOCKSTEP_Out(2679) <= \<const0>\;
  LOCKSTEP_Out(2680) <= \<const0>\;
  LOCKSTEP_Out(2681) <= \<const0>\;
  LOCKSTEP_Out(2682) <= \<const0>\;
  LOCKSTEP_Out(2683) <= \<const0>\;
  LOCKSTEP_Out(2684) <= \<const0>\;
  LOCKSTEP_Out(2685) <= \<const0>\;
  LOCKSTEP_Out(2686) <= \<const0>\;
  LOCKSTEP_Out(2687) <= \<const0>\;
  LOCKSTEP_Out(2688) <= \<const0>\;
  LOCKSTEP_Out(2689) <= \<const0>\;
  LOCKSTEP_Out(2690) <= \<const0>\;
  LOCKSTEP_Out(2691) <= \<const0>\;
  LOCKSTEP_Out(2692) <= \<const0>\;
  LOCKSTEP_Out(2693) <= \<const0>\;
  LOCKSTEP_Out(2694) <= \<const0>\;
  LOCKSTEP_Out(2695) <= \<const0>\;
  LOCKSTEP_Out(2696) <= \<const0>\;
  LOCKSTEP_Out(2697 to 2700) <= \^lockstep_out\(2697 to 2700);
  LOCKSTEP_Out(2701) <= \<const0>\;
  LOCKSTEP_Out(2702) <= \<const0>\;
  LOCKSTEP_Out(2703) <= \<const0>\;
  LOCKSTEP_Out(2704) <= \<const0>\;
  LOCKSTEP_Out(2705) <= \<const0>\;
  LOCKSTEP_Out(2706) <= \<const0>\;
  LOCKSTEP_Out(2707) <= \<const0>\;
  LOCKSTEP_Out(2708) <= \<const0>\;
  LOCKSTEP_Out(2709) <= \<const0>\;
  LOCKSTEP_Out(2710) <= \<const0>\;
  LOCKSTEP_Out(2711) <= \<const0>\;
  LOCKSTEP_Out(2712) <= \<const0>\;
  LOCKSTEP_Out(2713) <= \<const0>\;
  LOCKSTEP_Out(2714) <= \<const0>\;
  LOCKSTEP_Out(2715) <= \<const0>\;
  LOCKSTEP_Out(2716) <= \<const0>\;
  LOCKSTEP_Out(2717) <= \<const0>\;
  LOCKSTEP_Out(2718) <= \<const0>\;
  LOCKSTEP_Out(2719) <= \<const0>\;
  LOCKSTEP_Out(2720) <= \<const0>\;
  LOCKSTEP_Out(2721) <= \<const0>\;
  LOCKSTEP_Out(2722) <= \<const0>\;
  LOCKSTEP_Out(2723) <= \<const0>\;
  LOCKSTEP_Out(2724) <= \<const0>\;
  LOCKSTEP_Out(2725) <= \<const0>\;
  LOCKSTEP_Out(2726) <= \<const0>\;
  LOCKSTEP_Out(2727) <= \<const0>\;
  LOCKSTEP_Out(2728) <= \<const0>\;
  LOCKSTEP_Out(2729) <= \<const0>\;
  LOCKSTEP_Out(2730) <= \<const0>\;
  LOCKSTEP_Out(2731) <= \<const0>\;
  LOCKSTEP_Out(2732) <= \<const0>\;
  LOCKSTEP_Out(2733) <= \<const0>\;
  LOCKSTEP_Out(2734) <= \<const0>\;
  LOCKSTEP_Out(2735) <= \<const0>\;
  LOCKSTEP_Out(2736) <= \<const0>\;
  LOCKSTEP_Out(2737) <= \<const0>\;
  LOCKSTEP_Out(2738) <= \<const0>\;
  LOCKSTEP_Out(2739) <= \<const0>\;
  LOCKSTEP_Out(2740) <= \<const0>\;
  LOCKSTEP_Out(2741) <= \<const0>\;
  LOCKSTEP_Out(2742) <= \<const0>\;
  LOCKSTEP_Out(2743) <= \<const0>\;
  LOCKSTEP_Out(2744) <= \<const0>\;
  LOCKSTEP_Out(2745) <= \<const0>\;
  LOCKSTEP_Out(2746) <= \<const0>\;
  LOCKSTEP_Out(2747) <= \<const0>\;
  LOCKSTEP_Out(2748) <= \<const0>\;
  LOCKSTEP_Out(2749) <= \<const0>\;
  LOCKSTEP_Out(2750) <= \<const0>\;
  LOCKSTEP_Out(2751) <= \<const0>\;
  LOCKSTEP_Out(2752) <= \<const0>\;
  LOCKSTEP_Out(2753) <= \<const0>\;
  LOCKSTEP_Out(2754) <= \<const0>\;
  LOCKSTEP_Out(2755) <= \<const0>\;
  LOCKSTEP_Out(2756) <= \<const0>\;
  LOCKSTEP_Out(2757) <= \<const0>\;
  LOCKSTEP_Out(2758) <= \<const0>\;
  LOCKSTEP_Out(2759) <= \<const0>\;
  LOCKSTEP_Out(2760) <= \<const0>\;
  LOCKSTEP_Out(2761 to 2762) <= \^lockstep_out\(2761 to 2762);
  LOCKSTEP_Out(2763) <= \<const0>\;
  LOCKSTEP_Out(2764) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2765) <= \<const0>\;
  LOCKSTEP_Out(2766) <= \<const0>\;
  LOCKSTEP_Out(2767 to 2796) <= \^lockstep_out\(2767 to 2796);
  LOCKSTEP_Out(2797) <= \<const0>\;
  LOCKSTEP_Out(2798) <= \<const0>\;
  LOCKSTEP_Out(2799) <= \<const0>\;
  LOCKSTEP_Out(2800) <= \<const0>\;
  LOCKSTEP_Out(2801) <= \<const0>\;
  LOCKSTEP_Out(2802) <= \<const0>\;
  LOCKSTEP_Out(2803) <= \<const0>\;
  LOCKSTEP_Out(2804) <= \<const0>\;
  LOCKSTEP_Out(2805) <= \<const0>\;
  LOCKSTEP_Out(2806) <= \<const0>\;
  LOCKSTEP_Out(2807) <= \<const0>\;
  LOCKSTEP_Out(2808) <= \<const0>\;
  LOCKSTEP_Out(2809) <= \<const0>\;
  LOCKSTEP_Out(2810) <= \<const0>\;
  LOCKSTEP_Out(2811) <= \<const0>\;
  LOCKSTEP_Out(2812) <= \<const0>\;
  LOCKSTEP_Out(2813) <= \<const0>\;
  LOCKSTEP_Out(2814) <= \<const0>\;
  LOCKSTEP_Out(2815) <= \<const0>\;
  LOCKSTEP_Out(2816) <= \<const0>\;
  LOCKSTEP_Out(2817) <= \<const0>\;
  LOCKSTEP_Out(2818) <= \<const0>\;
  LOCKSTEP_Out(2819) <= \<const0>\;
  LOCKSTEP_Out(2820) <= \<const0>\;
  LOCKSTEP_Out(2821) <= \<const0>\;
  LOCKSTEP_Out(2822) <= \<const0>\;
  LOCKSTEP_Out(2823) <= \<const0>\;
  LOCKSTEP_Out(2824) <= \<const0>\;
  LOCKSTEP_Out(2825) <= \<const0>\;
  LOCKSTEP_Out(2826) <= \<const0>\;
  LOCKSTEP_Out(2827) <= \<const0>\;
  LOCKSTEP_Out(2828) <= \<const0>\;
  LOCKSTEP_Out(2829) <= \<const0>\;
  LOCKSTEP_Out(2830) <= \<const0>\;
  LOCKSTEP_Out(2831) <= \<const0>\;
  LOCKSTEP_Out(2832) <= \<const0>\;
  LOCKSTEP_Out(2833) <= \<const0>\;
  LOCKSTEP_Out(2834) <= \<const0>\;
  LOCKSTEP_Out(2835) <= \<const0>\;
  LOCKSTEP_Out(2836) <= \<const0>\;
  LOCKSTEP_Out(2837) <= \^lockstep_out\(2838);
  LOCKSTEP_Out(2838) <= \^lockstep_out\(2838);
  LOCKSTEP_Out(2839) <= \<const0>\;
  LOCKSTEP_Out(2840) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2841) <= \<const0>\;
  LOCKSTEP_Out(2842) <= \^lockstep_out\(2842);
  LOCKSTEP_Out(2843) <= \<const0>\;
  LOCKSTEP_Out(2844) <= \<const0>\;
  LOCKSTEP_Out(2845) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2846) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2847) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2848) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2849) <= \<const0>\;
  LOCKSTEP_Out(2850) <= \<const0>\;
  LOCKSTEP_Out(2851) <= \<const0>\;
  LOCKSTEP_Out(2852) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2853) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2854) <= \<const0>\;
  LOCKSTEP_Out(2855) <= \<const0>\;
  LOCKSTEP_Out(2856) <= \^lockstep_out\(2856);
  LOCKSTEP_Out(2857) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2858) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2859) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2860) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2861) <= \^lockstep_out\(2846);
  LOCKSTEP_Out(2862) <= \<const0>\;
  LOCKSTEP_Out(2863) <= \<const0>\;
  LOCKSTEP_Out(2864) <= \<const0>\;
  LOCKSTEP_Out(2865) <= \<const0>\;
  LOCKSTEP_Out(2866) <= \<const0>\;
  LOCKSTEP_Out(2867) <= \<const0>\;
  LOCKSTEP_Out(2868) <= \<const0>\;
  LOCKSTEP_Out(2869) <= \<const0>\;
  LOCKSTEP_Out(2870) <= \^lockstep_out\(542);
  LOCKSTEP_Out(2871) <= \<const0>\;
  LOCKSTEP_Out(2872) <= \<const0>\;
  LOCKSTEP_Out(2873) <= \<const0>\;
  LOCKSTEP_Out(2874) <= \<const0>\;
  LOCKSTEP_Out(2875) <= \<const0>\;
  LOCKSTEP_Out(2876) <= \<const0>\;
  LOCKSTEP_Out(2877) <= \<const0>\;
  LOCKSTEP_Out(2878) <= \<const0>\;
  LOCKSTEP_Out(2879) <= \<const0>\;
  LOCKSTEP_Out(2880) <= \<const0>\;
  LOCKSTEP_Out(2881 to 2945) <= \^lockstep_out\(2881 to 2945);
  LOCKSTEP_Out(2946) <= \<const0>\;
  LOCKSTEP_Out(2947) <= \<const0>\;
  LOCKSTEP_Out(2948) <= \<const0>\;
  LOCKSTEP_Out(2949) <= \<const0>\;
  LOCKSTEP_Out(2950) <= \<const0>\;
  LOCKSTEP_Out(2951) <= \<const0>\;
  LOCKSTEP_Out(2952) <= \<const0>\;
  LOCKSTEP_Out(2953) <= \<const0>\;
  LOCKSTEP_Out(2954) <= \<const0>\;
  LOCKSTEP_Out(2955) <= \<const0>\;
  LOCKSTEP_Out(2956) <= \<const0>\;
  LOCKSTEP_Out(2957) <= \<const0>\;
  LOCKSTEP_Out(2958) <= \<const0>\;
  LOCKSTEP_Out(2959) <= \<const0>\;
  LOCKSTEP_Out(2960) <= \<const0>\;
  LOCKSTEP_Out(2961) <= \<const0>\;
  LOCKSTEP_Out(2962) <= \<const0>\;
  LOCKSTEP_Out(2963) <= \<const0>\;
  LOCKSTEP_Out(2964) <= \<const0>\;
  LOCKSTEP_Out(2965) <= \<const0>\;
  LOCKSTEP_Out(2966) <= \<const0>\;
  LOCKSTEP_Out(2967) <= \<const0>\;
  LOCKSTEP_Out(2968) <= \<const0>\;
  LOCKSTEP_Out(2969) <= \<const0>\;
  LOCKSTEP_Out(2970) <= \<const0>\;
  LOCKSTEP_Out(2971) <= \<const0>\;
  LOCKSTEP_Out(2972) <= \<const0>\;
  LOCKSTEP_Out(2973) <= \<const0>\;
  LOCKSTEP_Out(2974) <= \<const0>\;
  LOCKSTEP_Out(2975) <= \<const0>\;
  LOCKSTEP_Out(2976) <= \<const0>\;
  LOCKSTEP_Out(2977) <= \<const0>\;
  LOCKSTEP_Out(2978 to 2983) <= \^lockstep_out\(2978 to 2983);
  LOCKSTEP_Out(2984) <= \<const0>\;
  LOCKSTEP_Out(2985) <= \<const0>\;
  LOCKSTEP_Out(2986) <= \<const0>\;
  LOCKSTEP_Out(2987) <= \<const0>\;
  LOCKSTEP_Out(2988) <= \<const0>\;
  LOCKSTEP_Out(2989) <= \<const0>\;
  LOCKSTEP_Out(2990) <= \<const0>\;
  LOCKSTEP_Out(2991) <= \^lockstep_out\(2991);
  LOCKSTEP_Out(2992) <= \<const0>\;
  LOCKSTEP_Out(2993) <= \^lockstep_out\(2993);
  LOCKSTEP_Out(2994) <= \<const0>\;
  LOCKSTEP_Out(2995 to 2997) <= \^lockstep_out\(2995 to 2997);
  LOCKSTEP_Out(2998) <= \<const0>\;
  LOCKSTEP_Out(2999) <= \<const0>\;
  LOCKSTEP_Out(3000) <= \<const0>\;
  LOCKSTEP_Out(3001) <= \<const0>\;
  LOCKSTEP_Out(3002) <= \<const0>\;
  LOCKSTEP_Out(3003) <= \<const0>\;
  LOCKSTEP_Out(3004) <= \<const0>\;
  LOCKSTEP_Out(3005) <= \<const0>\;
  LOCKSTEP_Out(3006) <= \<const0>\;
  LOCKSTEP_Out(3007 to 3038) <= \^lockstep_out\(3007 to 3038);
  LOCKSTEP_Out(3039) <= \<const0>\;
  LOCKSTEP_Out(3040) <= \<const0>\;
  LOCKSTEP_Out(3041) <= \<const0>\;
  LOCKSTEP_Out(3042) <= \<const0>\;
  LOCKSTEP_Out(3043) <= \<const0>\;
  LOCKSTEP_Out(3044) <= \<const0>\;
  LOCKSTEP_Out(3045) <= \<const0>\;
  LOCKSTEP_Out(3046) <= \<const0>\;
  LOCKSTEP_Out(3047) <= \<const0>\;
  LOCKSTEP_Out(3048) <= \<const0>\;
  LOCKSTEP_Out(3049) <= \<const0>\;
  LOCKSTEP_Out(3050) <= \<const0>\;
  LOCKSTEP_Out(3051) <= \<const0>\;
  LOCKSTEP_Out(3052) <= \<const0>\;
  LOCKSTEP_Out(3053) <= \<const0>\;
  LOCKSTEP_Out(3054) <= \<const0>\;
  LOCKSTEP_Out(3055) <= \<const0>\;
  LOCKSTEP_Out(3056) <= \<const0>\;
  LOCKSTEP_Out(3057) <= \<const0>\;
  LOCKSTEP_Out(3058) <= \<const0>\;
  LOCKSTEP_Out(3059) <= \<const0>\;
  LOCKSTEP_Out(3060) <= \<const0>\;
  LOCKSTEP_Out(3061) <= \<const0>\;
  LOCKSTEP_Out(3062) <= \<const0>\;
  LOCKSTEP_Out(3063) <= \<const0>\;
  LOCKSTEP_Out(3064) <= \<const0>\;
  LOCKSTEP_Out(3065) <= \<const0>\;
  LOCKSTEP_Out(3066) <= \<const0>\;
  LOCKSTEP_Out(3067) <= \<const0>\;
  LOCKSTEP_Out(3068) <= \<const0>\;
  LOCKSTEP_Out(3069) <= \<const0>\;
  LOCKSTEP_Out(3070) <= \<const0>\;
  LOCKSTEP_Out(3071) <= \<const0>\;
  LOCKSTEP_Out(3072) <= \<const0>\;
  LOCKSTEP_Out(3073) <= \<const0>\;
  LOCKSTEP_Out(3074) <= \<const0>\;
  LOCKSTEP_Out(3075) <= \<const0>\;
  LOCKSTEP_Out(3076) <= \<const0>\;
  LOCKSTEP_Out(3077 to 3110) <= \^lockstep_out\(3077 to 3110);
  LOCKSTEP_Out(3111) <= \<const0>\;
  LOCKSTEP_Out(3112) <= \<const0>\;
  LOCKSTEP_Out(3113) <= \<const0>\;
  LOCKSTEP_Out(3114) <= \<const0>\;
  LOCKSTEP_Out(3115) <= \<const0>\;
  LOCKSTEP_Out(3116) <= \<const0>\;
  LOCKSTEP_Out(3117) <= \<const0>\;
  LOCKSTEP_Out(3118) <= \<const0>\;
  LOCKSTEP_Out(3119) <= \<const0>\;
  LOCKSTEP_Out(3120) <= \<const0>\;
  LOCKSTEP_Out(3121) <= \<const0>\;
  LOCKSTEP_Out(3122) <= \<const0>\;
  LOCKSTEP_Out(3123) <= \<const0>\;
  LOCKSTEP_Out(3124) <= \<const0>\;
  LOCKSTEP_Out(3125) <= \<const0>\;
  LOCKSTEP_Out(3126) <= \<const0>\;
  LOCKSTEP_Out(3127) <= \<const0>\;
  LOCKSTEP_Out(3128) <= \<const0>\;
  LOCKSTEP_Out(3129) <= \<const0>\;
  LOCKSTEP_Out(3130) <= \<const0>\;
  LOCKSTEP_Out(3131) <= \<const0>\;
  LOCKSTEP_Out(3132) <= \<const0>\;
  LOCKSTEP_Out(3133) <= \<const0>\;
  LOCKSTEP_Out(3134) <= \<const0>\;
  LOCKSTEP_Out(3135) <= \<const0>\;
  LOCKSTEP_Out(3136) <= \<const0>\;
  LOCKSTEP_Out(3137) <= \<const0>\;
  LOCKSTEP_Out(3138) <= \<const0>\;
  LOCKSTEP_Out(3139) <= \<const0>\;
  LOCKSTEP_Out(3140) <= \<const0>\;
  LOCKSTEP_Out(3141) <= \<const0>\;
  LOCKSTEP_Out(3142) <= \<const0>\;
  LOCKSTEP_Out(3143 to 3174) <= \^lockstep_out\(3143 to 3174);
  LOCKSTEP_Out(3175) <= \<const0>\;
  LOCKSTEP_Out(3176) <= \<const0>\;
  LOCKSTEP_Out(3177) <= \<const0>\;
  LOCKSTEP_Out(3178) <= \<const0>\;
  LOCKSTEP_Out(3179) <= \<const0>\;
  LOCKSTEP_Out(3180) <= \<const0>\;
  LOCKSTEP_Out(3181) <= \<const0>\;
  LOCKSTEP_Out(3182) <= \<const0>\;
  LOCKSTEP_Out(3183) <= \<const0>\;
  LOCKSTEP_Out(3184) <= \<const0>\;
  LOCKSTEP_Out(3185) <= \<const0>\;
  LOCKSTEP_Out(3186) <= \<const0>\;
  LOCKSTEP_Out(3187) <= \<const0>\;
  LOCKSTEP_Out(3188) <= \<const0>\;
  LOCKSTEP_Out(3189) <= \<const0>\;
  LOCKSTEP_Out(3190) <= \<const0>\;
  LOCKSTEP_Out(3191) <= \<const0>\;
  LOCKSTEP_Out(3192) <= \<const0>\;
  LOCKSTEP_Out(3193) <= \<const0>\;
  LOCKSTEP_Out(3194) <= \<const0>\;
  LOCKSTEP_Out(3195) <= \<const0>\;
  LOCKSTEP_Out(3196) <= \<const0>\;
  LOCKSTEP_Out(3197) <= \<const0>\;
  LOCKSTEP_Out(3198) <= \<const0>\;
  LOCKSTEP_Out(3199) <= \<const0>\;
  LOCKSTEP_Out(3200) <= \<const0>\;
  LOCKSTEP_Out(3201) <= \<const0>\;
  LOCKSTEP_Out(3202) <= \<const0>\;
  LOCKSTEP_Out(3203) <= \<const0>\;
  LOCKSTEP_Out(3204) <= \<const0>\;
  LOCKSTEP_Out(3205) <= \<const0>\;
  LOCKSTEP_Out(3206) <= \<const0>\;
  LOCKSTEP_Out(3207 to 3210) <= \^lockstep_out\(3207 to 3210);
  LOCKSTEP_Out(3211) <= \<const0>\;
  LOCKSTEP_Out(3212) <= \<const0>\;
  LOCKSTEP_Out(3213) <= \<const0>\;
  LOCKSTEP_Out(3214) <= \<const0>\;
  LOCKSTEP_Out(3215 to 3225) <= \^lockstep_out\(3215 to 3225);
  LOCKSTEP_Out(3226) <= \^lockstep_out\(542);
  LOCKSTEP_Out(3227) <= \^lockstep_out\(542);
  LOCKSTEP_Out(3228) <= \^lockstep_out\(3228);
  LOCKSTEP_Out(3229) <= \<const0>\;
  LOCKSTEP_Out(3230) <= \<const0>\;
  LOCKSTEP_Out(3231) <= \<const0>\;
  LOCKSTEP_Out(3232) <= \<const0>\;
  LOCKSTEP_Out(3233) <= \<const0>\;
  LOCKSTEP_Out(3234) <= \<const0>\;
  LOCKSTEP_Out(3235) <= \<const0>\;
  LOCKSTEP_Out(3236) <= \<const0>\;
  LOCKSTEP_Out(3237) <= \<const0>\;
  LOCKSTEP_Out(3238) <= \<const0>\;
  LOCKSTEP_Out(3239) <= \<const0>\;
  LOCKSTEP_Out(3240) <= \<const0>\;
  LOCKSTEP_Out(3241) <= \<const0>\;
  LOCKSTEP_Out(3242) <= \<const0>\;
  LOCKSTEP_Out(3243) <= \<const0>\;
  LOCKSTEP_Out(3244) <= \<const0>\;
  LOCKSTEP_Out(3245) <= \<const0>\;
  LOCKSTEP_Out(3246) <= \<const0>\;
  LOCKSTEP_Out(3247) <= \<const0>\;
  LOCKSTEP_Out(3248) <= \<const0>\;
  LOCKSTEP_Out(3249) <= \<const0>\;
  LOCKSTEP_Out(3250) <= \<const0>\;
  LOCKSTEP_Out(3251) <= \<const0>\;
  LOCKSTEP_Out(3252) <= \<const0>\;
  LOCKSTEP_Out(3253) <= \<const0>\;
  LOCKSTEP_Out(3254) <= \<const0>\;
  LOCKSTEP_Out(3255) <= \<const0>\;
  LOCKSTEP_Out(3256) <= \<const0>\;
  LOCKSTEP_Out(3257) <= \<const0>\;
  LOCKSTEP_Out(3258) <= \<const0>\;
  LOCKSTEP_Out(3259) <= \<const0>\;
  LOCKSTEP_Out(3260) <= \<const0>\;
  LOCKSTEP_Out(3261) <= \<const0>\;
  LOCKSTEP_Out(3262) <= \<const0>\;
  LOCKSTEP_Out(3263) <= \<const0>\;
  LOCKSTEP_Out(3264) <= \<const0>\;
  LOCKSTEP_Out(3265) <= \<const0>\;
  LOCKSTEP_Out(3266) <= \<const0>\;
  LOCKSTEP_Out(3267) <= \<const0>\;
  LOCKSTEP_Out(3268) <= \<const0>\;
  LOCKSTEP_Out(3269) <= \<const0>\;
  LOCKSTEP_Out(3270) <= \<const0>\;
  LOCKSTEP_Out(3271) <= \<const0>\;
  LOCKSTEP_Out(3272) <= \<const0>\;
  LOCKSTEP_Out(3273) <= \<const0>\;
  LOCKSTEP_Out(3274) <= \<const0>\;
  LOCKSTEP_Out(3275) <= \<const0>\;
  LOCKSTEP_Out(3276) <= \<const0>\;
  LOCKSTEP_Out(3277) <= \<const0>\;
  LOCKSTEP_Out(3278) <= \<const0>\;
  LOCKSTEP_Out(3279) <= \<const0>\;
  LOCKSTEP_Out(3280) <= \<const0>\;
  LOCKSTEP_Out(3281) <= \<const0>\;
  LOCKSTEP_Out(3282) <= \<const0>\;
  LOCKSTEP_Out(3283) <= \<const0>\;
  LOCKSTEP_Out(3284) <= \<const0>\;
  LOCKSTEP_Out(3285) <= \<const0>\;
  LOCKSTEP_Out(3286) <= \<const0>\;
  LOCKSTEP_Out(3287) <= \<const0>\;
  LOCKSTEP_Out(3288) <= \<const0>\;
  LOCKSTEP_Out(3289) <= \<const0>\;
  LOCKSTEP_Out(3290) <= \<const0>\;
  LOCKSTEP_Out(3291) <= \<const0>\;
  LOCKSTEP_Out(3292) <= \<const0>\;
  LOCKSTEP_Out(3293) <= \<const0>\;
  LOCKSTEP_Out(3294) <= \<const0>\;
  LOCKSTEP_Out(3295) <= \<const0>\;
  LOCKSTEP_Out(3296) <= \<const0>\;
  LOCKSTEP_Out(3297) <= \<const0>\;
  LOCKSTEP_Out(3298) <= \<const0>\;
  LOCKSTEP_Out(3299) <= \<const0>\;
  LOCKSTEP_Out(3300) <= \<const0>\;
  LOCKSTEP_Out(3301) <= \<const0>\;
  LOCKSTEP_Out(3302) <= \<const0>\;
  LOCKSTEP_Out(3303) <= \<const0>\;
  LOCKSTEP_Out(3304) <= \<const0>\;
  LOCKSTEP_Out(3305) <= \<const0>\;
  LOCKSTEP_Out(3306) <= \<const0>\;
  LOCKSTEP_Out(3307) <= \<const0>\;
  LOCKSTEP_Out(3308) <= \<const0>\;
  LOCKSTEP_Out(3309) <= \<const0>\;
  LOCKSTEP_Out(3310) <= \<const0>\;
  LOCKSTEP_Out(3311) <= \<const0>\;
  LOCKSTEP_Out(3312) <= \<const0>\;
  LOCKSTEP_Out(3313) <= \<const0>\;
  LOCKSTEP_Out(3314) <= \<const0>\;
  LOCKSTEP_Out(3315) <= \<const0>\;
  LOCKSTEP_Out(3316) <= \<const0>\;
  LOCKSTEP_Out(3317) <= \<const0>\;
  LOCKSTEP_Out(3318) <= \<const0>\;
  LOCKSTEP_Out(3319) <= \<const0>\;
  LOCKSTEP_Out(3320) <= \<const0>\;
  LOCKSTEP_Out(3321) <= \<const0>\;
  LOCKSTEP_Out(3322) <= \<const0>\;
  LOCKSTEP_Out(3323) <= \<const0>\;
  LOCKSTEP_Out(3324) <= \<const0>\;
  LOCKSTEP_Out(3325) <= \<const0>\;
  LOCKSTEP_Out(3326) <= \<const0>\;
  LOCKSTEP_Out(3327) <= \<const0>\;
  LOCKSTEP_Out(3328) <= \<const0>\;
  LOCKSTEP_Out(3329) <= \<const0>\;
  LOCKSTEP_Out(3330) <= \<const0>\;
  LOCKSTEP_Out(3331) <= \<const0>\;
  LOCKSTEP_Out(3332) <= \<const0>\;
  LOCKSTEP_Out(3333) <= \<const0>\;
  LOCKSTEP_Out(3334) <= \<const0>\;
  LOCKSTEP_Out(3335) <= \<const0>\;
  LOCKSTEP_Out(3336) <= \<const0>\;
  LOCKSTEP_Out(3337) <= \<const0>\;
  LOCKSTEP_Out(3338) <= \<const0>\;
  LOCKSTEP_Out(3339) <= \<const0>\;
  LOCKSTEP_Out(3340) <= \<const0>\;
  LOCKSTEP_Out(3341) <= \<const0>\;
  LOCKSTEP_Out(3342) <= \<const0>\;
  LOCKSTEP_Out(3343) <= \<const0>\;
  LOCKSTEP_Out(3344) <= \<const0>\;
  LOCKSTEP_Out(3345) <= \<const0>\;
  LOCKSTEP_Out(3346) <= \<const0>\;
  LOCKSTEP_Out(3347) <= \<const0>\;
  LOCKSTEP_Out(3348) <= \<const0>\;
  LOCKSTEP_Out(3349) <= \<const0>\;
  LOCKSTEP_Out(3350) <= \<const0>\;
  LOCKSTEP_Out(3351) <= \<const0>\;
  LOCKSTEP_Out(3352) <= \<const0>\;
  LOCKSTEP_Out(3353) <= \<const0>\;
  LOCKSTEP_Out(3354) <= \<const0>\;
  LOCKSTEP_Out(3355) <= \<const0>\;
  LOCKSTEP_Out(3356) <= \<const0>\;
  LOCKSTEP_Out(3357) <= \<const0>\;
  LOCKSTEP_Out(3358) <= \<const0>\;
  LOCKSTEP_Out(3359) <= \<const0>\;
  LOCKSTEP_Out(3360) <= \<const0>\;
  LOCKSTEP_Out(3361) <= \<const0>\;
  LOCKSTEP_Out(3362) <= \<const0>\;
  LOCKSTEP_Out(3363) <= \<const0>\;
  LOCKSTEP_Out(3364) <= \<const0>\;
  LOCKSTEP_Out(3365) <= \<const0>\;
  LOCKSTEP_Out(3366) <= \<const0>\;
  LOCKSTEP_Out(3367) <= \<const0>\;
  LOCKSTEP_Out(3368) <= \<const0>\;
  LOCKSTEP_Out(3369) <= \<const0>\;
  LOCKSTEP_Out(3370) <= \<const0>\;
  LOCKSTEP_Out(3371) <= \<const0>\;
  LOCKSTEP_Out(3372) <= \<const0>\;
  LOCKSTEP_Out(3373) <= \<const0>\;
  LOCKSTEP_Out(3374) <= \<const0>\;
  LOCKSTEP_Out(3375) <= \<const0>\;
  LOCKSTEP_Out(3376) <= \<const0>\;
  LOCKSTEP_Out(3377) <= \<const0>\;
  LOCKSTEP_Out(3378) <= \<const0>\;
  LOCKSTEP_Out(3379) <= \<const0>\;
  LOCKSTEP_Out(3380) <= \<const0>\;
  LOCKSTEP_Out(3381) <= \<const0>\;
  LOCKSTEP_Out(3382) <= \<const0>\;
  LOCKSTEP_Out(3383) <= \<const0>\;
  LOCKSTEP_Out(3384) <= \<const0>\;
  LOCKSTEP_Out(3385) <= \<const0>\;
  LOCKSTEP_Out(3386) <= \<const0>\;
  LOCKSTEP_Out(3387) <= \<const0>\;
  LOCKSTEP_Out(3388) <= \<const0>\;
  LOCKSTEP_Out(3389) <= \<const0>\;
  LOCKSTEP_Out(3390) <= \<const0>\;
  LOCKSTEP_Out(3391) <= \<const0>\;
  LOCKSTEP_Out(3392) <= \<const0>\;
  LOCKSTEP_Out(3393) <= \<const0>\;
  LOCKSTEP_Out(3394) <= \<const0>\;
  LOCKSTEP_Out(3395) <= \<const0>\;
  LOCKSTEP_Out(3396) <= \<const0>\;
  LOCKSTEP_Out(3397) <= \<const0>\;
  LOCKSTEP_Out(3398) <= \<const0>\;
  LOCKSTEP_Out(3399) <= \<const0>\;
  LOCKSTEP_Out(3400) <= \<const0>\;
  LOCKSTEP_Out(3401) <= \<const0>\;
  LOCKSTEP_Out(3402) <= \<const0>\;
  LOCKSTEP_Out(3403) <= \<const0>\;
  LOCKSTEP_Out(3404) <= \<const0>\;
  LOCKSTEP_Out(3405) <= \<const0>\;
  LOCKSTEP_Out(3406) <= \<const0>\;
  LOCKSTEP_Out(3407) <= \<const0>\;
  LOCKSTEP_Out(3408) <= \<const0>\;
  LOCKSTEP_Out(3409) <= \<const0>\;
  LOCKSTEP_Out(3410) <= \<const0>\;
  LOCKSTEP_Out(3411) <= \<const0>\;
  LOCKSTEP_Out(3412) <= \<const0>\;
  LOCKSTEP_Out(3413) <= \<const0>\;
  LOCKSTEP_Out(3414) <= \<const0>\;
  LOCKSTEP_Out(3415) <= \<const0>\;
  LOCKSTEP_Out(3416) <= \<const0>\;
  LOCKSTEP_Out(3417) <= \<const0>\;
  LOCKSTEP_Out(3418) <= \<const0>\;
  LOCKSTEP_Out(3419) <= \<const0>\;
  LOCKSTEP_Out(3420) <= \<const0>\;
  LOCKSTEP_Out(3421) <= \<const0>\;
  LOCKSTEP_Out(3422) <= \<const0>\;
  LOCKSTEP_Out(3423) <= \<const0>\;
  LOCKSTEP_Out(3424) <= \<const0>\;
  LOCKSTEP_Out(3425) <= \<const0>\;
  LOCKSTEP_Out(3426) <= \<const0>\;
  LOCKSTEP_Out(3427) <= \<const0>\;
  LOCKSTEP_Out(3428) <= \<const0>\;
  LOCKSTEP_Out(3429) <= \<const0>\;
  LOCKSTEP_Out(3430) <= \<const0>\;
  LOCKSTEP_Out(3431) <= \<const0>\;
  LOCKSTEP_Out(3432) <= \<const0>\;
  LOCKSTEP_Out(3433) <= \<const0>\;
  LOCKSTEP_Out(3434) <= \<const0>\;
  LOCKSTEP_Out(3435) <= \<const0>\;
  LOCKSTEP_Out(3436) <= \<const0>\;
  LOCKSTEP_Out(3437) <= \<const0>\;
  LOCKSTEP_Out(3438) <= \<const0>\;
  LOCKSTEP_Out(3439) <= \<const0>\;
  LOCKSTEP_Out(3440) <= \<const0>\;
  LOCKSTEP_Out(3441) <= \<const0>\;
  LOCKSTEP_Out(3442) <= \<const0>\;
  LOCKSTEP_Out(3443) <= \<const0>\;
  LOCKSTEP_Out(3444) <= \<const0>\;
  LOCKSTEP_Out(3445) <= \<const0>\;
  LOCKSTEP_Out(3446) <= \<const0>\;
  LOCKSTEP_Out(3447) <= \<const0>\;
  LOCKSTEP_Out(3448) <= \<const0>\;
  LOCKSTEP_Out(3449) <= \<const0>\;
  LOCKSTEP_Out(3450) <= \<const0>\;
  LOCKSTEP_Out(3451) <= \<const0>\;
  LOCKSTEP_Out(3452) <= \<const0>\;
  LOCKSTEP_Out(3453) <= \<const0>\;
  LOCKSTEP_Out(3454) <= \<const0>\;
  LOCKSTEP_Out(3455) <= \<const0>\;
  LOCKSTEP_Out(3456) <= \<const0>\;
  LOCKSTEP_Out(3457) <= \<const0>\;
  LOCKSTEP_Out(3458) <= \<const0>\;
  LOCKSTEP_Out(3459) <= \<const0>\;
  LOCKSTEP_Out(3460) <= \<const0>\;
  LOCKSTEP_Out(3461) <= \<const0>\;
  LOCKSTEP_Out(3462) <= \<const0>\;
  LOCKSTEP_Out(3463) <= \<const0>\;
  LOCKSTEP_Out(3464) <= \<const0>\;
  LOCKSTEP_Out(3465) <= \<const0>\;
  LOCKSTEP_Out(3466) <= \<const0>\;
  LOCKSTEP_Out(3467) <= \<const0>\;
  LOCKSTEP_Out(3468) <= \<const0>\;
  LOCKSTEP_Out(3469) <= \<const0>\;
  LOCKSTEP_Out(3470) <= \<const0>\;
  LOCKSTEP_Out(3471) <= \<const0>\;
  LOCKSTEP_Out(3472) <= \<const0>\;
  LOCKSTEP_Out(3473) <= \<const0>\;
  LOCKSTEP_Out(3474) <= \<const0>\;
  LOCKSTEP_Out(3475) <= \<const0>\;
  LOCKSTEP_Out(3476) <= \<const0>\;
  LOCKSTEP_Out(3477) <= \<const0>\;
  LOCKSTEP_Out(3478) <= \<const0>\;
  LOCKSTEP_Out(3479) <= \<const0>\;
  LOCKSTEP_Out(3480) <= \<const0>\;
  LOCKSTEP_Out(3481) <= \<const0>\;
  LOCKSTEP_Out(3482) <= \<const0>\;
  LOCKSTEP_Out(3483) <= \<const0>\;
  LOCKSTEP_Out(3484) <= \<const0>\;
  LOCKSTEP_Out(3485) <= \<const0>\;
  LOCKSTEP_Out(3486) <= \<const0>\;
  LOCKSTEP_Out(3487) <= \<const0>\;
  LOCKSTEP_Out(3488) <= \<const0>\;
  LOCKSTEP_Out(3489) <= \<const0>\;
  LOCKSTEP_Out(3490) <= \<const0>\;
  LOCKSTEP_Out(3491) <= \<const0>\;
  LOCKSTEP_Out(3492) <= \<const0>\;
  LOCKSTEP_Out(3493) <= \<const0>\;
  LOCKSTEP_Out(3494) <= \<const0>\;
  LOCKSTEP_Out(3495) <= \<const0>\;
  LOCKSTEP_Out(3496) <= \<const0>\;
  LOCKSTEP_Out(3497) <= \<const0>\;
  LOCKSTEP_Out(3498) <= \<const0>\;
  LOCKSTEP_Out(3499) <= \<const0>\;
  LOCKSTEP_Out(3500) <= \<const0>\;
  LOCKSTEP_Out(3501) <= \<const0>\;
  LOCKSTEP_Out(3502) <= \<const0>\;
  LOCKSTEP_Out(3503) <= \<const0>\;
  LOCKSTEP_Out(3504) <= \<const0>\;
  LOCKSTEP_Out(3505) <= \<const0>\;
  LOCKSTEP_Out(3506) <= \<const0>\;
  LOCKSTEP_Out(3507) <= \<const0>\;
  LOCKSTEP_Out(3508) <= \<const0>\;
  LOCKSTEP_Out(3509) <= \<const0>\;
  LOCKSTEP_Out(3510) <= \<const0>\;
  LOCKSTEP_Out(3511) <= \<const0>\;
  LOCKSTEP_Out(3512) <= \<const0>\;
  LOCKSTEP_Out(3513) <= \<const0>\;
  LOCKSTEP_Out(3514) <= \<const0>\;
  LOCKSTEP_Out(3515) <= \<const0>\;
  LOCKSTEP_Out(3516) <= \<const0>\;
  LOCKSTEP_Out(3517) <= \<const0>\;
  LOCKSTEP_Out(3518) <= \<const0>\;
  LOCKSTEP_Out(3519) <= \<const0>\;
  LOCKSTEP_Out(3520) <= \<const0>\;
  LOCKSTEP_Out(3521) <= \<const0>\;
  LOCKSTEP_Out(3522) <= \<const0>\;
  LOCKSTEP_Out(3523) <= \<const0>\;
  LOCKSTEP_Out(3524) <= \<const0>\;
  LOCKSTEP_Out(3525) <= \<const0>\;
  LOCKSTEP_Out(3526) <= \<const0>\;
  LOCKSTEP_Out(3527) <= \<const0>\;
  LOCKSTEP_Out(3528) <= \<const0>\;
  LOCKSTEP_Out(3529) <= \<const0>\;
  LOCKSTEP_Out(3530) <= \<const0>\;
  LOCKSTEP_Out(3531) <= \<const0>\;
  LOCKSTEP_Out(3532) <= \<const0>\;
  LOCKSTEP_Out(3533) <= \<const0>\;
  LOCKSTEP_Out(3534) <= \<const0>\;
  LOCKSTEP_Out(3535) <= \<const0>\;
  LOCKSTEP_Out(3536) <= \<const0>\;
  LOCKSTEP_Out(3537) <= \<const0>\;
  LOCKSTEP_Out(3538) <= \<const0>\;
  LOCKSTEP_Out(3539) <= \<const0>\;
  LOCKSTEP_Out(3540) <= \<const0>\;
  LOCKSTEP_Out(3541) <= \<const0>\;
  LOCKSTEP_Out(3542) <= \<const0>\;
  LOCKSTEP_Out(3543) <= \<const0>\;
  LOCKSTEP_Out(3544) <= \<const0>\;
  LOCKSTEP_Out(3545) <= \<const0>\;
  LOCKSTEP_Out(3546) <= \<const0>\;
  LOCKSTEP_Out(3547) <= \<const0>\;
  LOCKSTEP_Out(3548) <= \<const0>\;
  LOCKSTEP_Out(3549) <= \<const0>\;
  LOCKSTEP_Out(3550) <= \<const0>\;
  LOCKSTEP_Out(3551) <= \<const0>\;
  LOCKSTEP_Out(3552) <= \<const0>\;
  LOCKSTEP_Out(3553) <= \<const0>\;
  LOCKSTEP_Out(3554) <= \<const0>\;
  LOCKSTEP_Out(3555) <= \<const0>\;
  LOCKSTEP_Out(3556) <= \<const0>\;
  LOCKSTEP_Out(3557) <= \<const0>\;
  LOCKSTEP_Out(3558) <= \<const0>\;
  LOCKSTEP_Out(3559) <= \<const0>\;
  LOCKSTEP_Out(3560) <= \<const0>\;
  LOCKSTEP_Out(3561) <= \<const0>\;
  LOCKSTEP_Out(3562) <= \<const0>\;
  LOCKSTEP_Out(3563) <= \<const0>\;
  LOCKSTEP_Out(3564) <= \<const0>\;
  LOCKSTEP_Out(3565) <= \<const0>\;
  LOCKSTEP_Out(3566) <= \<const0>\;
  LOCKSTEP_Out(3567) <= \<const0>\;
  LOCKSTEP_Out(3568) <= \<const0>\;
  LOCKSTEP_Out(3569) <= \<const0>\;
  LOCKSTEP_Out(3570) <= \<const0>\;
  LOCKSTEP_Out(3571) <= \<const0>\;
  LOCKSTEP_Out(3572) <= \<const0>\;
  LOCKSTEP_Out(3573) <= \<const0>\;
  LOCKSTEP_Out(3574) <= \<const0>\;
  LOCKSTEP_Out(3575) <= \<const0>\;
  LOCKSTEP_Out(3576) <= \<const0>\;
  LOCKSTEP_Out(3577) <= \<const0>\;
  LOCKSTEP_Out(3578) <= \<const0>\;
  LOCKSTEP_Out(3579) <= \<const0>\;
  LOCKSTEP_Out(3580) <= \<const0>\;
  LOCKSTEP_Out(3581) <= \<const0>\;
  LOCKSTEP_Out(3582) <= \<const0>\;
  LOCKSTEP_Out(3583) <= \<const0>\;
  LOCKSTEP_Out(3584) <= \<const0>\;
  LOCKSTEP_Out(3585) <= \<const0>\;
  LOCKSTEP_Out(3586) <= \<const0>\;
  LOCKSTEP_Out(3587) <= \<const0>\;
  LOCKSTEP_Out(3588) <= \<const0>\;
  LOCKSTEP_Out(3589) <= \<const0>\;
  LOCKSTEP_Out(3590) <= \<const0>\;
  LOCKSTEP_Out(3591) <= \<const0>\;
  LOCKSTEP_Out(3592) <= \<const0>\;
  LOCKSTEP_Out(3593) <= \<const0>\;
  LOCKSTEP_Out(3594) <= \<const0>\;
  LOCKSTEP_Out(3595) <= \<const0>\;
  LOCKSTEP_Out(3596) <= \<const0>\;
  LOCKSTEP_Out(3597) <= \<const0>\;
  LOCKSTEP_Out(3598) <= \<const0>\;
  LOCKSTEP_Out(3599) <= \<const0>\;
  LOCKSTEP_Out(3600) <= \<const0>\;
  LOCKSTEP_Out(3601) <= \<const0>\;
  LOCKSTEP_Out(3602) <= \<const0>\;
  LOCKSTEP_Out(3603) <= \<const0>\;
  LOCKSTEP_Out(3604) <= \<const0>\;
  LOCKSTEP_Out(3605) <= \<const0>\;
  LOCKSTEP_Out(3606) <= \<const0>\;
  LOCKSTEP_Out(3607) <= \<const0>\;
  LOCKSTEP_Out(3608) <= \<const0>\;
  LOCKSTEP_Out(3609) <= \<const0>\;
  LOCKSTEP_Out(3610) <= \<const0>\;
  LOCKSTEP_Out(3611) <= \<const0>\;
  LOCKSTEP_Out(3612) <= \<const0>\;
  LOCKSTEP_Out(3613) <= \<const0>\;
  LOCKSTEP_Out(3614) <= \<const0>\;
  LOCKSTEP_Out(3615) <= \<const0>\;
  LOCKSTEP_Out(3616) <= \<const0>\;
  LOCKSTEP_Out(3617) <= \<const0>\;
  LOCKSTEP_Out(3618) <= \<const0>\;
  LOCKSTEP_Out(3619) <= \<const0>\;
  LOCKSTEP_Out(3620) <= \<const0>\;
  LOCKSTEP_Out(3621) <= \<const0>\;
  LOCKSTEP_Out(3622) <= \<const0>\;
  LOCKSTEP_Out(3623) <= \<const0>\;
  LOCKSTEP_Out(3624) <= \<const0>\;
  LOCKSTEP_Out(3625) <= \<const0>\;
  LOCKSTEP_Out(3626) <= \<const0>\;
  LOCKSTEP_Out(3627) <= \<const0>\;
  LOCKSTEP_Out(3628) <= \<const0>\;
  LOCKSTEP_Out(3629) <= \<const0>\;
  LOCKSTEP_Out(3630) <= \<const0>\;
  LOCKSTEP_Out(3631) <= \<const0>\;
  LOCKSTEP_Out(3632) <= \<const0>\;
  LOCKSTEP_Out(3633) <= \<const0>\;
  LOCKSTEP_Out(3634) <= \<const0>\;
  LOCKSTEP_Out(3635) <= \<const0>\;
  LOCKSTEP_Out(3636) <= \<const0>\;
  LOCKSTEP_Out(3637) <= \<const0>\;
  LOCKSTEP_Out(3638) <= \<const0>\;
  LOCKSTEP_Out(3639) <= \<const0>\;
  LOCKSTEP_Out(3640) <= \<const0>\;
  LOCKSTEP_Out(3641) <= \<const0>\;
  LOCKSTEP_Out(3642) <= \<const0>\;
  LOCKSTEP_Out(3643) <= \<const0>\;
  LOCKSTEP_Out(3644) <= \<const0>\;
  LOCKSTEP_Out(3645) <= \<const0>\;
  LOCKSTEP_Out(3646) <= \<const0>\;
  LOCKSTEP_Out(3647) <= \<const0>\;
  LOCKSTEP_Out(3648) <= \<const0>\;
  LOCKSTEP_Out(3649) <= \<const0>\;
  LOCKSTEP_Out(3650) <= \<const0>\;
  LOCKSTEP_Out(3651) <= \<const0>\;
  LOCKSTEP_Out(3652) <= \<const0>\;
  LOCKSTEP_Out(3653) <= \<const0>\;
  LOCKSTEP_Out(3654) <= \<const0>\;
  LOCKSTEP_Out(3655) <= \<const0>\;
  LOCKSTEP_Out(3656) <= \<const0>\;
  LOCKSTEP_Out(3657) <= \<const0>\;
  LOCKSTEP_Out(3658) <= \<const0>\;
  LOCKSTEP_Out(3659) <= \<const0>\;
  LOCKSTEP_Out(3660) <= \<const0>\;
  LOCKSTEP_Out(3661) <= \<const0>\;
  LOCKSTEP_Out(3662) <= \<const0>\;
  LOCKSTEP_Out(3663) <= \<const0>\;
  LOCKSTEP_Out(3664) <= \<const0>\;
  LOCKSTEP_Out(3665) <= \<const0>\;
  LOCKSTEP_Out(3666) <= \<const0>\;
  LOCKSTEP_Out(3667) <= \<const0>\;
  LOCKSTEP_Out(3668) <= \<const0>\;
  LOCKSTEP_Out(3669) <= \<const0>\;
  LOCKSTEP_Out(3670) <= \<const0>\;
  LOCKSTEP_Out(3671) <= \<const0>\;
  LOCKSTEP_Out(3672) <= \<const0>\;
  LOCKSTEP_Out(3673) <= \<const0>\;
  LOCKSTEP_Out(3674) <= \<const0>\;
  LOCKSTEP_Out(3675) <= \<const0>\;
  LOCKSTEP_Out(3676) <= \<const0>\;
  LOCKSTEP_Out(3677) <= \<const0>\;
  LOCKSTEP_Out(3678) <= \<const0>\;
  LOCKSTEP_Out(3679) <= \<const0>\;
  LOCKSTEP_Out(3680) <= \<const0>\;
  LOCKSTEP_Out(3681) <= \<const0>\;
  LOCKSTEP_Out(3682) <= \<const0>\;
  LOCKSTEP_Out(3683) <= \<const0>\;
  LOCKSTEP_Out(3684) <= \<const0>\;
  LOCKSTEP_Out(3685) <= \<const0>\;
  LOCKSTEP_Out(3686) <= \<const0>\;
  LOCKSTEP_Out(3687) <= \<const0>\;
  LOCKSTEP_Out(3688) <= \<const0>\;
  LOCKSTEP_Out(3689) <= \<const0>\;
  LOCKSTEP_Out(3690) <= \<const0>\;
  LOCKSTEP_Out(3691) <= \<const0>\;
  LOCKSTEP_Out(3692) <= \<const0>\;
  LOCKSTEP_Out(3693) <= \<const0>\;
  LOCKSTEP_Out(3694) <= \<const0>\;
  LOCKSTEP_Out(3695) <= \<const0>\;
  LOCKSTEP_Out(3696) <= \<const0>\;
  LOCKSTEP_Out(3697) <= \<const0>\;
  LOCKSTEP_Out(3698) <= \<const0>\;
  LOCKSTEP_Out(3699) <= \<const0>\;
  LOCKSTEP_Out(3700) <= \<const0>\;
  LOCKSTEP_Out(3701) <= \<const0>\;
  LOCKSTEP_Out(3702) <= \<const0>\;
  LOCKSTEP_Out(3703) <= \<const0>\;
  LOCKSTEP_Out(3704) <= \<const0>\;
  LOCKSTEP_Out(3705) <= \<const0>\;
  LOCKSTEP_Out(3706) <= \<const0>\;
  LOCKSTEP_Out(3707) <= \<const0>\;
  LOCKSTEP_Out(3708) <= \<const0>\;
  LOCKSTEP_Out(3709) <= \<const0>\;
  LOCKSTEP_Out(3710) <= \<const0>\;
  LOCKSTEP_Out(3711) <= \<const0>\;
  LOCKSTEP_Out(3712) <= \<const0>\;
  LOCKSTEP_Out(3713) <= \<const0>\;
  LOCKSTEP_Out(3714) <= \<const0>\;
  LOCKSTEP_Out(3715) <= \<const0>\;
  LOCKSTEP_Out(3716) <= \<const0>\;
  LOCKSTEP_Out(3717) <= \<const0>\;
  LOCKSTEP_Out(3718) <= \<const0>\;
  LOCKSTEP_Out(3719) <= \<const0>\;
  LOCKSTEP_Out(3720) <= \<const0>\;
  LOCKSTEP_Out(3721) <= \<const0>\;
  LOCKSTEP_Out(3722) <= \<const0>\;
  LOCKSTEP_Out(3723) <= \<const0>\;
  LOCKSTEP_Out(3724) <= \<const0>\;
  LOCKSTEP_Out(3725) <= \<const0>\;
  LOCKSTEP_Out(3726) <= \<const0>\;
  LOCKSTEP_Out(3727) <= \<const0>\;
  LOCKSTEP_Out(3728) <= \<const0>\;
  LOCKSTEP_Out(3729) <= \<const0>\;
  LOCKSTEP_Out(3730) <= \<const0>\;
  LOCKSTEP_Out(3731) <= \<const0>\;
  LOCKSTEP_Out(3732) <= \<const0>\;
  LOCKSTEP_Out(3733) <= \<const0>\;
  LOCKSTEP_Out(3734) <= \<const0>\;
  LOCKSTEP_Out(3735) <= \<const0>\;
  LOCKSTEP_Out(3736) <= \<const0>\;
  LOCKSTEP_Out(3737) <= \<const0>\;
  LOCKSTEP_Out(3738) <= \<const0>\;
  LOCKSTEP_Out(3739) <= \<const0>\;
  LOCKSTEP_Out(3740) <= \<const0>\;
  LOCKSTEP_Out(3741) <= \<const0>\;
  LOCKSTEP_Out(3742) <= \<const0>\;
  LOCKSTEP_Out(3743) <= \<const0>\;
  LOCKSTEP_Out(3744) <= \<const0>\;
  LOCKSTEP_Out(3745) <= \<const0>\;
  LOCKSTEP_Out(3746) <= \<const0>\;
  LOCKSTEP_Out(3747) <= \<const0>\;
  LOCKSTEP_Out(3748) <= \<const0>\;
  LOCKSTEP_Out(3749) <= \<const0>\;
  LOCKSTEP_Out(3750) <= \<const0>\;
  LOCKSTEP_Out(3751) <= \<const0>\;
  LOCKSTEP_Out(3752) <= \<const0>\;
  LOCKSTEP_Out(3753) <= \<const0>\;
  LOCKSTEP_Out(3754) <= \<const0>\;
  LOCKSTEP_Out(3755) <= \<const0>\;
  LOCKSTEP_Out(3756) <= \<const0>\;
  LOCKSTEP_Out(3757) <= \<const0>\;
  LOCKSTEP_Out(3758) <= \<const0>\;
  LOCKSTEP_Out(3759) <= \<const0>\;
  LOCKSTEP_Out(3760) <= \<const0>\;
  LOCKSTEP_Out(3761) <= \<const0>\;
  LOCKSTEP_Out(3762) <= \<const0>\;
  LOCKSTEP_Out(3763) <= \<const0>\;
  LOCKSTEP_Out(3764) <= \<const0>\;
  LOCKSTEP_Out(3765) <= \<const0>\;
  LOCKSTEP_Out(3766) <= \<const0>\;
  LOCKSTEP_Out(3767) <= \<const0>\;
  LOCKSTEP_Out(3768) <= \<const0>\;
  LOCKSTEP_Out(3769) <= \<const0>\;
  LOCKSTEP_Out(3770) <= \<const0>\;
  LOCKSTEP_Out(3771) <= \<const0>\;
  LOCKSTEP_Out(3772) <= \<const0>\;
  LOCKSTEP_Out(3773) <= \<const0>\;
  LOCKSTEP_Out(3774) <= \<const0>\;
  LOCKSTEP_Out(3775) <= \<const0>\;
  LOCKSTEP_Out(3776) <= \<const0>\;
  LOCKSTEP_Out(3777) <= \<const0>\;
  LOCKSTEP_Out(3778) <= \<const0>\;
  LOCKSTEP_Out(3779) <= \<const0>\;
  LOCKSTEP_Out(3780) <= \<const0>\;
  LOCKSTEP_Out(3781) <= \<const0>\;
  LOCKSTEP_Out(3782) <= \<const0>\;
  LOCKSTEP_Out(3783) <= \<const0>\;
  LOCKSTEP_Out(3784) <= \<const0>\;
  LOCKSTEP_Out(3785) <= \<const0>\;
  LOCKSTEP_Out(3786) <= \<const0>\;
  LOCKSTEP_Out(3787) <= \<const0>\;
  LOCKSTEP_Out(3788) <= \<const0>\;
  LOCKSTEP_Out(3789) <= \<const0>\;
  LOCKSTEP_Out(3790) <= \<const0>\;
  LOCKSTEP_Out(3791) <= \<const0>\;
  LOCKSTEP_Out(3792) <= \<const0>\;
  LOCKSTEP_Out(3793) <= \<const0>\;
  LOCKSTEP_Out(3794) <= \<const0>\;
  LOCKSTEP_Out(3795) <= \<const0>\;
  LOCKSTEP_Out(3796) <= \<const0>\;
  LOCKSTEP_Out(3797) <= \<const0>\;
  LOCKSTEP_Out(3798) <= \<const0>\;
  LOCKSTEP_Out(3799) <= \<const0>\;
  LOCKSTEP_Out(3800) <= \<const0>\;
  LOCKSTEP_Out(3801) <= \<const0>\;
  LOCKSTEP_Out(3802) <= \<const0>\;
  LOCKSTEP_Out(3803) <= \<const0>\;
  LOCKSTEP_Out(3804) <= \<const0>\;
  LOCKSTEP_Out(3805) <= \<const0>\;
  LOCKSTEP_Out(3806) <= \<const0>\;
  LOCKSTEP_Out(3807) <= \<const0>\;
  LOCKSTEP_Out(3808) <= \<const0>\;
  LOCKSTEP_Out(3809) <= \<const0>\;
  LOCKSTEP_Out(3810) <= \<const0>\;
  LOCKSTEP_Out(3811) <= \<const0>\;
  LOCKSTEP_Out(3812) <= \<const0>\;
  LOCKSTEP_Out(3813) <= \<const0>\;
  LOCKSTEP_Out(3814) <= \<const0>\;
  LOCKSTEP_Out(3815) <= \<const0>\;
  LOCKSTEP_Out(3816) <= \<const0>\;
  LOCKSTEP_Out(3817) <= \<const0>\;
  LOCKSTEP_Out(3818) <= \<const0>\;
  LOCKSTEP_Out(3819) <= \<const0>\;
  LOCKSTEP_Out(3820) <= \<const0>\;
  LOCKSTEP_Out(3821) <= \<const0>\;
  LOCKSTEP_Out(3822) <= \<const0>\;
  LOCKSTEP_Out(3823) <= \<const0>\;
  LOCKSTEP_Out(3824) <= \<const0>\;
  LOCKSTEP_Out(3825) <= \<const0>\;
  LOCKSTEP_Out(3826) <= \<const0>\;
  LOCKSTEP_Out(3827) <= \<const0>\;
  LOCKSTEP_Out(3828) <= \<const0>\;
  LOCKSTEP_Out(3829) <= \<const0>\;
  LOCKSTEP_Out(3830) <= \<const0>\;
  LOCKSTEP_Out(3831) <= \<const0>\;
  LOCKSTEP_Out(3832) <= \<const0>\;
  LOCKSTEP_Out(3833) <= \<const0>\;
  LOCKSTEP_Out(3834) <= \<const0>\;
  LOCKSTEP_Out(3835) <= \<const0>\;
  LOCKSTEP_Out(3836) <= \<const0>\;
  LOCKSTEP_Out(3837) <= \<const0>\;
  LOCKSTEP_Out(3838) <= \<const0>\;
  LOCKSTEP_Out(3839) <= \<const0>\;
  LOCKSTEP_Out(3840) <= \<const0>\;
  LOCKSTEP_Out(3841) <= \<const0>\;
  LOCKSTEP_Out(3842) <= \<const0>\;
  LOCKSTEP_Out(3843) <= \<const0>\;
  LOCKSTEP_Out(3844) <= \<const0>\;
  LOCKSTEP_Out(3845) <= \<const0>\;
  LOCKSTEP_Out(3846) <= \<const0>\;
  LOCKSTEP_Out(3847) <= \<const0>\;
  LOCKSTEP_Out(3848) <= \<const0>\;
  LOCKSTEP_Out(3849) <= \<const0>\;
  LOCKSTEP_Out(3850) <= \<const0>\;
  LOCKSTEP_Out(3851) <= \<const0>\;
  LOCKSTEP_Out(3852) <= \<const0>\;
  LOCKSTEP_Out(3853) <= \<const0>\;
  LOCKSTEP_Out(3854) <= \<const0>\;
  LOCKSTEP_Out(3855) <= \<const0>\;
  LOCKSTEP_Out(3856) <= \<const0>\;
  LOCKSTEP_Out(3857) <= \<const0>\;
  LOCKSTEP_Out(3858) <= \<const0>\;
  LOCKSTEP_Out(3859) <= \<const0>\;
  LOCKSTEP_Out(3860) <= \<const0>\;
  LOCKSTEP_Out(3861) <= \<const0>\;
  LOCKSTEP_Out(3862) <= \<const0>\;
  LOCKSTEP_Out(3863) <= \<const0>\;
  LOCKSTEP_Out(3864) <= \<const0>\;
  LOCKSTEP_Out(3865) <= \<const0>\;
  LOCKSTEP_Out(3866) <= \<const0>\;
  LOCKSTEP_Out(3867) <= \<const0>\;
  LOCKSTEP_Out(3868) <= \<const0>\;
  LOCKSTEP_Out(3869) <= \<const0>\;
  LOCKSTEP_Out(3870) <= \<const0>\;
  LOCKSTEP_Out(3871) <= \<const0>\;
  LOCKSTEP_Out(3872) <= \<const0>\;
  LOCKSTEP_Out(3873) <= \<const0>\;
  LOCKSTEP_Out(3874) <= \<const0>\;
  LOCKSTEP_Out(3875) <= \<const0>\;
  LOCKSTEP_Out(3876) <= \<const0>\;
  LOCKSTEP_Out(3877) <= \<const0>\;
  LOCKSTEP_Out(3878) <= \<const0>\;
  LOCKSTEP_Out(3879) <= \<const0>\;
  LOCKSTEP_Out(3880) <= \<const0>\;
  LOCKSTEP_Out(3881) <= \<const0>\;
  LOCKSTEP_Out(3882) <= \<const0>\;
  LOCKSTEP_Out(3883) <= \<const0>\;
  LOCKSTEP_Out(3884) <= \<const0>\;
  LOCKSTEP_Out(3885) <= \<const0>\;
  LOCKSTEP_Out(3886) <= \<const0>\;
  LOCKSTEP_Out(3887) <= \<const0>\;
  LOCKSTEP_Out(3888) <= \<const0>\;
  LOCKSTEP_Out(3889) <= \<const0>\;
  LOCKSTEP_Out(3890) <= \<const0>\;
  LOCKSTEP_Out(3891) <= \<const0>\;
  LOCKSTEP_Out(3892) <= \<const0>\;
  LOCKSTEP_Out(3893) <= \<const0>\;
  LOCKSTEP_Out(3894) <= \<const0>\;
  LOCKSTEP_Out(3895) <= \<const0>\;
  LOCKSTEP_Out(3896) <= \<const0>\;
  LOCKSTEP_Out(3897) <= \<const0>\;
  LOCKSTEP_Out(3898) <= \<const0>\;
  LOCKSTEP_Out(3899) <= \<const0>\;
  LOCKSTEP_Out(3900) <= \<const0>\;
  LOCKSTEP_Out(3901) <= \<const0>\;
  LOCKSTEP_Out(3902) <= \<const0>\;
  LOCKSTEP_Out(3903) <= \<const0>\;
  LOCKSTEP_Out(3904) <= \<const0>\;
  LOCKSTEP_Out(3905) <= \<const0>\;
  LOCKSTEP_Out(3906) <= \<const0>\;
  LOCKSTEP_Out(3907) <= \<const0>\;
  LOCKSTEP_Out(3908) <= \<const0>\;
  LOCKSTEP_Out(3909) <= \<const0>\;
  LOCKSTEP_Out(3910) <= \<const0>\;
  LOCKSTEP_Out(3911) <= \<const0>\;
  LOCKSTEP_Out(3912) <= \<const0>\;
  LOCKSTEP_Out(3913) <= \<const0>\;
  LOCKSTEP_Out(3914) <= \<const0>\;
  LOCKSTEP_Out(3915) <= \<const0>\;
  LOCKSTEP_Out(3916) <= \<const0>\;
  LOCKSTEP_Out(3917) <= \<const0>\;
  LOCKSTEP_Out(3918) <= \<const0>\;
  LOCKSTEP_Out(3919) <= \<const0>\;
  LOCKSTEP_Out(3920) <= \<const0>\;
  LOCKSTEP_Out(3921) <= \<const0>\;
  LOCKSTEP_Out(3922) <= \<const0>\;
  LOCKSTEP_Out(3923) <= \<const0>\;
  LOCKSTEP_Out(3924) <= \<const0>\;
  LOCKSTEP_Out(3925) <= \<const0>\;
  LOCKSTEP_Out(3926) <= \<const0>\;
  LOCKSTEP_Out(3927) <= \<const0>\;
  LOCKSTEP_Out(3928) <= \<const0>\;
  LOCKSTEP_Out(3929) <= \<const0>\;
  LOCKSTEP_Out(3930) <= \<const0>\;
  LOCKSTEP_Out(3931) <= \<const0>\;
  LOCKSTEP_Out(3932) <= \<const0>\;
  LOCKSTEP_Out(3933) <= \<const0>\;
  LOCKSTEP_Out(3934) <= \<const0>\;
  LOCKSTEP_Out(3935) <= \<const0>\;
  LOCKSTEP_Out(3936) <= \<const0>\;
  LOCKSTEP_Out(3937) <= \<const0>\;
  LOCKSTEP_Out(3938) <= \<const0>\;
  LOCKSTEP_Out(3939) <= \<const0>\;
  LOCKSTEP_Out(3940) <= \<const0>\;
  LOCKSTEP_Out(3941) <= \<const0>\;
  LOCKSTEP_Out(3942) <= \<const0>\;
  LOCKSTEP_Out(3943) <= \<const0>\;
  LOCKSTEP_Out(3944) <= \<const0>\;
  LOCKSTEP_Out(3945) <= \<const0>\;
  LOCKSTEP_Out(3946) <= \<const0>\;
  LOCKSTEP_Out(3947) <= \<const0>\;
  LOCKSTEP_Out(3948) <= \<const0>\;
  LOCKSTEP_Out(3949) <= \<const0>\;
  LOCKSTEP_Out(3950) <= \<const0>\;
  LOCKSTEP_Out(3951) <= \<const0>\;
  LOCKSTEP_Out(3952) <= \<const0>\;
  LOCKSTEP_Out(3953) <= \<const0>\;
  LOCKSTEP_Out(3954) <= \<const0>\;
  LOCKSTEP_Out(3955) <= \<const0>\;
  LOCKSTEP_Out(3956) <= \<const0>\;
  LOCKSTEP_Out(3957) <= \<const0>\;
  LOCKSTEP_Out(3958) <= \<const0>\;
  LOCKSTEP_Out(3959) <= \<const0>\;
  LOCKSTEP_Out(3960) <= \<const0>\;
  LOCKSTEP_Out(3961) <= \<const0>\;
  LOCKSTEP_Out(3962) <= \<const0>\;
  LOCKSTEP_Out(3963) <= \<const0>\;
  LOCKSTEP_Out(3964) <= \<const0>\;
  LOCKSTEP_Out(3965) <= \<const0>\;
  LOCKSTEP_Out(3966) <= \<const0>\;
  LOCKSTEP_Out(3967) <= \<const0>\;
  LOCKSTEP_Out(3968) <= \<const0>\;
  LOCKSTEP_Out(3969) <= \<const0>\;
  LOCKSTEP_Out(3970) <= \<const0>\;
  LOCKSTEP_Out(3971) <= \<const0>\;
  LOCKSTEP_Out(3972) <= \<const0>\;
  LOCKSTEP_Out(3973) <= \<const0>\;
  LOCKSTEP_Out(3974) <= \<const0>\;
  LOCKSTEP_Out(3975) <= \<const0>\;
  LOCKSTEP_Out(3976) <= \<const0>\;
  LOCKSTEP_Out(3977) <= \<const0>\;
  LOCKSTEP_Out(3978) <= \<const0>\;
  LOCKSTEP_Out(3979) <= \<const0>\;
  LOCKSTEP_Out(3980) <= \<const0>\;
  LOCKSTEP_Out(3981) <= \<const0>\;
  LOCKSTEP_Out(3982) <= \<const0>\;
  LOCKSTEP_Out(3983) <= \<const0>\;
  LOCKSTEP_Out(3984) <= \<const0>\;
  LOCKSTEP_Out(3985) <= \<const0>\;
  LOCKSTEP_Out(3986) <= \<const0>\;
  LOCKSTEP_Out(3987) <= \<const0>\;
  LOCKSTEP_Out(3988) <= \<const0>\;
  LOCKSTEP_Out(3989) <= \<const0>\;
  LOCKSTEP_Out(3990) <= \<const0>\;
  LOCKSTEP_Out(3991) <= \<const0>\;
  LOCKSTEP_Out(3992) <= \<const0>\;
  LOCKSTEP_Out(3993) <= \<const0>\;
  LOCKSTEP_Out(3994) <= \<const0>\;
  LOCKSTEP_Out(3995) <= \<const0>\;
  LOCKSTEP_Out(3996) <= \<const0>\;
  LOCKSTEP_Out(3997) <= \<const0>\;
  LOCKSTEP_Out(3998) <= \<const0>\;
  LOCKSTEP_Out(3999) <= \<const0>\;
  LOCKSTEP_Out(4000) <= \<const0>\;
  LOCKSTEP_Out(4001) <= \<const0>\;
  LOCKSTEP_Out(4002) <= \<const0>\;
  LOCKSTEP_Out(4003) <= \<const0>\;
  LOCKSTEP_Out(4004) <= \<const0>\;
  LOCKSTEP_Out(4005) <= \<const0>\;
  LOCKSTEP_Out(4006) <= \<const0>\;
  LOCKSTEP_Out(4007) <= \<const0>\;
  LOCKSTEP_Out(4008) <= \<const0>\;
  LOCKSTEP_Out(4009) <= \<const0>\;
  LOCKSTEP_Out(4010) <= \<const0>\;
  LOCKSTEP_Out(4011) <= \<const0>\;
  LOCKSTEP_Out(4012) <= \<const0>\;
  LOCKSTEP_Out(4013) <= \<const0>\;
  LOCKSTEP_Out(4014) <= \<const0>\;
  LOCKSTEP_Out(4015) <= \<const0>\;
  LOCKSTEP_Out(4016) <= \<const0>\;
  LOCKSTEP_Out(4017) <= \<const0>\;
  LOCKSTEP_Out(4018) <= \<const0>\;
  LOCKSTEP_Out(4019) <= \<const0>\;
  LOCKSTEP_Out(4020) <= \<const0>\;
  LOCKSTEP_Out(4021) <= \<const0>\;
  LOCKSTEP_Out(4022) <= \<const0>\;
  LOCKSTEP_Out(4023) <= \<const0>\;
  LOCKSTEP_Out(4024) <= \<const0>\;
  LOCKSTEP_Out(4025) <= \<const0>\;
  LOCKSTEP_Out(4026) <= \<const0>\;
  LOCKSTEP_Out(4027) <= \<const0>\;
  LOCKSTEP_Out(4028) <= \<const0>\;
  LOCKSTEP_Out(4029) <= \<const0>\;
  LOCKSTEP_Out(4030) <= \<const0>\;
  LOCKSTEP_Out(4031) <= \<const0>\;
  LOCKSTEP_Out(4032) <= \<const0>\;
  LOCKSTEP_Out(4033) <= \<const0>\;
  LOCKSTEP_Out(4034) <= \<const0>\;
  LOCKSTEP_Out(4035) <= \<const0>\;
  LOCKSTEP_Out(4036) <= \<const0>\;
  LOCKSTEP_Out(4037) <= \<const0>\;
  LOCKSTEP_Out(4038) <= \<const0>\;
  LOCKSTEP_Out(4039) <= \<const0>\;
  LOCKSTEP_Out(4040) <= \<const0>\;
  LOCKSTEP_Out(4041) <= \<const0>\;
  LOCKSTEP_Out(4042) <= \<const0>\;
  LOCKSTEP_Out(4043) <= \<const0>\;
  LOCKSTEP_Out(4044) <= \<const0>\;
  LOCKSTEP_Out(4045) <= \<const0>\;
  LOCKSTEP_Out(4046) <= \<const0>\;
  LOCKSTEP_Out(4047) <= \<const0>\;
  LOCKSTEP_Out(4048) <= \<const0>\;
  LOCKSTEP_Out(4049) <= \<const0>\;
  LOCKSTEP_Out(4050) <= \<const0>\;
  LOCKSTEP_Out(4051) <= \<const0>\;
  LOCKSTEP_Out(4052) <= \<const0>\;
  LOCKSTEP_Out(4053) <= \<const0>\;
  LOCKSTEP_Out(4054) <= \<const0>\;
  LOCKSTEP_Out(4055) <= \<const0>\;
  LOCKSTEP_Out(4056) <= \<const0>\;
  LOCKSTEP_Out(4057) <= \<const0>\;
  LOCKSTEP_Out(4058) <= \<const0>\;
  LOCKSTEP_Out(4059) <= \<const0>\;
  LOCKSTEP_Out(4060) <= \<const0>\;
  LOCKSTEP_Out(4061) <= \<const0>\;
  LOCKSTEP_Out(4062) <= \<const0>\;
  LOCKSTEP_Out(4063) <= \<const0>\;
  LOCKSTEP_Out(4064) <= \<const0>\;
  LOCKSTEP_Out(4065) <= \<const0>\;
  LOCKSTEP_Out(4066) <= \<const0>\;
  LOCKSTEP_Out(4067) <= \<const0>\;
  LOCKSTEP_Out(4068) <= \<const0>\;
  LOCKSTEP_Out(4069) <= \<const0>\;
  LOCKSTEP_Out(4070) <= \<const0>\;
  LOCKSTEP_Out(4071) <= \<const0>\;
  LOCKSTEP_Out(4072) <= \<const0>\;
  LOCKSTEP_Out(4073) <= \<const0>\;
  LOCKSTEP_Out(4074) <= \<const0>\;
  LOCKSTEP_Out(4075) <= \<const0>\;
  LOCKSTEP_Out(4076) <= \<const0>\;
  LOCKSTEP_Out(4077) <= \<const0>\;
  LOCKSTEP_Out(4078) <= \<const0>\;
  LOCKSTEP_Out(4079) <= \<const0>\;
  LOCKSTEP_Out(4080) <= \<const0>\;
  LOCKSTEP_Out(4081) <= \<const0>\;
  LOCKSTEP_Out(4082) <= \<const0>\;
  LOCKSTEP_Out(4083) <= \<const0>\;
  LOCKSTEP_Out(4084) <= \<const0>\;
  LOCKSTEP_Out(4085) <= \<const0>\;
  LOCKSTEP_Out(4086) <= \<const0>\;
  LOCKSTEP_Out(4087) <= \<const0>\;
  LOCKSTEP_Out(4088) <= \<const0>\;
  LOCKSTEP_Out(4089) <= \<const0>\;
  LOCKSTEP_Out(4090) <= \<const0>\;
  LOCKSTEP_Out(4091) <= \<const0>\;
  LOCKSTEP_Out(4092) <= \<const0>\;
  LOCKSTEP_Out(4093) <= \<const0>\;
  LOCKSTEP_Out(4094) <= \<const0>\;
  LOCKSTEP_Out(4095) <= \<const0>\;
  M0_AXIS_TDATA(31) <= \<const0>\;
  M0_AXIS_TDATA(30) <= \<const0>\;
  M0_AXIS_TDATA(29) <= \<const0>\;
  M0_AXIS_TDATA(28) <= \<const0>\;
  M0_AXIS_TDATA(27) <= \<const0>\;
  M0_AXIS_TDATA(26) <= \<const0>\;
  M0_AXIS_TDATA(25) <= \<const0>\;
  M0_AXIS_TDATA(24) <= \<const0>\;
  M0_AXIS_TDATA(23) <= \<const0>\;
  M0_AXIS_TDATA(22) <= \<const0>\;
  M0_AXIS_TDATA(21) <= \<const0>\;
  M0_AXIS_TDATA(20) <= \<const0>\;
  M0_AXIS_TDATA(19) <= \<const0>\;
  M0_AXIS_TDATA(18) <= \<const0>\;
  M0_AXIS_TDATA(17) <= \<const0>\;
  M0_AXIS_TDATA(16) <= \<const0>\;
  M0_AXIS_TDATA(15) <= \<const0>\;
  M0_AXIS_TDATA(14) <= \<const0>\;
  M0_AXIS_TDATA(13) <= \<const0>\;
  M0_AXIS_TDATA(12) <= \<const0>\;
  M0_AXIS_TDATA(11) <= \<const0>\;
  M0_AXIS_TDATA(10) <= \<const0>\;
  M0_AXIS_TDATA(9) <= \<const0>\;
  M0_AXIS_TDATA(8) <= \<const0>\;
  M0_AXIS_TDATA(7) <= \<const0>\;
  M0_AXIS_TDATA(6) <= \<const0>\;
  M0_AXIS_TDATA(5) <= \<const0>\;
  M0_AXIS_TDATA(4) <= \<const0>\;
  M0_AXIS_TDATA(3) <= \<const0>\;
  M0_AXIS_TDATA(2) <= \<const0>\;
  M0_AXIS_TDATA(1) <= \<const0>\;
  M0_AXIS_TDATA(0) <= \<const0>\;
  M0_AXIS_TLAST <= \<const0>\;
  M0_AXIS_TVALID <= \<const0>\;
  M10_AXIS_TDATA(31) <= \<const0>\;
  M10_AXIS_TDATA(30) <= \<const0>\;
  M10_AXIS_TDATA(29) <= \<const0>\;
  M10_AXIS_TDATA(28) <= \<const0>\;
  M10_AXIS_TDATA(27) <= \<const0>\;
  M10_AXIS_TDATA(26) <= \<const0>\;
  M10_AXIS_TDATA(25) <= \<const0>\;
  M10_AXIS_TDATA(24) <= \<const0>\;
  M10_AXIS_TDATA(23) <= \<const0>\;
  M10_AXIS_TDATA(22) <= \<const0>\;
  M10_AXIS_TDATA(21) <= \<const0>\;
  M10_AXIS_TDATA(20) <= \<const0>\;
  M10_AXIS_TDATA(19) <= \<const0>\;
  M10_AXIS_TDATA(18) <= \<const0>\;
  M10_AXIS_TDATA(17) <= \<const0>\;
  M10_AXIS_TDATA(16) <= \<const0>\;
  M10_AXIS_TDATA(15) <= \<const0>\;
  M10_AXIS_TDATA(14) <= \<const0>\;
  M10_AXIS_TDATA(13) <= \<const0>\;
  M10_AXIS_TDATA(12) <= \<const0>\;
  M10_AXIS_TDATA(11) <= \<const0>\;
  M10_AXIS_TDATA(10) <= \<const0>\;
  M10_AXIS_TDATA(9) <= \<const0>\;
  M10_AXIS_TDATA(8) <= \<const0>\;
  M10_AXIS_TDATA(7) <= \<const0>\;
  M10_AXIS_TDATA(6) <= \<const0>\;
  M10_AXIS_TDATA(5) <= \<const0>\;
  M10_AXIS_TDATA(4) <= \<const0>\;
  M10_AXIS_TDATA(3) <= \<const0>\;
  M10_AXIS_TDATA(2) <= \<const0>\;
  M10_AXIS_TDATA(1) <= \<const0>\;
  M10_AXIS_TDATA(0) <= \<const0>\;
  M10_AXIS_TLAST <= \<const0>\;
  M10_AXIS_TVALID <= \<const0>\;
  M11_AXIS_TDATA(31) <= \<const0>\;
  M11_AXIS_TDATA(30) <= \<const0>\;
  M11_AXIS_TDATA(29) <= \<const0>\;
  M11_AXIS_TDATA(28) <= \<const0>\;
  M11_AXIS_TDATA(27) <= \<const0>\;
  M11_AXIS_TDATA(26) <= \<const0>\;
  M11_AXIS_TDATA(25) <= \<const0>\;
  M11_AXIS_TDATA(24) <= \<const0>\;
  M11_AXIS_TDATA(23) <= \<const0>\;
  M11_AXIS_TDATA(22) <= \<const0>\;
  M11_AXIS_TDATA(21) <= \<const0>\;
  M11_AXIS_TDATA(20) <= \<const0>\;
  M11_AXIS_TDATA(19) <= \<const0>\;
  M11_AXIS_TDATA(18) <= \<const0>\;
  M11_AXIS_TDATA(17) <= \<const0>\;
  M11_AXIS_TDATA(16) <= \<const0>\;
  M11_AXIS_TDATA(15) <= \<const0>\;
  M11_AXIS_TDATA(14) <= \<const0>\;
  M11_AXIS_TDATA(13) <= \<const0>\;
  M11_AXIS_TDATA(12) <= \<const0>\;
  M11_AXIS_TDATA(11) <= \<const0>\;
  M11_AXIS_TDATA(10) <= \<const0>\;
  M11_AXIS_TDATA(9) <= \<const0>\;
  M11_AXIS_TDATA(8) <= \<const0>\;
  M11_AXIS_TDATA(7) <= \<const0>\;
  M11_AXIS_TDATA(6) <= \<const0>\;
  M11_AXIS_TDATA(5) <= \<const0>\;
  M11_AXIS_TDATA(4) <= \<const0>\;
  M11_AXIS_TDATA(3) <= \<const0>\;
  M11_AXIS_TDATA(2) <= \<const0>\;
  M11_AXIS_TDATA(1) <= \<const0>\;
  M11_AXIS_TDATA(0) <= \<const0>\;
  M11_AXIS_TLAST <= \<const0>\;
  M11_AXIS_TVALID <= \<const0>\;
  M12_AXIS_TDATA(31) <= \<const0>\;
  M12_AXIS_TDATA(30) <= \<const0>\;
  M12_AXIS_TDATA(29) <= \<const0>\;
  M12_AXIS_TDATA(28) <= \<const0>\;
  M12_AXIS_TDATA(27) <= \<const0>\;
  M12_AXIS_TDATA(26) <= \<const0>\;
  M12_AXIS_TDATA(25) <= \<const0>\;
  M12_AXIS_TDATA(24) <= \<const0>\;
  M12_AXIS_TDATA(23) <= \<const0>\;
  M12_AXIS_TDATA(22) <= \<const0>\;
  M12_AXIS_TDATA(21) <= \<const0>\;
  M12_AXIS_TDATA(20) <= \<const0>\;
  M12_AXIS_TDATA(19) <= \<const0>\;
  M12_AXIS_TDATA(18) <= \<const0>\;
  M12_AXIS_TDATA(17) <= \<const0>\;
  M12_AXIS_TDATA(16) <= \<const0>\;
  M12_AXIS_TDATA(15) <= \<const0>\;
  M12_AXIS_TDATA(14) <= \<const0>\;
  M12_AXIS_TDATA(13) <= \<const0>\;
  M12_AXIS_TDATA(12) <= \<const0>\;
  M12_AXIS_TDATA(11) <= \<const0>\;
  M12_AXIS_TDATA(10) <= \<const0>\;
  M12_AXIS_TDATA(9) <= \<const0>\;
  M12_AXIS_TDATA(8) <= \<const0>\;
  M12_AXIS_TDATA(7) <= \<const0>\;
  M12_AXIS_TDATA(6) <= \<const0>\;
  M12_AXIS_TDATA(5) <= \<const0>\;
  M12_AXIS_TDATA(4) <= \<const0>\;
  M12_AXIS_TDATA(3) <= \<const0>\;
  M12_AXIS_TDATA(2) <= \<const0>\;
  M12_AXIS_TDATA(1) <= \<const0>\;
  M12_AXIS_TDATA(0) <= \<const0>\;
  M12_AXIS_TLAST <= \<const0>\;
  M12_AXIS_TVALID <= \<const0>\;
  M13_AXIS_TDATA(31) <= \<const0>\;
  M13_AXIS_TDATA(30) <= \<const0>\;
  M13_AXIS_TDATA(29) <= \<const0>\;
  M13_AXIS_TDATA(28) <= \<const0>\;
  M13_AXIS_TDATA(27) <= \<const0>\;
  M13_AXIS_TDATA(26) <= \<const0>\;
  M13_AXIS_TDATA(25) <= \<const0>\;
  M13_AXIS_TDATA(24) <= \<const0>\;
  M13_AXIS_TDATA(23) <= \<const0>\;
  M13_AXIS_TDATA(22) <= \<const0>\;
  M13_AXIS_TDATA(21) <= \<const0>\;
  M13_AXIS_TDATA(20) <= \<const0>\;
  M13_AXIS_TDATA(19) <= \<const0>\;
  M13_AXIS_TDATA(18) <= \<const0>\;
  M13_AXIS_TDATA(17) <= \<const0>\;
  M13_AXIS_TDATA(16) <= \<const0>\;
  M13_AXIS_TDATA(15) <= \<const0>\;
  M13_AXIS_TDATA(14) <= \<const0>\;
  M13_AXIS_TDATA(13) <= \<const0>\;
  M13_AXIS_TDATA(12) <= \<const0>\;
  M13_AXIS_TDATA(11) <= \<const0>\;
  M13_AXIS_TDATA(10) <= \<const0>\;
  M13_AXIS_TDATA(9) <= \<const0>\;
  M13_AXIS_TDATA(8) <= \<const0>\;
  M13_AXIS_TDATA(7) <= \<const0>\;
  M13_AXIS_TDATA(6) <= \<const0>\;
  M13_AXIS_TDATA(5) <= \<const0>\;
  M13_AXIS_TDATA(4) <= \<const0>\;
  M13_AXIS_TDATA(3) <= \<const0>\;
  M13_AXIS_TDATA(2) <= \<const0>\;
  M13_AXIS_TDATA(1) <= \<const0>\;
  M13_AXIS_TDATA(0) <= \<const0>\;
  M13_AXIS_TLAST <= \<const0>\;
  M13_AXIS_TVALID <= \<const0>\;
  M14_AXIS_TDATA(31) <= \<const0>\;
  M14_AXIS_TDATA(30) <= \<const0>\;
  M14_AXIS_TDATA(29) <= \<const0>\;
  M14_AXIS_TDATA(28) <= \<const0>\;
  M14_AXIS_TDATA(27) <= \<const0>\;
  M14_AXIS_TDATA(26) <= \<const0>\;
  M14_AXIS_TDATA(25) <= \<const0>\;
  M14_AXIS_TDATA(24) <= \<const0>\;
  M14_AXIS_TDATA(23) <= \<const0>\;
  M14_AXIS_TDATA(22) <= \<const0>\;
  M14_AXIS_TDATA(21) <= \<const0>\;
  M14_AXIS_TDATA(20) <= \<const0>\;
  M14_AXIS_TDATA(19) <= \<const0>\;
  M14_AXIS_TDATA(18) <= \<const0>\;
  M14_AXIS_TDATA(17) <= \<const0>\;
  M14_AXIS_TDATA(16) <= \<const0>\;
  M14_AXIS_TDATA(15) <= \<const0>\;
  M14_AXIS_TDATA(14) <= \<const0>\;
  M14_AXIS_TDATA(13) <= \<const0>\;
  M14_AXIS_TDATA(12) <= \<const0>\;
  M14_AXIS_TDATA(11) <= \<const0>\;
  M14_AXIS_TDATA(10) <= \<const0>\;
  M14_AXIS_TDATA(9) <= \<const0>\;
  M14_AXIS_TDATA(8) <= \<const0>\;
  M14_AXIS_TDATA(7) <= \<const0>\;
  M14_AXIS_TDATA(6) <= \<const0>\;
  M14_AXIS_TDATA(5) <= \<const0>\;
  M14_AXIS_TDATA(4) <= \<const0>\;
  M14_AXIS_TDATA(3) <= \<const0>\;
  M14_AXIS_TDATA(2) <= \<const0>\;
  M14_AXIS_TDATA(1) <= \<const0>\;
  M14_AXIS_TDATA(0) <= \<const0>\;
  M14_AXIS_TLAST <= \<const0>\;
  M14_AXIS_TVALID <= \<const0>\;
  M15_AXIS_TDATA(31) <= \<const0>\;
  M15_AXIS_TDATA(30) <= \<const0>\;
  M15_AXIS_TDATA(29) <= \<const0>\;
  M15_AXIS_TDATA(28) <= \<const0>\;
  M15_AXIS_TDATA(27) <= \<const0>\;
  M15_AXIS_TDATA(26) <= \<const0>\;
  M15_AXIS_TDATA(25) <= \<const0>\;
  M15_AXIS_TDATA(24) <= \<const0>\;
  M15_AXIS_TDATA(23) <= \<const0>\;
  M15_AXIS_TDATA(22) <= \<const0>\;
  M15_AXIS_TDATA(21) <= \<const0>\;
  M15_AXIS_TDATA(20) <= \<const0>\;
  M15_AXIS_TDATA(19) <= \<const0>\;
  M15_AXIS_TDATA(18) <= \<const0>\;
  M15_AXIS_TDATA(17) <= \<const0>\;
  M15_AXIS_TDATA(16) <= \<const0>\;
  M15_AXIS_TDATA(15) <= \<const0>\;
  M15_AXIS_TDATA(14) <= \<const0>\;
  M15_AXIS_TDATA(13) <= \<const0>\;
  M15_AXIS_TDATA(12) <= \<const0>\;
  M15_AXIS_TDATA(11) <= \<const0>\;
  M15_AXIS_TDATA(10) <= \<const0>\;
  M15_AXIS_TDATA(9) <= \<const0>\;
  M15_AXIS_TDATA(8) <= \<const0>\;
  M15_AXIS_TDATA(7) <= \<const0>\;
  M15_AXIS_TDATA(6) <= \<const0>\;
  M15_AXIS_TDATA(5) <= \<const0>\;
  M15_AXIS_TDATA(4) <= \<const0>\;
  M15_AXIS_TDATA(3) <= \<const0>\;
  M15_AXIS_TDATA(2) <= \<const0>\;
  M15_AXIS_TDATA(1) <= \<const0>\;
  M15_AXIS_TDATA(0) <= \<const0>\;
  M15_AXIS_TLAST <= \<const0>\;
  M15_AXIS_TVALID <= \<const0>\;
  M1_AXIS_TDATA(31) <= \<const0>\;
  M1_AXIS_TDATA(30) <= \<const0>\;
  M1_AXIS_TDATA(29) <= \<const0>\;
  M1_AXIS_TDATA(28) <= \<const0>\;
  M1_AXIS_TDATA(27) <= \<const0>\;
  M1_AXIS_TDATA(26) <= \<const0>\;
  M1_AXIS_TDATA(25) <= \<const0>\;
  M1_AXIS_TDATA(24) <= \<const0>\;
  M1_AXIS_TDATA(23) <= \<const0>\;
  M1_AXIS_TDATA(22) <= \<const0>\;
  M1_AXIS_TDATA(21) <= \<const0>\;
  M1_AXIS_TDATA(20) <= \<const0>\;
  M1_AXIS_TDATA(19) <= \<const0>\;
  M1_AXIS_TDATA(18) <= \<const0>\;
  M1_AXIS_TDATA(17) <= \<const0>\;
  M1_AXIS_TDATA(16) <= \<const0>\;
  M1_AXIS_TDATA(15) <= \<const0>\;
  M1_AXIS_TDATA(14) <= \<const0>\;
  M1_AXIS_TDATA(13) <= \<const0>\;
  M1_AXIS_TDATA(12) <= \<const0>\;
  M1_AXIS_TDATA(11) <= \<const0>\;
  M1_AXIS_TDATA(10) <= \<const0>\;
  M1_AXIS_TDATA(9) <= \<const0>\;
  M1_AXIS_TDATA(8) <= \<const0>\;
  M1_AXIS_TDATA(7) <= \<const0>\;
  M1_AXIS_TDATA(6) <= \<const0>\;
  M1_AXIS_TDATA(5) <= \<const0>\;
  M1_AXIS_TDATA(4) <= \<const0>\;
  M1_AXIS_TDATA(3) <= \<const0>\;
  M1_AXIS_TDATA(2) <= \<const0>\;
  M1_AXIS_TDATA(1) <= \<const0>\;
  M1_AXIS_TDATA(0) <= \<const0>\;
  M1_AXIS_TLAST <= \<const0>\;
  M1_AXIS_TVALID <= \<const0>\;
  M2_AXIS_TDATA(31) <= \<const0>\;
  M2_AXIS_TDATA(30) <= \<const0>\;
  M2_AXIS_TDATA(29) <= \<const0>\;
  M2_AXIS_TDATA(28) <= \<const0>\;
  M2_AXIS_TDATA(27) <= \<const0>\;
  M2_AXIS_TDATA(26) <= \<const0>\;
  M2_AXIS_TDATA(25) <= \<const0>\;
  M2_AXIS_TDATA(24) <= \<const0>\;
  M2_AXIS_TDATA(23) <= \<const0>\;
  M2_AXIS_TDATA(22) <= \<const0>\;
  M2_AXIS_TDATA(21) <= \<const0>\;
  M2_AXIS_TDATA(20) <= \<const0>\;
  M2_AXIS_TDATA(19) <= \<const0>\;
  M2_AXIS_TDATA(18) <= \<const0>\;
  M2_AXIS_TDATA(17) <= \<const0>\;
  M2_AXIS_TDATA(16) <= \<const0>\;
  M2_AXIS_TDATA(15) <= \<const0>\;
  M2_AXIS_TDATA(14) <= \<const0>\;
  M2_AXIS_TDATA(13) <= \<const0>\;
  M2_AXIS_TDATA(12) <= \<const0>\;
  M2_AXIS_TDATA(11) <= \<const0>\;
  M2_AXIS_TDATA(10) <= \<const0>\;
  M2_AXIS_TDATA(9) <= \<const0>\;
  M2_AXIS_TDATA(8) <= \<const0>\;
  M2_AXIS_TDATA(7) <= \<const0>\;
  M2_AXIS_TDATA(6) <= \<const0>\;
  M2_AXIS_TDATA(5) <= \<const0>\;
  M2_AXIS_TDATA(4) <= \<const0>\;
  M2_AXIS_TDATA(3) <= \<const0>\;
  M2_AXIS_TDATA(2) <= \<const0>\;
  M2_AXIS_TDATA(1) <= \<const0>\;
  M2_AXIS_TDATA(0) <= \<const0>\;
  M2_AXIS_TLAST <= \<const0>\;
  M2_AXIS_TVALID <= \<const0>\;
  M3_AXIS_TDATA(31) <= \<const0>\;
  M3_AXIS_TDATA(30) <= \<const0>\;
  M3_AXIS_TDATA(29) <= \<const0>\;
  M3_AXIS_TDATA(28) <= \<const0>\;
  M3_AXIS_TDATA(27) <= \<const0>\;
  M3_AXIS_TDATA(26) <= \<const0>\;
  M3_AXIS_TDATA(25) <= \<const0>\;
  M3_AXIS_TDATA(24) <= \<const0>\;
  M3_AXIS_TDATA(23) <= \<const0>\;
  M3_AXIS_TDATA(22) <= \<const0>\;
  M3_AXIS_TDATA(21) <= \<const0>\;
  M3_AXIS_TDATA(20) <= \<const0>\;
  M3_AXIS_TDATA(19) <= \<const0>\;
  M3_AXIS_TDATA(18) <= \<const0>\;
  M3_AXIS_TDATA(17) <= \<const0>\;
  M3_AXIS_TDATA(16) <= \<const0>\;
  M3_AXIS_TDATA(15) <= \<const0>\;
  M3_AXIS_TDATA(14) <= \<const0>\;
  M3_AXIS_TDATA(13) <= \<const0>\;
  M3_AXIS_TDATA(12) <= \<const0>\;
  M3_AXIS_TDATA(11) <= \<const0>\;
  M3_AXIS_TDATA(10) <= \<const0>\;
  M3_AXIS_TDATA(9) <= \<const0>\;
  M3_AXIS_TDATA(8) <= \<const0>\;
  M3_AXIS_TDATA(7) <= \<const0>\;
  M3_AXIS_TDATA(6) <= \<const0>\;
  M3_AXIS_TDATA(5) <= \<const0>\;
  M3_AXIS_TDATA(4) <= \<const0>\;
  M3_AXIS_TDATA(3) <= \<const0>\;
  M3_AXIS_TDATA(2) <= \<const0>\;
  M3_AXIS_TDATA(1) <= \<const0>\;
  M3_AXIS_TDATA(0) <= \<const0>\;
  M3_AXIS_TLAST <= \<const0>\;
  M3_AXIS_TVALID <= \<const0>\;
  M4_AXIS_TDATA(31) <= \<const0>\;
  M4_AXIS_TDATA(30) <= \<const0>\;
  M4_AXIS_TDATA(29) <= \<const0>\;
  M4_AXIS_TDATA(28) <= \<const0>\;
  M4_AXIS_TDATA(27) <= \<const0>\;
  M4_AXIS_TDATA(26) <= \<const0>\;
  M4_AXIS_TDATA(25) <= \<const0>\;
  M4_AXIS_TDATA(24) <= \<const0>\;
  M4_AXIS_TDATA(23) <= \<const0>\;
  M4_AXIS_TDATA(22) <= \<const0>\;
  M4_AXIS_TDATA(21) <= \<const0>\;
  M4_AXIS_TDATA(20) <= \<const0>\;
  M4_AXIS_TDATA(19) <= \<const0>\;
  M4_AXIS_TDATA(18) <= \<const0>\;
  M4_AXIS_TDATA(17) <= \<const0>\;
  M4_AXIS_TDATA(16) <= \<const0>\;
  M4_AXIS_TDATA(15) <= \<const0>\;
  M4_AXIS_TDATA(14) <= \<const0>\;
  M4_AXIS_TDATA(13) <= \<const0>\;
  M4_AXIS_TDATA(12) <= \<const0>\;
  M4_AXIS_TDATA(11) <= \<const0>\;
  M4_AXIS_TDATA(10) <= \<const0>\;
  M4_AXIS_TDATA(9) <= \<const0>\;
  M4_AXIS_TDATA(8) <= \<const0>\;
  M4_AXIS_TDATA(7) <= \<const0>\;
  M4_AXIS_TDATA(6) <= \<const0>\;
  M4_AXIS_TDATA(5) <= \<const0>\;
  M4_AXIS_TDATA(4) <= \<const0>\;
  M4_AXIS_TDATA(3) <= \<const0>\;
  M4_AXIS_TDATA(2) <= \<const0>\;
  M4_AXIS_TDATA(1) <= \<const0>\;
  M4_AXIS_TDATA(0) <= \<const0>\;
  M4_AXIS_TLAST <= \<const0>\;
  M4_AXIS_TVALID <= \<const0>\;
  M5_AXIS_TDATA(31) <= \<const0>\;
  M5_AXIS_TDATA(30) <= \<const0>\;
  M5_AXIS_TDATA(29) <= \<const0>\;
  M5_AXIS_TDATA(28) <= \<const0>\;
  M5_AXIS_TDATA(27) <= \<const0>\;
  M5_AXIS_TDATA(26) <= \<const0>\;
  M5_AXIS_TDATA(25) <= \<const0>\;
  M5_AXIS_TDATA(24) <= \<const0>\;
  M5_AXIS_TDATA(23) <= \<const0>\;
  M5_AXIS_TDATA(22) <= \<const0>\;
  M5_AXIS_TDATA(21) <= \<const0>\;
  M5_AXIS_TDATA(20) <= \<const0>\;
  M5_AXIS_TDATA(19) <= \<const0>\;
  M5_AXIS_TDATA(18) <= \<const0>\;
  M5_AXIS_TDATA(17) <= \<const0>\;
  M5_AXIS_TDATA(16) <= \<const0>\;
  M5_AXIS_TDATA(15) <= \<const0>\;
  M5_AXIS_TDATA(14) <= \<const0>\;
  M5_AXIS_TDATA(13) <= \<const0>\;
  M5_AXIS_TDATA(12) <= \<const0>\;
  M5_AXIS_TDATA(11) <= \<const0>\;
  M5_AXIS_TDATA(10) <= \<const0>\;
  M5_AXIS_TDATA(9) <= \<const0>\;
  M5_AXIS_TDATA(8) <= \<const0>\;
  M5_AXIS_TDATA(7) <= \<const0>\;
  M5_AXIS_TDATA(6) <= \<const0>\;
  M5_AXIS_TDATA(5) <= \<const0>\;
  M5_AXIS_TDATA(4) <= \<const0>\;
  M5_AXIS_TDATA(3) <= \<const0>\;
  M5_AXIS_TDATA(2) <= \<const0>\;
  M5_AXIS_TDATA(1) <= \<const0>\;
  M5_AXIS_TDATA(0) <= \<const0>\;
  M5_AXIS_TLAST <= \<const0>\;
  M5_AXIS_TVALID <= \<const0>\;
  M6_AXIS_TDATA(31) <= \<const0>\;
  M6_AXIS_TDATA(30) <= \<const0>\;
  M6_AXIS_TDATA(29) <= \<const0>\;
  M6_AXIS_TDATA(28) <= \<const0>\;
  M6_AXIS_TDATA(27) <= \<const0>\;
  M6_AXIS_TDATA(26) <= \<const0>\;
  M6_AXIS_TDATA(25) <= \<const0>\;
  M6_AXIS_TDATA(24) <= \<const0>\;
  M6_AXIS_TDATA(23) <= \<const0>\;
  M6_AXIS_TDATA(22) <= \<const0>\;
  M6_AXIS_TDATA(21) <= \<const0>\;
  M6_AXIS_TDATA(20) <= \<const0>\;
  M6_AXIS_TDATA(19) <= \<const0>\;
  M6_AXIS_TDATA(18) <= \<const0>\;
  M6_AXIS_TDATA(17) <= \<const0>\;
  M6_AXIS_TDATA(16) <= \<const0>\;
  M6_AXIS_TDATA(15) <= \<const0>\;
  M6_AXIS_TDATA(14) <= \<const0>\;
  M6_AXIS_TDATA(13) <= \<const0>\;
  M6_AXIS_TDATA(12) <= \<const0>\;
  M6_AXIS_TDATA(11) <= \<const0>\;
  M6_AXIS_TDATA(10) <= \<const0>\;
  M6_AXIS_TDATA(9) <= \<const0>\;
  M6_AXIS_TDATA(8) <= \<const0>\;
  M6_AXIS_TDATA(7) <= \<const0>\;
  M6_AXIS_TDATA(6) <= \<const0>\;
  M6_AXIS_TDATA(5) <= \<const0>\;
  M6_AXIS_TDATA(4) <= \<const0>\;
  M6_AXIS_TDATA(3) <= \<const0>\;
  M6_AXIS_TDATA(2) <= \<const0>\;
  M6_AXIS_TDATA(1) <= \<const0>\;
  M6_AXIS_TDATA(0) <= \<const0>\;
  M6_AXIS_TLAST <= \<const0>\;
  M6_AXIS_TVALID <= \<const0>\;
  M7_AXIS_TDATA(31) <= \<const0>\;
  M7_AXIS_TDATA(30) <= \<const0>\;
  M7_AXIS_TDATA(29) <= \<const0>\;
  M7_AXIS_TDATA(28) <= \<const0>\;
  M7_AXIS_TDATA(27) <= \<const0>\;
  M7_AXIS_TDATA(26) <= \<const0>\;
  M7_AXIS_TDATA(25) <= \<const0>\;
  M7_AXIS_TDATA(24) <= \<const0>\;
  M7_AXIS_TDATA(23) <= \<const0>\;
  M7_AXIS_TDATA(22) <= \<const0>\;
  M7_AXIS_TDATA(21) <= \<const0>\;
  M7_AXIS_TDATA(20) <= \<const0>\;
  M7_AXIS_TDATA(19) <= \<const0>\;
  M7_AXIS_TDATA(18) <= \<const0>\;
  M7_AXIS_TDATA(17) <= \<const0>\;
  M7_AXIS_TDATA(16) <= \<const0>\;
  M7_AXIS_TDATA(15) <= \<const0>\;
  M7_AXIS_TDATA(14) <= \<const0>\;
  M7_AXIS_TDATA(13) <= \<const0>\;
  M7_AXIS_TDATA(12) <= \<const0>\;
  M7_AXIS_TDATA(11) <= \<const0>\;
  M7_AXIS_TDATA(10) <= \<const0>\;
  M7_AXIS_TDATA(9) <= \<const0>\;
  M7_AXIS_TDATA(8) <= \<const0>\;
  M7_AXIS_TDATA(7) <= \<const0>\;
  M7_AXIS_TDATA(6) <= \<const0>\;
  M7_AXIS_TDATA(5) <= \<const0>\;
  M7_AXIS_TDATA(4) <= \<const0>\;
  M7_AXIS_TDATA(3) <= \<const0>\;
  M7_AXIS_TDATA(2) <= \<const0>\;
  M7_AXIS_TDATA(1) <= \<const0>\;
  M7_AXIS_TDATA(0) <= \<const0>\;
  M7_AXIS_TLAST <= \<const0>\;
  M7_AXIS_TVALID <= \<const0>\;
  M8_AXIS_TDATA(31) <= \<const0>\;
  M8_AXIS_TDATA(30) <= \<const0>\;
  M8_AXIS_TDATA(29) <= \<const0>\;
  M8_AXIS_TDATA(28) <= \<const0>\;
  M8_AXIS_TDATA(27) <= \<const0>\;
  M8_AXIS_TDATA(26) <= \<const0>\;
  M8_AXIS_TDATA(25) <= \<const0>\;
  M8_AXIS_TDATA(24) <= \<const0>\;
  M8_AXIS_TDATA(23) <= \<const0>\;
  M8_AXIS_TDATA(22) <= \<const0>\;
  M8_AXIS_TDATA(21) <= \<const0>\;
  M8_AXIS_TDATA(20) <= \<const0>\;
  M8_AXIS_TDATA(19) <= \<const0>\;
  M8_AXIS_TDATA(18) <= \<const0>\;
  M8_AXIS_TDATA(17) <= \<const0>\;
  M8_AXIS_TDATA(16) <= \<const0>\;
  M8_AXIS_TDATA(15) <= \<const0>\;
  M8_AXIS_TDATA(14) <= \<const0>\;
  M8_AXIS_TDATA(13) <= \<const0>\;
  M8_AXIS_TDATA(12) <= \<const0>\;
  M8_AXIS_TDATA(11) <= \<const0>\;
  M8_AXIS_TDATA(10) <= \<const0>\;
  M8_AXIS_TDATA(9) <= \<const0>\;
  M8_AXIS_TDATA(8) <= \<const0>\;
  M8_AXIS_TDATA(7) <= \<const0>\;
  M8_AXIS_TDATA(6) <= \<const0>\;
  M8_AXIS_TDATA(5) <= \<const0>\;
  M8_AXIS_TDATA(4) <= \<const0>\;
  M8_AXIS_TDATA(3) <= \<const0>\;
  M8_AXIS_TDATA(2) <= \<const0>\;
  M8_AXIS_TDATA(1) <= \<const0>\;
  M8_AXIS_TDATA(0) <= \<const0>\;
  M8_AXIS_TLAST <= \<const0>\;
  M8_AXIS_TVALID <= \<const0>\;
  M9_AXIS_TDATA(31) <= \<const0>\;
  M9_AXIS_TDATA(30) <= \<const0>\;
  M9_AXIS_TDATA(29) <= \<const0>\;
  M9_AXIS_TDATA(28) <= \<const0>\;
  M9_AXIS_TDATA(27) <= \<const0>\;
  M9_AXIS_TDATA(26) <= \<const0>\;
  M9_AXIS_TDATA(25) <= \<const0>\;
  M9_AXIS_TDATA(24) <= \<const0>\;
  M9_AXIS_TDATA(23) <= \<const0>\;
  M9_AXIS_TDATA(22) <= \<const0>\;
  M9_AXIS_TDATA(21) <= \<const0>\;
  M9_AXIS_TDATA(20) <= \<const0>\;
  M9_AXIS_TDATA(19) <= \<const0>\;
  M9_AXIS_TDATA(18) <= \<const0>\;
  M9_AXIS_TDATA(17) <= \<const0>\;
  M9_AXIS_TDATA(16) <= \<const0>\;
  M9_AXIS_TDATA(15) <= \<const0>\;
  M9_AXIS_TDATA(14) <= \<const0>\;
  M9_AXIS_TDATA(13) <= \<const0>\;
  M9_AXIS_TDATA(12) <= \<const0>\;
  M9_AXIS_TDATA(11) <= \<const0>\;
  M9_AXIS_TDATA(10) <= \<const0>\;
  M9_AXIS_TDATA(9) <= \<const0>\;
  M9_AXIS_TDATA(8) <= \<const0>\;
  M9_AXIS_TDATA(7) <= \<const0>\;
  M9_AXIS_TDATA(6) <= \<const0>\;
  M9_AXIS_TDATA(5) <= \<const0>\;
  M9_AXIS_TDATA(4) <= \<const0>\;
  M9_AXIS_TDATA(3) <= \<const0>\;
  M9_AXIS_TDATA(2) <= \<const0>\;
  M9_AXIS_TDATA(1) <= \<const0>\;
  M9_AXIS_TDATA(0) <= \<const0>\;
  M9_AXIS_TLAST <= \<const0>\;
  M9_AXIS_TVALID <= \<const0>\;
  MB_Error <= \<const0>\;
  MB_Halted <= \^mb_halted\;
  M_AXI_DC_ACREADY <= \<const0>\;
  M_AXI_DC_ARADDR(31 downto 2) <= \^m_axi_dc_araddr\(31 downto 2);
  M_AXI_DC_ARADDR(1) <= \<const0>\;
  M_AXI_DC_ARADDR(0) <= \<const0>\;
  M_AXI_DC_ARBAR(1) <= \<const0>\;
  M_AXI_DC_ARBAR(0) <= \<const0>\;
  M_AXI_DC_ARBURST(1) <= \^m_axi_dc_arburst\(1);
  M_AXI_DC_ARBURST(0) <= \<const0>\;
  M_AXI_DC_ARCACHE(3) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARCACHE(2) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARCACHE(1) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARCACHE(0) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_DC_ARID(0) <= \<const0>\;
  M_AXI_DC_ARLEN(7) <= \<const0>\;
  M_AXI_DC_ARLEN(6) <= \<const0>\;
  M_AXI_DC_ARLEN(5) <= \<const0>\;
  M_AXI_DC_ARLEN(4) <= \<const0>\;
  M_AXI_DC_ARLEN(3) <= \<const0>\;
  M_AXI_DC_ARLEN(2) <= \<const0>\;
  M_AXI_DC_ARLEN(1) <= \^m_axi_dc_arlen\(0);
  M_AXI_DC_ARLEN(0) <= \^m_axi_dc_arlen\(0);
  M_AXI_DC_ARLOCK <= \<const0>\;
  M_AXI_DC_ARPROT(2) <= \<const0>\;
  M_AXI_DC_ARPROT(1) <= \<const0>\;
  M_AXI_DC_ARPROT(0) <= \<const0>\;
  M_AXI_DC_ARQOS(3) <= \<const1>\;
  M_AXI_DC_ARQOS(2) <= \<const1>\;
  M_AXI_DC_ARQOS(1) <= \<const0>\;
  M_AXI_DC_ARQOS(0) <= \<const0>\;
  M_AXI_DC_ARSIZE(2) <= \<const0>\;
  M_AXI_DC_ARSIZE(1) <= \<const1>\;
  M_AXI_DC_ARSIZE(0) <= \<const0>\;
  M_AXI_DC_ARSNOOP(3) <= \<const0>\;
  M_AXI_DC_ARSNOOP(2) <= \<const0>\;
  M_AXI_DC_ARSNOOP(1) <= \<const0>\;
  M_AXI_DC_ARSNOOP(0) <= \<const0>\;
  M_AXI_DC_ARUSER(4) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARUSER(3) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARUSER(2) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARUSER(1) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARUSER(0) <= \^m_axi_dc_arcache\(2);
  M_AXI_DC_ARVALID <= \^m_axi_dc_arvalid\;
  M_AXI_DC_AWADDR(31 downto 0) <= \^m_axi_dc_awaddr\(31 downto 0);
  M_AXI_DC_AWBAR(1) <= \<const0>\;
  M_AXI_DC_AWBAR(0) <= \<const0>\;
  M_AXI_DC_AWBURST(1) <= \<const0>\;
  M_AXI_DC_AWBURST(0) <= \<const1>\;
  M_AXI_DC_AWCACHE(3) <= \<const1>\;
  M_AXI_DC_AWCACHE(2) <= \<const1>\;
  M_AXI_DC_AWCACHE(1) <= \<const1>\;
  M_AXI_DC_AWCACHE(0) <= \<const1>\;
  M_AXI_DC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_DC_AWID(0) <= \<const0>\;
  M_AXI_DC_AWLEN(7) <= \<const0>\;
  M_AXI_DC_AWLEN(6) <= \<const0>\;
  M_AXI_DC_AWLEN(5) <= \<const0>\;
  M_AXI_DC_AWLEN(4) <= \<const0>\;
  M_AXI_DC_AWLEN(3) <= \<const0>\;
  M_AXI_DC_AWLEN(2) <= \<const0>\;
  M_AXI_DC_AWLEN(1) <= \<const0>\;
  M_AXI_DC_AWLEN(0) <= \<const0>\;
  M_AXI_DC_AWLOCK <= \<const0>\;
  M_AXI_DC_AWPROT(2) <= \<const0>\;
  M_AXI_DC_AWPROT(1) <= \<const0>\;
  M_AXI_DC_AWPROT(0) <= \<const0>\;
  M_AXI_DC_AWQOS(3) <= \<const1>\;
  M_AXI_DC_AWQOS(2) <= \<const0>\;
  M_AXI_DC_AWQOS(1) <= \<const0>\;
  M_AXI_DC_AWQOS(0) <= \<const0>\;
  M_AXI_DC_AWSIZE(2) <= \<const0>\;
  M_AXI_DC_AWSIZE(1) <= \<const1>\;
  M_AXI_DC_AWSIZE(0) <= \<const0>\;
  M_AXI_DC_AWSNOOP(2) <= \<const0>\;
  M_AXI_DC_AWSNOOP(1) <= \<const0>\;
  M_AXI_DC_AWSNOOP(0) <= \<const0>\;
  M_AXI_DC_AWUSER(4) <= \<const1>\;
  M_AXI_DC_AWUSER(3) <= \<const1>\;
  M_AXI_DC_AWUSER(2) <= \<const1>\;
  M_AXI_DC_AWUSER(1) <= \<const1>\;
  M_AXI_DC_AWUSER(0) <= \<const1>\;
  M_AXI_DC_AWVALID <= \^m_axi_dc_awvalid\;
  M_AXI_DC_BREADY <= \<const1>\;
  M_AXI_DC_CDDATA(31) <= \<const0>\;
  M_AXI_DC_CDDATA(30) <= \<const0>\;
  M_AXI_DC_CDDATA(29) <= \<const0>\;
  M_AXI_DC_CDDATA(28) <= \<const0>\;
  M_AXI_DC_CDDATA(27) <= \<const0>\;
  M_AXI_DC_CDDATA(26) <= \<const0>\;
  M_AXI_DC_CDDATA(25) <= \<const0>\;
  M_AXI_DC_CDDATA(24) <= \<const0>\;
  M_AXI_DC_CDDATA(23) <= \<const0>\;
  M_AXI_DC_CDDATA(22) <= \<const0>\;
  M_AXI_DC_CDDATA(21) <= \<const0>\;
  M_AXI_DC_CDDATA(20) <= \<const0>\;
  M_AXI_DC_CDDATA(19) <= \<const0>\;
  M_AXI_DC_CDDATA(18) <= \<const0>\;
  M_AXI_DC_CDDATA(17) <= \<const0>\;
  M_AXI_DC_CDDATA(16) <= \<const0>\;
  M_AXI_DC_CDDATA(15) <= \<const0>\;
  M_AXI_DC_CDDATA(14) <= \<const0>\;
  M_AXI_DC_CDDATA(13) <= \<const0>\;
  M_AXI_DC_CDDATA(12) <= \<const0>\;
  M_AXI_DC_CDDATA(11) <= \<const0>\;
  M_AXI_DC_CDDATA(10) <= \<const0>\;
  M_AXI_DC_CDDATA(9) <= \<const0>\;
  M_AXI_DC_CDDATA(8) <= \<const0>\;
  M_AXI_DC_CDDATA(7) <= \<const0>\;
  M_AXI_DC_CDDATA(6) <= \<const0>\;
  M_AXI_DC_CDDATA(5) <= \<const0>\;
  M_AXI_DC_CDDATA(4) <= \<const0>\;
  M_AXI_DC_CDDATA(3) <= \<const0>\;
  M_AXI_DC_CDDATA(2) <= \<const0>\;
  M_AXI_DC_CDDATA(1) <= \<const0>\;
  M_AXI_DC_CDDATA(0) <= \<const0>\;
  M_AXI_DC_CDLAST <= \<const0>\;
  M_AXI_DC_CDVALID <= \<const0>\;
  M_AXI_DC_CRRESP(4) <= \<const0>\;
  M_AXI_DC_CRRESP(3) <= \<const0>\;
  M_AXI_DC_CRRESP(2) <= \<const0>\;
  M_AXI_DC_CRRESP(1) <= \<const0>\;
  M_AXI_DC_CRRESP(0) <= \<const0>\;
  M_AXI_DC_CRVALID <= \<const0>\;
  M_AXI_DC_RACK <= \<const0>\;
  M_AXI_DC_RREADY <= \<const1>\;
  M_AXI_DC_WACK <= \<const0>\;
  M_AXI_DC_WDATA(31 downto 0) <= \^m_axi_dc_wdata\(31 downto 0);
  M_AXI_DC_WLAST <= \^m_axi_dc_wlast\;
  M_AXI_DC_WSTRB(3 downto 0) <= \^m_axi_dc_wstrb\(3 downto 0);
  M_AXI_DC_WUSER(0) <= \<const0>\;
  M_AXI_DC_WVALID <= \^m_axi_dc_wvalid\;
  M_AXI_DP_ARADDR(31 downto 0) <= \^m_axi_dp_awaddr\(31 downto 0);
  M_AXI_DP_ARBURST(1) <= \<const0>\;
  M_AXI_DP_ARBURST(0) <= \<const1>\;
  M_AXI_DP_ARCACHE(3) <= \<const0>\;
  M_AXI_DP_ARCACHE(2) <= \<const0>\;
  M_AXI_DP_ARCACHE(1) <= \<const1>\;
  M_AXI_DP_ARCACHE(0) <= \<const1>\;
  M_AXI_DP_ARID(0) <= \<const0>\;
  M_AXI_DP_ARLEN(7) <= \<const0>\;
  M_AXI_DP_ARLEN(6) <= \<const0>\;
  M_AXI_DP_ARLEN(5) <= \<const0>\;
  M_AXI_DP_ARLEN(4) <= \<const0>\;
  M_AXI_DP_ARLEN(3) <= \<const0>\;
  M_AXI_DP_ARLEN(2) <= \<const0>\;
  M_AXI_DP_ARLEN(1) <= \<const0>\;
  M_AXI_DP_ARLEN(0) <= \<const0>\;
  M_AXI_DP_ARLOCK <= \<const0>\;
  M_AXI_DP_ARPROT(2) <= \<const0>\;
  M_AXI_DP_ARPROT(1) <= \<const0>\;
  M_AXI_DP_ARPROT(0) <= \<const0>\;
  M_AXI_DP_ARQOS(3) <= \<const1>\;
  M_AXI_DP_ARQOS(2) <= \<const0>\;
  M_AXI_DP_ARQOS(1) <= \<const0>\;
  M_AXI_DP_ARQOS(0) <= \<const0>\;
  M_AXI_DP_ARSIZE(2) <= \<const0>\;
  M_AXI_DP_ARSIZE(1) <= \<const1>\;
  M_AXI_DP_ARSIZE(0) <= \<const0>\;
  M_AXI_DP_ARVALID <= \^m_axi_dp_arvalid\;
  M_AXI_DP_AWADDR(31 downto 0) <= \^m_axi_dp_awaddr\(31 downto 0);
  M_AXI_DP_AWBURST(1) <= \<const0>\;
  M_AXI_DP_AWBURST(0) <= \<const1>\;
  M_AXI_DP_AWCACHE(3) <= \<const0>\;
  M_AXI_DP_AWCACHE(2) <= \<const0>\;
  M_AXI_DP_AWCACHE(1) <= \<const1>\;
  M_AXI_DP_AWCACHE(0) <= \<const1>\;
  M_AXI_DP_AWID(0) <= \<const0>\;
  M_AXI_DP_AWLEN(7) <= \<const0>\;
  M_AXI_DP_AWLEN(6) <= \<const0>\;
  M_AXI_DP_AWLEN(5) <= \<const0>\;
  M_AXI_DP_AWLEN(4) <= \<const0>\;
  M_AXI_DP_AWLEN(3) <= \<const0>\;
  M_AXI_DP_AWLEN(2) <= \<const0>\;
  M_AXI_DP_AWLEN(1) <= \<const0>\;
  M_AXI_DP_AWLEN(0) <= \<const0>\;
  M_AXI_DP_AWLOCK <= \<const0>\;
  M_AXI_DP_AWPROT(2) <= \<const0>\;
  M_AXI_DP_AWPROT(1) <= \<const0>\;
  M_AXI_DP_AWPROT(0) <= \<const0>\;
  M_AXI_DP_AWQOS(3) <= \<const1>\;
  M_AXI_DP_AWQOS(2) <= \<const0>\;
  M_AXI_DP_AWQOS(1) <= \<const0>\;
  M_AXI_DP_AWQOS(0) <= \<const0>\;
  M_AXI_DP_AWSIZE(2) <= \<const0>\;
  M_AXI_DP_AWSIZE(1) <= \<const1>\;
  M_AXI_DP_AWSIZE(0) <= \<const0>\;
  M_AXI_DP_AWVALID <= \^m_axi_dp_awvalid\;
  M_AXI_DP_BREADY <= \<const1>\;
  M_AXI_DP_RREADY <= \<const1>\;
  M_AXI_DP_WDATA(31 downto 0) <= \^m_axi_dp_wdata\(31 downto 0);
  M_AXI_DP_WLAST <= \<const1>\;
  M_AXI_DP_WSTRB(3 downto 0) <= \^m_axi_dp_wstrb\(3 downto 0);
  M_AXI_DP_WVALID <= \^m_axi_dp_wvalid\;
  M_AXI_IC_ACREADY <= \<const0>\;
  M_AXI_IC_ARADDR(31 downto 2) <= \^m_axi_ic_araddr\(31 downto 2);
  M_AXI_IC_ARADDR(1) <= \<const0>\;
  M_AXI_IC_ARADDR(0) <= \<const0>\;
  M_AXI_IC_ARBAR(1) <= \<const0>\;
  M_AXI_IC_ARBAR(0) <= \<const0>\;
  M_AXI_IC_ARBURST(1) <= \^m_axi_ic_arburst\(1);
  M_AXI_IC_ARBURST(0) <= \<const0>\;
  M_AXI_IC_ARCACHE(3) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARCACHE(2) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARCACHE(1) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARCACHE(0) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_IC_ARID(0) <= \<const0>\;
  M_AXI_IC_ARLEN(7) <= \<const0>\;
  M_AXI_IC_ARLEN(6) <= \<const0>\;
  M_AXI_IC_ARLEN(5) <= \<const0>\;
  M_AXI_IC_ARLEN(4) <= \<const0>\;
  M_AXI_IC_ARLEN(3) <= \<const0>\;
  M_AXI_IC_ARLEN(2) <= \<const0>\;
  M_AXI_IC_ARLEN(1) <= \^m_axi_ic_arlen\(0);
  M_AXI_IC_ARLEN(0) <= \^m_axi_ic_arlen\(0);
  M_AXI_IC_ARLOCK <= \<const0>\;
  M_AXI_IC_ARPROT(2) <= \<const1>\;
  M_AXI_IC_ARPROT(1) <= \<const0>\;
  M_AXI_IC_ARPROT(0) <= \<const0>\;
  M_AXI_IC_ARQOS(3) <= \<const0>\;
  M_AXI_IC_ARQOS(2) <= \<const1>\;
  M_AXI_IC_ARQOS(1) <= \<const1>\;
  M_AXI_IC_ARQOS(0) <= \<const1>\;
  M_AXI_IC_ARSIZE(2) <= \<const0>\;
  M_AXI_IC_ARSIZE(1) <= \<const1>\;
  M_AXI_IC_ARSIZE(0) <= \<const0>\;
  M_AXI_IC_ARSNOOP(3) <= \<const0>\;
  M_AXI_IC_ARSNOOP(2) <= \<const0>\;
  M_AXI_IC_ARSNOOP(1) <= \<const0>\;
  M_AXI_IC_ARSNOOP(0) <= \<const0>\;
  M_AXI_IC_ARUSER(4) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARUSER(3) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARUSER(2) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARUSER(1) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARUSER(0) <= \^m_axi_ic_arcache\(2);
  M_AXI_IC_ARVALID <= \^m_axi_ic_arvalid\;
  M_AXI_IC_AWADDR(31) <= \<const0>\;
  M_AXI_IC_AWADDR(30) <= \<const0>\;
  M_AXI_IC_AWADDR(29) <= \<const0>\;
  M_AXI_IC_AWADDR(28) <= \<const0>\;
  M_AXI_IC_AWADDR(27) <= \<const0>\;
  M_AXI_IC_AWADDR(26) <= \<const0>\;
  M_AXI_IC_AWADDR(25) <= \<const0>\;
  M_AXI_IC_AWADDR(24) <= \<const0>\;
  M_AXI_IC_AWADDR(23) <= \<const0>\;
  M_AXI_IC_AWADDR(22) <= \<const0>\;
  M_AXI_IC_AWADDR(21) <= \<const0>\;
  M_AXI_IC_AWADDR(20) <= \<const0>\;
  M_AXI_IC_AWADDR(19) <= \<const0>\;
  M_AXI_IC_AWADDR(18) <= \<const0>\;
  M_AXI_IC_AWADDR(17) <= \<const0>\;
  M_AXI_IC_AWADDR(16) <= \<const0>\;
  M_AXI_IC_AWADDR(15) <= \<const0>\;
  M_AXI_IC_AWADDR(14) <= \<const0>\;
  M_AXI_IC_AWADDR(13) <= \<const0>\;
  M_AXI_IC_AWADDR(12) <= \<const0>\;
  M_AXI_IC_AWADDR(11) <= \<const0>\;
  M_AXI_IC_AWADDR(10) <= \<const0>\;
  M_AXI_IC_AWADDR(9) <= \<const0>\;
  M_AXI_IC_AWADDR(8) <= \<const0>\;
  M_AXI_IC_AWADDR(7) <= \<const0>\;
  M_AXI_IC_AWADDR(6) <= \<const0>\;
  M_AXI_IC_AWADDR(5) <= \<const0>\;
  M_AXI_IC_AWADDR(4) <= \<const0>\;
  M_AXI_IC_AWADDR(3) <= \<const0>\;
  M_AXI_IC_AWADDR(2) <= \<const0>\;
  M_AXI_IC_AWADDR(1) <= \<const0>\;
  M_AXI_IC_AWADDR(0) <= \<const0>\;
  M_AXI_IC_AWBAR(1) <= \<const0>\;
  M_AXI_IC_AWBAR(0) <= \<const0>\;
  M_AXI_IC_AWBURST(1) <= \<const0>\;
  M_AXI_IC_AWBURST(0) <= \<const0>\;
  M_AXI_IC_AWCACHE(3) <= \<const0>\;
  M_AXI_IC_AWCACHE(2) <= \<const0>\;
  M_AXI_IC_AWCACHE(1) <= \<const0>\;
  M_AXI_IC_AWCACHE(0) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_IC_AWID(0) <= \<const0>\;
  M_AXI_IC_AWLEN(7) <= \<const0>\;
  M_AXI_IC_AWLEN(6) <= \<const0>\;
  M_AXI_IC_AWLEN(5) <= \<const0>\;
  M_AXI_IC_AWLEN(4) <= \<const0>\;
  M_AXI_IC_AWLEN(3) <= \<const0>\;
  M_AXI_IC_AWLEN(2) <= \<const0>\;
  M_AXI_IC_AWLEN(1) <= \<const0>\;
  M_AXI_IC_AWLEN(0) <= \<const0>\;
  M_AXI_IC_AWLOCK <= \<const0>\;
  M_AXI_IC_AWPROT(2) <= \<const1>\;
  M_AXI_IC_AWPROT(1) <= \<const0>\;
  M_AXI_IC_AWPROT(0) <= \<const0>\;
  M_AXI_IC_AWQOS(3) <= \<const1>\;
  M_AXI_IC_AWQOS(2) <= \<const0>\;
  M_AXI_IC_AWQOS(1) <= \<const0>\;
  M_AXI_IC_AWQOS(0) <= \<const0>\;
  M_AXI_IC_AWSIZE(2) <= \<const0>\;
  M_AXI_IC_AWSIZE(1) <= \<const0>\;
  M_AXI_IC_AWSIZE(0) <= \<const0>\;
  M_AXI_IC_AWSNOOP(2) <= \<const0>\;
  M_AXI_IC_AWSNOOP(1) <= \<const0>\;
  M_AXI_IC_AWSNOOP(0) <= \<const0>\;
  M_AXI_IC_AWUSER(4) <= \<const0>\;
  M_AXI_IC_AWUSER(3) <= \<const0>\;
  M_AXI_IC_AWUSER(2) <= \<const0>\;
  M_AXI_IC_AWUSER(1) <= \<const0>\;
  M_AXI_IC_AWUSER(0) <= \<const0>\;
  M_AXI_IC_AWVALID <= \<const0>\;
  M_AXI_IC_BREADY <= \<const0>\;
  M_AXI_IC_CDDATA(31) <= \<const0>\;
  M_AXI_IC_CDDATA(30) <= \<const0>\;
  M_AXI_IC_CDDATA(29) <= \<const0>\;
  M_AXI_IC_CDDATA(28) <= \<const0>\;
  M_AXI_IC_CDDATA(27) <= \<const0>\;
  M_AXI_IC_CDDATA(26) <= \<const0>\;
  M_AXI_IC_CDDATA(25) <= \<const0>\;
  M_AXI_IC_CDDATA(24) <= \<const0>\;
  M_AXI_IC_CDDATA(23) <= \<const0>\;
  M_AXI_IC_CDDATA(22) <= \<const0>\;
  M_AXI_IC_CDDATA(21) <= \<const0>\;
  M_AXI_IC_CDDATA(20) <= \<const0>\;
  M_AXI_IC_CDDATA(19) <= \<const0>\;
  M_AXI_IC_CDDATA(18) <= \<const0>\;
  M_AXI_IC_CDDATA(17) <= \<const0>\;
  M_AXI_IC_CDDATA(16) <= \<const0>\;
  M_AXI_IC_CDDATA(15) <= \<const0>\;
  M_AXI_IC_CDDATA(14) <= \<const0>\;
  M_AXI_IC_CDDATA(13) <= \<const0>\;
  M_AXI_IC_CDDATA(12) <= \<const0>\;
  M_AXI_IC_CDDATA(11) <= \<const0>\;
  M_AXI_IC_CDDATA(10) <= \<const0>\;
  M_AXI_IC_CDDATA(9) <= \<const0>\;
  M_AXI_IC_CDDATA(8) <= \<const0>\;
  M_AXI_IC_CDDATA(7) <= \<const0>\;
  M_AXI_IC_CDDATA(6) <= \<const0>\;
  M_AXI_IC_CDDATA(5) <= \<const0>\;
  M_AXI_IC_CDDATA(4) <= \<const0>\;
  M_AXI_IC_CDDATA(3) <= \<const0>\;
  M_AXI_IC_CDDATA(2) <= \<const0>\;
  M_AXI_IC_CDDATA(1) <= \<const0>\;
  M_AXI_IC_CDDATA(0) <= \<const0>\;
  M_AXI_IC_CDLAST <= \<const0>\;
  M_AXI_IC_CDVALID <= \<const0>\;
  M_AXI_IC_CRRESP(4) <= \<const0>\;
  M_AXI_IC_CRRESP(3) <= \<const0>\;
  M_AXI_IC_CRRESP(2) <= \<const0>\;
  M_AXI_IC_CRRESP(1) <= \<const0>\;
  M_AXI_IC_CRRESP(0) <= \<const0>\;
  M_AXI_IC_CRVALID <= \<const0>\;
  M_AXI_IC_RACK <= \<const0>\;
  M_AXI_IC_RREADY <= \^m_axi_ic_rready\;
  M_AXI_IC_WACK <= \<const0>\;
  M_AXI_IC_WDATA(31) <= \<const0>\;
  M_AXI_IC_WDATA(30) <= \<const0>\;
  M_AXI_IC_WDATA(29) <= \<const0>\;
  M_AXI_IC_WDATA(28) <= \<const0>\;
  M_AXI_IC_WDATA(27) <= \<const0>\;
  M_AXI_IC_WDATA(26) <= \<const0>\;
  M_AXI_IC_WDATA(25) <= \<const0>\;
  M_AXI_IC_WDATA(24) <= \<const0>\;
  M_AXI_IC_WDATA(23) <= \<const0>\;
  M_AXI_IC_WDATA(22) <= \<const0>\;
  M_AXI_IC_WDATA(21) <= \<const0>\;
  M_AXI_IC_WDATA(20) <= \<const0>\;
  M_AXI_IC_WDATA(19) <= \<const0>\;
  M_AXI_IC_WDATA(18) <= \<const0>\;
  M_AXI_IC_WDATA(17) <= \<const0>\;
  M_AXI_IC_WDATA(16) <= \<const0>\;
  M_AXI_IC_WDATA(15) <= \<const0>\;
  M_AXI_IC_WDATA(14) <= \<const0>\;
  M_AXI_IC_WDATA(13) <= \<const0>\;
  M_AXI_IC_WDATA(12) <= \<const0>\;
  M_AXI_IC_WDATA(11) <= \<const0>\;
  M_AXI_IC_WDATA(10) <= \<const0>\;
  M_AXI_IC_WDATA(9) <= \<const0>\;
  M_AXI_IC_WDATA(8) <= \<const0>\;
  M_AXI_IC_WDATA(7) <= \<const0>\;
  M_AXI_IC_WDATA(6) <= \<const0>\;
  M_AXI_IC_WDATA(5) <= \<const0>\;
  M_AXI_IC_WDATA(4) <= \<const0>\;
  M_AXI_IC_WDATA(3) <= \<const0>\;
  M_AXI_IC_WDATA(2) <= \<const0>\;
  M_AXI_IC_WDATA(1) <= \<const0>\;
  M_AXI_IC_WDATA(0) <= \<const0>\;
  M_AXI_IC_WLAST <= \<const0>\;
  M_AXI_IC_WSTRB(3) <= \<const0>\;
  M_AXI_IC_WSTRB(2) <= \<const0>\;
  M_AXI_IC_WSTRB(1) <= \<const0>\;
  M_AXI_IC_WSTRB(0) <= \<const0>\;
  M_AXI_IC_WUSER(0) <= \<const0>\;
  M_AXI_IC_WVALID <= \<const0>\;
  M_AXI_IP_ARADDR(31) <= \<const0>\;
  M_AXI_IP_ARADDR(30) <= \<const0>\;
  M_AXI_IP_ARADDR(29) <= \<const0>\;
  M_AXI_IP_ARADDR(28) <= \<const0>\;
  M_AXI_IP_ARADDR(27) <= \<const0>\;
  M_AXI_IP_ARADDR(26) <= \<const0>\;
  M_AXI_IP_ARADDR(25) <= \<const0>\;
  M_AXI_IP_ARADDR(24) <= \<const0>\;
  M_AXI_IP_ARADDR(23) <= \<const0>\;
  M_AXI_IP_ARADDR(22) <= \<const0>\;
  M_AXI_IP_ARADDR(21) <= \<const0>\;
  M_AXI_IP_ARADDR(20) <= \<const0>\;
  M_AXI_IP_ARADDR(19) <= \<const0>\;
  M_AXI_IP_ARADDR(18) <= \<const0>\;
  M_AXI_IP_ARADDR(17) <= \<const0>\;
  M_AXI_IP_ARADDR(16) <= \<const0>\;
  M_AXI_IP_ARADDR(15) <= \<const0>\;
  M_AXI_IP_ARADDR(14) <= \<const0>\;
  M_AXI_IP_ARADDR(13) <= \<const0>\;
  M_AXI_IP_ARADDR(12) <= \<const0>\;
  M_AXI_IP_ARADDR(11) <= \<const0>\;
  M_AXI_IP_ARADDR(10) <= \<const0>\;
  M_AXI_IP_ARADDR(9) <= \<const0>\;
  M_AXI_IP_ARADDR(8) <= \<const0>\;
  M_AXI_IP_ARADDR(7) <= \<const0>\;
  M_AXI_IP_ARADDR(6) <= \<const0>\;
  M_AXI_IP_ARADDR(5) <= \<const0>\;
  M_AXI_IP_ARADDR(4) <= \<const0>\;
  M_AXI_IP_ARADDR(3) <= \<const0>\;
  M_AXI_IP_ARADDR(2) <= \<const0>\;
  M_AXI_IP_ARADDR(1) <= \<const0>\;
  M_AXI_IP_ARADDR(0) <= \<const0>\;
  M_AXI_IP_ARBURST(1) <= \<const0>\;
  M_AXI_IP_ARBURST(0) <= \<const0>\;
  M_AXI_IP_ARCACHE(3) <= \<const0>\;
  M_AXI_IP_ARCACHE(2) <= \<const0>\;
  M_AXI_IP_ARCACHE(1) <= \<const0>\;
  M_AXI_IP_ARCACHE(0) <= \<const0>\;
  M_AXI_IP_ARID(0) <= \<const0>\;
  M_AXI_IP_ARLEN(7) <= \<const0>\;
  M_AXI_IP_ARLEN(6) <= \<const0>\;
  M_AXI_IP_ARLEN(5) <= \<const0>\;
  M_AXI_IP_ARLEN(4) <= \<const0>\;
  M_AXI_IP_ARLEN(3) <= \<const0>\;
  M_AXI_IP_ARLEN(2) <= \<const0>\;
  M_AXI_IP_ARLEN(1) <= \<const0>\;
  M_AXI_IP_ARLEN(0) <= \<const0>\;
  M_AXI_IP_ARLOCK <= \<const0>\;
  M_AXI_IP_ARPROT(2) <= \<const0>\;
  M_AXI_IP_ARPROT(1) <= \<const0>\;
  M_AXI_IP_ARPROT(0) <= \<const0>\;
  M_AXI_IP_ARQOS(3) <= \<const0>\;
  M_AXI_IP_ARQOS(2) <= \<const0>\;
  M_AXI_IP_ARQOS(1) <= \<const0>\;
  M_AXI_IP_ARQOS(0) <= \<const0>\;
  M_AXI_IP_ARSIZE(2) <= \<const0>\;
  M_AXI_IP_ARSIZE(1) <= \<const0>\;
  M_AXI_IP_ARSIZE(0) <= \<const0>\;
  M_AXI_IP_ARVALID <= \<const0>\;
  M_AXI_IP_AWADDR(31) <= \<const0>\;
  M_AXI_IP_AWADDR(30) <= \<const0>\;
  M_AXI_IP_AWADDR(29) <= \<const0>\;
  M_AXI_IP_AWADDR(28) <= \<const0>\;
  M_AXI_IP_AWADDR(27) <= \<const0>\;
  M_AXI_IP_AWADDR(26) <= \<const0>\;
  M_AXI_IP_AWADDR(25) <= \<const0>\;
  M_AXI_IP_AWADDR(24) <= \<const0>\;
  M_AXI_IP_AWADDR(23) <= \<const0>\;
  M_AXI_IP_AWADDR(22) <= \<const0>\;
  M_AXI_IP_AWADDR(21) <= \<const0>\;
  M_AXI_IP_AWADDR(20) <= \<const0>\;
  M_AXI_IP_AWADDR(19) <= \<const0>\;
  M_AXI_IP_AWADDR(18) <= \<const0>\;
  M_AXI_IP_AWADDR(17) <= \<const0>\;
  M_AXI_IP_AWADDR(16) <= \<const0>\;
  M_AXI_IP_AWADDR(15) <= \<const0>\;
  M_AXI_IP_AWADDR(14) <= \<const0>\;
  M_AXI_IP_AWADDR(13) <= \<const0>\;
  M_AXI_IP_AWADDR(12) <= \<const0>\;
  M_AXI_IP_AWADDR(11) <= \<const0>\;
  M_AXI_IP_AWADDR(10) <= \<const0>\;
  M_AXI_IP_AWADDR(9) <= \<const0>\;
  M_AXI_IP_AWADDR(8) <= \<const0>\;
  M_AXI_IP_AWADDR(7) <= \<const0>\;
  M_AXI_IP_AWADDR(6) <= \<const0>\;
  M_AXI_IP_AWADDR(5) <= \<const0>\;
  M_AXI_IP_AWADDR(4) <= \<const0>\;
  M_AXI_IP_AWADDR(3) <= \<const0>\;
  M_AXI_IP_AWADDR(2) <= \<const0>\;
  M_AXI_IP_AWADDR(1) <= \<const0>\;
  M_AXI_IP_AWADDR(0) <= \<const0>\;
  M_AXI_IP_AWBURST(1) <= \<const0>\;
  M_AXI_IP_AWBURST(0) <= \<const0>\;
  M_AXI_IP_AWCACHE(3) <= \<const0>\;
  M_AXI_IP_AWCACHE(2) <= \<const0>\;
  M_AXI_IP_AWCACHE(1) <= \<const0>\;
  M_AXI_IP_AWCACHE(0) <= \<const0>\;
  M_AXI_IP_AWID(0) <= \<const0>\;
  M_AXI_IP_AWLEN(7) <= \<const0>\;
  M_AXI_IP_AWLEN(6) <= \<const0>\;
  M_AXI_IP_AWLEN(5) <= \<const0>\;
  M_AXI_IP_AWLEN(4) <= \<const0>\;
  M_AXI_IP_AWLEN(3) <= \<const0>\;
  M_AXI_IP_AWLEN(2) <= \<const0>\;
  M_AXI_IP_AWLEN(1) <= \<const0>\;
  M_AXI_IP_AWLEN(0) <= \<const0>\;
  M_AXI_IP_AWLOCK <= \<const0>\;
  M_AXI_IP_AWPROT(2) <= \<const0>\;
  M_AXI_IP_AWPROT(1) <= \<const0>\;
  M_AXI_IP_AWPROT(0) <= \<const0>\;
  M_AXI_IP_AWQOS(3) <= \<const0>\;
  M_AXI_IP_AWQOS(2) <= \<const0>\;
  M_AXI_IP_AWQOS(1) <= \<const0>\;
  M_AXI_IP_AWQOS(0) <= \<const0>\;
  M_AXI_IP_AWSIZE(2) <= \<const0>\;
  M_AXI_IP_AWSIZE(1) <= \<const0>\;
  M_AXI_IP_AWSIZE(0) <= \<const0>\;
  M_AXI_IP_AWVALID <= \<const0>\;
  M_AXI_IP_BREADY <= \<const0>\;
  M_AXI_IP_RREADY <= \<const0>\;
  M_AXI_IP_WDATA(31) <= \<const0>\;
  M_AXI_IP_WDATA(30) <= \<const0>\;
  M_AXI_IP_WDATA(29) <= \<const0>\;
  M_AXI_IP_WDATA(28) <= \<const0>\;
  M_AXI_IP_WDATA(27) <= \<const0>\;
  M_AXI_IP_WDATA(26) <= \<const0>\;
  M_AXI_IP_WDATA(25) <= \<const0>\;
  M_AXI_IP_WDATA(24) <= \<const0>\;
  M_AXI_IP_WDATA(23) <= \<const0>\;
  M_AXI_IP_WDATA(22) <= \<const0>\;
  M_AXI_IP_WDATA(21) <= \<const0>\;
  M_AXI_IP_WDATA(20) <= \<const0>\;
  M_AXI_IP_WDATA(19) <= \<const0>\;
  M_AXI_IP_WDATA(18) <= \<const0>\;
  M_AXI_IP_WDATA(17) <= \<const0>\;
  M_AXI_IP_WDATA(16) <= \<const0>\;
  M_AXI_IP_WDATA(15) <= \<const0>\;
  M_AXI_IP_WDATA(14) <= \<const0>\;
  M_AXI_IP_WDATA(13) <= \<const0>\;
  M_AXI_IP_WDATA(12) <= \<const0>\;
  M_AXI_IP_WDATA(11) <= \<const0>\;
  M_AXI_IP_WDATA(10) <= \<const0>\;
  M_AXI_IP_WDATA(9) <= \<const0>\;
  M_AXI_IP_WDATA(8) <= \<const0>\;
  M_AXI_IP_WDATA(7) <= \<const0>\;
  M_AXI_IP_WDATA(6) <= \<const0>\;
  M_AXI_IP_WDATA(5) <= \<const0>\;
  M_AXI_IP_WDATA(4) <= \<const0>\;
  M_AXI_IP_WDATA(3) <= \<const0>\;
  M_AXI_IP_WDATA(2) <= \<const0>\;
  M_AXI_IP_WDATA(1) <= \<const0>\;
  M_AXI_IP_WDATA(0) <= \<const0>\;
  M_AXI_IP_WLAST <= \<const0>\;
  M_AXI_IP_WSTRB(3) <= \<const0>\;
  M_AXI_IP_WSTRB(2) <= \<const0>\;
  M_AXI_IP_WSTRB(1) <= \<const0>\;
  M_AXI_IP_WSTRB(0) <= \<const0>\;
  M_AXI_IP_WVALID <= \<const0>\;
  RAM_From(255) <= \<const0>\;
  RAM_From(254) <= \<const0>\;
  RAM_From(253) <= \<const0>\;
  RAM_From(252) <= \<const0>\;
  RAM_From(251) <= \<const0>\;
  RAM_From(250) <= \<const0>\;
  RAM_From(249) <= \<const0>\;
  RAM_From(248) <= \<const0>\;
  RAM_From(247) <= \<const0>\;
  RAM_From(246) <= \<const0>\;
  RAM_From(245) <= \<const0>\;
  RAM_From(244) <= \<const0>\;
  RAM_From(243) <= \<const0>\;
  RAM_From(242) <= \<const0>\;
  RAM_From(241) <= \<const0>\;
  RAM_From(240) <= \<const0>\;
  RAM_From(239) <= \<const0>\;
  RAM_From(238) <= \<const0>\;
  RAM_From(237) <= \<const0>\;
  RAM_From(236) <= \<const0>\;
  RAM_From(235) <= \<const0>\;
  RAM_From(234) <= \<const0>\;
  RAM_From(233) <= \<const0>\;
  RAM_From(232) <= \<const0>\;
  RAM_From(231) <= \<const0>\;
  RAM_From(230) <= \<const0>\;
  RAM_From(229) <= \<const0>\;
  RAM_From(228) <= \<const0>\;
  RAM_From(227) <= \<const0>\;
  RAM_From(226) <= \<const0>\;
  RAM_From(225) <= \<const0>\;
  RAM_From(224) <= \<const0>\;
  RAM_From(223) <= \<const0>\;
  RAM_From(222) <= \<const0>\;
  RAM_From(221) <= \<const0>\;
  RAM_From(220) <= \<const0>\;
  RAM_From(219) <= \<const0>\;
  RAM_From(218) <= \<const0>\;
  RAM_From(217) <= \<const0>\;
  RAM_From(216) <= \<const0>\;
  RAM_From(215) <= \<const0>\;
  RAM_From(214) <= \<const0>\;
  RAM_From(213) <= \<const0>\;
  RAM_From(212) <= \<const0>\;
  RAM_From(211) <= \<const0>\;
  RAM_From(210) <= \<const0>\;
  RAM_From(209) <= \<const0>\;
  RAM_From(208) <= \<const0>\;
  RAM_From(207) <= \<const0>\;
  RAM_From(206) <= \<const0>\;
  RAM_From(205) <= \<const0>\;
  RAM_From(204) <= \<const0>\;
  RAM_From(203) <= \<const0>\;
  RAM_From(202) <= \<const0>\;
  RAM_From(201) <= \<const0>\;
  RAM_From(200) <= \<const0>\;
  RAM_From(199) <= \<const0>\;
  RAM_From(198) <= \<const0>\;
  RAM_From(197) <= \<const0>\;
  RAM_From(196) <= \<const0>\;
  RAM_From(195) <= \<const0>\;
  RAM_From(194) <= \<const0>\;
  RAM_From(193) <= \<const0>\;
  RAM_From(192) <= \<const0>\;
  RAM_From(191) <= \<const0>\;
  RAM_From(190) <= \<const0>\;
  RAM_From(189) <= \<const0>\;
  RAM_From(188) <= \<const0>\;
  RAM_From(187) <= \<const0>\;
  RAM_From(186) <= \<const0>\;
  RAM_From(185) <= \<const0>\;
  RAM_From(184) <= \<const0>\;
  RAM_From(183) <= \<const0>\;
  RAM_From(182) <= \<const0>\;
  RAM_From(181) <= \<const0>\;
  RAM_From(180) <= \<const0>\;
  RAM_From(179) <= \<const0>\;
  RAM_From(178) <= \<const0>\;
  RAM_From(177) <= \<const0>\;
  RAM_From(176) <= \<const0>\;
  RAM_From(175) <= \<const0>\;
  RAM_From(174) <= \<const0>\;
  RAM_From(173) <= \<const0>\;
  RAM_From(172) <= \<const0>\;
  RAM_From(171) <= \<const0>\;
  RAM_From(170) <= \<const0>\;
  RAM_From(169) <= \<const0>\;
  RAM_From(168) <= \<const0>\;
  RAM_From(167) <= \<const0>\;
  RAM_From(166) <= \<const0>\;
  RAM_From(165) <= \<const0>\;
  RAM_From(164) <= \<const0>\;
  RAM_From(163) <= \<const0>\;
  RAM_From(162) <= \<const0>\;
  RAM_From(161) <= \<const0>\;
  RAM_From(160) <= \<const0>\;
  RAM_From(159) <= \<const0>\;
  RAM_From(158) <= \<const0>\;
  RAM_From(157) <= \<const0>\;
  RAM_From(156) <= \<const0>\;
  RAM_From(155) <= \<const0>\;
  RAM_From(154) <= \<const0>\;
  RAM_From(153) <= \<const0>\;
  RAM_From(152) <= \<const0>\;
  RAM_From(151) <= \<const0>\;
  RAM_From(150) <= \<const0>\;
  RAM_From(149) <= \<const0>\;
  RAM_From(148) <= \<const0>\;
  RAM_From(147) <= \<const0>\;
  RAM_From(146) <= \<const0>\;
  RAM_From(145) <= \<const0>\;
  RAM_From(144) <= \<const0>\;
  RAM_From(143) <= \<const0>\;
  RAM_From(142) <= \<const0>\;
  RAM_From(141) <= \<const0>\;
  RAM_From(140) <= \<const0>\;
  RAM_From(139) <= \<const0>\;
  RAM_From(138) <= \<const0>\;
  RAM_From(137) <= \<const0>\;
  RAM_From(136) <= \<const0>\;
  RAM_From(135) <= \<const0>\;
  RAM_From(134) <= \<const0>\;
  RAM_From(133) <= \<const0>\;
  RAM_From(132) <= \<const0>\;
  RAM_From(131) <= \<const0>\;
  RAM_From(130) <= \<const0>\;
  RAM_From(129) <= \<const0>\;
  RAM_From(128) <= \<const0>\;
  RAM_From(127) <= \<const0>\;
  RAM_From(126) <= \<const0>\;
  RAM_From(125) <= \<const0>\;
  RAM_From(124) <= \<const0>\;
  RAM_From(123) <= \<const0>\;
  RAM_From(122) <= \<const0>\;
  RAM_From(121) <= \<const0>\;
  RAM_From(120) <= \<const0>\;
  RAM_From(119) <= \<const0>\;
  RAM_From(118) <= \<const0>\;
  RAM_From(117) <= \<const0>\;
  RAM_From(116) <= \<const0>\;
  RAM_From(115) <= \<const0>\;
  RAM_From(114) <= \<const0>\;
  RAM_From(113) <= \<const0>\;
  RAM_From(112) <= \<const0>\;
  RAM_From(111) <= \<const0>\;
  RAM_From(110) <= \<const0>\;
  RAM_From(109) <= \<const0>\;
  RAM_From(108) <= \<const0>\;
  RAM_From(107) <= \<const0>\;
  RAM_From(106) <= \<const0>\;
  RAM_From(105) <= \<const0>\;
  RAM_From(104) <= \<const0>\;
  RAM_From(103) <= \<const0>\;
  RAM_From(102) <= \<const0>\;
  RAM_From(101) <= \<const0>\;
  RAM_From(100) <= \<const0>\;
  RAM_From(99) <= \<const0>\;
  RAM_From(98) <= \<const0>\;
  RAM_From(97) <= \<const0>\;
  RAM_From(96) <= \<const0>\;
  RAM_From(95) <= \<const0>\;
  RAM_From(94) <= \<const0>\;
  RAM_From(93) <= \<const0>\;
  RAM_From(92) <= \<const0>\;
  RAM_From(91) <= \<const0>\;
  RAM_From(90) <= \<const0>\;
  RAM_From(89) <= \<const0>\;
  RAM_From(88) <= \<const0>\;
  RAM_From(87) <= \<const0>\;
  RAM_From(86) <= \<const0>\;
  RAM_From(85) <= \<const0>\;
  RAM_From(84) <= \<const0>\;
  RAM_From(83) <= \<const0>\;
  RAM_From(82) <= \<const0>\;
  RAM_From(81) <= \<const0>\;
  RAM_From(80) <= \<const0>\;
  RAM_From(79) <= \<const0>\;
  RAM_From(78) <= \<const0>\;
  RAM_From(77) <= \<const0>\;
  RAM_From(76) <= \<const0>\;
  RAM_From(75) <= \<const0>\;
  RAM_From(74) <= \<const0>\;
  RAM_From(73) <= \<const0>\;
  RAM_From(72) <= \<const0>\;
  RAM_From(71) <= \<const0>\;
  RAM_From(70) <= \<const0>\;
  RAM_From(69) <= \<const0>\;
  RAM_From(68) <= \<const0>\;
  RAM_From(67) <= \<const0>\;
  RAM_From(66) <= \<const0>\;
  RAM_From(65) <= \<const0>\;
  RAM_From(64) <= \<const0>\;
  RAM_From(63) <= \<const0>\;
  RAM_From(62) <= \<const0>\;
  RAM_From(61) <= \<const0>\;
  RAM_From(60) <= \<const0>\;
  RAM_From(59) <= \<const0>\;
  RAM_From(58) <= \<const0>\;
  RAM_From(57) <= \<const0>\;
  RAM_From(56) <= \<const0>\;
  RAM_From(55) <= \<const0>\;
  RAM_From(54) <= \<const0>\;
  RAM_From(53) <= \<const0>\;
  RAM_From(52) <= \<const0>\;
  RAM_From(51) <= \<const0>\;
  RAM_From(50) <= \<const0>\;
  RAM_From(49) <= \<const0>\;
  RAM_From(48) <= \<const0>\;
  RAM_From(47) <= \<const0>\;
  RAM_From(46) <= \<const0>\;
  RAM_From(45) <= \<const0>\;
  RAM_From(44) <= \<const0>\;
  RAM_From(43) <= \<const0>\;
  RAM_From(42) <= \<const0>\;
  RAM_From(41) <= \<const0>\;
  RAM_From(40) <= \<const0>\;
  RAM_From(39) <= \<const0>\;
  RAM_From(38) <= \<const0>\;
  RAM_From(37) <= \<const0>\;
  RAM_From(36) <= \<const0>\;
  RAM_From(35) <= \<const0>\;
  RAM_From(34) <= \<const0>\;
  RAM_From(33) <= \<const0>\;
  RAM_From(32) <= \<const0>\;
  RAM_From(31) <= \<const0>\;
  RAM_From(30) <= \<const0>\;
  RAM_From(29) <= \<const0>\;
  RAM_From(28) <= \<const0>\;
  RAM_From(27) <= \<const0>\;
  RAM_From(26) <= \<const0>\;
  RAM_From(25) <= \<const0>\;
  RAM_From(24) <= \<const0>\;
  RAM_From(23) <= \<const0>\;
  RAM_From(22) <= \<const0>\;
  RAM_From(21) <= \<const0>\;
  RAM_From(20) <= \<const0>\;
  RAM_From(19) <= \<const0>\;
  RAM_From(18) <= \<const0>\;
  RAM_From(17) <= \<const0>\;
  RAM_From(16) <= \<const0>\;
  RAM_From(15) <= \<const0>\;
  RAM_From(14) <= \<const0>\;
  RAM_From(13) <= \<const0>\;
  RAM_From(12) <= \<const0>\;
  RAM_From(11) <= \<const0>\;
  RAM_From(10) <= \<const0>\;
  RAM_From(9) <= \<const0>\;
  RAM_From(8) <= \<const0>\;
  RAM_From(7) <= \<const0>\;
  RAM_From(6) <= \<const0>\;
  RAM_From(5) <= \<const0>\;
  RAM_From(4) <= \<const0>\;
  RAM_From(3) <= \<const0>\;
  RAM_From(2) <= \<const0>\;
  RAM_From(1) <= \<const0>\;
  RAM_From(0) <= \<const0>\;
  Read_Strobe <= \^read_strobe\;
  S0_AXIS_TREADY <= \<const0>\;
  S10_AXIS_TREADY <= \<const0>\;
  S11_AXIS_TREADY <= \<const0>\;
  S12_AXIS_TREADY <= \<const0>\;
  S13_AXIS_TREADY <= \<const0>\;
  S14_AXIS_TREADY <= \<const0>\;
  S15_AXIS_TREADY <= \<const0>\;
  S1_AXIS_TREADY <= \<const0>\;
  S2_AXIS_TREADY <= \<const0>\;
  S3_AXIS_TREADY <= \<const0>\;
  S4_AXIS_TREADY <= \<const0>\;
  S5_AXIS_TREADY <= \<const0>\;
  S6_AXIS_TREADY <= \<const0>\;
  S7_AXIS_TREADY <= \<const0>\;
  S8_AXIS_TREADY <= \<const0>\;
  S9_AXIS_TREADY <= \<const0>\;
  Trace_DCache_Hit <= \^trace_dcache_hit\;
  Trace_DCache_Rdy <= \^trace_dcache_rdy\;
  Trace_DCache_Read <= \^trace_dcache_read\;
  Trace_DCache_Req <= \^trace_dcache_req\;
  Trace_Data_Access <= \^trace_data_access\;
  Trace_Data_Address(0 to 31) <= \^trace_data_address\(0 to 31);
  Trace_Data_Byte_Enable(0 to 3) <= \^trace_data_byte_enable\(0 to 3);
  Trace_Data_Read <= \^trace_data_read\;
  Trace_Data_Write <= \^trace_data_write\;
  Trace_Data_Write_Value(0 to 31) <= \^trace_data_write_value\(0 to 31);
  Trace_Delay_Slot <= \^trace_delay_slot\;
  Trace_EX_PipeRun <= \<const1>\;
  Trace_Exception_Kind(0) <= \<const0>\;
  Trace_Exception_Kind(1) <= \<const0>\;
  Trace_Exception_Kind(2) <= \<const0>\;
  Trace_Exception_Kind(3) <= \<const0>\;
  Trace_Exception_Kind(4) <= \<const0>\;
  Trace_Exception_Taken <= \<const0>\;
  Trace_ICache_Hit <= \^trace_icache_hit\;
  Trace_ICache_Rdy <= \^trace_icache_rdy\;
  Trace_ICache_Req <= \^trace_icache_req\;
  Trace_Instruction(0 to 31) <= \^trace_instruction\(0 to 31);
  Trace_Jump_Hit <= \<const0>\;
  Trace_Jump_Taken <= \^trace_jump_taken\;
  Trace_MB_Halted <= \^mb_halted\;
  Trace_MEM_PipeRun <= \<const1>\;
  Trace_MSR_Reg(0) <= \<const0>\;
  Trace_MSR_Reg(1) <= \<const0>\;
  Trace_MSR_Reg(2) <= \<const0>\;
  Trace_MSR_Reg(3) <= \<const0>\;
  Trace_MSR_Reg(4) <= \<const0>\;
  Trace_MSR_Reg(5) <= \<const0>\;
  Trace_MSR_Reg(6) <= \<const0>\;
  Trace_MSR_Reg(7) <= \^trace_msr_reg\(7);
  Trace_MSR_Reg(8) <= \<const0>\;
  Trace_MSR_Reg(9) <= \^trace_msr_reg\(9);
  Trace_MSR_Reg(10) <= \<const0>\;
  Trace_MSR_Reg(11 to 13) <= \^trace_msr_reg\(11 to 13);
  Trace_MSR_Reg(14) <= \<const0>\;
  Trace_New_Reg_Value(0 to 31) <= \^trace_new_reg_value\(0 to 31);
  Trace_OF_PipeRun <= \^trace_of_piperun\;
  Trace_PC(0 to 31) <= \^trace_pc\(0 to 31);
  Trace_PID_Reg(0) <= \<const0>\;
  Trace_PID_Reg(1) <= \<const0>\;
  Trace_PID_Reg(2) <= \<const0>\;
  Trace_PID_Reg(3) <= \<const0>\;
  Trace_PID_Reg(4) <= \<const0>\;
  Trace_PID_Reg(5) <= \<const0>\;
  Trace_PID_Reg(6) <= \<const0>\;
  Trace_PID_Reg(7) <= \<const0>\;
  Trace_Reg_Addr(0 to 4) <= \^trace_reg_addr\(0 to 4);
  Trace_Reg_Write <= \^trace_reg_write\;
  Trace_Valid_Instr <= \^trace_valid_instr\;
  Write_Strobe <= \^write_strobe\;
  \^debug_rst\ <= Debug_Rst;
Dbg_TDO_INST_0_i_13: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFB"
    )
        port map (
      I0 => Dbg_Reg_En(4),
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(3),
      I3 => Dbg_Reg_En(1),
      I4 => Dbg_Reg_En(0),
      I5 => Dbg_Reg_En(2),
      O => Dbg_TDO_INST_0_i_13_n_0
    );
Dbg_TDO_INST_0_i_14: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(0),
      O => Dbg_TDO_INST_0_i_14_n_0
    );
Dbg_TDO_INST_0_i_15: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(4),
      I3 => Dbg_Reg_En(7),
      O => Dbg_TDO_INST_0_i_15_n_0
    );
Dbg_TDO_INST_0_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      I4 => MicroBlaze_Core_I_n_555,
      O => \Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Status_Reg_En\
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\LOCKSTEP_Out_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^mb_halted\,
      Q => \^lockstep_out\(3228),
      R => Reset
    );
\LOCKSTEP_Out_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(6),
      Q => \^lockstep_out\(10),
      R => Reset
    );
\LOCKSTEP_Out_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(7),
      Q => \^lockstep_out\(11),
      R => Reset
    );
\LOCKSTEP_Out_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(8),
      Q => \^lockstep_out\(12),
      R => Reset
    );
\LOCKSTEP_Out_reg[132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(0),
      Q => \^lockstep_out\(132),
      R => Reset
    );
\LOCKSTEP_Out_reg[133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(1),
      Q => \^lockstep_out\(133),
      R => Reset
    );
\LOCKSTEP_Out_reg[134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(2),
      Q => \^lockstep_out\(134),
      R => Reset
    );
\LOCKSTEP_Out_reg[135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(3),
      Q => \^lockstep_out\(135),
      R => Reset
    );
\LOCKSTEP_Out_reg[136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(4),
      Q => \^lockstep_out\(136),
      R => Reset
    );
\LOCKSTEP_Out_reg[137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(5),
      Q => \^lockstep_out\(137),
      R => Reset
    );
\LOCKSTEP_Out_reg[138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(6),
      Q => \^lockstep_out\(138),
      R => Reset
    );
\LOCKSTEP_Out_reg[139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(7),
      Q => \^lockstep_out\(139),
      R => Reset
    );
\LOCKSTEP_Out_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(9),
      Q => \^lockstep_out\(13),
      R => Reset
    );
\LOCKSTEP_Out_reg[140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(8),
      Q => \^lockstep_out\(140),
      R => Reset
    );
\LOCKSTEP_Out_reg[141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(9),
      Q => \^lockstep_out\(141),
      R => Reset
    );
\LOCKSTEP_Out_reg[142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(10),
      Q => \^lockstep_out\(142),
      R => Reset
    );
\LOCKSTEP_Out_reg[143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(11),
      Q => \^lockstep_out\(143),
      R => Reset
    );
\LOCKSTEP_Out_reg[144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(12),
      Q => \^lockstep_out\(144),
      R => Reset
    );
\LOCKSTEP_Out_reg[145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(13),
      Q => \^lockstep_out\(145),
      R => Reset
    );
\LOCKSTEP_Out_reg[146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(14),
      Q => \^lockstep_out\(146),
      R => Reset
    );
\LOCKSTEP_Out_reg[147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(15),
      Q => \^lockstep_out\(147),
      R => Reset
    );
\LOCKSTEP_Out_reg[148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(16),
      Q => \^lockstep_out\(148),
      R => Reset
    );
\LOCKSTEP_Out_reg[149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(17),
      Q => \^lockstep_out\(149),
      R => Reset
    );
\LOCKSTEP_Out_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(10),
      Q => \^lockstep_out\(14),
      R => Reset
    );
\LOCKSTEP_Out_reg[150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(18),
      Q => \^lockstep_out\(150),
      R => Reset
    );
\LOCKSTEP_Out_reg[151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(19),
      Q => \^lockstep_out\(151),
      R => Reset
    );
\LOCKSTEP_Out_reg[152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(20),
      Q => \^lockstep_out\(152),
      R => Reset
    );
\LOCKSTEP_Out_reg[153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(21),
      Q => \^lockstep_out\(153),
      R => Reset
    );
\LOCKSTEP_Out_reg[154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(22),
      Q => \^lockstep_out\(154),
      R => Reset
    );
\LOCKSTEP_Out_reg[155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(23),
      Q => \^lockstep_out\(155),
      R => Reset
    );
\LOCKSTEP_Out_reg[156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(24),
      Q => \^lockstep_out\(156),
      R => Reset
    );
\LOCKSTEP_Out_reg[157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(25),
      Q => \^lockstep_out\(157),
      R => Reset
    );
\LOCKSTEP_Out_reg[158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(26),
      Q => \^lockstep_out\(158),
      R => Reset
    );
\LOCKSTEP_Out_reg[159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(27),
      Q => \^lockstep_out\(159),
      R => Reset
    );
\LOCKSTEP_Out_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(11),
      Q => \^lockstep_out\(15),
      R => Reset
    );
\LOCKSTEP_Out_reg[160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(28),
      Q => \^lockstep_out\(160),
      R => Reset
    );
\LOCKSTEP_Out_reg[161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(29),
      Q => \^lockstep_out\(161),
      R => Reset
    );
\LOCKSTEP_Out_reg[162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(30),
      Q => \^lockstep_out\(162),
      R => Reset
    );
\LOCKSTEP_Out_reg[163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(31),
      Q => \^lockstep_out\(163),
      R => Reset
    );
\LOCKSTEP_Out_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(12),
      Q => \^lockstep_out\(16),
      R => Reset
    );
\LOCKSTEP_Out_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(13),
      Q => \^lockstep_out\(17),
      R => Reset
    );
\LOCKSTEP_Out_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(14),
      Q => \^lockstep_out\(18),
      R => Reset
    );
\LOCKSTEP_Out_reg[1968]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(31),
      Q => \^lockstep_out\(1968),
      R => Reset
    );
\LOCKSTEP_Out_reg[1969]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(30),
      Q => \^lockstep_out\(1969),
      R => Reset
    );
\LOCKSTEP_Out_reg[196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d_as\,
      Q => \^lockstep_out\(196),
      R => Reset
    );
\LOCKSTEP_Out_reg[1970]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(29),
      Q => \^lockstep_out\(1970),
      R => Reset
    );
\LOCKSTEP_Out_reg[1971]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(28),
      Q => \^lockstep_out\(1971),
      R => Reset
    );
\LOCKSTEP_Out_reg[1972]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(27),
      Q => \^lockstep_out\(1972),
      R => Reset
    );
\LOCKSTEP_Out_reg[1973]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(26),
      Q => \^lockstep_out\(1973),
      R => Reset
    );
\LOCKSTEP_Out_reg[1974]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(25),
      Q => \^lockstep_out\(1974),
      R => Reset
    );
\LOCKSTEP_Out_reg[1975]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(24),
      Q => \^lockstep_out\(1975),
      R => Reset
    );
\LOCKSTEP_Out_reg[1976]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(23),
      Q => \^lockstep_out\(1976),
      R => Reset
    );
\LOCKSTEP_Out_reg[1977]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(22),
      Q => \^lockstep_out\(1977),
      R => Reset
    );
\LOCKSTEP_Out_reg[1978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(21),
      Q => \^lockstep_out\(1978),
      R => Reset
    );
\LOCKSTEP_Out_reg[1979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(20),
      Q => \^lockstep_out\(1979),
      R => Reset
    );
\LOCKSTEP_Out_reg[197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^read_strobe\,
      Q => \^lockstep_out\(197),
      R => Reset
    );
\LOCKSTEP_Out_reg[1980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(19),
      Q => \^lockstep_out\(1980),
      R => Reset
    );
\LOCKSTEP_Out_reg[1981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(18),
      Q => \^lockstep_out\(1981),
      R => Reset
    );
\LOCKSTEP_Out_reg[1982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(17),
      Q => \^lockstep_out\(1982),
      R => Reset
    );
\LOCKSTEP_Out_reg[1983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(16),
      Q => \^lockstep_out\(1983),
      R => Reset
    );
\LOCKSTEP_Out_reg[1984]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(15),
      Q => \^lockstep_out\(1984),
      R => Reset
    );
\LOCKSTEP_Out_reg[1985]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(14),
      Q => \^lockstep_out\(1985),
      R => Reset
    );
\LOCKSTEP_Out_reg[1986]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(13),
      Q => \^lockstep_out\(1986),
      R => Reset
    );
\LOCKSTEP_Out_reg[1987]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(12),
      Q => \^lockstep_out\(1987),
      R => Reset
    );
\LOCKSTEP_Out_reg[1988]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(11),
      Q => \^lockstep_out\(1988),
      R => Reset
    );
\LOCKSTEP_Out_reg[1989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(10),
      Q => \^lockstep_out\(1989),
      R => Reset
    );
\LOCKSTEP_Out_reg[198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^write_strobe\,
      Q => \^lockstep_out\(198),
      R => Reset
    );
\LOCKSTEP_Out_reg[1990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(9),
      Q => \^lockstep_out\(1990),
      R => Reset
    );
\LOCKSTEP_Out_reg[1991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(8),
      Q => \^lockstep_out\(1991),
      R => Reset
    );
\LOCKSTEP_Out_reg[1992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(7),
      Q => \^lockstep_out\(1992),
      R => Reset
    );
\LOCKSTEP_Out_reg[1993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(6),
      Q => \^lockstep_out\(1993),
      R => Reset
    );
\LOCKSTEP_Out_reg[1994]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(5),
      Q => \^lockstep_out\(1994),
      R => Reset
    );
\LOCKSTEP_Out_reg[1995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(4),
      Q => \^lockstep_out\(1995),
      R => Reset
    );
\LOCKSTEP_Out_reg[1996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(3),
      Q => \^lockstep_out\(1996),
      R => Reset
    );
\LOCKSTEP_Out_reg[1997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_araddr\(2),
      Q => \^lockstep_out\(1997),
      R => Reset
    );
\LOCKSTEP_Out_reg[199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(0),
      Q => \^lockstep_out\(199),
      R => Reset
    );
\LOCKSTEP_Out_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(15),
      Q => \^lockstep_out\(19),
      R => Reset
    );
\LOCKSTEP_Out_reg[200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(1),
      Q => \^lockstep_out\(200),
      R => Reset
    );
\LOCKSTEP_Out_reg[201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(2),
      Q => \^lockstep_out\(201),
      R => Reset
    );
\LOCKSTEP_Out_reg[202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(3),
      Q => \^lockstep_out\(202),
      R => Reset
    );
\LOCKSTEP_Out_reg[2038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_arlen\(0),
      Q => \^lockstep_out\(2039),
      R => Reset
    );
\LOCKSTEP_Out_reg[2043]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_arburst\(1),
      Q => \^lockstep_out\(2043),
      R => Reset
    );
\LOCKSTEP_Out_reg[2046]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_arcache\(2),
      Q => \^lockstep_out\(2047),
      R => Reset
    );
\LOCKSTEP_Out_reg[2057]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_arvalid\,
      Q => \^lockstep_out\(2057),
      R => Reset
    );
\LOCKSTEP_Out_reg[2071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_ic_rready\,
      Q => \^lockstep_out\(2071),
      R => Reset
    );
\LOCKSTEP_Out_reg[2083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(31),
      Q => \^lockstep_out\(2083),
      R => Reset
    );
\LOCKSTEP_Out_reg[2084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(30),
      Q => \^lockstep_out\(2084),
      R => Reset
    );
\LOCKSTEP_Out_reg[2085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(29),
      Q => \^lockstep_out\(2085),
      R => Reset
    );
\LOCKSTEP_Out_reg[2086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(28),
      Q => \^lockstep_out\(2086),
      R => Reset
    );
\LOCKSTEP_Out_reg[2087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(27),
      Q => \^lockstep_out\(2087),
      R => Reset
    );
\LOCKSTEP_Out_reg[2088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(26),
      Q => \^lockstep_out\(2088),
      R => Reset
    );
\LOCKSTEP_Out_reg[2089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(25),
      Q => \^lockstep_out\(2089),
      R => Reset
    );
\LOCKSTEP_Out_reg[2090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(24),
      Q => \^lockstep_out\(2090),
      R => Reset
    );
\LOCKSTEP_Out_reg[2091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(23),
      Q => \^lockstep_out\(2091),
      R => Reset
    );
\LOCKSTEP_Out_reg[2092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(22),
      Q => \^lockstep_out\(2092),
      R => Reset
    );
\LOCKSTEP_Out_reg[2093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(21),
      Q => \^lockstep_out\(2093),
      R => Reset
    );
\LOCKSTEP_Out_reg[2094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(20),
      Q => \^lockstep_out\(2094),
      R => Reset
    );
\LOCKSTEP_Out_reg[2095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(19),
      Q => \^lockstep_out\(2095),
      R => Reset
    );
\LOCKSTEP_Out_reg[2096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(18),
      Q => \^lockstep_out\(2096),
      R => Reset
    );
\LOCKSTEP_Out_reg[2097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(17),
      Q => \^lockstep_out\(2097),
      R => Reset
    );
\LOCKSTEP_Out_reg[2098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(16),
      Q => \^lockstep_out\(2098),
      R => Reset
    );
\LOCKSTEP_Out_reg[2099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(15),
      Q => \^lockstep_out\(2099),
      R => Reset
    );
\LOCKSTEP_Out_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(16),
      Q => \^lockstep_out\(20),
      R => Reset
    );
\LOCKSTEP_Out_reg[2100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(14),
      Q => \^lockstep_out\(2100),
      R => Reset
    );
\LOCKSTEP_Out_reg[2101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(13),
      Q => \^lockstep_out\(2101),
      R => Reset
    );
\LOCKSTEP_Out_reg[2102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(12),
      Q => \^lockstep_out\(2102),
      R => Reset
    );
\LOCKSTEP_Out_reg[2103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(11),
      Q => \^lockstep_out\(2103),
      R => Reset
    );
\LOCKSTEP_Out_reg[2104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(10),
      Q => \^lockstep_out\(2104),
      R => Reset
    );
\LOCKSTEP_Out_reg[2105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(9),
      Q => \^lockstep_out\(2105),
      R => Reset
    );
\LOCKSTEP_Out_reg[2106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(8),
      Q => \^lockstep_out\(2106),
      R => Reset
    );
\LOCKSTEP_Out_reg[2107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(7),
      Q => \^lockstep_out\(2107),
      R => Reset
    );
\LOCKSTEP_Out_reg[2108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(6),
      Q => \^lockstep_out\(2108),
      R => Reset
    );
\LOCKSTEP_Out_reg[2109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(5),
      Q => \^lockstep_out\(2109),
      R => Reset
    );
\LOCKSTEP_Out_reg[2110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(4),
      Q => \^lockstep_out\(2110),
      R => Reset
    );
\LOCKSTEP_Out_reg[2111]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(3),
      Q => \^lockstep_out\(2111),
      R => Reset
    );
\LOCKSTEP_Out_reg[2112]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(2),
      Q => \^lockstep_out\(2112),
      R => Reset
    );
\LOCKSTEP_Out_reg[2113]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(1),
      Q => \^lockstep_out\(2113),
      R => Reset
    );
\LOCKSTEP_Out_reg[2114]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awaddr\(0),
      Q => \^lockstep_out\(2114),
      R => Reset
    );
\LOCKSTEP_Out_reg[2172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_awvalid\,
      Q => \^lockstep_out\(2172),
      R => Reset
    );
\LOCKSTEP_Out_reg[2185]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(31),
      Q => \^lockstep_out\(2185),
      R => Reset
    );
\LOCKSTEP_Out_reg[2186]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(30),
      Q => \^lockstep_out\(2186),
      R => Reset
    );
\LOCKSTEP_Out_reg[2187]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(29),
      Q => \^lockstep_out\(2187),
      R => Reset
    );
\LOCKSTEP_Out_reg[2188]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(28),
      Q => \^lockstep_out\(2188),
      R => Reset
    );
\LOCKSTEP_Out_reg[2189]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(27),
      Q => \^lockstep_out\(2189),
      R => Reset
    );
\LOCKSTEP_Out_reg[2190]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(26),
      Q => \^lockstep_out\(2190),
      R => Reset
    );
\LOCKSTEP_Out_reg[2191]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(25),
      Q => \^lockstep_out\(2191),
      R => Reset
    );
\LOCKSTEP_Out_reg[2192]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(24),
      Q => \^lockstep_out\(2192),
      R => Reset
    );
\LOCKSTEP_Out_reg[2193]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(23),
      Q => \^lockstep_out\(2193),
      R => Reset
    );
\LOCKSTEP_Out_reg[2194]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(22),
      Q => \^lockstep_out\(2194),
      R => Reset
    );
\LOCKSTEP_Out_reg[2195]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(21),
      Q => \^lockstep_out\(2195),
      R => Reset
    );
\LOCKSTEP_Out_reg[2196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(20),
      Q => \^lockstep_out\(2196),
      R => Reset
    );
\LOCKSTEP_Out_reg[2197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(19),
      Q => \^lockstep_out\(2197),
      R => Reset
    );
\LOCKSTEP_Out_reg[2198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(18),
      Q => \^lockstep_out\(2198),
      R => Reset
    );
\LOCKSTEP_Out_reg[2199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(17),
      Q => \^lockstep_out\(2199),
      R => Reset
    );
\LOCKSTEP_Out_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(17),
      Q => \^lockstep_out\(21),
      R => Reset
    );
\LOCKSTEP_Out_reg[2200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(16),
      Q => \^lockstep_out\(2200),
      R => Reset
    );
\LOCKSTEP_Out_reg[2201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(15),
      Q => \^lockstep_out\(2201),
      R => Reset
    );
\LOCKSTEP_Out_reg[2202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(14),
      Q => \^lockstep_out\(2202),
      R => Reset
    );
\LOCKSTEP_Out_reg[2203]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(13),
      Q => \^lockstep_out\(2203),
      R => Reset
    );
\LOCKSTEP_Out_reg[2204]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(12),
      Q => \^lockstep_out\(2204),
      R => Reset
    );
\LOCKSTEP_Out_reg[2205]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(11),
      Q => \^lockstep_out\(2205),
      R => Reset
    );
\LOCKSTEP_Out_reg[2206]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(10),
      Q => \^lockstep_out\(2206),
      R => Reset
    );
\LOCKSTEP_Out_reg[2207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(9),
      Q => \^lockstep_out\(2207),
      R => Reset
    );
\LOCKSTEP_Out_reg[2208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(8),
      Q => \^lockstep_out\(2208),
      R => Reset
    );
\LOCKSTEP_Out_reg[2209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(7),
      Q => \^lockstep_out\(2209),
      R => Reset
    );
\LOCKSTEP_Out_reg[2210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(6),
      Q => \^lockstep_out\(2210),
      R => Reset
    );
\LOCKSTEP_Out_reg[2211]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(5),
      Q => \^lockstep_out\(2211),
      R => Reset
    );
\LOCKSTEP_Out_reg[2212]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(4),
      Q => \^lockstep_out\(2212),
      R => Reset
    );
\LOCKSTEP_Out_reg[2213]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(3),
      Q => \^lockstep_out\(2213),
      R => Reset
    );
\LOCKSTEP_Out_reg[2214]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(2),
      Q => \^lockstep_out\(2214),
      R => Reset
    );
\LOCKSTEP_Out_reg[2215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(1),
      Q => \^lockstep_out\(2215),
      R => Reset
    );
\LOCKSTEP_Out_reg[2216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wdata\(0),
      Q => \^lockstep_out\(2216),
      R => Reset
    );
\LOCKSTEP_Out_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(18),
      Q => \^lockstep_out\(22),
      R => Reset
    );
\LOCKSTEP_Out_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(19),
      Q => \^lockstep_out\(23),
      R => Reset
    );
\LOCKSTEP_Out_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(20),
      Q => \^lockstep_out\(24),
      R => Reset
    );
\LOCKSTEP_Out_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(21),
      Q => \^lockstep_out\(25),
      R => Reset
    );
\LOCKSTEP_Out_reg[2697]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wstrb\(3),
      Q => \^lockstep_out\(2697),
      R => Reset
    );
\LOCKSTEP_Out_reg[2698]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wstrb\(2),
      Q => \^lockstep_out\(2698),
      R => Reset
    );
\LOCKSTEP_Out_reg[2699]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wstrb\(1),
      Q => \^lockstep_out\(2699),
      R => Reset
    );
\LOCKSTEP_Out_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(22),
      Q => \^lockstep_out\(26),
      R => Reset
    );
\LOCKSTEP_Out_reg[2700]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wstrb\(0),
      Q => \^lockstep_out\(2700),
      R => Reset
    );
\LOCKSTEP_Out_reg[2761]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wlast\,
      Q => \^lockstep_out\(2761),
      R => Reset
    );
\LOCKSTEP_Out_reg[2762]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_wvalid\,
      Q => \^lockstep_out\(2762),
      R => Reset
    );
\LOCKSTEP_Out_reg[2767]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(31),
      Q => \^lockstep_out\(2767),
      R => Reset
    );
\LOCKSTEP_Out_reg[2768]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(30),
      Q => \^lockstep_out\(2768),
      R => Reset
    );
\LOCKSTEP_Out_reg[2769]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(29),
      Q => \^lockstep_out\(2769),
      R => Reset
    );
\LOCKSTEP_Out_reg[2770]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(28),
      Q => \^lockstep_out\(2770),
      R => Reset
    );
\LOCKSTEP_Out_reg[2771]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(27),
      Q => \^lockstep_out\(2771),
      R => Reset
    );
\LOCKSTEP_Out_reg[2772]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(26),
      Q => \^lockstep_out\(2772),
      R => Reset
    );
\LOCKSTEP_Out_reg[2773]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(25),
      Q => \^lockstep_out\(2773),
      R => Reset
    );
\LOCKSTEP_Out_reg[2774]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(24),
      Q => \^lockstep_out\(2774),
      R => Reset
    );
\LOCKSTEP_Out_reg[2775]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(23),
      Q => \^lockstep_out\(2775),
      R => Reset
    );
\LOCKSTEP_Out_reg[2776]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(22),
      Q => \^lockstep_out\(2776),
      R => Reset
    );
\LOCKSTEP_Out_reg[2777]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(21),
      Q => \^lockstep_out\(2777),
      R => Reset
    );
\LOCKSTEP_Out_reg[2778]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(20),
      Q => \^lockstep_out\(2778),
      R => Reset
    );
\LOCKSTEP_Out_reg[2779]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(19),
      Q => \^lockstep_out\(2779),
      R => Reset
    );
\LOCKSTEP_Out_reg[2780]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(18),
      Q => \^lockstep_out\(2780),
      R => Reset
    );
\LOCKSTEP_Out_reg[2781]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(17),
      Q => \^lockstep_out\(2781),
      R => Reset
    );
\LOCKSTEP_Out_reg[2782]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(16),
      Q => \^lockstep_out\(2782),
      R => Reset
    );
\LOCKSTEP_Out_reg[2783]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(15),
      Q => \^lockstep_out\(2783),
      R => Reset
    );
\LOCKSTEP_Out_reg[2784]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(14),
      Q => \^lockstep_out\(2784),
      R => Reset
    );
\LOCKSTEP_Out_reg[2785]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(13),
      Q => \^lockstep_out\(2785),
      R => Reset
    );
\LOCKSTEP_Out_reg[2786]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(12),
      Q => \^lockstep_out\(2786),
      R => Reset
    );
\LOCKSTEP_Out_reg[2787]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(11),
      Q => \^lockstep_out\(2787),
      R => Reset
    );
\LOCKSTEP_Out_reg[2788]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(10),
      Q => \^lockstep_out\(2788),
      R => Reset
    );
\LOCKSTEP_Out_reg[2789]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(9),
      Q => \^lockstep_out\(2789),
      R => Reset
    );
\LOCKSTEP_Out_reg[2790]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(8),
      Q => \^lockstep_out\(2790),
      R => Reset
    );
\LOCKSTEP_Out_reg[2791]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(7),
      Q => \^lockstep_out\(2791),
      R => Reset
    );
\LOCKSTEP_Out_reg[2792]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(6),
      Q => \^lockstep_out\(2792),
      R => Reset
    );
\LOCKSTEP_Out_reg[2793]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(5),
      Q => \^lockstep_out\(2793),
      R => Reset
    );
\LOCKSTEP_Out_reg[2794]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(4),
      Q => \^lockstep_out\(2794),
      R => Reset
    );
\LOCKSTEP_Out_reg[2795]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(3),
      Q => \^lockstep_out\(2795),
      R => Reset
    );
\LOCKSTEP_Out_reg[2796]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_araddr\(2),
      Q => \^lockstep_out\(2796),
      R => Reset
    );
\LOCKSTEP_Out_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(23),
      Q => \^lockstep_out\(27),
      R => Reset
    );
\LOCKSTEP_Out_reg[2837]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_arlen\(0),
      Q => \^lockstep_out\(2838),
      R => Reset
    );
\LOCKSTEP_Out_reg[2842]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_arburst\(1),
      Q => \^lockstep_out\(2842),
      R => Reset
    );
\LOCKSTEP_Out_reg[2845]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_arcache\(2),
      Q => \^lockstep_out\(2846),
      R => Reset
    );
\LOCKSTEP_Out_reg[2856]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dc_arvalid\,
      Q => \^lockstep_out\(2856),
      R => Reset
    );
\LOCKSTEP_Out_reg[2881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(0),
      Q => \^lockstep_out\(2881),
      R => Reset
    );
\LOCKSTEP_Out_reg[2882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(1),
      Q => \^lockstep_out\(2882),
      R => Reset
    );
\LOCKSTEP_Out_reg[2883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(2),
      Q => \^lockstep_out\(2883),
      R => Reset
    );
\LOCKSTEP_Out_reg[2884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(3),
      Q => \^lockstep_out\(2884),
      R => Reset
    );
\LOCKSTEP_Out_reg[2885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(4),
      Q => \^lockstep_out\(2885),
      R => Reset
    );
\LOCKSTEP_Out_reg[2886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(5),
      Q => \^lockstep_out\(2886),
      R => Reset
    );
\LOCKSTEP_Out_reg[2887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(6),
      Q => \^lockstep_out\(2887),
      R => Reset
    );
\LOCKSTEP_Out_reg[2888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(7),
      Q => \^lockstep_out\(2888),
      R => Reset
    );
\LOCKSTEP_Out_reg[2889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(8),
      Q => \^lockstep_out\(2889),
      R => Reset
    );
\LOCKSTEP_Out_reg[2890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(9),
      Q => \^lockstep_out\(2890),
      R => Reset
    );
\LOCKSTEP_Out_reg[2891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(10),
      Q => \^lockstep_out\(2891),
      R => Reset
    );
\LOCKSTEP_Out_reg[2892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(11),
      Q => \^lockstep_out\(2892),
      R => Reset
    );
\LOCKSTEP_Out_reg[2893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(12),
      Q => \^lockstep_out\(2893),
      R => Reset
    );
\LOCKSTEP_Out_reg[2894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(13),
      Q => \^lockstep_out\(2894),
      R => Reset
    );
\LOCKSTEP_Out_reg[2895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(14),
      Q => \^lockstep_out\(2895),
      R => Reset
    );
\LOCKSTEP_Out_reg[2896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(15),
      Q => \^lockstep_out\(2896),
      R => Reset
    );
\LOCKSTEP_Out_reg[2897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(16),
      Q => \^lockstep_out\(2897),
      R => Reset
    );
\LOCKSTEP_Out_reg[2898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(17),
      Q => \^lockstep_out\(2898),
      R => Reset
    );
\LOCKSTEP_Out_reg[2899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(18),
      Q => \^lockstep_out\(2899),
      R => Reset
    );
\LOCKSTEP_Out_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(24),
      Q => \^lockstep_out\(28),
      R => Reset
    );
\LOCKSTEP_Out_reg[2900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(19),
      Q => \^lockstep_out\(2900),
      R => Reset
    );
\LOCKSTEP_Out_reg[2901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(20),
      Q => \^lockstep_out\(2901),
      R => Reset
    );
\LOCKSTEP_Out_reg[2902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(21),
      Q => \^lockstep_out\(2902),
      R => Reset
    );
\LOCKSTEP_Out_reg[2903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(22),
      Q => \^lockstep_out\(2903),
      R => Reset
    );
\LOCKSTEP_Out_reg[2904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(23),
      Q => \^lockstep_out\(2904),
      R => Reset
    );
\LOCKSTEP_Out_reg[2905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(24),
      Q => \^lockstep_out\(2905),
      R => Reset
    );
\LOCKSTEP_Out_reg[2906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(25),
      Q => \^lockstep_out\(2906),
      R => Reset
    );
\LOCKSTEP_Out_reg[2907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(26),
      Q => \^lockstep_out\(2907),
      R => Reset
    );
\LOCKSTEP_Out_reg[2908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(27),
      Q => \^lockstep_out\(2908),
      R => Reset
    );
\LOCKSTEP_Out_reg[2909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(28),
      Q => \^lockstep_out\(2909),
      R => Reset
    );
\LOCKSTEP_Out_reg[2910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(29),
      Q => \^lockstep_out\(2910),
      R => Reset
    );
\LOCKSTEP_Out_reg[2911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(30),
      Q => \^lockstep_out\(2911),
      R => Reset
    );
\LOCKSTEP_Out_reg[2912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(31),
      Q => \^lockstep_out\(2912),
      R => Reset
    );
\LOCKSTEP_Out_reg[2913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_valid_instr\,
      Q => \^lockstep_out\(2913),
      R => Reset
    );
\LOCKSTEP_Out_reg[2914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(0),
      Q => \^lockstep_out\(2914),
      R => Reset
    );
\LOCKSTEP_Out_reg[2915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(1),
      Q => \^lockstep_out\(2915),
      R => Reset
    );
\LOCKSTEP_Out_reg[2916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(2),
      Q => \^lockstep_out\(2916),
      R => Reset
    );
\LOCKSTEP_Out_reg[2917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(3),
      Q => \^lockstep_out\(2917),
      R => Reset
    );
\LOCKSTEP_Out_reg[2918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(4),
      Q => \^lockstep_out\(2918),
      R => Reset
    );
\LOCKSTEP_Out_reg[2919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(5),
      Q => \^lockstep_out\(2919),
      R => Reset
    );
\LOCKSTEP_Out_reg[2920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(6),
      Q => \^lockstep_out\(2920),
      R => Reset
    );
\LOCKSTEP_Out_reg[2921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(7),
      Q => \^lockstep_out\(2921),
      R => Reset
    );
\LOCKSTEP_Out_reg[2922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(8),
      Q => \^lockstep_out\(2922),
      R => Reset
    );
\LOCKSTEP_Out_reg[2923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(9),
      Q => \^lockstep_out\(2923),
      R => Reset
    );
\LOCKSTEP_Out_reg[2924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(10),
      Q => \^lockstep_out\(2924),
      R => Reset
    );
\LOCKSTEP_Out_reg[2925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(11),
      Q => \^lockstep_out\(2925),
      R => Reset
    );
\LOCKSTEP_Out_reg[2926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(12),
      Q => \^lockstep_out\(2926),
      R => Reset
    );
\LOCKSTEP_Out_reg[2927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(13),
      Q => \^lockstep_out\(2927),
      R => Reset
    );
\LOCKSTEP_Out_reg[2928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(14),
      Q => \^lockstep_out\(2928),
      R => Reset
    );
\LOCKSTEP_Out_reg[2929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(15),
      Q => \^lockstep_out\(2929),
      R => Reset
    );
\LOCKSTEP_Out_reg[2930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(16),
      Q => \^lockstep_out\(2930),
      R => Reset
    );
\LOCKSTEP_Out_reg[2931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(17),
      Q => \^lockstep_out\(2931),
      R => Reset
    );
\LOCKSTEP_Out_reg[2932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(18),
      Q => \^lockstep_out\(2932),
      R => Reset
    );
\LOCKSTEP_Out_reg[2933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(19),
      Q => \^lockstep_out\(2933),
      R => Reset
    );
\LOCKSTEP_Out_reg[2934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(20),
      Q => \^lockstep_out\(2934),
      R => Reset
    );
\LOCKSTEP_Out_reg[2935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(21),
      Q => \^lockstep_out\(2935),
      R => Reset
    );
\LOCKSTEP_Out_reg[2936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(22),
      Q => \^lockstep_out\(2936),
      R => Reset
    );
\LOCKSTEP_Out_reg[2937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(23),
      Q => \^lockstep_out\(2937),
      R => Reset
    );
\LOCKSTEP_Out_reg[2938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(24),
      Q => \^lockstep_out\(2938),
      R => Reset
    );
\LOCKSTEP_Out_reg[2939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(25),
      Q => \^lockstep_out\(2939),
      R => Reset
    );
\LOCKSTEP_Out_reg[2940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(26),
      Q => \^lockstep_out\(2940),
      R => Reset
    );
\LOCKSTEP_Out_reg[2941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(27),
      Q => \^lockstep_out\(2941),
      R => Reset
    );
\LOCKSTEP_Out_reg[2942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(28),
      Q => \^lockstep_out\(2942),
      R => Reset
    );
\LOCKSTEP_Out_reg[2943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(29),
      Q => \^lockstep_out\(2943),
      R => Reset
    );
\LOCKSTEP_Out_reg[2944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(30),
      Q => \^lockstep_out\(2944),
      R => Reset
    );
\LOCKSTEP_Out_reg[2945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(31),
      Q => \^lockstep_out\(2945),
      R => Reset
    );
\LOCKSTEP_Out_reg[2978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_write\,
      Q => \^lockstep_out\(2978),
      R => Reset
    );
\LOCKSTEP_Out_reg[2979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(0),
      Q => \^lockstep_out\(2979),
      R => Reset
    );
\LOCKSTEP_Out_reg[2980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(1),
      Q => \^lockstep_out\(2980),
      R => Reset
    );
\LOCKSTEP_Out_reg[2981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(2),
      Q => \^lockstep_out\(2981),
      R => Reset
    );
\LOCKSTEP_Out_reg[2982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(3),
      Q => \^lockstep_out\(2982),
      R => Reset
    );
\LOCKSTEP_Out_reg[2983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(4),
      Q => \^lockstep_out\(2983),
      R => Reset
    );
\LOCKSTEP_Out_reg[2991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(7),
      Q => \^lockstep_out\(2991),
      R => Reset
    );
\LOCKSTEP_Out_reg[2993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(9),
      Q => \^lockstep_out\(2993),
      R => Reset
    );
\LOCKSTEP_Out_reg[2995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(11),
      Q => \^lockstep_out\(2995),
      R => Reset
    );
\LOCKSTEP_Out_reg[2996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(12),
      Q => \^lockstep_out\(2996),
      R => Reset
    );
\LOCKSTEP_Out_reg[2997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(13),
      Q => \^lockstep_out\(2997),
      R => Reset
    );
\LOCKSTEP_Out_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(25),
      Q => \^lockstep_out\(29),
      R => Reset
    );
\LOCKSTEP_Out_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^ifetch\,
      Q => \^lockstep_out\(2),
      R => Reset
    );
\LOCKSTEP_Out_reg[3007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(0),
      Q => \^lockstep_out\(3007),
      R => Reset
    );
\LOCKSTEP_Out_reg[3008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(1),
      Q => \^lockstep_out\(3008),
      R => Reset
    );
\LOCKSTEP_Out_reg[3009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(2),
      Q => \^lockstep_out\(3009),
      R => Reset
    );
\LOCKSTEP_Out_reg[3010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(3),
      Q => \^lockstep_out\(3010),
      R => Reset
    );
\LOCKSTEP_Out_reg[3011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(4),
      Q => \^lockstep_out\(3011),
      R => Reset
    );
\LOCKSTEP_Out_reg[3012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(5),
      Q => \^lockstep_out\(3012),
      R => Reset
    );
\LOCKSTEP_Out_reg[3013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(6),
      Q => \^lockstep_out\(3013),
      R => Reset
    );
\LOCKSTEP_Out_reg[3014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(7),
      Q => \^lockstep_out\(3014),
      R => Reset
    );
\LOCKSTEP_Out_reg[3015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(8),
      Q => \^lockstep_out\(3015),
      R => Reset
    );
\LOCKSTEP_Out_reg[3016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(9),
      Q => \^lockstep_out\(3016),
      R => Reset
    );
\LOCKSTEP_Out_reg[3017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(10),
      Q => \^lockstep_out\(3017),
      R => Reset
    );
\LOCKSTEP_Out_reg[3018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(11),
      Q => \^lockstep_out\(3018),
      R => Reset
    );
\LOCKSTEP_Out_reg[3019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(12),
      Q => \^lockstep_out\(3019),
      R => Reset
    );
\LOCKSTEP_Out_reg[3020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(13),
      Q => \^lockstep_out\(3020),
      R => Reset
    );
\LOCKSTEP_Out_reg[3021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(14),
      Q => \^lockstep_out\(3021),
      R => Reset
    );
\LOCKSTEP_Out_reg[3022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(15),
      Q => \^lockstep_out\(3022),
      R => Reset
    );
\LOCKSTEP_Out_reg[3023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(16),
      Q => \^lockstep_out\(3023),
      R => Reset
    );
\LOCKSTEP_Out_reg[3024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(17),
      Q => \^lockstep_out\(3024),
      R => Reset
    );
\LOCKSTEP_Out_reg[3025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(18),
      Q => \^lockstep_out\(3025),
      R => Reset
    );
\LOCKSTEP_Out_reg[3026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(19),
      Q => \^lockstep_out\(3026),
      R => Reset
    );
\LOCKSTEP_Out_reg[3027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(20),
      Q => \^lockstep_out\(3027),
      R => Reset
    );
\LOCKSTEP_Out_reg[3028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(21),
      Q => \^lockstep_out\(3028),
      R => Reset
    );
\LOCKSTEP_Out_reg[3029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(22),
      Q => \^lockstep_out\(3029),
      R => Reset
    );
\LOCKSTEP_Out_reg[3030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(23),
      Q => \^lockstep_out\(3030),
      R => Reset
    );
\LOCKSTEP_Out_reg[3031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(24),
      Q => \^lockstep_out\(3031),
      R => Reset
    );
\LOCKSTEP_Out_reg[3032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(25),
      Q => \^lockstep_out\(3032),
      R => Reset
    );
\LOCKSTEP_Out_reg[3033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(26),
      Q => \^lockstep_out\(3033),
      R => Reset
    );
\LOCKSTEP_Out_reg[3034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(27),
      Q => \^lockstep_out\(3034),
      R => Reset
    );
\LOCKSTEP_Out_reg[3035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(28),
      Q => \^lockstep_out\(3035),
      R => Reset
    );
\LOCKSTEP_Out_reg[3036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(29),
      Q => \^lockstep_out\(3036),
      R => Reset
    );
\LOCKSTEP_Out_reg[3037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(30),
      Q => \^lockstep_out\(3037),
      R => Reset
    );
\LOCKSTEP_Out_reg[3038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(31),
      Q => \^lockstep_out\(3038),
      R => Reset
    );
\LOCKSTEP_Out_reg[3077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_taken\,
      Q => \^lockstep_out\(3077),
      R => Reset
    );
\LOCKSTEP_Out_reg[3078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_delay_slot\,
      Q => \^lockstep_out\(3078),
      R => Reset
    );
\LOCKSTEP_Out_reg[3079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(0),
      Q => \^lockstep_out\(3079),
      R => Reset
    );
\LOCKSTEP_Out_reg[3080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(1),
      Q => \^lockstep_out\(3080),
      R => Reset
    );
\LOCKSTEP_Out_reg[3081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(2),
      Q => \^lockstep_out\(3081),
      R => Reset
    );
\LOCKSTEP_Out_reg[3082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(3),
      Q => \^lockstep_out\(3082),
      R => Reset
    );
\LOCKSTEP_Out_reg[3083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(4),
      Q => \^lockstep_out\(3083),
      R => Reset
    );
\LOCKSTEP_Out_reg[3084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(5),
      Q => \^lockstep_out\(3084),
      R => Reset
    );
\LOCKSTEP_Out_reg[3085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(6),
      Q => \^lockstep_out\(3085),
      R => Reset
    );
\LOCKSTEP_Out_reg[3086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(7),
      Q => \^lockstep_out\(3086),
      R => Reset
    );
\LOCKSTEP_Out_reg[3087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(8),
      Q => \^lockstep_out\(3087),
      R => Reset
    );
\LOCKSTEP_Out_reg[3088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(9),
      Q => \^lockstep_out\(3088),
      R => Reset
    );
\LOCKSTEP_Out_reg[3089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(10),
      Q => \^lockstep_out\(3089),
      R => Reset
    );
\LOCKSTEP_Out_reg[3090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(11),
      Q => \^lockstep_out\(3090),
      R => Reset
    );
\LOCKSTEP_Out_reg[3091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(12),
      Q => \^lockstep_out\(3091),
      R => Reset
    );
\LOCKSTEP_Out_reg[3092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(13),
      Q => \^lockstep_out\(3092),
      R => Reset
    );
\LOCKSTEP_Out_reg[3093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(14),
      Q => \^lockstep_out\(3093),
      R => Reset
    );
\LOCKSTEP_Out_reg[3094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(15),
      Q => \^lockstep_out\(3094),
      R => Reset
    );
\LOCKSTEP_Out_reg[3095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(16),
      Q => \^lockstep_out\(3095),
      R => Reset
    );
\LOCKSTEP_Out_reg[3096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(17),
      Q => \^lockstep_out\(3096),
      R => Reset
    );
\LOCKSTEP_Out_reg[3097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(18),
      Q => \^lockstep_out\(3097),
      R => Reset
    );
\LOCKSTEP_Out_reg[3098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(19),
      Q => \^lockstep_out\(3098),
      R => Reset
    );
\LOCKSTEP_Out_reg[3099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(20),
      Q => \^lockstep_out\(3099),
      R => Reset
    );
\LOCKSTEP_Out_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(26),
      Q => \^lockstep_out\(30),
      R => Reset
    );
\LOCKSTEP_Out_reg[3100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(21),
      Q => \^lockstep_out\(3100),
      R => Reset
    );
\LOCKSTEP_Out_reg[3101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(22),
      Q => \^lockstep_out\(3101),
      R => Reset
    );
\LOCKSTEP_Out_reg[3102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(23),
      Q => \^lockstep_out\(3102),
      R => Reset
    );
\LOCKSTEP_Out_reg[3103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(24),
      Q => \^lockstep_out\(3103),
      R => Reset
    );
\LOCKSTEP_Out_reg[3104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(25),
      Q => \^lockstep_out\(3104),
      R => Reset
    );
\LOCKSTEP_Out_reg[3105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(26),
      Q => \^lockstep_out\(3105),
      R => Reset
    );
\LOCKSTEP_Out_reg[3106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(27),
      Q => \^lockstep_out\(3106),
      R => Reset
    );
\LOCKSTEP_Out_reg[3107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(28),
      Q => \^lockstep_out\(3107),
      R => Reset
    );
\LOCKSTEP_Out_reg[3108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(29),
      Q => \^lockstep_out\(3108),
      R => Reset
    );
\LOCKSTEP_Out_reg[3109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(30),
      Q => \^lockstep_out\(3109),
      R => Reset
    );
\LOCKSTEP_Out_reg[3110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(31),
      Q => \^lockstep_out\(3110),
      R => Reset
    );
\LOCKSTEP_Out_reg[3143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(0),
      Q => \^lockstep_out\(3143),
      R => Reset
    );
\LOCKSTEP_Out_reg[3144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(1),
      Q => \^lockstep_out\(3144),
      R => Reset
    );
\LOCKSTEP_Out_reg[3145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(2),
      Q => \^lockstep_out\(3145),
      R => Reset
    );
\LOCKSTEP_Out_reg[3146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(3),
      Q => \^lockstep_out\(3146),
      R => Reset
    );
\LOCKSTEP_Out_reg[3147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(4),
      Q => \^lockstep_out\(3147),
      R => Reset
    );
\LOCKSTEP_Out_reg[3148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(5),
      Q => \^lockstep_out\(3148),
      R => Reset
    );
\LOCKSTEP_Out_reg[3149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(6),
      Q => \^lockstep_out\(3149),
      R => Reset
    );
\LOCKSTEP_Out_reg[3150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(7),
      Q => \^lockstep_out\(3150),
      R => Reset
    );
\LOCKSTEP_Out_reg[3151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(8),
      Q => \^lockstep_out\(3151),
      R => Reset
    );
\LOCKSTEP_Out_reg[3152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(9),
      Q => \^lockstep_out\(3152),
      R => Reset
    );
\LOCKSTEP_Out_reg[3153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(10),
      Q => \^lockstep_out\(3153),
      R => Reset
    );
\LOCKSTEP_Out_reg[3154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(11),
      Q => \^lockstep_out\(3154),
      R => Reset
    );
\LOCKSTEP_Out_reg[3155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(12),
      Q => \^lockstep_out\(3155),
      R => Reset
    );
\LOCKSTEP_Out_reg[3156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(13),
      Q => \^lockstep_out\(3156),
      R => Reset
    );
\LOCKSTEP_Out_reg[3157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(14),
      Q => \^lockstep_out\(3157),
      R => Reset
    );
\LOCKSTEP_Out_reg[3158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(15),
      Q => \^lockstep_out\(3158),
      R => Reset
    );
\LOCKSTEP_Out_reg[3159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(16),
      Q => \^lockstep_out\(3159),
      R => Reset
    );
\LOCKSTEP_Out_reg[3160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(17),
      Q => \^lockstep_out\(3160),
      R => Reset
    );
\LOCKSTEP_Out_reg[3161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(18),
      Q => \^lockstep_out\(3161),
      R => Reset
    );
\LOCKSTEP_Out_reg[3162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(19),
      Q => \^lockstep_out\(3162),
      R => Reset
    );
\LOCKSTEP_Out_reg[3163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(20),
      Q => \^lockstep_out\(3163),
      R => Reset
    );
\LOCKSTEP_Out_reg[3164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(21),
      Q => \^lockstep_out\(3164),
      R => Reset
    );
\LOCKSTEP_Out_reg[3165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(22),
      Q => \^lockstep_out\(3165),
      R => Reset
    );
\LOCKSTEP_Out_reg[3166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(23),
      Q => \^lockstep_out\(3166),
      R => Reset
    );
\LOCKSTEP_Out_reg[3167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(24),
      Q => \^lockstep_out\(3167),
      R => Reset
    );
\LOCKSTEP_Out_reg[3168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(25),
      Q => \^lockstep_out\(3168),
      R => Reset
    );
\LOCKSTEP_Out_reg[3169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(26),
      Q => \^lockstep_out\(3169),
      R => Reset
    );
\LOCKSTEP_Out_reg[3170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(27),
      Q => \^lockstep_out\(3170),
      R => Reset
    );
\LOCKSTEP_Out_reg[3171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(28),
      Q => \^lockstep_out\(3171),
      R => Reset
    );
\LOCKSTEP_Out_reg[3172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(29),
      Q => \^lockstep_out\(3172),
      R => Reset
    );
\LOCKSTEP_Out_reg[3173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(30),
      Q => \^lockstep_out\(3173),
      R => Reset
    );
\LOCKSTEP_Out_reg[3174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(31),
      Q => \^lockstep_out\(3174),
      R => Reset
    );
\LOCKSTEP_Out_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(27),
      Q => \^lockstep_out\(31),
      R => Reset
    );
\LOCKSTEP_Out_reg[3207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(0),
      Q => \^lockstep_out\(3207),
      R => Reset
    );
\LOCKSTEP_Out_reg[3208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(1),
      Q => \^lockstep_out\(3208),
      R => Reset
    );
\LOCKSTEP_Out_reg[3209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(2),
      Q => \^lockstep_out\(3209),
      R => Reset
    );
\LOCKSTEP_Out_reg[3210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(3),
      Q => \^lockstep_out\(3210),
      R => Reset
    );
\LOCKSTEP_Out_reg[3215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_access\,
      Q => \^lockstep_out\(3215),
      R => Reset
    );
\LOCKSTEP_Out_reg[3216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_read\,
      Q => \^lockstep_out\(3216),
      R => Reset
    );
\LOCKSTEP_Out_reg[3217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write\,
      Q => \^lockstep_out\(3217),
      R => Reset
    );
\LOCKSTEP_Out_reg[3218]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_dcache_req\,
      Q => \^lockstep_out\(3218),
      R => Reset
    );
\LOCKSTEP_Out_reg[3219]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_dcache_hit\,
      Q => \^lockstep_out\(3219),
      R => Reset
    );
\LOCKSTEP_Out_reg[3220]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_dcache_rdy\,
      Q => \^lockstep_out\(3220),
      R => Reset
    );
\LOCKSTEP_Out_reg[3221]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_dcache_read\,
      Q => \^lockstep_out\(3221),
      R => Reset
    );
\LOCKSTEP_Out_reg[3222]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_icache_req\,
      Q => \^lockstep_out\(3222),
      R => Reset
    );
\LOCKSTEP_Out_reg[3223]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_icache_hit\,
      Q => \^lockstep_out\(3223),
      R => Reset
    );
\LOCKSTEP_Out_reg[3224]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_icache_rdy\,
      Q => \^lockstep_out\(3224),
      R => Reset
    );
\LOCKSTEP_Out_reg[3225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_of_piperun\,
      Q => \^lockstep_out\(3225),
      R => Reset
    );
\LOCKSTEP_Out_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(28),
      Q => \^lockstep_out\(32),
      R => Reset
    );
\LOCKSTEP_Out_reg[33]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(29),
      Q => \^lockstep_out\(33),
      R => Reset
    );
\LOCKSTEP_Out_reg[34]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(30),
      Q => \^lockstep_out\(34),
      R => Reset
    );
\LOCKSTEP_Out_reg[35]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(31),
      Q => \^lockstep_out\(35),
      R => Reset
    );
\LOCKSTEP_Out_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^i_as\,
      Q => \^lockstep_out\(3),
      R => Reset
    );
\LOCKSTEP_Out_reg[466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(31),
      Q => \^lockstep_out\(632),
      R => Reset
    );
\LOCKSTEP_Out_reg[467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(30),
      Q => \^lockstep_out\(633),
      R => Reset
    );
\LOCKSTEP_Out_reg[468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(29),
      Q => \^lockstep_out\(634),
      R => Reset
    );
\LOCKSTEP_Out_reg[469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(28),
      Q => \^lockstep_out\(635),
      R => Reset
    );
\LOCKSTEP_Out_reg[470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(27),
      Q => \^lockstep_out\(636),
      R => Reset
    );
\LOCKSTEP_Out_reg[471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(26),
      Q => \^lockstep_out\(637),
      R => Reset
    );
\LOCKSTEP_Out_reg[472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(25),
      Q => \^lockstep_out\(638),
      R => Reset
    );
\LOCKSTEP_Out_reg[473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(24),
      Q => \^lockstep_out\(639),
      R => Reset
    );
\LOCKSTEP_Out_reg[474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(23),
      Q => \^lockstep_out\(640),
      R => Reset
    );
\LOCKSTEP_Out_reg[475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(22),
      Q => \^lockstep_out\(641),
      R => Reset
    );
\LOCKSTEP_Out_reg[476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(21),
      Q => \^lockstep_out\(642),
      R => Reset
    );
\LOCKSTEP_Out_reg[477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(20),
      Q => \^lockstep_out\(643),
      R => Reset
    );
\LOCKSTEP_Out_reg[478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(19),
      Q => \^lockstep_out\(644),
      R => Reset
    );
\LOCKSTEP_Out_reg[479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(18),
      Q => \^lockstep_out\(645),
      R => Reset
    );
\LOCKSTEP_Out_reg[480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(17),
      Q => \^lockstep_out\(646),
      R => Reset
    );
\LOCKSTEP_Out_reg[481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(16),
      Q => \^lockstep_out\(647),
      R => Reset
    );
\LOCKSTEP_Out_reg[482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(15),
      Q => \^lockstep_out\(648),
      R => Reset
    );
\LOCKSTEP_Out_reg[483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(14),
      Q => \^lockstep_out\(649),
      R => Reset
    );
\LOCKSTEP_Out_reg[484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(13),
      Q => \^lockstep_out\(650),
      R => Reset
    );
\LOCKSTEP_Out_reg[485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(12),
      Q => \^lockstep_out\(651),
      R => Reset
    );
\LOCKSTEP_Out_reg[486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(11),
      Q => \^lockstep_out\(652),
      R => Reset
    );
\LOCKSTEP_Out_reg[487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(10),
      Q => \^lockstep_out\(653),
      R => Reset
    );
\LOCKSTEP_Out_reg[488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(9),
      Q => \^lockstep_out\(654),
      R => Reset
    );
\LOCKSTEP_Out_reg[489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(8),
      Q => \^lockstep_out\(655),
      R => Reset
    );
\LOCKSTEP_Out_reg[490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(7),
      Q => \^lockstep_out\(656),
      R => Reset
    );
\LOCKSTEP_Out_reg[491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(6),
      Q => \^lockstep_out\(657),
      R => Reset
    );
\LOCKSTEP_Out_reg[492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(5),
      Q => \^lockstep_out\(658),
      R => Reset
    );
\LOCKSTEP_Out_reg[493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(4),
      Q => \^lockstep_out\(659),
      R => Reset
    );
\LOCKSTEP_Out_reg[494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(3),
      Q => \^lockstep_out\(660),
      R => Reset
    );
\LOCKSTEP_Out_reg[495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(2),
      Q => \^lockstep_out\(661),
      R => Reset
    );
\LOCKSTEP_Out_reg[496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(1),
      Q => \^lockstep_out\(662),
      R => Reset
    );
\LOCKSTEP_Out_reg[497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(0),
      Q => \^lockstep_out\(663),
      R => Reset
    );
\LOCKSTEP_Out_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(0),
      Q => \^lockstep_out\(4),
      R => Reset
    );
\LOCKSTEP_Out_reg[539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => \^lockstep_out\(542),
      R => Reset
    );
\LOCKSTEP_Out_reg[555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awvalid\,
      Q => \^lockstep_out\(555),
      R => Reset
    );
\LOCKSTEP_Out_reg[556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(31),
      Q => \^lockstep_out\(556),
      R => Reset
    );
\LOCKSTEP_Out_reg[557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(30),
      Q => \^lockstep_out\(557),
      R => Reset
    );
\LOCKSTEP_Out_reg[558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(29),
      Q => \^lockstep_out\(558),
      R => Reset
    );
\LOCKSTEP_Out_reg[559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(28),
      Q => \^lockstep_out\(559),
      R => Reset
    );
\LOCKSTEP_Out_reg[560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(27),
      Q => \^lockstep_out\(560),
      R => Reset
    );
\LOCKSTEP_Out_reg[561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(26),
      Q => \^lockstep_out\(561),
      R => Reset
    );
\LOCKSTEP_Out_reg[562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(25),
      Q => \^lockstep_out\(562),
      R => Reset
    );
\LOCKSTEP_Out_reg[563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(24),
      Q => \^lockstep_out\(563),
      R => Reset
    );
\LOCKSTEP_Out_reg[564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(23),
      Q => \^lockstep_out\(564),
      R => Reset
    );
\LOCKSTEP_Out_reg[565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(22),
      Q => \^lockstep_out\(565),
      R => Reset
    );
\LOCKSTEP_Out_reg[566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(21),
      Q => \^lockstep_out\(566),
      R => Reset
    );
\LOCKSTEP_Out_reg[567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(20),
      Q => \^lockstep_out\(567),
      R => Reset
    );
\LOCKSTEP_Out_reg[568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(19),
      Q => \^lockstep_out\(568),
      R => Reset
    );
\LOCKSTEP_Out_reg[569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(18),
      Q => \^lockstep_out\(569),
      R => Reset
    );
\LOCKSTEP_Out_reg[570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(17),
      Q => \^lockstep_out\(570),
      R => Reset
    );
\LOCKSTEP_Out_reg[571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(16),
      Q => \^lockstep_out\(571),
      R => Reset
    );
\LOCKSTEP_Out_reg[572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(15),
      Q => \^lockstep_out\(572),
      R => Reset
    );
\LOCKSTEP_Out_reg[573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(14),
      Q => \^lockstep_out\(573),
      R => Reset
    );
\LOCKSTEP_Out_reg[574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(13),
      Q => \^lockstep_out\(574),
      R => Reset
    );
\LOCKSTEP_Out_reg[575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(12),
      Q => \^lockstep_out\(575),
      R => Reset
    );
\LOCKSTEP_Out_reg[576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(11),
      Q => \^lockstep_out\(576),
      R => Reset
    );
\LOCKSTEP_Out_reg[577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(10),
      Q => \^lockstep_out\(577),
      R => Reset
    );
\LOCKSTEP_Out_reg[578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(9),
      Q => \^lockstep_out\(578),
      R => Reset
    );
\LOCKSTEP_Out_reg[579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(8),
      Q => \^lockstep_out\(579),
      R => Reset
    );
\LOCKSTEP_Out_reg[580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(7),
      Q => \^lockstep_out\(580),
      R => Reset
    );
\LOCKSTEP_Out_reg[581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(6),
      Q => \^lockstep_out\(581),
      R => Reset
    );
\LOCKSTEP_Out_reg[582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(5),
      Q => \^lockstep_out\(582),
      R => Reset
    );
\LOCKSTEP_Out_reg[583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(4),
      Q => \^lockstep_out\(583),
      R => Reset
    );
\LOCKSTEP_Out_reg[584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(3),
      Q => \^lockstep_out\(584),
      R => Reset
    );
\LOCKSTEP_Out_reg[585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(2),
      Q => \^lockstep_out\(585),
      R => Reset
    );
\LOCKSTEP_Out_reg[586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(1),
      Q => \^lockstep_out\(586),
      R => Reset
    );
\LOCKSTEP_Out_reg[587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(0),
      Q => \^lockstep_out\(587),
      R => Reset
    );
\LOCKSTEP_Out_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(1),
      Q => \^lockstep_out\(5),
      R => Reset
    );
\LOCKSTEP_Out_reg[620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(3),
      Q => \^lockstep_out\(620),
      R => Reset
    );
\LOCKSTEP_Out_reg[621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(2),
      Q => \^lockstep_out\(621),
      R => Reset
    );
\LOCKSTEP_Out_reg[622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(1),
      Q => \^lockstep_out\(622),
      R => Reset
    );
\LOCKSTEP_Out_reg[623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(0),
      Q => \^lockstep_out\(623),
      R => Reset
    );
\LOCKSTEP_Out_reg[629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wvalid\,
      Q => \^lockstep_out\(629),
      R => Reset
    );
\LOCKSTEP_Out_reg[68]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(0),
      Q => \^lockstep_out\(68),
      R => Reset
    );
\LOCKSTEP_Out_reg[69]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(1),
      Q => \^lockstep_out\(69),
      R => Reset
    );
\LOCKSTEP_Out_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(2),
      Q => \^lockstep_out\(6),
      R => Reset
    );
\LOCKSTEP_Out_reg[70]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(2),
      Q => \^lockstep_out\(70),
      R => Reset
    );
\LOCKSTEP_Out_reg[71]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(3),
      Q => \^lockstep_out\(71),
      R => Reset
    );
\LOCKSTEP_Out_reg[721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_arvalid\,
      Q => \^lockstep_out\(721),
      R => Reset
    );
\LOCKSTEP_Out_reg[72]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(4),
      Q => \^lockstep_out\(72),
      R => Reset
    );
\LOCKSTEP_Out_reg[73]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(5),
      Q => \^lockstep_out\(73),
      R => Reset
    );
\LOCKSTEP_Out_reg[74]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(6),
      Q => \^lockstep_out\(74),
      R => Reset
    );
\LOCKSTEP_Out_reg[75]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(7),
      Q => \^lockstep_out\(75),
      R => Reset
    );
\LOCKSTEP_Out_reg[76]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(8),
      Q => \^lockstep_out\(76),
      R => Reset
    );
\LOCKSTEP_Out_reg[77]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(9),
      Q => \^lockstep_out\(77),
      R => Reset
    );
\LOCKSTEP_Out_reg[78]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(10),
      Q => \^lockstep_out\(78),
      R => Reset
    );
\LOCKSTEP_Out_reg[79]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(11),
      Q => \^lockstep_out\(79),
      R => Reset
    );
\LOCKSTEP_Out_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(3),
      Q => \^lockstep_out\(7),
      R => Reset
    );
\LOCKSTEP_Out_reg[80]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(12),
      Q => \^lockstep_out\(80),
      R => Reset
    );
\LOCKSTEP_Out_reg[81]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(13),
      Q => \^lockstep_out\(81),
      R => Reset
    );
\LOCKSTEP_Out_reg[82]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(14),
      Q => \^lockstep_out\(82),
      R => Reset
    );
\LOCKSTEP_Out_reg[83]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(15),
      Q => \^lockstep_out\(83),
      R => Reset
    );
\LOCKSTEP_Out_reg[84]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(16),
      Q => \^lockstep_out\(84),
      R => Reset
    );
\LOCKSTEP_Out_reg[85]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(17),
      Q => \^lockstep_out\(85),
      R => Reset
    );
\LOCKSTEP_Out_reg[86]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(18),
      Q => \^lockstep_out\(86),
      R => Reset
    );
\LOCKSTEP_Out_reg[87]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(19),
      Q => \^lockstep_out\(87),
      R => Reset
    );
\LOCKSTEP_Out_reg[88]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(20),
      Q => \^lockstep_out\(88),
      R => Reset
    );
\LOCKSTEP_Out_reg[89]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(21),
      Q => \^lockstep_out\(89),
      R => Reset
    );
\LOCKSTEP_Out_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(4),
      Q => \^lockstep_out\(8),
      R => Reset
    );
\LOCKSTEP_Out_reg[90]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(22),
      Q => \^lockstep_out\(90),
      R => Reset
    );
\LOCKSTEP_Out_reg[91]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(23),
      Q => \^lockstep_out\(91),
      R => Reset
    );
\LOCKSTEP_Out_reg[92]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(24),
      Q => \^lockstep_out\(92),
      R => Reset
    );
\LOCKSTEP_Out_reg[93]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(25),
      Q => \^lockstep_out\(93),
      R => Reset
    );
\LOCKSTEP_Out_reg[94]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(26),
      Q => \^lockstep_out\(94),
      R => Reset
    );
\LOCKSTEP_Out_reg[95]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(27),
      Q => \^lockstep_out\(95),
      R => Reset
    );
\LOCKSTEP_Out_reg[96]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(28),
      Q => \^lockstep_out\(96),
      R => Reset
    );
\LOCKSTEP_Out_reg[97]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(29),
      Q => \^lockstep_out\(97),
      R => Reset
    );
\LOCKSTEP_Out_reg[98]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(30),
      Q => \^lockstep_out\(98),
      R => Reset
    );
\LOCKSTEP_Out_reg[99]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(31),
      Q => \^lockstep_out\(99),
      R => Reset
    );
\LOCKSTEP_Out_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(5),
      Q => \^lockstep_out\(9),
      R => Reset
    );
MicroBlaze_Core_I: entity work.design_1_microblaze_1_1_MicroBlaze_Core
     port map (
      Clk => Clk,
      D(505) => \^mb_halted\,
      D(504) => \^ifetch\,
      D(503) => \^i_as\,
      D(502) => \^instr_addr\(0),
      D(501) => \^instr_addr\(1),
      D(500) => \^instr_addr\(2),
      D(499) => \^instr_addr\(3),
      D(498) => \^instr_addr\(4),
      D(497) => \^instr_addr\(5),
      D(496) => \^instr_addr\(6),
      D(495) => \^instr_addr\(7),
      D(494) => \^instr_addr\(8),
      D(493) => \^instr_addr\(9),
      D(492) => \^instr_addr\(10),
      D(491) => \^instr_addr\(11),
      D(490) => \^instr_addr\(12),
      D(489) => \^instr_addr\(13),
      D(488) => \^instr_addr\(14),
      D(487) => \^instr_addr\(15),
      D(486) => \^instr_addr\(16),
      D(485) => \^instr_addr\(17),
      D(484) => \^instr_addr\(18),
      D(483) => \^instr_addr\(19),
      D(482) => \^instr_addr\(20),
      D(481) => \^instr_addr\(21),
      D(480) => \^instr_addr\(22),
      D(479) => \^instr_addr\(23),
      D(478) => \^instr_addr\(24),
      D(477) => \^instr_addr\(25),
      D(476) => \^instr_addr\(26),
      D(475) => \^instr_addr\(27),
      D(474) => \^instr_addr\(28),
      D(473) => \^instr_addr\(29),
      D(472) => \^instr_addr\(30),
      D(471) => \^instr_addr\(31),
      D(470) => \^data_addr\(0),
      D(469) => \^data_addr\(1),
      D(468) => \^data_addr\(2),
      D(467) => \^data_addr\(3),
      D(466) => \^data_addr\(4),
      D(465) => \^data_addr\(5),
      D(464) => \^data_addr\(6),
      D(463) => \^data_addr\(7),
      D(462) => \^data_addr\(8),
      D(461) => \^data_addr\(9),
      D(460) => \^data_addr\(10),
      D(459) => \^data_addr\(11),
      D(458) => \^data_addr\(12),
      D(457) => \^data_addr\(13),
      D(456) => \^data_addr\(14),
      D(455) => \^data_addr\(15),
      D(454) => \^data_addr\(16),
      D(453) => \^data_addr\(17),
      D(452) => \^data_addr\(18),
      D(451) => \^data_addr\(19),
      D(450) => \^data_addr\(20),
      D(449) => \^data_addr\(21),
      D(448) => \^data_addr\(22),
      D(447) => \^data_addr\(23),
      D(446) => \^data_addr\(24),
      D(445) => \^data_addr\(25),
      D(444) => \^data_addr\(26),
      D(443) => \^data_addr\(27),
      D(442) => \^data_addr\(28),
      D(441) => \^data_addr\(29),
      D(440) => \^data_addr\(30),
      D(439) => \^data_addr\(31),
      D(438) => \^data_write\(0),
      D(437) => \^data_write\(1),
      D(436) => \^data_write\(2),
      D(435) => \^data_write\(3),
      D(434) => \^data_write\(4),
      D(433) => \^data_write\(5),
      D(432) => \^data_write\(6),
      D(431) => \^data_write\(7),
      D(430) => \^data_write\(8),
      D(429) => \^data_write\(9),
      D(428) => \^data_write\(10),
      D(427) => \^data_write\(11),
      D(426) => \^data_write\(12),
      D(425) => \^data_write\(13),
      D(424) => \^data_write\(14),
      D(423) => \^data_write\(15),
      D(422) => \^data_write\(16),
      D(421) => \^data_write\(17),
      D(420) => \^data_write\(18),
      D(419) => \^data_write\(19),
      D(418) => \^data_write\(20),
      D(417) => \^data_write\(21),
      D(416) => \^data_write\(22),
      D(415) => \^data_write\(23),
      D(414) => \^data_write\(24),
      D(413) => \^data_write\(25),
      D(412) => \^data_write\(26),
      D(411) => \^data_write\(27),
      D(410) => \^data_write\(28),
      D(409) => \^data_write\(29),
      D(408) => \^data_write\(30),
      D(407) => \^data_write\(31),
      D(406) => \^d_as\,
      D(405) => \^read_strobe\,
      D(404) => \^write_strobe\,
      D(403) => \^byte_enable\(0),
      D(402) => \^byte_enable\(1),
      D(401) => \^byte_enable\(2),
      D(400) => \^byte_enable\(3),
      D(399 downto 368) => \^m_axi_dp_awaddr\(31 downto 0),
      D(367) => \^m_axi_dp_awvalid\,
      D(366 downto 335) => \^m_axi_dp_wdata\(31 downto 0),
      D(334 downto 331) => \^m_axi_dp_wstrb\(3 downto 0),
      D(330) => \^m_axi_dp_wvalid\,
      D(329) => \^m_axi_dp_arvalid\,
      D(328 downto 299) => \^m_axi_ic_araddr\(31 downto 2),
      D(298) => \^m_axi_ic_arlen\(0),
      D(297) => \^m_axi_ic_arburst\(1),
      D(296) => \^m_axi_ic_arcache\(2),
      D(295) => \^m_axi_ic_arvalid\,
      D(294) => \^m_axi_ic_rready\,
      D(293 downto 262) => \^m_axi_dc_awaddr\(31 downto 0),
      D(261) => \^m_axi_dc_awvalid\,
      D(260 downto 229) => \^m_axi_dc_wdata\(31 downto 0),
      D(228 downto 225) => \^m_axi_dc_wstrb\(3 downto 0),
      D(224) => \^m_axi_dc_wlast\,
      D(223) => \^m_axi_dc_wvalid\,
      D(222 downto 193) => \^m_axi_dc_araddr\(31 downto 2),
      D(192) => \^m_axi_dc_arlen\(0),
      D(191) => \^m_axi_dc_arburst\(1),
      D(190) => \^m_axi_dc_arcache\(2),
      D(189) => \^m_axi_dc_arvalid\,
      D(188) => \^trace_instruction\(0),
      D(187) => \^trace_instruction\(1),
      D(186) => \^trace_instruction\(2),
      D(185) => \^trace_instruction\(3),
      D(184) => \^trace_instruction\(4),
      D(183) => \^trace_instruction\(5),
      D(182) => \^trace_instruction\(6),
      D(181) => \^trace_instruction\(7),
      D(180) => \^trace_instruction\(8),
      D(179) => \^trace_instruction\(9),
      D(178) => \^trace_instruction\(10),
      D(177) => \^trace_instruction\(11),
      D(176) => \^trace_instruction\(12),
      D(175) => \^trace_instruction\(13),
      D(174) => \^trace_instruction\(14),
      D(173) => \^trace_instruction\(15),
      D(172) => \^trace_instruction\(16),
      D(171) => \^trace_instruction\(17),
      D(170) => \^trace_instruction\(18),
      D(169) => \^trace_instruction\(19),
      D(168) => \^trace_instruction\(20),
      D(167) => \^trace_instruction\(21),
      D(166) => \^trace_instruction\(22),
      D(165) => \^trace_instruction\(23),
      D(164) => \^trace_instruction\(24),
      D(163) => \^trace_instruction\(25),
      D(162) => \^trace_instruction\(26),
      D(161) => \^trace_instruction\(27),
      D(160) => \^trace_instruction\(28),
      D(159) => \^trace_instruction\(29),
      D(158) => \^trace_instruction\(30),
      D(157) => \^trace_instruction\(31),
      D(156) => \^trace_valid_instr\,
      D(155) => \^trace_pc\(0),
      D(154) => \^trace_pc\(1),
      D(153) => \^trace_pc\(2),
      D(152) => \^trace_pc\(3),
      D(151) => \^trace_pc\(4),
      D(150) => \^trace_pc\(5),
      D(149) => \^trace_pc\(6),
      D(148) => \^trace_pc\(7),
      D(147) => \^trace_pc\(8),
      D(146) => \^trace_pc\(9),
      D(145) => \^trace_pc\(10),
      D(144) => \^trace_pc\(11),
      D(143) => \^trace_pc\(12),
      D(142) => \^trace_pc\(13),
      D(141) => \^trace_pc\(14),
      D(140) => \^trace_pc\(15),
      D(139) => \^trace_pc\(16),
      D(138) => \^trace_pc\(17),
      D(137) => \^trace_pc\(18),
      D(136) => \^trace_pc\(19),
      D(135) => \^trace_pc\(20),
      D(134) => \^trace_pc\(21),
      D(133) => \^trace_pc\(22),
      D(132) => \^trace_pc\(23),
      D(131) => \^trace_pc\(24),
      D(130) => \^trace_pc\(25),
      D(129) => \^trace_pc\(26),
      D(128) => \^trace_pc\(27),
      D(127) => \^trace_pc\(28),
      D(126) => \^trace_pc\(29),
      D(125) => \^trace_pc\(30),
      D(124) => \^trace_pc\(31),
      D(123) => \^trace_reg_write\,
      D(122) => \^trace_reg_addr\(0),
      D(121) => \^trace_reg_addr\(1),
      D(120) => \^trace_reg_addr\(2),
      D(119) => \^trace_reg_addr\(3),
      D(118) => \^trace_reg_addr\(4),
      D(117) => \^trace_msr_reg\(7),
      D(116) => \^trace_msr_reg\(9),
      D(115) => \^trace_msr_reg\(11),
      D(114) => \^trace_msr_reg\(12),
      D(113) => \^trace_msr_reg\(13),
      D(112) => \^trace_new_reg_value\(0),
      D(111) => \^trace_new_reg_value\(1),
      D(110) => \^trace_new_reg_value\(2),
      D(109) => \^trace_new_reg_value\(3),
      D(108) => \^trace_new_reg_value\(4),
      D(107) => \^trace_new_reg_value\(5),
      D(106) => \^trace_new_reg_value\(6),
      D(105) => \^trace_new_reg_value\(7),
      D(104) => \^trace_new_reg_value\(8),
      D(103) => \^trace_new_reg_value\(9),
      D(102) => \^trace_new_reg_value\(10),
      D(101) => \^trace_new_reg_value\(11),
      D(100) => \^trace_new_reg_value\(12),
      D(99) => \^trace_new_reg_value\(13),
      D(98) => \^trace_new_reg_value\(14),
      D(97) => \^trace_new_reg_value\(15),
      D(96) => \^trace_new_reg_value\(16),
      D(95) => \^trace_new_reg_value\(17),
      D(94) => \^trace_new_reg_value\(18),
      D(93) => \^trace_new_reg_value\(19),
      D(92) => \^trace_new_reg_value\(20),
      D(91) => \^trace_new_reg_value\(21),
      D(90) => \^trace_new_reg_value\(22),
      D(89) => \^trace_new_reg_value\(23),
      D(88) => \^trace_new_reg_value\(24),
      D(87) => \^trace_new_reg_value\(25),
      D(86) => \^trace_new_reg_value\(26),
      D(85) => \^trace_new_reg_value\(27),
      D(84) => \^trace_new_reg_value\(28),
      D(83) => \^trace_new_reg_value\(29),
      D(82) => \^trace_new_reg_value\(30),
      D(81) => \^trace_new_reg_value\(31),
      D(80) => \^trace_jump_taken\,
      D(79) => \^trace_delay_slot\,
      D(78) => \^trace_data_address\(0),
      D(77) => \^trace_data_address\(1),
      D(76) => \^trace_data_address\(2),
      D(75) => \^trace_data_address\(3),
      D(74) => \^trace_data_address\(4),
      D(73) => \^trace_data_address\(5),
      D(72) => \^trace_data_address\(6),
      D(71) => \^trace_data_address\(7),
      D(70) => \^trace_data_address\(8),
      D(69) => \^trace_data_address\(9),
      D(68) => \^trace_data_address\(10),
      D(67) => \^trace_data_address\(11),
      D(66) => \^trace_data_address\(12),
      D(65) => \^trace_data_address\(13),
      D(64) => \^trace_data_address\(14),
      D(63) => \^trace_data_address\(15),
      D(62) => \^trace_data_address\(16),
      D(61) => \^trace_data_address\(17),
      D(60) => \^trace_data_address\(18),
      D(59) => \^trace_data_address\(19),
      D(58) => \^trace_data_address\(20),
      D(57) => \^trace_data_address\(21),
      D(56) => \^trace_data_address\(22),
      D(55) => \^trace_data_address\(23),
      D(54) => \^trace_data_address\(24),
      D(53) => \^trace_data_address\(25),
      D(52) => \^trace_data_address\(26),
      D(51) => \^trace_data_address\(27),
      D(50) => \^trace_data_address\(28),
      D(49) => \^trace_data_address\(29),
      D(48) => \^trace_data_address\(30),
      D(47) => \^trace_data_address\(31),
      D(46) => \^trace_data_write_value\(0),
      D(45) => \^trace_data_write_value\(1),
      D(44) => \^trace_data_write_value\(2),
      D(43) => \^trace_data_write_value\(3),
      D(42) => \^trace_data_write_value\(4),
      D(41) => \^trace_data_write_value\(5),
      D(40) => \^trace_data_write_value\(6),
      D(39) => \^trace_data_write_value\(7),
      D(38) => \^trace_data_write_value\(8),
      D(37) => \^trace_data_write_value\(9),
      D(36) => \^trace_data_write_value\(10),
      D(35) => \^trace_data_write_value\(11),
      D(34) => \^trace_data_write_value\(12),
      D(33) => \^trace_data_write_value\(13),
      D(32) => \^trace_data_write_value\(14),
      D(31) => \^trace_data_write_value\(15),
      D(30) => \^trace_data_write_value\(16),
      D(29) => \^trace_data_write_value\(17),
      D(28) => \^trace_data_write_value\(18),
      D(27) => \^trace_data_write_value\(19),
      D(26) => \^trace_data_write_value\(20),
      D(25) => \^trace_data_write_value\(21),
      D(24) => \^trace_data_write_value\(22),
      D(23) => \^trace_data_write_value\(23),
      D(22) => \^trace_data_write_value\(24),
      D(21) => \^trace_data_write_value\(25),
      D(20) => \^trace_data_write_value\(26),
      D(19) => \^trace_data_write_value\(27),
      D(18) => \^trace_data_write_value\(28),
      D(17) => \^trace_data_write_value\(29),
      D(16) => \^trace_data_write_value\(30),
      D(15) => \^trace_data_write_value\(31),
      D(14) => \^trace_data_byte_enable\(0),
      D(13) => \^trace_data_byte_enable\(1),
      D(12) => \^trace_data_byte_enable\(2),
      D(11) => \^trace_data_byte_enable\(3),
      D(10) => \^trace_data_access\,
      D(9) => \^trace_data_read\,
      D(8) => \^trace_data_write\,
      D(7) => \^trace_dcache_req\,
      D(6) => \^trace_dcache_hit\,
      D(5) => \^trace_dcache_rdy\,
      D(4) => \^trace_dcache_read\,
      D(3) => \^trace_icache_req\,
      D(2) => \^trace_icache_hit\,
      D(1) => \^trace_icache_rdy\,
      D(0) => \^trace_of_piperun\,
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_1_sp_1 => MicroBlaze_Core_I_n_555,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_INST_0_i_13_n_0,
      Dbg_TDO_1 => Dbg_TDO_INST_0_i_14_n_0,
      Dbg_TDO_2 => Dbg_TDO_INST_0_i_15_n_0,
      Dbg_Trig_Ack_In(1) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_Ack_Out(1) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_In(1) => \^dbg_trig_in\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      Dbg_Trig_Out(1) => Dbg_Trig_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      Dbg_Update => Dbg_Update,
      Debug_Rst => \^debug_rst\,
      Hibernate => Hibernate,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(37) => \^lockstep_master_out\(1),
      LOCKSTEP_Master_Out(36) => \^lockstep_master_out\(3),
      LOCKSTEP_Master_Out(35) => \^lockstep_master_out\(4),
      LOCKSTEP_Master_Out(34) => \^lockstep_master_out\(5),
      LOCKSTEP_Master_Out(33) => \^lockstep_master_out\(11),
      LOCKSTEP_Master_Out(32) => \^dbg_continue\,
      LOCKSTEP_Master_Out(31) => \^lockstep_master_out\(15),
      LOCKSTEP_Master_Out(30) => \^lockstep_master_out\(16),
      LOCKSTEP_Master_Out(29) => \^lockstep_master_out\(17),
      LOCKSTEP_Master_Out(28) => \^lockstep_master_out\(18),
      LOCKSTEP_Master_Out(27) => \^lockstep_master_out\(19),
      LOCKSTEP_Master_Out(26) => \^lockstep_master_out\(20),
      LOCKSTEP_Master_Out(25) => \^lockstep_master_out\(21),
      LOCKSTEP_Master_Out(24) => \^lockstep_master_out\(22),
      LOCKSTEP_Master_Out(23) => \^lockstep_master_out\(23),
      LOCKSTEP_Master_Out(22) => \^lockstep_master_out\(24),
      LOCKSTEP_Master_Out(21) => \^lockstep_master_out\(25),
      LOCKSTEP_Master_Out(20) => \^lockstep_master_out\(26),
      LOCKSTEP_Master_Out(19) => \^lockstep_master_out\(27),
      LOCKSTEP_Master_Out(18) => \^lockstep_master_out\(28),
      LOCKSTEP_Master_Out(17) => \^lockstep_master_out\(29),
      LOCKSTEP_Master_Out(16) => \^lockstep_master_out\(30),
      LOCKSTEP_Master_Out(15) => \^lockstep_master_out\(31),
      LOCKSTEP_Master_Out(14) => \^lockstep_master_out\(32),
      LOCKSTEP_Master_Out(13) => \^lockstep_master_out\(33),
      LOCKSTEP_Master_Out(12) => \^lockstep_master_out\(34),
      LOCKSTEP_Master_Out(11) => \^lockstep_master_out\(35),
      LOCKSTEP_Master_Out(10) => \^lockstep_master_out\(36),
      LOCKSTEP_Master_Out(9) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(8) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(7) => \^lockstep_master_out\(39),
      LOCKSTEP_Master_Out(6) => \^lockstep_master_out\(40),
      LOCKSTEP_Master_Out(5) => \^lockstep_master_out\(41),
      LOCKSTEP_Master_Out(4) => \^lockstep_master_out\(42),
      LOCKSTEP_Master_Out(3) => \^lockstep_master_out\(43),
      LOCKSTEP_Master_Out(2) => \^lockstep_master_out\(44),
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(45),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(46),
      M_AXI_DC_ARREADY => M_AXI_DC_ARREADY,
      M_AXI_DC_AWREADY => M_AXI_DC_AWREADY,
      M_AXI_DC_BVALID => M_AXI_DC_BVALID,
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      M_AXI_DC_RLAST => M_AXI_DC_RLAST,
      M_AXI_DC_RVALID => M_AXI_DC_RVALID,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_IC_ARREADY => M_AXI_IC_ARREADY,
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      M_AXI_IC_RLAST => M_AXI_IC_RLAST,
      M_AXI_IC_RVALID => M_AXI_IC_RVALID,
      Mb_Reset => Mb_Reset,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Status_Reg_En => \Area.Core/Implement_Debug_Logic.Master_Core.Debug_Area/Status_Reg_En\,
      Suspend => Suspend,
      \Using_FPGA.Native\ => \^lockstep_master_out\(9),
      \Using_FPGA.Native_0\ => \^lockstep_master_out\(2),
      Wakeup(0 to 1) => Wakeup(0 to 1)
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity design_1_microblaze_1_1 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of design_1_microblaze_1_1 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of design_1_microblaze_1_1 : entity is "design_1_microblaze_1_1,MicroBlaze,{}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of design_1_microblaze_1_1 : entity is "yes";
  attribute x_core_info : string;
  attribute x_core_info of design_1_microblaze_1_1 : entity is "MicroBlaze,Vivado 2018.3";
end design_1_microblaze_1_1;

architecture STRUCTURE of design_1_microblaze_1_1 is
  signal NLW_U0_Dbg_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Continue_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Intr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Wakeup_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Hibernate_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Error_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Pause_Ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S0_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S10_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S11_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S12_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S13_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S14_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S15_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S1_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S2_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S3_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S4_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S5_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S6_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S7_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S8_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S9_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Sleep_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Suspend_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Access_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Delay_Slot_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_EX_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Exception_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MEM_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_OF_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Reg_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Valid_Instr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_Dbg_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_Trace_Data_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 35 );
  signal NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Dbg_Trig_In_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_LOCKSTEP_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_M0_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M10_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M11_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M12_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M13_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M14_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M15_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M1_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M2_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M3_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M4_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M5_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M6_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M7_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M8_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M9_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_RAM_From_UNCONNECTED : STD_LOGIC_VECTOR ( 255 downto 0 );
  signal NLW_U0_Trace_Data_Address_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 3 );
  signal NLW_U0_Trace_Data_Write_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Exception_Kind_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  signal NLW_U0_Trace_Instruction_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_MSR_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 14 );
  signal NLW_U0_Trace_New_Reg_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PC_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PID_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Trace_Reg_Addr_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of U0 : label is 4;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of U0 : label is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of U0 : label is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of U0 : label is 1;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of U0 : label is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of U0 : label is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of U0 : label is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of U0 : label is 4096;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of U0 : label is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of U0 : label is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of U0 : label is 4;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000001000011010000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of U0 : label is 4096;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000001000011010000001111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of U0 : label is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of U0 : label is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of U0 : label is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of U0 : label is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of U0 : label is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of U0 : label is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of U0 : label is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of U0 : label is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of U0 : label is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of U0 : label is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of U0 : label is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of U0 : label is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of U0 : label is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of U0 : label is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of U0 : label is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of U0 : label is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of U0 : label is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of U0 : label is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of U0 : label is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynq";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of U0 : label is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of U0 : label is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of U0 : label is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of U0 : label is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of U0 : label is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of U0 : label is 1;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000001000011010000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000001000011010000001111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of U0 : label is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of U0 : label is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of U0 : label is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of U0 : label is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of U0 : label is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "design_1_microblaze_1_1";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of U0 : label is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of U0 : label is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of U0 : label is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of U0 : label is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of U0 : label is 1;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of U0 : label is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of U0 : label is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of U0 : label is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of U0 : label is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of U0 : label is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of U0 : label is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of U0 : label is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of U0 : label is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of U0 : label is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of U0 : label is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of U0 : label is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of U0 : label is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of U0 : label is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of U0 : label is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of U0 : label is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of U0 : label is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of U0 : label is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of U0 : label is 32;
  attribute C_PVR : integer;
  attribute C_PVR of U0 : label is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of U0 : label is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of U0 : label is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of U0 : label is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_SCO : integer;
  attribute C_SCO of U0 : label is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of U0 : label is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of U0 : label is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of U0 : label is 1;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of U0 : label is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of U0 : label is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of U0 : label is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of U0 : label is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of U0 : label is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of U0 : label is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of U0 : label is 1;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of U0 : label is 0;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of U0 : label is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of U0 : label is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of U0 : label is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of U0 : label is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of U0 : label is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of U0 : label is 0;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute x_interface_info : string;
  attribute x_interface_info of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of DCE : signal is "xilinx.com:interface:lmb:1.0 DLMB CE";
  attribute x_interface_info of DReady : signal is "xilinx.com:interface:lmb:1.0 DLMB READY";
  attribute x_interface_info of DUE : signal is "xilinx.com:interface:lmb:1.0 DLMB UE";
  attribute x_interface_info of DWait : signal is "xilinx.com:interface:lmb:1.0 DLMB WAIT";
  attribute x_interface_info of D_AS : signal is "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE";
  attribute x_interface_info of Dbg_Capture : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE";
  attribute x_interface_info of Dbg_Clk : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CLK";
  attribute x_interface_info of Dbg_Disable : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE";
  attribute x_interface_info of Dbg_Shift : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT";
  attribute x_interface_info of Dbg_TDI : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDI";
  attribute x_interface_info of Dbg_TDO : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDO";
  attribute x_interface_info of Dbg_Update : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE";
  attribute x_interface_info of Debug_Rst : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG RST";
  attribute x_interface_info of ICE : signal is "xilinx.com:interface:lmb:1.0 ILMB CE";
  attribute x_interface_info of IFetch : signal is "xilinx.com:interface:lmb:1.0 ILMB READSTROBE";
  attribute x_interface_info of IReady : signal is "xilinx.com:interface:lmb:1.0 ILMB READY";
  attribute x_interface_info of IUE : signal is "xilinx.com:interface:lmb:1.0 ILMB UE";
  attribute x_interface_info of IWAIT : signal is "xilinx.com:interface:lmb:1.0 ILMB WAIT";
  attribute x_interface_info of I_AS : signal is "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE";
  attribute x_interface_info of Interrupt : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT";
  attribute x_interface_parameter of Interrupt : signal is "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 0";
  attribute x_interface_info of M_AXI_DC_ARLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARLOCK";
  attribute x_interface_info of M_AXI_DC_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARREADY";
  attribute x_interface_info of M_AXI_DC_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARVALID";
  attribute x_interface_info of M_AXI_DC_AWLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWLOCK";
  attribute x_interface_info of M_AXI_DC_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWREADY";
  attribute x_interface_info of M_AXI_DC_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWVALID";
  attribute x_interface_info of M_AXI_DC_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC BREADY";
  attribute x_interface_info of M_AXI_DC_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC BVALID";
  attribute x_interface_info of M_AXI_DC_RLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RLAST";
  attribute x_interface_info of M_AXI_DC_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RREADY";
  attribute x_interface_info of M_AXI_DC_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RVALID";
  attribute x_interface_info of M_AXI_DC_WLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC WLAST";
  attribute x_interface_info of M_AXI_DC_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC WREADY";
  attribute x_interface_info of M_AXI_DC_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC WVALID";
  attribute x_interface_info of M_AXI_DP_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY";
  attribute x_interface_info of M_AXI_DP_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID";
  attribute x_interface_info of M_AXI_DP_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY";
  attribute x_interface_info of M_AXI_DP_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID";
  attribute x_interface_info of M_AXI_DP_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY";
  attribute x_interface_info of M_AXI_DP_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID";
  attribute x_interface_info of M_AXI_DP_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY";
  attribute x_interface_info of M_AXI_DP_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID";
  attribute x_interface_info of M_AXI_DP_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY";
  attribute x_interface_info of M_AXI_DP_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID";
  attribute x_interface_info of M_AXI_IC_ARLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARLOCK";
  attribute x_interface_info of M_AXI_IC_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARREADY";
  attribute x_interface_info of M_AXI_IC_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARVALID";
  attribute x_interface_info of M_AXI_IC_AWLOCK : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWLOCK";
  attribute x_interface_info of M_AXI_IC_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWREADY";
  attribute x_interface_info of M_AXI_IC_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWVALID";
  attribute x_interface_info of M_AXI_IC_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC BREADY";
  attribute x_interface_info of M_AXI_IC_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC BVALID";
  attribute x_interface_info of M_AXI_IC_RLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RLAST";
  attribute x_interface_info of M_AXI_IC_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RREADY";
  attribute x_interface_info of M_AXI_IC_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RVALID";
  attribute x_interface_info of M_AXI_IC_WLAST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC WLAST";
  attribute x_interface_info of M_AXI_IC_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC WREADY";
  attribute x_interface_info of M_AXI_IC_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC WVALID";
  attribute x_interface_info of Read_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB READSTROBE";
  attribute x_interface_info of Reset : signal is "xilinx.com:signal:reset:1.0 RST.RESET RST";
  attribute x_interface_parameter of Reset : signal is "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0";
  attribute x_interface_info of Write_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE";
  attribute x_interface_info of Byte_Enable : signal is "xilinx.com:interface:lmb:1.0 DLMB BE";
  attribute x_interface_info of Data_Addr : signal is "xilinx.com:interface:lmb:1.0 DLMB ABUS";
  attribute x_interface_parameter of Data_Addr : signal is "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute x_interface_info of Data_Read : signal is "xilinx.com:interface:lmb:1.0 DLMB READDBUS";
  attribute x_interface_info of Data_Write : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS";
  attribute x_interface_info of Dbg_Reg_En : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN";
  attribute x_interface_info of Instr : signal is "xilinx.com:interface:lmb:1.0 ILMB READDBUS";
  attribute x_interface_info of Instr_Addr : signal is "xilinx.com:interface:lmb:1.0 ILMB ABUS";
  attribute x_interface_parameter of Instr_Addr : signal is "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY";
  attribute x_interface_info of Interrupt_Ack : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK";
  attribute x_interface_info of Interrupt_Address : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS";
  attribute x_interface_info of M_AXI_DC_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARADDR";
  attribute x_interface_info of M_AXI_DC_ARBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARBURST";
  attribute x_interface_info of M_AXI_DC_ARCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARCACHE";
  attribute x_interface_info of M_AXI_DC_ARID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARID";
  attribute x_interface_info of M_AXI_DC_ARLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARLEN";
  attribute x_interface_info of M_AXI_DC_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARPROT";
  attribute x_interface_info of M_AXI_DC_ARQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARQOS";
  attribute x_interface_info of M_AXI_DC_ARSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC ARSIZE";
  attribute x_interface_info of M_AXI_DC_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWADDR";
  attribute x_interface_info of M_AXI_DC_AWBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWBURST";
  attribute x_interface_info of M_AXI_DC_AWCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWCACHE";
  attribute x_interface_info of M_AXI_DC_AWID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWID";
  attribute x_interface_parameter of M_AXI_DC_AWID : signal is "XIL_INTERFACENAME M_AXI_DC, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 1, HAS_LOCK 1, ADDR_WIDTH 32, PROTOCOL AXI4, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, WUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, RUSER_BITS_PER_BYTE 0, BUSER_WIDTH 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 32, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, DATA_WIDTH 32, MAX_BURST_LENGTH 4, FREQ_HZ 100000000, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_DC_AWLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWLEN";
  attribute x_interface_info of M_AXI_DC_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWPROT";
  attribute x_interface_info of M_AXI_DC_AWQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWQOS";
  attribute x_interface_info of M_AXI_DC_AWSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC AWSIZE";
  attribute x_interface_info of M_AXI_DC_BID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC BID";
  attribute x_interface_info of M_AXI_DC_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC BRESP";
  attribute x_interface_info of M_AXI_DC_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RDATA";
  attribute x_interface_info of M_AXI_DC_RID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RID";
  attribute x_interface_info of M_AXI_DC_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC RRESP";
  attribute x_interface_info of M_AXI_DC_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC WDATA";
  attribute x_interface_info of M_AXI_DC_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DC WSTRB";
  attribute x_interface_info of M_AXI_DP_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR";
  attribute x_interface_info of M_AXI_DP_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT";
  attribute x_interface_info of M_AXI_DP_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR";
  attribute x_interface_parameter of M_AXI_DP_AWADDR : signal is "XIL_INTERFACENAME M_AXI_DP, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 0, HAS_LOCK 0, DATA_WIDTH 32, ADDR_WIDTH 32, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, MAX_BURST_LENGTH 1, PROTOCOL AXI4LITE, FREQ_HZ 100000000, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_DP_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT";
  attribute x_interface_info of M_AXI_DP_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP";
  attribute x_interface_info of M_AXI_DP_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA";
  attribute x_interface_info of M_AXI_DP_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP";
  attribute x_interface_info of M_AXI_DP_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA";
  attribute x_interface_info of M_AXI_DP_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB";
  attribute x_interface_info of M_AXI_IC_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARADDR";
  attribute x_interface_info of M_AXI_IC_ARBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARBURST";
  attribute x_interface_info of M_AXI_IC_ARCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARCACHE";
  attribute x_interface_info of M_AXI_IC_ARID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARID";
  attribute x_interface_info of M_AXI_IC_ARLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARLEN";
  attribute x_interface_info of M_AXI_IC_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARPROT";
  attribute x_interface_info of M_AXI_IC_ARQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARQOS";
  attribute x_interface_info of M_AXI_IC_ARSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC ARSIZE";
  attribute x_interface_info of M_AXI_IC_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWADDR";
  attribute x_interface_info of M_AXI_IC_AWBURST : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWBURST";
  attribute x_interface_info of M_AXI_IC_AWCACHE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWCACHE";
  attribute x_interface_info of M_AXI_IC_AWID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWID";
  attribute x_interface_parameter of M_AXI_IC_AWID : signal is "XIL_INTERFACENAME M_AXI_IC, ID_WIDTH 0, READ_WRITE_MODE READ_ONLY, SUPPORTS_NARROW_BURST 0, HAS_BURST 1, HAS_LOCK 0, ADDR_WIDTH 32, PROTOCOL AXI4, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, WUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, RUSER_BITS_PER_BYTE 0, BUSER_WIDTH 0, DATA_WIDTH 32, NUM_READ_OUTSTANDING 2, NUM_READ_THREADS 1, MAX_BURST_LENGTH 4, HAS_WSTRB 0, HAS_BRESP 0, FREQ_HZ 100000000, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, NUM_WRITE_OUTSTANDING 2, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_WRITE_THREADS 1, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_IC_AWLEN : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWLEN";
  attribute x_interface_info of M_AXI_IC_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWPROT";
  attribute x_interface_info of M_AXI_IC_AWQOS : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWQOS";
  attribute x_interface_info of M_AXI_IC_AWSIZE : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC AWSIZE";
  attribute x_interface_info of M_AXI_IC_BID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC BID";
  attribute x_interface_info of M_AXI_IC_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC BRESP";
  attribute x_interface_info of M_AXI_IC_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RDATA";
  attribute x_interface_info of M_AXI_IC_RID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RID";
  attribute x_interface_info of M_AXI_IC_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC RRESP";
  attribute x_interface_info of M_AXI_IC_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC WDATA";
  attribute x_interface_info of M_AXI_IC_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_IC WSTRB";
begin
U0: entity work.design_1_microblaze_1_1_MicroBlaze
     port map (
      Byte_Enable(0 to 3) => Byte_Enable(0 to 3),
      Clk => Clk,
      Config_Reset => '0',
      DCE => DCE,
      DEBUG_ACLK => '0',
      DEBUG_ARESETN => '0',
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      D_AS => D_AS,
      Data_Addr(0 to 31) => Data_Addr(0 to 31),
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Write(0 to 31) => Data_Write(0 to 31),
      Dbg_ARADDR(14 downto 2) => B"0000000000000",
      Dbg_ARREADY => NLW_U0_Dbg_ARREADY_UNCONNECTED,
      Dbg_ARVALID => '0',
      Dbg_AWADDR(14 downto 2) => B"0000000000000",
      Dbg_AWREADY => NLW_U0_Dbg_AWREADY_UNCONNECTED,
      Dbg_AWVALID => '0',
      Dbg_BREADY => '0',
      Dbg_BRESP(1 downto 0) => NLW_U0_Dbg_BRESP_UNCONNECTED(1 downto 0),
      Dbg_BVALID => NLW_U0_Dbg_BVALID_UNCONNECTED,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Continue => NLW_U0_Dbg_Continue_UNCONNECTED,
      Dbg_Disable => Dbg_Disable,
      Dbg_Intr => NLW_U0_Dbg_Intr_UNCONNECTED,
      Dbg_RDATA(31 downto 0) => NLW_U0_Dbg_RDATA_UNCONNECTED(31 downto 0),
      Dbg_RREADY => '0',
      Dbg_RRESP(1 downto 0) => NLW_U0_Dbg_RRESP_UNCONNECTED(1 downto 0),
      Dbg_RVALID => NLW_U0_Dbg_RVALID_UNCONNECTED,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => '0',
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trace_Clk => '0',
      Dbg_Trace_Data(0 to 35) => NLW_U0_Dbg_Trace_Data_UNCONNECTED(0 to 35),
      Dbg_Trace_Ready => '0',
      Dbg_Trace_Valid => NLW_U0_Dbg_Trace_Valid_UNCONNECTED,
      Dbg_Trig_Ack_In(0 to 7) => B"00000000",
      Dbg_Trig_Ack_Out(0 to 7) => NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED(0 to 7),
      Dbg_Trig_In(0 to 7) => NLW_U0_Dbg_Trig_In_UNCONNECTED(0 to 7),
      Dbg_Trig_Out(0 to 7) => B"00000000",
      Dbg_Update => Dbg_Update,
      Dbg_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      Dbg_WREADY => NLW_U0_Dbg_WREADY_UNCONNECTED,
      Dbg_WVALID => '0',
      Dbg_Wakeup => NLW_U0_Dbg_Wakeup_UNCONNECTED,
      Debug_Rst => Debug_Rst,
      Ext_BRK => '0',
      Ext_NM_BRK => '0',
      Hibernate => NLW_U0_Hibernate_UNCONNECTED,
      ICE => ICE,
      IFetch => IFetch,
      IReady => IReady,
      IUE => IUE,
      IWAIT => IWAIT,
      I_AS => I_AS,
      Instr(0 to 31) => Instr(0 to 31),
      Instr_Addr(0 to 31) => Instr_Addr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(0 to 4095) => NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Out(0 to 4095) => NLW_U0_LOCKSTEP_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Slave_In(0 to
      M0_AXIS_TDATA(31 downto 0) => NLW_U0_M0_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M0_AXIS_TLAST => NLW_U0_M0_AXIS_TLAST_UNCONNECTED,
      M0_AXIS_TREADY => '0',
      M0_AXIS_TVALID => NLW_U0_M0_AXIS_TVALID_UNCONNECTED,
      M10_AXIS_TDATA(31 downto 0) => NLW_U0_M10_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M10_AXIS_TLAST => NLW_U0_M10_AXIS_TLAST_UNCONNECTED,
      M10_AXIS_TREADY => '0',
      M10_AXIS_TVALID => NLW_U0_M10_AXIS_TVALID_UNCONNECTED,
      M11_AXIS_TDATA(31 downto 0) => NLW_U0_M11_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M11_AXIS_TLAST => NLW_U0_M11_AXIS_TLAST_UNCONNECTED,
      M11_AXIS_TREADY => '0',
      M11_AXIS_TVALID => NLW_U0_M11_AXIS_TVALID_UNCONNECTED,
      M12_AXIS_TDATA(31 downto 0) => NLW_U0_M12_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M12_AXIS_TLAST => NLW_U0_M12_AXIS_TLAST_UNCONNECTED,
      M12_AXIS_TREADY => '0',
      M12_AXIS_TVALID => NLW_U0_M12_AXIS_TVALID_UNCONNECTED,
      M13_AXIS_TDATA(31 downto 0) => NLW_U0_M13_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M13_AXIS_TLAST => NLW_U0_M13_AXIS_TLAST_UNCONNECTED,
      M13_AXIS_TREADY => '0',
      M13_AXIS_TVALID => NLW_U0_M13_AXIS_TVALID_UNCONNECTED,
      M14_AXIS_TDATA(31 downto 0) => NLW_U0_M14_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M14_AXIS_TLAST => NLW_U0_M14_AXIS_TLAST_UNCONNECTED,
      M14_AXIS_TREADY => '0',
      M14_AXIS_TVALID => NLW_U0_M14_AXIS_TVALID_UNCONNECTED,
      M15_AXIS_TDATA(31 downto 0) => NLW_U0_M15_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M15_AXIS_TLAST => NLW_U0_M15_AXIS_TLAST_UNCONNECTED,
      M15_AXIS_TREADY => '0',
      M15_AXIS_TVALID => NLW_U0_M15_AXIS_TVALID_UNCONNECTED,
      M1_AXIS_TDATA(31 downto 0) => NLW_U0_M1_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M1_AXIS_TLAST => NLW_U0_M1_AXIS_TLAST_UNCONNECTED,
      M1_AXIS_TREADY => '0',
      M1_AXIS_TVALID => NLW_U0_M1_AXIS_TVALID_UNCONNECTED,
      M2_AXIS_TDATA(31 downto 0) => NLW_U0_M2_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M2_AXIS_TLAST => NLW_U0_M2_AXIS_TLAST_UNCONNECTED,
      M2_AXIS_TREADY => '0',
      M2_AXIS_TVALID => NLW_U0_M2_AXIS_TVALID_UNCONNECTED,
      M3_AXIS_TDATA(31 downto 0) => NLW_U0_M3_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M3_AXIS_TLAST => NLW_U0_M3_AXIS_TLAST_UNCONNECTED,
      M3_AXIS_TREADY => '0',
      M3_AXIS_TVALID => NLW_U0_M3_AXIS_TVALID_UNCONNECTED,
      M4_AXIS_TDATA(31 downto 0) => NLW_U0_M4_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M4_AXIS_TLAST => NLW_U0_M4_AXIS_TLAST_UNCONNECTED,
      M4_AXIS_TREADY => '0',
      M4_AXIS_TVALID => NLW_U0_M4_AXIS_TVALID_UNCONNECTED,
      M5_AXIS_TDATA(31 downto 0) => NLW_U0_M5_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M5_AXIS_TLAST => NLW_U0_M5_AXIS_TLAST_UNCONNECTED,
      M5_AXIS_TREADY => '0',
      M5_AXIS_TVALID => NLW_U0_M5_AXIS_TVALID_UNCONNECTED,
      M6_AXIS_TDATA(31 downto 0) => NLW_U0_M6_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M6_AXIS_TLAST => NLW_U0_M6_AXIS_TLAST_UNCONNECTED,
      M6_AXIS_TREADY => '0',
      M6_AXIS_TVALID => NLW_U0_M6_AXIS_TVALID_UNCONNECTED,
      M7_AXIS_TDATA(31 downto 0) => NLW_U0_M7_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M7_AXIS_TLAST => NLW_U0_M7_AXIS_TLAST_UNCONNECTED,
      M7_AXIS_TREADY => '0',
      M7_AXIS_TVALID => NLW_U0_M7_AXIS_TVALID_UNCONNECTED,
      M8_AXIS_TDATA(31 downto 0) => NLW_U0_M8_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M8_AXIS_TLAST => NLW_U0_M8_AXIS_TLAST_UNCONNECTED,
      M8_AXIS_TREADY => '0',
      M8_AXIS_TVALID => NLW_U0_M8_AXIS_TVALID_UNCONNECTED,
      M9_AXIS_TDATA(31 downto 0) => NLW_U0_M9_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M9_AXIS_TLAST => NLW_U0_M9_AXIS_TLAST_UNCONNECTED,
      M9_AXIS_TREADY => '0',
      M9_AXIS_TVALID => NLW_U0_M9_AXIS_TVALID_UNCONNECTED,
      MB_Error => NLW_U0_MB_Error_UNCONNECTED,
      MB_Halted => NLW_U0_MB_Halted_UNCONNECTED,
      M_AXI_DC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_ACPROT(2 downto 0) => B"000",
      M_AXI_DC_ACREADY => NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED,
      M_AXI_DC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_DC_ACVALID => '0',
      M_AXI_DC_ARADDR(31 downto 0) => M_AXI_DC_ARADDR(31 downto 0),
      M_AXI_DC_ARBAR(1 downto 0) => NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARBURST(1 downto 0) => M_AXI_DC_ARBURST(1 downto 0),
      M_AXI_DC_ARCACHE(3 downto 0) => M_AXI_DC_ARCACHE(3 downto 0),
      M_AXI_DC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARID(0) => M_AXI_DC_ARID(0),
      M_AXI_DC_ARLEN(7 downto 0) => M_AXI_DC_ARLEN(7 downto 0),
      M_AXI_DC_ARLOCK => M_AXI_DC_ARLOCK,
      M_AXI_DC_ARPROT(2 downto 0) => M_AXI_DC_ARPROT(2 downto 0),
      M_AXI_DC_ARQOS(3 downto 0) => M_AXI_DC_ARQOS(3 downto 0),
      M_AXI_DC_ARREADY => M_AXI_DC_ARREADY,
      M_AXI_DC_ARSIZE(2 downto 0) => M_AXI_DC_ARSIZE(2 downto 0),
      M_AXI_DC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARUSER(4 downto 0) => NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_ARVALID => M_AXI_DC_ARVALID,
      M_AXI_DC_AWADDR(31 downto 0) => M_AXI_DC_AWADDR(31 downto 0),
      M_AXI_DC_AWBAR(1 downto 0) => NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWBURST(1 downto 0) => M_AXI_DC_AWBURST(1 downto 0),
      M_AXI_DC_AWCACHE(3 downto 0) => M_AXI_DC_AWCACHE(3 downto 0),
      M_AXI_DC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWID(0) => M_AXI_DC_AWID(0),
      M_AXI_DC_AWLEN(7 downto 0) => M_AXI_DC_AWLEN(7 downto 0),
      M_AXI_DC_AWLOCK => M_AXI_DC_AWLOCK,
      M_AXI_DC_AWPROT(2 downto 0) => M_AXI_DC_AWPROT(2 downto 0),
      M_AXI_DC_AWQOS(3 downto 0) => M_AXI_DC_AWQOS(3 downto 0),
      M_AXI_DC_AWREADY => M_AXI_DC_AWREADY,
      M_AXI_DC_AWSIZE(2 downto 0) => M_AXI_DC_AWSIZE(2 downto 0),
      M_AXI_DC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWUSER(4 downto 0) => NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_AWVALID => M_AXI_DC_AWVALID,
      M_AXI_DC_BID(0) => M_AXI_DC_BID(0),
      M_AXI_DC_BREADY => M_AXI_DC_BREADY,
      M_AXI_DC_BRESP(1 downto 0) => M_AXI_DC_BRESP(1 downto 0),
      M_AXI_DC_BUSER(0) => '0',
      M_AXI_DC_BVALID => M_AXI_DC_BVALID,
      M_AXI_DC_CDDATA(31 downto 0) => NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_CDLAST => NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED,
      M_AXI_DC_CDREADY => '0',
      M_AXI_DC_CDVALID => NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED,
      M_AXI_DC_CRREADY => '0',
      M_AXI_DC_CRRESP(4 downto 0) => NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_DC_CRVALID => NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED,
      M_AXI_DC_RACK => NLW_U0_M_AXI_DC_RACK_UNCONNECTED,
      M_AXI_DC_RDATA(31 downto 0) => M_AXI_DC_RDATA(31 downto 0),
      M_AXI_DC_RID(0) => M_AXI_DC_RID(0),
      M_AXI_DC_RLAST => M_AXI_DC_RLAST,
      M_AXI_DC_RREADY => M_AXI_DC_RREADY,
      M_AXI_DC_RRESP(1 downto 0) => M_AXI_DC_RRESP(1 downto 0),
      M_AXI_DC_RUSER(0) => '0',
      M_AXI_DC_RVALID => M_AXI_DC_RVALID,
      M_AXI_DC_WACK => NLW_U0_M_AXI_DC_WACK_UNCONNECTED,
      M_AXI_DC_WDATA(31 downto 0) => M_AXI_DC_WDATA(31 downto 0),
      M_AXI_DC_WLAST => M_AXI_DC_WLAST,
      M_AXI_DC_WREADY => M_AXI_DC_WREADY,
      M_AXI_DC_WSTRB(3 downto 0) => M_AXI_DC_WSTRB(3 downto 0),
      M_AXI_DC_WUSER(0) => NLW_U0_M_AXI_DC_WUSER_UNCONNECTED(0),
      M_AXI_DC_WVALID => M_AXI_DC_WVALID,
      M_AXI_DP_ARADDR(31 downto 0) => M_AXI_DP_ARADDR(31 downto 0),
      M_AXI_DP_ARBURST(1 downto 0) => NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARID(0) => NLW_U0_M_AXI_DP_ARID_UNCONNECTED(0),
      M_AXI_DP_ARLEN(7 downto 0) => NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_ARLOCK => NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED,
      M_AXI_DP_ARPROT(2 downto 0) => M_AXI_DP_ARPROT(2 downto 0),
      M_AXI_DP_ARQOS(3 downto 0) => NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARVALID => M_AXI_DP_ARVALID,
      M_AXI_DP_AWADDR(31 downto 0) => M_AXI_DP_AWADDR(31 downto 0),
      M_AXI_DP_AWBURST(1 downto 0) => NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWID(0) => NLW_U0_M_AXI_DP_AWID_UNCONNECTED(0),
      M_AXI_DP_AWLEN(7 downto 0) => NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_AWLOCK => NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED,
      M_AXI_DP_AWPROT(2 downto 0) => M_AXI_DP_AWPROT(2 downto 0),
      M_AXI_DP_AWQOS(3 downto 0) => NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWVALID => M_AXI_DP_AWVALID,
      M_AXI_DP_BID(0) => '0',
      M_AXI_DP_BREADY => M_AXI_DP_BREADY,
      M_AXI_DP_BRESP(1 downto 0) => M_AXI_DP_BRESP(1 downto 0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RID(0) => '0',
      M_AXI_DP_RLAST => '0',
      M_AXI_DP_RREADY => M_AXI_DP_RREADY,
      M_AXI_DP_RRESP(1 downto 0) => M_AXI_DP_RRESP(1 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WDATA(31 downto 0) => M_AXI_DP_WDATA(31 downto 0),
      M_AXI_DP_WLAST => NLW_U0_M_AXI_DP_WLAST_UNCONNECTED,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_DP_WSTRB(3 downto 0) => M_AXI_DP_WSTRB(3 downto 0),
      M_AXI_DP_WVALID => M_AXI_DP_WVALID,
      M_AXI_IC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_ACPROT(2 downto 0) => B"000",
      M_AXI_IC_ACREADY => NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED,
      M_AXI_IC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_IC_ACVALID => '0',
      M_AXI_IC_ARADDR(31 downto 0) => M_AXI_IC_ARADDR(31 downto 0),
      M_AXI_IC_ARBAR(1 downto 0) => NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARBURST(1 downto 0) => M_AXI_IC_ARBURST(1 downto 0),
      M_AXI_IC_ARCACHE(3 downto 0) => M_AXI_IC_ARCACHE(3 downto 0),
      M_AXI_IC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARID(0) => M_AXI_IC_ARID(0),
      M_AXI_IC_ARLEN(7 downto 0) => M_AXI_IC_ARLEN(7 downto 0),
      M_AXI_IC_ARLOCK => M_AXI_IC_ARLOCK,
      M_AXI_IC_ARPROT(2 downto 0) => M_AXI_IC_ARPROT(2 downto 0),
      M_AXI_IC_ARQOS(3 downto 0) => M_AXI_IC_ARQOS(3 downto 0),
      M_AXI_IC_ARREADY => M_AXI_IC_ARREADY,
      M_AXI_IC_ARSIZE(2 downto 0) => M_AXI_IC_ARSIZE(2 downto 0),
      M_AXI_IC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARUSER(4 downto 0) => NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_ARVALID => M_AXI_IC_ARVALID,
      M_AXI_IC_AWADDR(31 downto 0) => M_AXI_IC_AWADDR(31 downto 0),
      M_AXI_IC_AWBAR(1 downto 0) => NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWBURST(1 downto 0) => M_AXI_IC_AWBURST(1 downto 0),
      M_AXI_IC_AWCACHE(3 downto 0) => M_AXI_IC_AWCACHE(3 downto 0),
      M_AXI_IC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWID(0) => M_AXI_IC_AWID(0),
      M_AXI_IC_AWLEN(7 downto 0) => M_AXI_IC_AWLEN(7 downto 0),
      M_AXI_IC_AWLOCK => M_AXI_IC_AWLOCK,
      M_AXI_IC_AWPROT(2 downto 0) => M_AXI_IC_AWPROT(2 downto 0),
      M_AXI_IC_AWQOS(3 downto 0) => M_AXI_IC_AWQOS(3 downto 0),
      M_AXI_IC_AWREADY => M_AXI_IC_AWREADY,
      M_AXI_IC_AWSIZE(2 downto 0) => M_AXI_IC_AWSIZE(2 downto 0),
      M_AXI_IC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWUSER(4 downto 0) => NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_AWVALID => M_AXI_IC_AWVALID,
      M_AXI_IC_BID(0) => M_AXI_IC_BID(0),
      M_AXI_IC_BREADY => M_AXI_IC_BREADY,
      M_AXI_IC_BRESP(1 downto 0) => M_AXI_IC_BRESP(1 downto 0),
      M_AXI_IC_BUSER(0) => '0',
      M_AXI_IC_BVALID => M_AXI_IC_BVALID,
      M_AXI_IC_CDDATA(31 downto 0) => NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_CDLAST => NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED,
      M_AXI_IC_CDREADY => '0',
      M_AXI_IC_CDVALID => NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED,
      M_AXI_IC_CRREADY => '0',
      M_AXI_IC_CRRESP(4 downto 0) => NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_IC_CRVALID => NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED,
      M_AXI_IC_RACK => NLW_U0_M_AXI_IC_RACK_UNCONNECTED,
      M_AXI_IC_RDATA(31 downto 0) => M_AXI_IC_RDATA(31 downto 0),
      M_AXI_IC_RID(0) => M_AXI_IC_RID(0),
      M_AXI_IC_RLAST => M_AXI_IC_RLAST,
      M_AXI_IC_RREADY => M_AXI_IC_RREADY,
      M_AXI_IC_RRESP(1 downto 0) => M_AXI_IC_RRESP(1 downto 0),
      M_AXI_IC_RUSER(0) => '0',
      M_AXI_IC_RVALID => M_AXI_IC_RVALID,
      M_AXI_IC_WACK => NLW_U0_M_AXI_IC_WACK_UNCONNECTED,
      M_AXI_IC_WDATA(31 downto 0) => M_AXI_IC_WDATA(31 downto 0),
      M_AXI_IC_WLAST => M_AXI_IC_WLAST,
      M_AXI_IC_WREADY => M_AXI_IC_WREADY,
      M_AXI_IC_WSTRB(3 downto 0) => M_AXI_IC_WSTRB(3 downto 0),
      M_AXI_IC_WUSER(0) => NLW_U0_M_AXI_IC_WUSER_UNCONNECTED(0),
      M_AXI_IC_WVALID => M_AXI_IC_WVALID,
      M_AXI_IP_ARADDR(31 downto 0) => NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_ARBURST(1 downto 0) => NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARID(0) => NLW_U0_M_AXI_IP_ARID_UNCONNECTED(0),
      M_AXI_IP_ARLEN(7 downto 0) => NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_ARLOCK => NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED,
      M_AXI_IP_ARPROT(2 downto 0) => NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARQOS(3 downto 0) => NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARREADY => '0',
      M_AXI_IP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARVALID => NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED,
      M_AXI_IP_AWADDR(31 downto 0) => NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_AWBURST(1 downto 0) => NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWID(0) => NLW_U0_M_AXI_IP_AWID_UNCONNECTED(0),
      M_AXI_IP_AWLEN(7 downto 0) => NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_AWLOCK => NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED,
      M_AXI_IP_AWPROT(2 downto 0) => NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWQOS(3 downto 0) => NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWREADY => '0',
      M_AXI_IP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWVALID => NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED,
      M_AXI_IP_BID(0) => '0',
      M_AXI_IP_BREADY => NLW_U0_M_AXI_IP_BREADY_UNCONNECTED,
      M_AXI_IP_BRESP(1 downto 0) => B"00",
      M_AXI_IP_BVALID => '0',
      M_AXI_IP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IP_RID(0) => '0',
      M_AXI_IP_RLAST => '0',
      M_AXI_IP_RREADY => NLW_U0_M_AXI_IP_RREADY_UNCONNECTED,
      M_AXI_IP_RRESP(1 downto 0) => B"00",
      M_AXI_IP_RVALID => '0',
      M_AXI_IP_WDATA(31 downto 0) => NLW_U0_M_AXI_IP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IP_WLAST => NLW_U0_M_AXI_IP_WLAST_UNCONNECTED,
      M_AXI_IP_WREADY => '0',
      M_AXI_IP_WSTRB(3 downto 0) => NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IP_WVALID => NLW_U0_M_AXI_IP_WVALID_UNCONNECTED,
      Mb_Reset => '0',
      Non_Secure(0 to 3) => B"0000",
      Pause => '0',
      Pause_Ack => NLW_U0_Pause_Ack_UNCONNECTED,
      RAM_From(255 downto 0) => NLW_U0_RAM_From_UNCONNECTED(255 downto 0),
      RAM_To(255 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      Read_Strobe => Read_Strobe,
      Reset => Reset,
      Reset_Mode(0 to 1) => B"00",
      S0_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S0_AXIS_TLAST => '0',
      S0_AXIS_TREADY => NLW_U0_S0_AXIS_TREADY_UNCONNECTED,
      S0_AXIS_TVALID => '0',
      S10_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S10_AXIS_TLAST => '0',
      S10_AXIS_TREADY => NLW_U0_S10_AXIS_TREADY_UNCONNECTED,
      S10_AXIS_TVALID => '0',
      S11_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S11_AXIS_TLAST => '0',
      S11_AXIS_TREADY => NLW_U0_S11_AXIS_TREADY_UNCONNECTED,
      S11_AXIS_TVALID => '0',
      S12_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S12_AXIS_TLAST => '0',
      S12_AXIS_TREADY => NLW_U0_S12_AXIS_TREADY_UNCONNECTED,
      S12_AXIS_TVALID => '0',
      S13_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S13_AXIS_TLAST => '0',
      S13_AXIS_TREADY => NLW_U0_S13_AXIS_TREADY_UNCONNECTED,
      S13_AXIS_TVALID => '0',
      S14_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S14_AXIS_TLAST => '0',
      S14_AXIS_TREADY => NLW_U0_S14_AXIS_TREADY_UNCONNECTED,
      S14_AXIS_TVALID => '0',
      S15_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S15_AXIS_TLAST => '0',
      S15_AXIS_TREADY => NLW_U0_S15_AXIS_TREADY_UNCONNECTED,
      S15_AXIS_TVALID => '0',
      S1_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S1_AXIS_TLAST => '0',
      S1_AXIS_TREADY => NLW_U0_S1_AXIS_TREADY_UNCONNECTED,
      S1_AXIS_TVALID => '0',
      S2_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S2_AXIS_TLAST => '0',
      S2_AXIS_TREADY => NLW_U0_S2_AXIS_TREADY_UNCONNECTED,
      S2_AXIS_TVALID => '0',
      S3_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S3_AXIS_TLAST => '0',
      S3_AXIS_TREADY => NLW_U0_S3_AXIS_TREADY_UNCONNECTED,
      S3_AXIS_TVALID => '0',
      S4_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S4_AXIS_TLAST => '0',
      S4_AXIS_TREADY => NLW_U0_S4_AXIS_TREADY_UNCONNECTED,
      S4_AXIS_TVALID => '0',
      S5_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S5_AXIS_TLAST => '0',
      S5_AXIS_TREADY => NLW_U0_S5_AXIS_TREADY_UNCONNECTED,
      S5_AXIS_TVALID => '0',
      S6_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S6_AXIS_TLAST => '0',
      S6_AXIS_TREADY => NLW_U0_S6_AXIS_TREADY_UNCONNECTED,
      S6_AXIS_TVALID => '0',
      S7_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S7_AXIS_TLAST => '0',
      S7_AXIS_TREADY => NLW_U0_S7_AXIS_TREADY_UNCONNECTED,
      S7_AXIS_TVALID => '0',
      S8_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S8_AXIS_TLAST => '0',
      S8_AXIS_TREADY => NLW_U0_S8_AXIS_TREADY_UNCONNECTED,
      S8_AXIS_TVALID => '0',
      S9_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S9_AXIS_TLAST => '0',
      S9_AXIS_TREADY => NLW_U0_S9_AXIS_TREADY_UNCONNECTED,
      S9_AXIS_TVALID => '0',
      Scan_En => '0',
      Scan_Reset => '0',
      Scan_Reset_Sel => '0',
      Sleep => NLW_U0_Sleep_UNCONNECTED,
      Suspend => NLW_U0_Suspend_UNCONNECTED,
      Trace_DCache_Hit => NLW_U0_Trace_DCache_Hit_UNCONNECTED,
      Trace_DCache_Rdy => NLW_U0_Trace_DCache_Rdy_UNCONNECTED,
      Trace_DCache_Read => NLW_U0_Trace_DCache_Read_UNCONNECTED,
      Trace_DCache_Req => NLW_U0_Trace_DCache_Req_UNCONNECTED,
      Trace_Data_Access => NLW_U0_Trace_Data_Access_UNCONNECTED,
      Trace_Data_Address(0 to 31) => NLW_U0_Trace_Data_Address_UNCONNECTED(0 to 31),
      Trace_Data_Byte_Enable(0 to 3) => NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED(0 to 3),
      Trace_Data_Read => NLW_U0_Trace_Data_Read_UNCONNECTED,
      Trace_Data_Write => NLW_U0_Trace_Data_Write_UNCONNECTED,
      Trace_Data_Write_Value(0 to 31) => NLW_U0_Trace_Data_Write_Value_UNCONNECTED(0 to 31),
      Trace_Delay_Slot => NLW_U0_Trace_Delay_Slot_UNCONNECTED,
      Trace_EX_PipeRun => NLW_U0_Trace_EX_PipeRun_UNCONNECTED,
      Trace_Exception_Kind(0 to 4) => NLW_U0_Trace_Exception_Kind_UNCONNECTED(0 to 4),
      Trace_Exception_Taken => NLW_U0_Trace_Exception_Taken_UNCONNECTED,
      Trace_ICache_Hit => NLW_U0_Trace_ICache_Hit_UNCONNECTED,
      Trace_ICache_Rdy => NLW_U0_Trace_ICache_Rdy_UNCONNECTED,
      Trace_ICache_Req => NLW_U0_Trace_ICache_Req_UNCONNECTED,
      Trace_Instruction(0 to 31) => NLW_U0_Trace_Instruction_UNCONNECTED(0 to 31),
      Trace_Jump_Hit => NLW_U0_Trace_Jump_Hit_UNCONNECTED,
      Trace_Jump_Taken => NLW_U0_Trace_Jump_Taken_UNCONNECTED,
      Trace_MB_Halted => NLW_U0_Trace_MB_Halted_UNCONNECTED,
      Trace_MEM_PipeRun => NLW_U0_Trace_MEM_PipeRun_UNCONNECTED,
      Trace_MSR_Reg(0 to 14) => NLW_U0_Trace_MSR_Reg_UNCONNECTED(0 to 14),
      Trace_New_Reg_Value(0 to 31) => NLW_U0_Trace_New_Reg_Value_UNCONNECTED(0 to 31),
      Trace_OF_PipeRun => NLW_U0_Trace_OF_PipeRun_UNCONNECTED,
      Trace_PC(0 to 31) => NLW_U0_Trace_PC_UNCONNECTED(0 to 31),
      Trace_PID_Reg(0 to 7) => NLW_U0_Trace_PID_Reg_UNCONNECTED(0 to 7),
      Trace_Reg_Addr(0 to 4) => NLW_U0_Trace_Reg_Addr_UNCONNECTED(0 to 4),
      Trace_Reg_Write => NLW_U0_Trace_Reg_Write_UNCONNECTED,
      Trace_Valid_Instr => NLW_U0_Trace_Valid_Instr_UNCONNECTED,
      Wakeup(0 to 1) => B"00",
      Write_Strobe => Write_Strobe
    );
end STRUCTURE;
