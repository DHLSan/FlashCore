#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <math.h>
#include "xil_printf.h"
#include "xmutex.h"
#include "xparameters.h"
#include "xstatus.h"
#include "xbram.h"
#include "xgpio.h"


#define POLYMASK_32 0xb4bcd35c
#define POLYMASK_31 0x7a5bc2e3

uint32_t lfsr32;
uint32_t lfsr31;

int shift_lsfr(uint32_t* lfsr, uint32_t polynomial_mask)
{
    int feedback = *lfsr & 1;
    *lfsr >>= 1;
    if (feedback) {
        *lfsr ^= polynomial_mask;
    }
    return *lfsr;
}

void init()
{
    lfsr32 = 0xabcde;
    lfsr31 = 0x23456789;
}

uint32_t get_random()
{
    shift_lsfr(&lfsr32, POLYMASK_32);
    uint32_t a = shift_lsfr(&lfsr32, POLYMASK_32);
    uint32_t b = shift_lsfr(&lfsr31, POLYMASK_31);
    return (a ^ b) & 0xffff;
}




